[
  {
    "raw_message": "@snicoll did you get a chance to follow up on the issue? If not, I can take a look in the next 24hrs.",
    "clean_message": "did you get a chance to follow up on the issue? If not, I can take a look in the next 24hrs.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/21658#issuecomment-660726475",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thank you for this PR.  This is an interesting idea, but unfortunately I don't think the additional API is worthwhile to include. This is because of a few reasons:\r\n  * `requireExplicitBindings` is intended as a wholesale measure to prevent accidental JIT usage of _anything_.  OTOH`, `requireExplicitBindings(Class...)` would be a targeted measure, and can be sidestepped by not including that module that requires explicit bindings for that class, or by including a `bind(ThatClass.class)` statement, which defeats the initial goal of \"don't let people use the <this type>\".\r\n  *  Guice has since added a @RestrictedBindingSource annotation (see https://github.com/google/guice/wiki/RestrictedBindingSource), which feels like it's slightly better suited for your use-case of wanting to prevent people from using the \"wrong\" type. Unfortunately, @RestrictedBindingSource doesn't apply to your use-case, because it's intended as an annotation to prevent folks from _binding_ things, as opposed to preventing folks from _using_ things. It's also limited to restricted types you own, because the type or qualifier itself has to be annotated. However, I could imagine extending @RestrictedBindingSource to support some kind of Binder integration, like `binder.restrictBindingSource(RestrictionInfo, ClassOrAnnotation...)`, or something similar to that, which could potentially prevent usage + other bindings. This may not make sense, though, because folks could just bind the types by removing that module altogether.\r\n  * Overall, this feels like something that's better suited to a test: use the [Guice SPI](https://github.com/google/guice/wiki/ExtendingGuice) to iterate over what's injected and confirm that no \"bad\" types are used.",
    "clean_message": "Thank you for this PR.  This is an interesting idea, but unfortunately I don't think the additional API is worthwhile to include. This is because of a few reasons:   *  is intended as a wholesale measure to prevent accidental JIT usage of anything.  OTOHrequireExplicitBindings(Class...)bind(ThatClass.class)binder.restrictBindingSource(RestrictionInfo, ClassOrAnnotation...)`, or something similar to that, which could potentially prevent usage + other bindings. This may not make sense, though, because folks could just bind the types by removing that module altogether.   * Overall, this feels like something that's better suited to a test: use the Guice SPI to iterate over what's injected and confirm that no \"bad\" types are used.",
    "message_url": "https://github.com/google/guice/pull/1349#issuecomment-1513663903",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "@mbhave, oh sorry for this,  my fault, i'll be more careful ",
    "clean_message": ", oh sorry for this,  my fault, i'll be more careful ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/14199#issuecomment-416291114",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I've added `merge-with-amendments` so that we can add documentation regarding [this](https://github.com/spring-projects/spring-boot/issues/16645#issuecomment-487415257) as part of merging the PR.",
    "clean_message": "I've added  so that we can add documentation regarding this as part of merging the PR.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/16622#issuecomment-487795767",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> @Primary and @ConditionalOnMissingBean. I think these two should never be used together.\r\n\r\nApplications can still use `ObjectProvider` or [qualifiers](https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-autowired-annotation-qualifiers) to get a specific bean, even if primary is being used.\r\n\r\nI'm sorry but we need to decline this change as removing this now would break existing applications relying on this behavior.",
    "clean_message": "Applications can still use  or qualifiers to get a specific bean, even if primary is being used. I'm sorry but we need to decline this change as removing this now would break existing applications relying on this behavior.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/32545#issuecomment-1262173452",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@bclozel Sorry, I didn't realize it wasn't you. @fmcejudo I addressed your comments, could you have another look, please?",
    "clean_message": "Sorry, I didn't realize it wasn't you.  I addressed your comments, could you have another look, please?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10514#issuecomment-344512807",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@JakeWharton I think so too. Since this is the first time I look at Dagger 2 and this example gave me confusion.\n",
    "clean_message": "I think so too. Since this is the first time I look at Dagger 2 and this example gave me confusion.",
    "message_url": "https://github.com/google/dagger/pull/85#issuecomment-64537336",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@shakuzen What are your plans for Zabbix support? If things are uncertain I would prefer to close this one as it's unactionable at the moment.",
    "clean_message": "What are your plans for Zabbix support? If things are uncertain I would prefer to close this one as it's unactionable at the moment.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/26131#issuecomment-820271191",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "OMG\u2757\ufe0f\u2757\ufe0f\r\nThanks for merge.",
    "clean_message": "OMG\u2757\ufe0f\u2757\ufe0f Thanks for merge.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/15033#issuecomment-434968174",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> My main concern with this change is that it \"blurs\" the API of the project. Currently the API is fairly well grouped: Gson and TypeAdapter provide the API for converting from POJO to JSON and the other way around; JsonElement and subclasses model a JSON document in memory. With this PR JsonArray would now suddenly also be responsible for converting POJOs to JSON.\r\n\r\nI dont think that this would be a problem. The method/s is/are very straight-forward and the use-cases would outweight the \"confusion\".\r\n\r\n> As seen by the changes done by this PR it would also not be that complicated if users wrote the code for this themselves.\r\n\r\nFor me this was an instant issue when first looking at the implementation. This isn't code that every user should have to write. There also exists another unfinished pull request that lets JsonArray implement the List interface. (Which I'm also strongly in favour of.)\r\n\r\n> It might also be possible to shorten it a bit by not having the instanceof checks but always calling toJsonTree, or possibly by directly calling toJsonTree(values) (that is with the Collection as argument).\r\n\r\nIn newer versions of Java this could also be done with a pattern switch-statement, but for me it was important to use the fastest implementation for java 1.5.\r\n\r\n>That would then also allow the user to use their own Gson instance which they can customize.\r\n\r\nFair point.\r\n",
    "clean_message": "I dont think that this would be a problem. The method/s is/are very straight-forward and the use-cases would outweight the \"confusion\". For me this was an instant issue when first looking at the implementation. This isn't code that every user should have to write. There also exists another unfinished pull request that lets JsonArray implement the List interface. (Which I'm also strongly in favour of.) In newer versions of Java this could also be done with a pattern switch-statement, but for me it was important to use the fastest implementation for java 1.5. Fair point.",
    "message_url": "https://github.com/google/gson/pull/2155#issuecomment-1195331668",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@dkodippily, thinking out loud I'm not sure whether a subclass would be a good way to go or not, but happy to discuss further. Thanks!",
    "clean_message": ", thinking out loud I'm not sure whether a subclass would be a good way to go or not, but happy to discuss further. Thanks!",
    "message_url": "https://github.com/spring-projects/spring-security/pull/10113#issuecomment-912570314",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for another contribution @nosan !! This has now been merged to master. I've add a [polish commit](https://github.com/spring-projects/spring-boot/commit/76e075ddd02d011b1c02cb53ad98fb042c8259ea) that makes some of the new classes package private just to reduce the surface area of the public API.",
    "clean_message": "Thanks for another contribution  !! This has now been merged to master. I've add a polish commit that makes some of the new classes package private just to reduce the surface area of the public API.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/17010#issuecomment-497915543",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@philwebb Still open \ud83d\ude05 ",
    "clean_message": "Still open \ud83d\ude05 ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4951#issuecomment-302386371",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Lol @pshirshov Same here, already completed a full JPMS xD\r\nMigrated the Microsoft SQL Server driver to JPMS, shit you not 40 minutes approved and merged.\r\n\r\nIt's like opposite world, since when does google not give a shit xD",
    "clean_message": "Lol  Same here, already completed a full JPMS xD Migrated the Microsoft SQL Server driver to JPMS, shit you not 40 minutes approved and merged. It's like opposite world, since when does google not give a shit xD",
    "message_url": "https://github.com/google/guice/pull/1130#issuecomment-487284410",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the proposal. Unfortunately, ignoring the exception isn't the right thing to do. The intention is that a restart that fails due to an application context refresh failure will be retried once the user has made a change to the application. This retry is triggered by `FileWatchingFailureHandler.handle(Throwable)`. If the `InvocationTargetException` is ignored entirely, an application using Devtools won't recover from a restart failure caused by an application context refresh failure and the JVM will exit instead.",
    "clean_message": "Thanks for the proposal. Unfortunately, ignoring the exception isn't the right thing to do. The intention is that a restart that fails due to an application context refresh failure will be retried once the user has made a change to the application. This retry is triggered by . If the  is ignored entirely, an application using Devtools won't recover from a restart failure caused by an application context refresh failure and the JVM will exit instead.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/27542#issuecomment-895119391",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "Bulk closing all pull requests that are listed as needing CLA signing. If you'd like us to look at your pull request, you'll need to sign the CLA and report back here.\r\n\r\nIf this is a false positive, I apologize. Please reopen the pull request, and we'll have a look.",
    "clean_message": "Bulk closing all pull requests that are listed as needing CLA signing. If you'd like us to look at your pull request, you'll need to sign the CLA and report back here. If this is a false positive, I apologize. Please reopen the pull request, and we'll have a look.",
    "message_url": "https://github.com/google/guava/pull/2236#issuecomment-271392269",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@manderson23 Yes, though because of the switch to a dimensional system, the format necessarily changed. There are some inadequacies in the /metrics endpoint that shipped with Boot 2 M4 that will be addressed in the M5 release (micrometer 1.0.0-rc.2) next week. See https://github.com/micrometer-metrics/micrometer/issues/124.",
    "clean_message": "Yes, though because of the switch to a dimensional system, the format necessarily changed. There are some inadequacies in the /metrics endpoint that shipped with Boot 2 M4 that will be addressed in the M5 release (micrometer 1.0.0-rc.2) next week. See .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/9970#issuecomment-331444693",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks @qinnnyul, Your contribution is now merged in `master` with a [polish commit](https://github.com/spring-projects/spring-boot/commit/6692301d51d22e1a427180c8fc7754d6ea8e6df8).",
    "clean_message": "Thanks , Your contribution is now merged in  with a polish commit.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/12655#issuecomment-379778585",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@artembilan @garyrussell I don't know enough about `LockRegistryLeaderInitiator`. Can you comment on this suggested change?",
    "clean_message": "I don't know enough about . Can you comment on this suggested change?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/8904#issuecomment-294404264",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Quick check using python awscli\n\n> aws ec2 describe-addresses --public-ips | jq '.Addresses[0]'\n> {\n>   \"InstanceId\": \"i-xxxxx\",\n>   \"PublicIp\": \"xxx.xxx.xxx.xxx\",\n>   \"Domain\": \"standard\"\n> }\n",
    "clean_message": "Quick check using python awscli",
    "message_url": "https://github.com/Netflix/eureka/pull/773#issuecomment-206115643",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@mcculls I ended up tweaking your PR..  sending for review internally, will show up externally soon.  Thanks!",
    "clean_message": "I ended up tweaking your PR..  sending for review internally, will show up externally soon.  Thanks!",
    "message_url": "https://github.com/google/guice/pull/1448#issuecomment-772796674",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@sothavirak Thanks for the PR! \r\n\r\nIn preparation for merging, would you please update your commit message to include the issue that you fixed as well? Something like:\r\n\r\n```\r\nDowngrade AuthenticationFilter modifier\r\n\r\nFixes gh-7177\r\n```",
    "clean_message": "Thanks for the PR!  In preparation for merging, would you please update your commit message to include the issue that you fixed as well? Something like:",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7180#issuecomment-517935251",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry, duplicate to #903 ! \n",
    "clean_message": "Sorry, duplicate to #903 ! ",
    "message_url": "https://github.com/google/gson/pull/905#issuecomment-241587479",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks @fritzdj. I left one more comment and after that we are ready to merge. But before we merge, can you please [squash](https://github.com/spring-projects/spring-security/blob/master/CONTRIBUTING.md#squash-commits) the commits to 1 and ensure the commit message follows this [format](https://github.com/spring-projects/spring-security/blob/master/CONTRIBUTING.md#format-commit-messages). Thanks for your work on this!",
    "clean_message": "Thanks . I left one more comment and after that we are ready to merge. But before we merge, can you please squash the commits to 1 and ensure the commit message follows this format. Thanks for your work on this!",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6606#issuecomment-475258489",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I did polish it a bit more, thanks Eddu!",
    "clean_message": "I did polish it a bit more, thanks Eddu!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7796#issuecomment-270088391",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Oops, sorry, I didn't realise that one of my examples above prints the wrong value! Here's my updated code snippet:\r\n\r\n```java\r\n// If you're able to turn your Map<String, Set<String>>s into SetMultimap<String, String>s beforehand:\r\nvar merged =\r\n    ImmutableSetMultimap.builder()\r\n        .putAll(multiTags1)\r\n        .putAll(multiTags2)\r\n        .build();\r\n\r\n// Otherwise:\r\nvar merged =\r\n    Stream.of(tags1, tags2)\r\n        .flatMap(tags -> tags.entrySet().stream())\r\n        .collect(flatteningToImmutableSetMultimap(Entry::getKey, entry -> entry.getValue().stream()));\r\n```",
    "clean_message": "Oops, sorry, I didn't realise that one of my examples above prints the wrong value! Here's my updated code snippet:",
    "message_url": "https://github.com/google/guava/pull/4017#issuecomment-691687884",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "My bad. When using the dirties context approach a new `ApplicationContext` is created, which is what I meant with _context_.\r\n\r\nWould it make sense to create an `@AutoConfigureTestElasticSearch` with a separate namespace (like the `@AutoConfigureTestDatabase` which could be preconfigured to use a different default for the `path.home`? and maybe some other defaults to optimize an ElasticSearch instance for testing? maybe with reusing parts of the current `ElasticSearchAutoConfiguration`?",
    "clean_message": "My bad. When using the dirties context approach a new  is created, which is what I meant with context. Would it make sense to create an  with a separate namespace (like the  which could be preconfigured to use a different default for the ? and maybe some other defaults to optimize an ElasticSearch instance for testing? maybe with reusing parts of the current ?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/8636#issuecomment-295609515",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "The fix is done\n",
    "clean_message": "The fix is done",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4571#issuecomment-158634684",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> This change makes sense to me. I have left some comments.\r\n\r\n@mbhave \r\nI'm sorry! I don't see any of your comments. Can you please check it?",
    "clean_message": "I'm sorry! I don't see any of your comments. Can you please check it?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/25817#issuecomment-830480742",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Created a separate PR with README only changes - https://github.com/Netflix/conductor/pull/2267",
    "clean_message": "Created a separate PR with README only changes - ",
    "message_url": "https://github.com/Netflix/conductor/pull/2200#issuecomment-843869853",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "We do run a lot of jvms that frequently exceed a threshold of 95% used mem and everything is fine since the GC kicks in and frees some of the heap.\nSo I'd guess this health indicator would often raise an (false) alarm...\n\nAre you using this indicator already in a production environment? Can you share some experience?\n",
    "clean_message": "We do run a lot of jvms that frequently exceed a threshold of 95% used mem and everything is fine since the GC kicks in and frees some of the heap. So I'd guess this health indicator would often raise an (false) alarm... Are you using this indicator already in a production environment? Can you share some experience?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/6988#issuecomment-249229795",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks, @philwebb! ",
    "clean_message": "Thanks, ! ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/16544#issuecomment-498233878",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks!",
    "clean_message": "Thanks!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/34437#issuecomment-1453179396",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "The change LGTM. As for the removals, I know @cpovirk had plans for addressing some of these, but I can't find the doc (if there was one) and he's currently out on leave.",
    "clean_message": "The change LGTM. As for the removals, I know  had plans for addressing some of these, but I can't find the doc (if there was one) and he's currently out on leave.",
    "message_url": "https://github.com/google/guava/pull/3287#issuecomment-427953057",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks @izeye, I've backported the suggestion to Maven in `2.2.x` and added the exclusion to `commons-logging`.",
    "clean_message": "Thanks , I've backported the suggestion to Maven in  and added the exclusion to .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/24173#issuecomment-729191841",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the PR. This change is now in 1.2.x and master.\n",
    "clean_message": "Thanks for the PR. This change is now in 1.2.x and master.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4844#issuecomment-168740902",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "We avoid the problem for the Dependency Management plugin by making the Spring Boot plugin pull it in transitively. That lets us control the version of the Dependency Management plugin and allows a user to just apply the plugin without worrying about its version. We could do the same for the Kotlin plugin, but then everyone building a Gradle project would download the Kotlin plugin even if they weren't using it. That's similar to what we did for Jackson's Kotlin module so we could decide that it's a reasonable thing to do, probably depending on the weight of the Kotlin plugin and its dependencies.",
    "clean_message": "We avoid the problem for the Dependency Management plugin by making the Spring Boot plugin pull it in transitively. That lets us control the version of the Dependency Management plugin and allows a user to just apply the plugin without worrying about its version. We could do the same for the Kotlin plugin, but then everyone building a Gradle project would download the Kotlin plugin even if they weren't using it. That's similar to what we did for Jackson's Kotlin module so we could decide that it's a reasonable thing to do, probably depending on the weight of the Kotlin plugin and its dependencies.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10511#issuecomment-339268098",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for your feedback and changes, @gregturn\r\n\r\nI checked `3.0.9.BUILD-SNAPSHOT` and unfortunately, those changes are not enough to avoid reflection at all. \r\n\r\nCould you please add the following changes?\r\n\r\n- `MockWebServiceMessageSender` must be **public** as well.\r\n-  Add _reset_ method to `MockWebServiceServer`, similar to _verify_ but for reset.\r\n\r\n_'reset'_  just clears`expectedConnections` and sets `connectionIterator` to null.\r\n\r\n\r\nIdeally,  this [class](https://github.com/spring-projects/spring-boot/pull/17274/files#diff-d269060f3f73330e5898aad3addbc304) should be removed.\r\n\r\n \r\nThanks in advance",
    "clean_message": "Thanks for your feedback and changes,  I checked  and unfortunately, those changes are not enough to avoid reflection at all.  Could you please add the following changes?  must be public as well. Add reset method to , similar to verify but for reset.  'reset'  just clears and sets  to null. Ideally,  this class should be removed. Thanks in advance",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/17274#issuecomment-601041785",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "docs/docs/how-tos/redis.md is probably the best place, IMO.",
    "clean_message": "docs/docs/how-tos/redis.md is probably the best place, IMO.",
    "message_url": "https://github.com/Netflix/conductor/pull/2950#issuecomment-1116086762",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@qiangdavidliu till now you still working on 1.5.x release train\nKindly any dates when release 1.6.0 containing this PR will be released ?\n",
    "clean_message": "till now you still working on 1.5.x release train Kindly any dates when release 1.6.0 containing this PR will be released ?",
    "message_url": "https://github.com/Netflix/eureka/pull/832#issuecomment-249550286",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "@ojw28 I didnt know you trying to use \"documents\" to protect you from the world. I would'nt pull again.\r\n\r\nAnyway you can't protect yourself using this technique sign - and enter. I can prove I made this code having it before the code come to the repository, and since it get there without my sign it be equals staling code. So, sign or no sign - always possible to make you/google guilty and violating copyright slavery... Just make it simple, opensource and fun. BTW i'm not going to sue anyway. Just show you how stupid \"CLA\" is.",
    "clean_message": "I didnt know you trying to use \"documents\" to protect you from the world. I would'nt pull again. Anyway you can't protect yourself using this technique sign - and enter. I can prove I made this code having it before the code come to the repository, and since it get there without my sign it be equals staling code. So, sign or no sign - always possible to make you/google guilty and violating copyright slavery... Just make it simple, opensource and fun. BTW i'm not going to sue anyway. Just show you how stupid \"CLA\" is.",
    "message_url": "https://github.com/google/ExoPlayer/pull/3428#issuecomment-341989742",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Sorry for the delay on this @dmgcodevil .  I'm still trying to figure out how much value this adds if `hystrix-core` doesn't contain the equivalent functionality.\r\n\r\nMy understanding of this feature is that it will take a user-provided Single/Completable and convert that into a `HystrixObservableCommand`.\r\n\r\nI'm writing a unit test to check that submitting a `Completable` even works in vanilla Hystrix",
    "clean_message": "Sorry for the delay on this  .  I'm still trying to figure out how much value this adds if  doesn't contain the equivalent functionality. My understanding of this feature is that it will take a user-provided Single/Completable and convert that into a . I'm writing a unit test to check that submitting a  even works in vanilla Hystrix",
    "message_url": "https://github.com/Netflix/Hystrix/pull/1524#issuecomment-300329097",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Hi!  Yes, so sorry.  I've been rather unwell this last 2 months or so (almost co-inciding with my renewed interest in opensource... hmmmm) but I'm sort of alive again.  I'll try to get to this over the weekend.  Sorry again for just vanishing!",
    "clean_message": "Hi!  Yes, so sorry.  I've been rather unwell this last 2 months or so (almost co-inciding with my renewed interest in opensource... hmmmm) but I'm sort of alive again.  I'll try to get to this over the weekend.  Sorry again for just vanishing!",
    "message_url": "https://github.com/spring-projects/spring-security/pull/9052#issuecomment-731335874",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "The idea to provide a way to retrieve the total size for downloading before actually starting the download makes sense, but I'm a bit wary that calculating it here using the available information may be wrong or misleading.\r\n\r\nThis is because the selected tracks don't necessarily correspond to downloadable data streams. This mapping happens when we call `MediaPeriod.getStreamKeys` to identify the streams that we need to load. These streams and the manifest and potential extra data loads to obtain initilization data (e.g. for the DASH segment index) can then be used to calculate a total download size. This functionality is already part of the `Downloader` implementations (specifically `SegmentDownloader`) and it also takes into account that some of the media chunks have already been downloaded. A down-side of the existing implementation is that it doesn't do any estimation if the actual stream length is unknown (for example for text) and it requires extra data loads.\r\n\r\nThat means we should probably still provide a way to get an estimated download size in `DownloadHelper` even if it may not be 100% correct. To keep it simple, it may be better to keep out hard-coded estimates, for example for text tracks as they are likely to be only a small part of the downloaded data anyway.",
    "clean_message": "The idea to provide a way to retrieve the total size for downloading before actually starting the download makes sense, but I'm a bit wary that calculating it here using the available information may be wrong or misleading. This is because the selected tracks don't necessarily correspond to downloadable data streams. This mapping happens when we call  to identify the streams that we need to load. These streams and the manifest and potential extra data loads to obtain initilization data (e.g. for the DASH segment index) can then be used to calculate a total download size. This functionality is already part of the  implementations (specifically ) and it also takes into account that some of the media chunks have already been downloaded. A down-side of the existing implementation is that it doesn't do any estimation if the actual stream length is unknown (for example for text) and it requires extra data loads. That means we should probably still provide a way to get an estimated download size in  even if it may not be 100% correct. To keep it simple, it may be better to keep out hard-coded estimates, for example for text tracks as they are likely to be only a small part of the downloaded data anyway.",
    "message_url": "https://github.com/google/ExoPlayer/pull/6347#issuecomment-527117674",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@wilkinsona @izeye That should be the contract so the current behavior (no null-check) of the `SpanContextSupplier` is intentional.\r\n\r\nIf the span is not sampled, there is no reason to include it in the Exemplar because won't be in the span store. Also, `isSampled` is a newer addition; before that, we needed to do the same checks in the getters (hence the NPE above).\r\n\r\nI think it is fine doing the checks since:\r\n1. We can't stop anyone calling it\r\n2. Older versions of the client don't have `isSampled` so they call the getters\r\n\r\nI can also file a PR in Prometheus Client and call this out in the javadocs so that it will be explicit.",
    "clean_message": "That should be the contract so the current behavior (no null-check) of the  is intentional. If the span is not sampled, there is no reason to include it in the Exemplar because won't be in the span store. Also,  is a newer addition; before that, we needed to do the same checks in the getters (hence the NPE above). I think it is fine doing the checks since: 1. We can't stop anyone calling it 2. Older versions of the client don't have  so they call the getters I can also file a PR in Prometheus Client and call this out in the javadocs so that it will be explicit.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/32817#issuecomment-1292361686",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks, \r\nI spent a lot of time to find a way to rework this to use `getLibraryDestination(String, LibraryScope)`, \r\nand telling the truth I don't know how it can be done at the moment. \r\n\r\n> this method will return the wrong location for a provided artifact in a war \u2013 it will return WEB-INF/lib when it should return WEB-INF/lib-provided.\r\n\r\n`maven-war-plugin` does not include `provided` dependencies.\r\n\r\n\r\nHere is a small background why excluding is not working for WAR.\r\n\r\n`RepackageMojo`: \r\n```java\r\n\r\n\tprivate void repackage() throws MojoExecutionException {\r\n\t   // (1)\r\n\t\tArtifact source = getSourceArtifact();\r\n\t\tFile target = getTargetFile();\r\n\t\tRepackager repackager = getRepackager(source.getFile());\r\n\t\t// (2)\r\n\t\tSet<Artifact> artifacts = filterDependencies(this.project.getArtifacts(), getFilters(getAdditionalFilters()));\r\n\t\t//(3)\r\n\t\tLibraries libraries = new ArtifactsLibraries(artifacts, this.requiresUnpack, getLog()); \r\n\t\ttry {\r\n\t\t\tLaunchScript launchScript = getLaunchScript();\r\n\t\t\trepackager.repackage(target, libraries, launchScript);\r\n\t\t}\r\n\t\tcatch (IOException ex) {\r\n\t\t\tthrow new MojoExecutionException(ex.getMessage(), ex);\r\n\t\t}\r\n\t\tupdateArtifact(source, target, repackager.getBackupFile());\r\n\t}\r\n\r\n```\r\n\r\n1. a source `war` has already had `WEB-INF/lib` folder which has been added by `maven-war-plugin` before.\r\n2. `RepackageMojo` filters all dependencies using the filters. (such as `excludeGroupIds`, )\r\n3. `RepackageMojo` creates `ArtifactsLibraries` which includes only filtered libraries.\r\n\r\n\r\nthen, `Repackager` tries to repackage the `sourceJar` using the given libraries and other parameters:\r\n\r\n `Repackager`:\r\n ```java\r\nprivate void repackage(JarFile sourceJar, File destination, Libraries libraries, LaunchScript launchScript)\r\n\t\tthrows IOException {\r\n\t\r\n\t\r\n\t// (1)\r\n\tWritableLibraries writeableLibraries = new WritableLibraries(libraries);\r\n\ttry (JarWriter writer = new JarWriter(destination, launchScript)) {\r\n\t\twriter.writeManifest(buildManifest(sourceJar));\r\n\t\twriteLoaderClasses(writer);\r\n\t\tif (this.layout instanceof RepackagingLayout) {\r\n\t\t// (2)\r\n\t\t\twriter.writeEntries(sourceJar,\r\n\t\t\t\t\tnew RenamingEntryTransformer(((RepackagingLayout) this.layout).getRepackagedClassesLocation()), writeableLibraries);\r\n\t\t}\r\n\t\telse {\r\n\t\t// (2)\r\n\t\t\twriter.writeEntries(sourceJar, writeableLibraries);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t// (3) \r\n\t\t\r\n\t\twriteableLibraries.write(writer);\r\n\t}\r\n}\r\n \r\n ```\r\n \r\n 1. Source `jar` has already had `WEB-INF/lib` folder with dependencies, as `maven-war-plugin` includes all `compile` dependencies and put them beneath `WEB-INF/lib` folder.\r\n 2. `JarWriter` adds all jar entries from `sourceJar` into the `destination`. (including `WEB-INF/lib`)\r\n 3. Write libraries\r\n \r\n So, summarizing the above I can not understand how `getLibraryDestination(String, LibraryScope)` can help here.\r\n In my opinion, `JarWriter` should avoid any libraries, because for this purpose `WritableLibraries` is responsible. Currently, there is no way to exclude/filter jar entries during the `JarWriter.writeEntries` process.\r\n \r\n \r\n \r\n \r\n ",
    "clean_message": "Thanks,  I spent a lot of time to find a way to rework this to use ,  and telling the truth I don't know how it can be done at the moment.  does not include  dependencies. Here is a small background why excluding is not working for WAR. :   a source  has already had  folder which has been added by  before. filters all dependencies using the filters. (such as , ) creates  which includes only filtered libraries.  then,  tries to repackage the  using the given libraries and other parameters: :  Source  has already had  folder with dependencies, as  includes all  dependencies and put them beneath  folder. adds all jar entries from  into the . (including ) Write libraries  So, summarizing the above I can not understand how  can help here.  In my opinion,  should avoid any libraries, because for this purpose  is responsible. Currently, there is no way to exclude/filter jar entries during the  process.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/15947#issuecomment-503213752",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks very much, @terminux.",
    "clean_message": "Thanks very much, .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/30505#issuecomment-1118345242",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@Marcono1234 \r\nI'll most likely close this PR due to my poor design and my wrong assumptions. Once I patched the collection type adapter factory for `Iterable`, I realized that now it can be serialized, but cannot be deserialized without a custom deserializer: there is no way to add elements to the iterable that is not a collection. In the force-pushed commit, there is a test that serializes `Chars implements Iterable<Character>`, but cannot be deserialize into a `Chars` instance properly causing a class cast exception since the default `Iterable` constructor is configured to `ArrayList` that obviously cannot be cast to `Chars` (that is effectively a generator, not a \"plain\" collection of elements).\r\n\r\nI believe this is the biggest \"why\" why Gson does not support it out of box due to the symmetry issues and I feel ashamed to be blind not seeing it earlier.",
    "clean_message": "I'll most likely close this PR due to my poor design and my wrong assumptions. Once I patched the collection type adapter factory for , I realized that now it can be serialized, but cannot be deserialized without a custom deserializer: there is no way to add elements to the iterable that is not a collection. In the force-pushed commit, there is a test that serializes `Chars implements Iterable<Character I believe this is the biggest \"why\" why Gson does not support it out of box due to the symmetry issues and I feel ashamed to be blind not seeing it earlier.",
    "message_url": "https://github.com/google/gson/pull/1389#issuecomment-633289564",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Relates to https://github.com/airlift/units/pull/23#discussion_r807091300 ",
    "clean_message": "Relates to  ",
    "message_url": "https://github.com/google/guava/pull/5925#issuecomment-1041227549",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@kevinb9n @mcculls @sameb Can you please give a short update when do you think the next Guice release will be cut? Are there any plans?",
    "clean_message": "Can you please give a short update when do you think the next Guice release will be cut? Are there any plans?",
    "message_url": "https://github.com/google/guice/pull/1359#issuecomment-676294238",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@neiser It's on the backlog which means we'd like to include it in the next release but I'm afraid I can't give you an estimate for when it might be reviewed.",
    "clean_message": "It's on the backlog which means we'd like to include it in the next release but I'm afraid I can't give you an estimate for when it might be reviewed.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/11077#issuecomment-391598886",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Most welcome, now we have to wait until the PR will be merged",
    "clean_message": "Most welcome, now we have to wait until the PR will be merged",
    "message_url": "https://github.com/google/gson/pull/2308#issuecomment-1414223932",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Ok @snicoll , please take over if time is short. Let me know if it is not clear what I meant to improve/fix, which by the way is a minor problem, type safety is only at risk if the source code is modified, not during regular use.",
    "clean_message": "Ok  , please take over if time is short. Let me know if it is not clear what I meant to improve/fix, which by the way is a minor problem, type safety is only at risk if the source code is modified, not during regular use.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/23584#issuecomment-704824384",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I have updated PR. But still I am no sure about that link to Spring Boot documentation. Should I remove that link to SNAPSHOT?",
    "clean_message": "I have updated PR. But still I am no sure about that link to Spring Boot documentation. Should I remove that link to SNAPSHOT?",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7325#issuecomment-533284694",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@snicoll Looks good to me. Thanks.",
    "clean_message": "Looks good to me. Thanks.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/21440#issuecomment-633886739",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry for the trouble that this caused you. This is indeed intentional. The best documentation I know of at the moment is [Error Prone's](http://errorprone.info/bugpattern/CollectionIncompatibleType). We do want to extend Error Prone to catch bugs not just with the use of JDK collections but also with `Cache`, but we haven't gotten there yet. Our hope is to do so by introducing some kind of `@TypeCompatibleWith` annotation. If we do that, then IntelliJ could read the annotation and provide the same warning. (Or they could just special-case `Cache` today.)\n",
    "clean_message": "Sorry for the trouble that this caused you. This is indeed intentional. The best documentation I know of at the moment is Error Prone's. We do want to extend Error Prone to catch bugs not just with the use of JDK collections but also with , but we haven't gotten there yet. Our hope is to do so by introducing some kind of  annotation. If we do that, then IntelliJ could read the annotation and provide the same warning. (Or they could just special-case  today.)",
    "message_url": "https://github.com/google/guava/pull/2481#issuecomment-219427998",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "No, I don't think so. The install command is implemented as a `@Grab` under the covers so it should be using the exact same logic. What makes you think that install may be ignoring `settings.xml`?\n",
    "clean_message": "No, I don't think so. The install command is implemented as a  under the covers so it should be using the exact same logic. What makes you think that install may be ignoring ?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/2683#issuecomment-84954383",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Merged commit 94dd510\n",
    "clean_message": "Merged commit 94dd510",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/623#issuecomment-41387919",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@ojw28 @AquilesCanta I don't suppose you happen to know a way to make the CLA bot work with \"Keep my email addresses private\" ? \r\n\r\nWe've signed the Corp CLA, and I'm covered by it, but it looks like you might have to commit on the exact, public email you're listed on the CLA with, which would be annoying. \r\n\r\nLet me know.\r\n\r\nThanks!",
    "clean_message": "I don't suppose you happen to know a way to make the CLA bot work with \"Keep my email addresses private\" ?  We've signed the Corp CLA, and I'm covered by it, but it looks like you might have to commit on the exact, public email you're listed on the CLA with, which would be annoying.  Let me know. Thanks!",
    "message_url": "https://github.com/google/ExoPlayer/pull/7867#issuecomment-700158296",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry, test case was mistaken.\n",
    "clean_message": "Sorry, test case was mistaken.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/107#issuecomment-48815744",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "We'll do our best. @dsyer / @wilkinsona  any concerns about this PR since you've both touched that code in the past?\n",
    "clean_message": "We'll do our best.  /   any concerns about this PR since you've both touched that code in the past?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/2683#issuecomment-84651587",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Unclear whether we both commented on this at the same time, or if you just replied really fast :). See inline comment I just posted in any case; I think it's probably the simplest thing to be going on with.\n",
    "clean_message": "Unclear whether we both commented on this at the same time, or if you just replied really fast :). See inline comment I just posted in any case; I think it's probably the simplest thing to be going on with.",
    "message_url": "https://github.com/google/ExoPlayer/pull/885#issuecomment-151877951",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the PR. I am not sure that we can safely mark `spring-boot-configuration-processor` as incremental. The Gradle documentation [says](https://docs.gradle.org/5.4/userguide/java_plugin.html#sec:incremental_annotation_processing) the following:\r\n\r\n> They must not depend on compiler-specific APIs like `com.sun.source.util.Trees`. Gradle wraps the processing APIs, so attempts to cast to compiler-specific types will fail. If your processor does this, it cannot be incremental, unless you have some fallback mechanism.\r\n\r\nThe `Trees` API is used to determine the default values of a configuration property field for inclusion in the generated metadata. While we use reflection, I expect the wrapping that's done by Gradle to stop this from working.\r\n\r\nHave you tried your proposed changes with Gradle 5.4 and verified that the annotation processor works correctly?",
    "clean_message": "Thanks for the PR. I am not sure that we can safely mark  as incremental. The Gradle documentation says the following: The  API is used to determine the default values of a configuration property field for inclusion in the generated metadata. While we use reflection, I expect the wrapping that's done by Gradle to stop this from working. Have you tried your proposed changes with Gradle 5.4 and verified that the annotation processor works correctly?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/16603#issuecomment-486164149",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "FYI I'm leaving for vacation on Wednesday. Back July 5. Sorry that I can't comment while I'm away.",
    "clean_message": "FYI I'm leaving for vacation on Wednesday. Back July 5. Sorry that I can't comment while I'm away.",
    "message_url": "https://github.com/google/dagger/pull/670#issuecomment-309567790",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I am not a Googler, but I can't see this PR being merged. You've reformatted the entire source code, so there is no way to tell what was actually changed. In general, pull requests should touch as little surrounding code as possible. \r\n\r\nBecause of all this reformatting, the diff is useless. I cannot check if the removed deprecated methods are actually allowed to be removed. According to the guava philosophy, deprecated api will not be removed anymore unless it is marked as beta:\r\n\r\n> APIs without @Beta will remain binary-compatible for the indefinite future. (Previously, we sometimes removed such APIs after a deprecation period. The last release to remove non-@Beta APIs was Guava 21.0.) Even @Deprecated APIs will remain (again, unless they are @Beta). We have no plans to start removing things again, but officially, we're leaving our options open in case of surprises (like, say, a serious security problem).\r\n\r\n",
    "clean_message": "I am not a Googler, but I can't see this PR being merged. You've reformatted the entire source code, so there is no way to tell what was actually changed. In general, pull requests should touch as little surrounding code as possible.  Because of all this reformatting, the diff is useless. I cannot check if the removed deprecated methods are actually allowed to be removed. According to the guava philosophy, deprecated api will not be removed anymore unless it is marked as beta:",
    "message_url": "https://github.com/google/guava/pull/3410#issuecomment-475711974",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@mattrjacobs : Changes looks good to me.\n",
    "clean_message": ": Changes looks good to me.",
    "message_url": "https://github.com/Netflix/Hystrix/pull/1412#issuecomment-259502948",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I agree with you on this wholeheartedly except the very end: no matter what you do, software is insanely complex and we are all humans, we all make mistakes, you can't really avoid it (sometimes software and also hardware make mistakes too).\r\n\r\nThis is why we have logs, metrics, distributed tracing, this is why write tests, and also this is why we have Spring Boot Actuator. You can call it information leakage but I would call it \"observability\" instead.\r\nAgain, I agree on disabling this by default but I disagree on not having it at all.",
    "clean_message": "I agree with you on this wholeheartedly except the very end: no matter what you do, software is insanely complex and we are all humans, we all make mistakes, you can't really avoid it (sometimes software and also hardware make mistakes too). This is why we have logs, metrics, distributed tracing, this is why write tests, and also this is why we have Spring Boot Actuator. You can call it information leakage but I would call it \"observability\" instead. Again, I agree on disabling this by default but I disagree on not having it at all.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/28136#issuecomment-942624928",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for your first contribution @up-to-you !",
    "clean_message": "Thanks for your first contribution -to-you !",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/15075#issuecomment-436547053",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@joshiste The 5% is more of a straw man than anything I'm wedded to, but it's also important to note that it's calculated against the hard maximum memory limits rather than the committed memory.  This requirement is driven by usage that we're seeing on Cloud Foundry where very few JVMs run within 5% of their maximum.  It's very common for these applications to bump up against their committed limits and either `gc` themselves back down or increase the committed limit to approach the maximum, neither of which would trigger a `DOWN` status.  In cases where applications would trigger `DOWN` for this `HealthIndicator`, we've seen that the applications are typically very close to going OOM on the next surge in request load anyway.\n\nThat being said, we are aware of users who run close to the maximum memory limits (within the 5% default) just in the same way we are aware of users who run close to the maximum disk space limits (within the 10MB default).  For these users, configuration and disabling is available just as it is for the `DiskSpaceHealthIndicator`.\n",
    "clean_message": "The 5% is more of a straw man than anything I'm wedded to, but it's also important to note that it's calculated against the hard maximum memory limits rather than the committed memory.  This requirement is driven by usage that we're seeing on Cloud Foundry where very few JVMs run within 5% of their maximum.  It's very common for these applications to bump up against their committed limits and either  themselves back down or increase the committed limit to approach the maximum, neither of which would trigger a  status.  In cases where applications would trigger  for this , we've seen that the applications are typically very close to going OOM on the next surge in request load anyway. That being said, we are aware of users who run close to the maximum memory limits (within the 5% default) just in the same way we are aware of users who run close to the maximum disk space limits (within the 10MB default).  For these users, configuration and disabling is available just as it is for the .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/6988#issuecomment-249242483",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "The APR lifecycle listener does NOT use the APR library directly to accelerate TLS. You need the Tomcat Native library (which depends on APR and OpenSSL) to do that. The APR lifecycle listener only looks for the Tomcat Native library.\r\n\r\nAlso, there are NO benefits w.r.t threading.\r\n\r\nThe Tomcat Native connector enables two features:\r\n- the APR/native connector\r\n- the ability to use OpenSSL with the NIO and NIO2 connectors\r\n\r\nIn Tomcat 9 and 8.5 you need the Tomcat Native library to use HTTP/2 if you are running on Java 8 or earlier. In Tomcat 9 (and soon in Tomcat 8.5) on Java 9 or later, HTTP/2 is supported without the Tomcat Native Library.\r\n\r\nIf you are using TLS, the Tomcat Native library generally offers performance improvements compared to JSSE (either via the APR/Native connector or with NIO[2] with OpenSSL). However those performance differences vary with configuration and exact Java version so it is worth testing to see what the benefit is for any given scenario.\r\n\r\nGenerally, I would recommend using the Tomcat Native library if you need to support TLS. In terms of APR/native vs NIO+OpenSSL, the Tomcat community is leaning towards NIO+OpenSSL with the possibility that the APR/native connector will be removed in Tomcat 10.",
    "clean_message": "The APR lifecycle listener does NOT use the APR library directly to accelerate TLS. You need the Tomcat Native library (which depends on APR and OpenSSL) to do that. The APR lifecycle listener only looks for the Tomcat Native library. Also, there are NO benefits w.r.t threading. The Tomcat Native connector enables two features: - the APR/native connector - the ability to use OpenSSL with the NIO and NIO2 connectors In Tomcat 9 and 8.5 you need the Tomcat Native library to use HTTP/2 if you are running on Java 8 or earlier. In Tomcat 9 (and soon in Tomcat 8.5) on Java 9 or later, HTTP/2 is supported without the Tomcat Native Library. If you are using TLS, the Tomcat Native library generally offers performance improvements compared to JSSE (either via the APR/Native connector or with NIO[2] with OpenSSL). However those performance differences vary with configuration and exact Java version so it is worth testing to see what the benefit is for any given scenario. Generally, I would recommend using the Tomcat Native library if you need to support TLS. In terms of APR/native vs NIO+OpenSSL, the Tomcat community is leaning towards NIO+OpenSSL with the possibility that the APR/native connector will be removed in Tomcat 10.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10079#issuecomment-326970302",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I see. On line 158 it adds it back again, but it's absent for the whole period of loading config files. Has to be a bug.\n",
    "clean_message": "I see. On line 158 it adds it back again, but it's absent for the whole period of loading config files. Has to be a bug.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/953#issuecomment-44257565",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi @damingerdai, thanks for the PR.\r\n\r\nUnfortunately we reject use of Stream and Optional in the code, see reasons in https://github.com/spring-projects/spring-security/issues/9642",
    "clean_message": "Hi , thanks for the PR. Unfortunately we reject use of Stream and Optional in the code, see reasons in ",
    "message_url": "https://github.com/spring-projects/spring-security/pull/12312#issuecomment-1329542063",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the PR!\n",
    "clean_message": "Thanks for the PR!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7326#issuecomment-258672901",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Uh... weird.  The spreadsheet is at\nhttps://docs.google.com/spreadsheets/d/1kq4ECwPjHX9B8QUCTPclgsDCXYaj7T-FlT4tB5q3ahk/edit?usp=sharing\n... not sure why the link ?changed? or what happened.  Does that look worth\nlinking to?\n\nOn Sun, Apr 23, 2017 at 12:14 PM, Eric Edens <notifications@github.com>\nwrote:\n\n> The linked Google Spreadsheet is no longer available (at least\n> externally). I think it's fine to remove since the link to unicode.org\n> details which codepoints are defined as whitespace.\n>\n> Also, I double checked, and the list hasn't changed compared to what's\n> used in CharMatchers.\n> ------------------------------\n> You can view, comment on, or merge this pull request online at:\n>\n>   https://github.com/google/guava/pull/2798\n> Commit Summary\n>\n>    - Remove broken link in JavaDoc of CharMatcher\n>\n> File Changes\n>\n>    - *M* android/guava/src/com/google/common/base/CharMatcher.java\n>    <https://github.com/google/guava/pull/2798/files#diff-0> (8)\n>    - *M* guava/src/com/google/common/base/CharMatcher.java\n>    <https://github.com/google/guava/pull/2798/files#diff-1> (8)\n>\n> Patch Links:\n>\n>    - https://github.com/google/guava/pull/2798.patch\n>    - https://github.com/google/guava/pull/2798.diff\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/google/guava/pull/2798>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AA5Cl6ySJDkKJwc-GtsYcLIrKw8C2C_tks5ry6MugaJpZM4NFgVV>\n> .\n>\n\n\n\n-- \nKevin Bourrillion | Java Librarian | Google, Inc. | kevinb@google.com\n",
    "clean_message": "Uh... weird.  The spreadsheet is at ... not sure why the link ?changed? or what happened.  Does that look worth linking to? On Sun, Apr 23, 2017 at 12:14 PM, Eric Edens <wrote: --  Kevin Bourrillion | Java Librarian | Google, Inc. | ",
    "message_url": "https://github.com/google/guava/pull/2798#issuecomment-300380386",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Hmm, ok that is unfortunate. I have split `EnumMap` support into a separate pull request (#2071). If you want you can close this pull request here then, if you don't think there is any chance this will be integrated.",
    "clean_message": "Hmm, ok that is unfortunate. I have split  support into a separate pull request (#2071). If you want you can close this pull request here then, if you don't think there is any chance this will be integrated.",
    "message_url": "https://github.com/google/gson/pull/2068#issuecomment-1029481840",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@vishalvrv9 Not a problem at all - you were not a hindrance. Git is very powerful but it could take some time to get used to. Hopefully you learned something new and the next time will be easier :) Thanks again for your contribution! This is now in master.",
    "clean_message": "Not a problem at all - you were not a hindrance. Git is very powerful but it could take some time to get used to. Hopefully you learned something new and the next time will be easier :) Thanks again for your contribution! This is now in master.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6514#issuecomment-481828497",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> I also wanted to add a description for the spring.datasource.initialization-mode property\r\n\r\nIt is generated from the code, the current description is \"Initialize the datasource with available DDL and DML scripts.\" I agree that this can be improved and we can do that as part of a separate issue. Type of datasource can be misleading IMO.",
    "clean_message": "It is generated from the code, the current description is \"Initialize the datasource with available DDL and DML scripts.\" I agree that this can be improved and we can do that as part of a separate issue. Type of datasource can be misleading IMO.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/21077#issuecomment-619335238",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Man.  What the hell is going on on Travis?  I've re-started the job a couple of times.  Do you want to maybe rebase -i and force a new commit ref no, and push -f to force travis to try again?  I don't know if it's this branch or environmental...\n",
    "clean_message": "Man.  What the hell is going on on Travis?  I've re-started the job a couple of times.  Do you want to maybe rebase -i and force a new commit ref no, and push -f to force travis to try again?  I don't know if it's this branch or environmental...",
    "message_url": "https://github.com/google/dagger/pull/93#issuecomment-86671572",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "LGTM, though I'm quite surprised that you're adding such a bogus type.\n\nAlso, please squash.\n",
    "clean_message": "LGTM, though I'm quite surprised that you're adding such a bogus type. Also, please squash.",
    "message_url": "https://github.com/google/gson/pull/733#issuecomment-155274090",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "We may need to do this internally, as we're not turning on deprecation on dagger1 internally, since it slows down the builds of really large projects (seriously - the extra i/o is a problem). So we have to do some fancy magic with MOE to do things differently between the two repos.  Let me consult a bit though.  We might yet use this pull. \n",
    "clean_message": "We may need to do this internally, as we're not turning on deprecation on dagger1 internally, since it slows down the builds of really large projects (seriously - the extra i/o is a problem). So we have to do some fancy magic with MOE to do things differently between the two repos.  Let me consult a bit though.  We might yet use this pull. ",
    "message_url": "https://github.com/google/dagger/pull/136#issuecomment-86666021",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks, @vanwobe! This has been merged into `5.8.x` in a5351f3d890b888857bb60171a9846c331a6aabe. I standardized the commit format and then also merge it into `main`.",
    "clean_message": "Thanks, ! This has been merged into  in a5351f3d890b888857bb60171a9846c331a6aabe. I standardized the commit format and then also merge it into .",
    "message_url": "https://github.com/spring-projects/spring-security/pull/11734#issuecomment-1227793921",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "For tracking purposes the link to the JIRA is https://jira.spring.io/browse/SEC-2825\n",
    "clean_message": "For tracking purposes the link to the JIRA is ",
    "message_url": "https://github.com/spring-projects/spring-security/pull/164#issuecomment-75879772",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This is the branch to reproduce #8674, not an pull request intended for merging. As such closing it to avoid confusion. I believe the branch can still be checkout if the pull request is closed.",
    "clean_message": "This is the branch to reproduce #8674, not an pull request intended for merging. As such closing it to avoid confusion. I believe the branch can still be checkout if the pull request is closed.",
    "message_url": "https://github.com/google/ExoPlayer/pull/8673#issuecomment-790373360",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> Any update on this, would be an urgent feature.\r\n\r\nKinda forgot about this. I'll try making the requested fixes asap and resubmit for review.",
    "clean_message": "Kinda forgot about this. I'll try making the requested fixes asap and resubmit for review.",
    "message_url": "https://github.com/google/gson/pull/1266#issuecomment-436264397",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@snicoll I've updated this PR. Please take a look :)\r\nThanks in advance.",
    "clean_message": "I've updated this PR. Please take a look :) Thanks in advance.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/13916#issuecomment-409356917",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "- fix is PR 1508.\n- I looked at it again after I wrote that and saw it wasn't a problem then started reading more and got a headache. Then I decided I didn't hate myself enough so I looked into TrueHD passthrough again and got annoyed again. ;)\n",
    "clean_message": " fix is PR 1508. I looked at it again after I wrote that and saw it wasn't a problem then started reading more and got a headache. Then I decided I didn't hate myself enough so I looked into TrueHD passthrough again and got annoyed again. ;) ",
    "message_url": "https://github.com/google/ExoPlayer/pull/1490#issuecomment-217602355",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Yup, sorry. We're having issues with it at the moment.",
    "clean_message": "Yup, sorry. We're having issues with it at the moment.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/19618#issuecomment-573195752",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I'll have a look tomorrow if I can make this nasty time shifting work reliable.\nSpeaking of timezones .. it is already tomorrow over here ...",
    "clean_message": "I'll have a look tomorrow if I can make this nasty time shifting work reliable. Speaking of timezones .. it is already tomorrow over here ...",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/34428#issuecomment-1451021015",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks again Christoph!",
    "clean_message": "Thanks again Christoph!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/14130#issuecomment-414128623",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the PR @mgtriffid!",
    "clean_message": "Thanks for the PR !",
    "message_url": "https://github.com/Netflix/eureka/pull/1194#issuecomment-497847910",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks",
    "clean_message": "Thanks",
    "message_url": "https://github.com/google/gson/pull/1122#issuecomment-317058881",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@mstier-nflx or @hunterford : Can you please merge this PR?",
    "clean_message": "-nflx or  : Can you please merge this PR?",
    "message_url": "https://github.com/Netflix/conductor/pull/660#issuecomment-407185808",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@jzheaux I have just delivered the requested changes, sorry for the delay. Does it look ok now?",
    "clean_message": "I have just delivered the requested changes, sorry for the delay. Does it look ok now?",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7806#issuecomment-580372867",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for you answer, but in my mind `evict` method just remove client information, but not update those two numbers Immediately. Update is on the background task.\r\nWhy not update immediately when `evict` method remove client information.",
    "clean_message": "Thanks for you answer, but in my mind  method just remove client information, but not update those two numbers Immediately. Update is on the background task. Why not update immediately when  method remove client information.",
    "message_url": "https://github.com/Netflix/eureka/pull/1071#issuecomment-392124040",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@wilkinsona as I said - it uses deprecated method which will be removed in the coming major release of SnakeYAML. This project stops to compile. This will simplify the migration",
    "clean_message": "as I said - it uses deprecated method which will be removed in the coming major release of SnakeYAML. This project stops to compile. This will simplify the migration",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/33663#issuecomment-1369757766",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I'm very sorry I missed that. :(",
    "clean_message": "I'm very sorry I missed that. :(",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/13871#issuecomment-407428088",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks again @izeye!",
    "clean_message": "Thanks again !",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/13130#issuecomment-388292076",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@pivotal-issuemaster This is an obvious fix.",
    "clean_message": "-issuemaster This is an obvious fix.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/24734#issuecomment-757862835",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> > @portizb, are you able to build `dev-v2-rtsp` branch with no problems in current ([c516740](https://github.com/google/ExoPlayer/commit/c516740526818d6275188a73b5fdcab9a2a74821)) state?\r\n> \r\n> No, it doesn't work from `dev-v2-rtsp` because of a broken merge.\r\n\r\nidk if anyone would be interested, but I spent a few hours:\r\n* updating `core` from [c516740](https://github.com/tresvecesseis/ExoPlayer/tree/c516740526818d6275188a73b5fdcab9a2a74821/library/core) to [6aa35aa](https://github.com/google/ExoPlayer/tree/6aa35aaaa5f594dfec8e9916d962676f671424f5/library/core) ([tag `r2.11.1`](https://github.com/google/ExoPlayer/releases/tag/r2.11.1))\r\n  - determining which handful of files to __not__ update\r\n    * ie: which handful of methods to __not__ remove\r\n* updating `rtp`, `rtsp`, `ui` to accommodate for changes in `core`\r\n  - note: `ui` should be (but wasn't) fully updated from [c516740](https://github.com/tresvecesseis/ExoPlayer/tree/c516740526818d6275188a73b5fdcab9a2a74821/library/ui) to [6aa35aa](https://github.com/google/ExoPlayer/tree/6aa35aaaa5f594dfec8e9916d962676f671424f5/library/ui)\r\n* updating my _app_ to accommodate for the changes I made to the `RtspDefaultClient.factory()` API\r\n  - ie: pass instance of `ExoPlayer` to _factory_\r\n\r\nlinks:\r\n* [release notes](https://github.com/warren-bank/Android-RTSP-IPCam-Viewer/releases/tag/v02.01.00-alpha.01)\r\n* [commits in branch `dev/c516740`](https://github.com/warren-bank/Android-RTSP-IPCam-Viewer/commits/dev/c516740)\r\n  - all updates after `v02.00.00` ..,completing at `v02.01.00-alpha.01`\r\n* [my notes on the update process](https://github.com/warren-bank/Android-RTSP-IPCam-Viewer/blob/v02.01.00-alpha.01/.etc/exoplayer_updates/c516740_6aa35aa/1-v02.01.00-alpha.01/1.%20notes.txt)\r\n* [patch file](https://github.com/warren-bank/Android-RTSP-IPCam-Viewer/blob/v02.01.00-alpha.01/.etc/exoplayer_updates/c516740_6aa35aa/2-status/2b.%20core.patch) that shows all changes to `core` to go from [6aa35aa](https://github.com/google/ExoPlayer/tree/6aa35aaaa5f594dfec8e9916d962676f671424f5/library/core) to its [state after my updates](https://github.com/warren-bank/Android-RTSP-IPCam-Viewer/tree/v02.01.00-alpha.01/libs/exoplayer/core)\r\n\r\ncomments:\r\n* this was a relatively quick and dirty endeavor\r\n  - with a little more work.. the differences in `core` between [`release-v2`](https://github.com/google/ExoPlayer/tree/release-v2/library/core) and [`dev-v2-rtsp`](https://github.com/tresvecesseis/ExoPlayer/tree/dev-v2-rtsp/library/core) could be farther reduced",
    "clean_message": "idk if anyone would be interested, but I spent a few hours: * updating  from c516740 to 6aa35aa (tag )   - determining which handful of files to not update     * ie: which handful of methods to not remove * updating , ,  to accommodate for changes in    - note:  should be (but wasn't) fully updated from c516740 to 6aa35aa * updating my app to accommodate for the changes I made to the  API   - ie: pass instance of  to factory links: * release notes * commits in branch    - all updates after  ..,completing at  * my notes on the update process * patch file that shows all changes to  to go from 6aa35aa to its state after my updates comments: * this was a relatively quick and dirty endeavor   - with a little more work.. the differences in  between  and  could be farther reduced",
    "message_url": "https://github.com/google/ExoPlayer/pull/3854#issuecomment-571092747",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 2,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "negative"
  },
  {
    "raw_message": "going to merge this and address the comments in a separate PR.",
    "clean_message": "going to merge this and address the comments in a separate PR.",
    "message_url": "https://github.com/Netflix/eureka/pull/976#issuecomment-384122237",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "In a nutshell, CLI uses annotations, fields etc to derive starters. Start.spring.io needs to take a list of starters and look up annotations etc. Having that info in one place sounds useful, consistent, and accurate. \n",
    "clean_message": "In a nutshell, CLI uses annotations, fields etc to derive starters. Start.spring.io needs to take a list of starters and look up annotations etc. Having that info in one place sounds useful, consistent, and accurate. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/2141#issuecomment-66879118",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@wilkinsona  Are we opensearch users expected to keep using opensearch.RestHighLevelClient after 2.7.0?",
    "clean_message": "Are we opensearch users expected to keep using opensearch.RestHighLevelClient after 2.7.0?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/28496#issuecomment-1141986144",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "FWIW, I don't see a specific problem with `initialize`. It's only called from the constructor so from the caller's perspective the value of `mainApplicationClass` can't change.\n",
    "clean_message": "FWIW, I don't see a specific problem with . It's only called from the constructor so from the caller's perspective the value of  can't change.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4801#issuecomment-165737143",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@bono007 thank you for making your first contribution to Spring Boot. Agreed on that ssl flag, I've tried a few options and this one is the least bad option. I've moved its processing in a different place though, making `secureConnection` a `Boolean`.",
    "clean_message": "thank you for making your first contribution to Spring Boot. Agreed on that ssl flag, I've tried a few options and this one is the least bad option. I've moved its processing in a different place though, making  a .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/19109#issuecomment-558145070",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the feedback, @rwinch!\r\n\r\n> Additionally, I'm curious how this fits into the big picture of the breach protection\r\n\r\nThe goal was to make a simpler API for customizing the request handling. The alternative we discussed would be to add a post-processor inside the `CsrfTokenRepositoryRequestHandler`. After experimenting with this a bit, I felt that I could simplify the API and wanted to give it a try and get some feedback.\r\n\r\nWith the change in this PR, support for breach fits back into the paradigm of a separate implementation of `CsrfTokenRequestHandler`. It is given the `Supplier<CsrfToken>`, which it can modify, and then pass to the delegate (or super) implementation from this PR. If we go this route, I won't need to make very many changes to the branch from the [draft PR](https://github.com/spring-projects/spring-security/pull/11731).",
    "clean_message": "Thanks for the feedback, ! The goal was to make a simpler API for customizing the request handling. The alternative we discussed would be to add a post-processor inside the . After experimenting with this a bit, I felt that I could simplify the API and wanted to give it a try and get some feedback. With the change in this PR, support for breach fits back into the paradigm of a separate implementation of . It is given the , which it can modify, and then pass to the delegate (or super) implementation from this PR. If we go this route, I won't need to make very many changes to the branch from the draft PR.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/11924#issuecomment-1262839694",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Assuming this was opened by error.",
    "clean_message": "Assuming this was opened by error.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/15800#issuecomment-458212549",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@AquilesCanta I was thinking of fetching the data by chunks instead of having one large buffer. But the parameter is a good idea. I'll do that instead.",
    "clean_message": "I was thinking of fetching the data by chunks instead of having one large buffer. But the parameter is a good idea. I'll do that instead.",
    "message_url": "https://github.com/google/ExoPlayer/pull/7988#issuecomment-701500596",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I prefer the logging I think.",
    "clean_message": "I prefer the logging I think.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/17511#issuecomment-511374824",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 2.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@mouellet  it looks like you've done a weird rebase of your branch. Can you squash your commits in a single one and push force in your branch? There are a lot of unrelated changes in your branch now. Thanks.",
    "clean_message": "it looks like you've done a weird rebase of your branch. Can you squash your commits in a single one and push force in your branch? There are a lot of unrelated changes in your branch now. Thanks.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/8195#issuecomment-277676042",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Just a friendly bump because I want to know if anyone has seen this PR.\n",
    "clean_message": "Just a friendly bump because I want to know if anyone has seen this PR.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/1422#issuecomment-53238567",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for catching this, @shakuzen. And for such a thorough PR. The proposed changes look good to me. @jkschneider can you cast an eye over them before we merge please?",
    "clean_message": "Thanks for catching this, . And for such a thorough PR. The proposed changes look good to me.  can you cast an eye over them before we merge please?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/11888#issuecomment-362576629",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for this one, it must have taken a while! I've merged to master but rolled back a couple where I though that the for loops were easier to read.",
    "clean_message": "Thanks for this one, it must have taken a while! I've merged to master but rolled back a couple where I though that the for loops were easier to read.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/12626#issuecomment-378811086",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@peddisri Thanks for explaining. While a seekbar + current position and duration, like commonly used for VOD, is like you say not suited for live streams, a different style of seekbar can be a good solution for live streams. One use case is live TV, for channels with programs starting at specific times. \n\nThere are, I believe, two main ways of doing a live seekbar. In both cases the duration is not displayed, only the position. The position label can either be the offset from the live edge position, for example \"-31:05\", or (preferably) it can be the wall clock time associated with that position in the stream, for example \"11:37:45\". The wall clock time value can be calculated from the HLS' tag PROGRAM-DATE-TIME. If that tag is missing, an approximation can be made based on the time on the device when the live playlist was downloaded. This way, the seekbar can be used to, for example, find position \"11:30\", when a certain TV program starts. \n\nI suggest this behavior for ExoPlayer HLS-live: to include a working seekbar, and to display \"Live\" in the duration label and the wall clock time, like described above, in the position label. The wall clock time associated with the current position can be calculated by determining the wall clock time when the stream starts (start of first chunk), and adding the elapsed time since the start. \n",
    "clean_message": "Thanks for explaining. While a seekbar + current position and duration, like commonly used for VOD, is like you say not suited for live streams, a different style of seekbar can be a good solution for live streams. One use case is live TV, for channels with programs starting at specific times.  There are, I believe, two main ways of doing a live seekbar. In both cases the duration is not displayed, only the position. The position label can either be the offset from the live edge position, for example \"-31:05\", or (preferably) it can be the wall clock time associated with that position in the stream, for example \"11:37:45\". The wall clock time value can be calculated from the HLS' tag PROGRAM-DATE-TIME. If that tag is missing, an approximation can be made based on the time on the device when the live playlist was downloaded. This way, the seekbar can be used to, for example, find position \"11:30\", when a certain TV program starts.  I suggest this behavior for ExoPlayer HLS-live: to include a working seekbar, and to display \"Live\" in the duration label and the wall clock time, like described above, in the position label. The wall clock time associated with the current position can be calculated by determining the wall clock time when the stream starts (start of first chunk), and adding the elapsed time since the start. ",
    "message_url": "https://github.com/google/ExoPlayer/pull/1394#issuecomment-203254269",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@dcore94 Thanks for the contribution. I'm merging, but feel free to get rid of ack altogether in any of the future changes, if possible. It is not a deal breaker for now.",
    "clean_message": "Thanks for the contribution. I'm merging, but feel free to get rid of ack altogether in any of the future changes, if possible. It is not a deal breaker for now.",
    "message_url": "https://github.com/Netflix/conductor/pull/1740#issuecomment-647814191",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for the PR!\r\n\r\nTo be honest I am not sure I like that change. That would make the code quite complicated for one environment that does not support something who's a commodity in other environments. I've flagged it so that we discuss it at our next team meeting. ",
    "clean_message": "Thanks for the PR! To be honest I am not sure I like that change. That would make the code quite complicated for one environment that does not support something who's a commodity in other environments. I've flagged it so that we discuss it at our next team meeting. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7394#issuecomment-260717443",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks Tavian!\n",
    "clean_message": "Thanks Tavian!",
    "message_url": "https://github.com/google/guice/pull/926#issuecomment-99872381",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This is a very, very old merge request. I don't see any chance this will be merged anytime, to be honest :-(",
    "clean_message": "This is a very, very old merge request. I don't see any chance this will be merged anytime, to be honest :-(",
    "message_url": "https://github.com/google/guava/pull/2100#issuecomment-1008751140",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Have you signed the CLA?\n",
    "clean_message": "Have you signed the CLA?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4103#issuecomment-146101354",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for reporting this @mhyeon-lee.\r\nCan you please write a test and than I'll merge this.",
    "clean_message": "Thanks for reporting this -lee. Can you please write a test and than I'll merge this.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/5489#issuecomment-403489405",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "No need to worry about the branch. We can cherry-pick the change back if needed and then merge it forwards.",
    "clean_message": "No need to worry about the branch. We can cherry-pick the change back if needed and then merge it forwards.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/19677#issuecomment-574214699",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@dsyer @philwebb I've rebased against master, merged Dave's latest batch of edits, resolved the conflicts, and fixed one lingering test case.\n",
    "clean_message": "I've rebased against master, merged Dave's latest batch of edits, resolved the conflicts, and fixed one lingering test case.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/1784#issuecomment-86183774",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Merged into master. Thanks for the PR, @vpavic\n",
    "clean_message": "Merged into master. Thanks for the PR, ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4293#issuecomment-151099744",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@philwebb, @dsyer: any feedback on this?",
    "clean_message": ", : any feedback on this?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/9930#issuecomment-320588178",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks, have you signed the contributors agreement?\n",
    "clean_message": "Thanks, have you signed the contributors agreement?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/590#issuecomment-38765989",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@nosan This looks like a really nice addition to the existing test slice support and would be great to add it in 2.2.x. The one things we're not totally sure about is the `MockWebServiceServers` class. I think we'd rather not introduce that in Boot and instead just support a single `MockWebServiceServer` (similar to the way we support `MockRestServiceServer`).\r\n\r\n> it would be nice to have `reset()` functionality in `MockWebServiceServer` class. Is it possible to add?\r\n\r\n@gregturn Can probably help answer that. I'd certainly like to keep a clean separation and have the general use Mock code in spring-ws and keep the Boot code specific to our slice concepts.\r\n",
    "clean_message": "This looks like a really nice addition to the existing test slice support and would be great to add it in 2.2.x. The one things we're not totally sure about is the  class. I think we'd rather not introduce that in Boot and instead just support a single  (similar to the way we support ). Can probably help answer that. I'd certainly like to keep a clean separation and have the general use Mock code in spring-ws and keep the Boot code specific to our slice concepts.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/17274#issuecomment-505999815",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@ghostd thank you for making your first contribution to Spring Boot.",
    "clean_message": "thank you for making your first contribution to Spring Boot.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/28064#issuecomment-923657073",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "It's been a while, so let's see how much I can recall. :)\r\n\r\nReally, from what I do remember, there were two big issues:\r\n\r\n1. Spring Boot wants to prevent all logging until it has initialized the system. In order to do that, it installed a filter right away to drop all messages until it reconfigures the system. Using the public API via LogManager, as far as I could tell, you couldn't force a reconfigure event that way, so I bypassed the filter and initialized the system first instead. That made some of the unit tests irrelevant, could be related to what you're describing.\r\n\r\n2. There is currently no public API in log4j-api that can be used to force a reconfigure event for a LoggerContext that was already started. This would normally not be an issue because you can use the monitorInterval setting in your config to make it updatable, but that's not programmatically controllable without digging into log4j-core internals.\r\n\r\nI think we should work together to define a public API in log4j-api that can be used for programmatic reconfiguration and disabling logging for 2.9.",
    "clean_message": "It's been a while, so let's see how much I can recall. :) Really, from what I do remember, there were two big issues:   Spring Boot wants to prevent all logging until it has initialized the system. In order to do that, it installed a filter right away to drop all messages until it reconfigures the system. Using the public API via LogManager, as far as I could tell, you couldn't force a reconfigure event that way, so I bypassed the filter and initialized the system first instead. That made some of the unit tests irrelevant, could be related to what you're describing.   There is currently no public API in log4j-api that can be used to force a reconfigure event for a LoggerContext that was already started. This would normally not be an issue because you can use the monitorInterval setting in your config to make it updatable, but that's not programmatically controllable without digging into log4j-core internals.   I think we should work together to define a public API in log4j-api that can be used for programmatic reconfiguration and disabling logging for 2.9.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7992#issuecomment-299482840",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Yes! Thank you again. ",
    "clean_message": "Yes! Thank you again. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/22301#issuecomment-660018358",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hi @apanicker-nflx @aravindanr @kishorebanala \r\n\r\nRequest your help in reviewing the PR.",
    "clean_message": "Hi -nflx    Request your help in reviewing the PR.",
    "message_url": "https://github.com/Netflix/conductor/pull/2296#issuecomment-859998092",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Sorry, we've been heads down fixing problems with 1.2.0 so we've not really had a chance to look yet. Will take a look when we flip the master branch to 1.3.0 (it's still on 1.2.x at the moment). \n\nIt looks interesting and I'm keen to look at what we can do with Docker in 1.3.0.\n",
    "clean_message": "Sorry, we've been heads down fixing problems with 1.2.0 so we've not really had a chance to look yet. Will take a look when we flip the master branch to 1.3.0 (it's still on 1.2.x at the moment).  It looks interesting and I'm keen to look at what we can do with Docker in 1.3.0.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/2071#issuecomment-68406682",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "Merged, thanks.\n",
    "clean_message": "Merged, thanks.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/382#issuecomment-35893780",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I don't understand why you refer to it. Metrics support for `WebClient` was added in #12228.",
    "clean_message": "I don't understand why you refer to it. Metrics support for  was added in #12228.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/14173#issuecomment-417282412",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I don't like the idea of the actuator's output format changing depending on what's on the classpath. If we need the `JavaTimeModule` to always be available to produce predictable output then I think we should make it a runtime dependency of the module.\r\n\r\nThe format for a duration in `application.properties` is, from a user's perspective, intended only to be human readable and writable. The format in the Actuator's response is intended to both human and machine readable. As such, I think we should use a standard format for the duration, rather than our own. Assuming I've read the code correctly, this proposal will result in an ISO-8601 seconds based representation which sounds good to me.",
    "clean_message": "I don't like the idea of the actuator's output format changing depending on what's on the classpath. If we need the  to always be available to produce predictable output then I think we should make it a runtime dependency of the module. The format for a duration in  is, from a user's perspective, intended only to be human readable and writable. The format in the Actuator's response is intended to both human and machine readable. As such, I think we should use a standard format for the duration, rather than our own. Assuming I've read the code correctly, this proposal will result in an ISO-8601 seconds based representation which sounds good to me.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/16539#issuecomment-489115092",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for your contribution!\r\n\r\nA few remarks.\r\n\r\n1. This project is in maintenance mode, and we're generally going to be reluctant to accept PRs that are essentially cosmetic, especially if it is not trivially obvious that they don't change anything.\r\n2. Anyway, I'm not really convinced that the change would be an improvement. The new helper methods seem more complicated than I would expect. I don't see why they catch and rethrow exceptions, for example. They also have type parameters that don't seem useful.\r\n3. As a more general remark, refactoring test methods to remove duplication isn't as obviously beneficial as with production code. It's an advantage to be able to understand a test method in isolation, without having to look elsewhere in the test class.\r\n\r\nSo I think we're not going to accept this one. Thanks for thinking of us, though, and best wishes for your research!",
    "clean_message": "Thanks for your contribution! A few remarks.  This project is in maintenance mode, and we're generally going to be reluctant to accept PRs that are essentially cosmetic, especially if it is not trivially obvious that they don't change anything. Anyway, I'm not really convinced that the change would be an improvement. The new helper methods seem more complicated than I would expect. I don't see why they catch and rethrow exceptions, for example. They also have type parameters that don't seem useful. As a more general remark, refactoring test methods to remove duplication isn't as obviously beneficial as with production code. It's an advantage to be able to understand a test method in isolation, without having to look elsewhere in the test class.  So I think we're not going to accept this one. Thanks for thinking of us, though, and best wishes for your research!",
    "message_url": "https://github.com/google/gson/pull/1915#issuecomment-872598222",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "sorry. was out of town. will rebase tomorrow morning!\n",
    "clean_message": "sorry. was out of town. will rebase tomorrow morning!",
    "message_url": "https://github.com/google/dagger/pull/99#issuecomment-108007323",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@garyrussell We aren't using transactions so yes, in our case this doesn't really make sense. I think it would be better to have more defensive defaults for the autoconfigured endpoint.",
    "clean_message": "We aren't using transactions so yes, in our case this doesn't really make sense. I think it would be better to have more defensive defaults for the autoconfigured endpoint.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/11515#issuecomment-368254365",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@thasso - Is there any way I could access the patch implemented locally? Would be of great help.\n",
    "clean_message": " Is there any way I could access the patch implemented locally? Would be of great help. ",
    "message_url": "https://github.com/google/ExoPlayer/pull/848#issuecomment-155079052",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "That\u2019s validating...  can add the link to that in a comment so we can\nremove the workaround when the older versions of Android finally age our\n\nOn Fri, Nov 8, 2019 at 5:45 AM Kevin Rocard <notifications@github.com>\nwrote:\n\n> *@krocard* commented on this pull request.\n> ------------------------------\n>\n> In\n> library/core/src/main/java/com/google/android/exoplayer2/video/MediaCodecVideoRenderer.java\n> <https://github.com/google/ExoPlayer/pull/6603#discussion_r344179271>:\n>\n> > @@ -1750,7 +1753,8 @@ public void onFrameRendered(MediaCodec codec, long presentationTimeUs, long nano\n>          // Stale event.\n>          return;\n>        }\n> -      onProcessedTunneledBuffer(presentationTimeUs);\n> +\n> +      handler.post(() -> onProcessedTunneledBuffer(presentationTimeUs));\n>\n> For reference, it was fixed by\n> https://android-review.googlesource.com/1156807.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/google/ExoPlayer/pull/6603?email_source=notifications&email_token=AADBF6ASP4DG2ORD5YHNM4TQSVURLA5CNFSM4JHCNHG2YY3PNVWWK3TUL52HS4DFWFIHK3DMKJSXC5LFON2FEZLWNFSXPKTDN5WW2ZLOORPWSZGOCK5G37A#discussion_r344179271>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AADBF6CVYJUV2K2P42MOSWDQSVURLANCNFSM4JHCNHGQ>\n> .\n>\n",
    "clean_message": "That\u2019s validating...  can add the link to that in a comment so we can remove the workaround when the older versions of Android finally age our On Fri, Nov 8, 2019 at 5:45 AM Kevin Rocard <wrote:",
    "message_url": "https://github.com/google/ExoPlayer/pull/6603#issuecomment-552201103",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@jzheaux Yes I am feeling better now, thanks. \r\nI did the suggested changes, please let me know if there are other changes. \r\n",
    "clean_message": "Yes I am feeling better now, thanks.  I did the suggested changes, please let me know if there are other changes. ",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7925#issuecomment-589762683",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks @ahus1 \n",
    "clean_message": "Thanks  ",
    "message_url": "https://github.com/Netflix/Hystrix/pull/293#issuecomment-51845165",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@Tolriq I apologise for the delay. Will look into this next week. If you want to speed up the process, please consider raising the same PR in https://github.com/androidx/media. \r\n\r\nPlease raise any future PRs in the media repository as well. Thanks.",
    "clean_message": "I apologise for the delay. Will look into this next week. If you want to speed up the process, please consider raising the same PR in .  Please raise any future PRs in the media repository as well. Thanks.",
    "message_url": "https://github.com/google/ExoPlayer/pull/10807#issuecomment-1353344486",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "Thanks. Things are definitely better now, but https://github.com/spring-projects/spring-boot/pull/14585/commits/e9b962ff0ae4ce264d2f8518afb0d909a9e12aae is still a bit too broad to be merged as-is. For example, the change to how the plugin classpath looks like a good thing to do, but it's unrelated to applying Kotlin examples in the documentation. It's also confusing to me in its current form as sometimes the classpath is configured in the test, and sometimes the classpath is configured in the build script. I'd prefer that the classpath is configured consistently across the whole module. Do you have time to break things up further? I'd really like to keep the changes in this PR focussed solely on adding Kotlin examples.\r\n\r\nAlso, I wonder if a Suite-based approach could be taken for testing the Groovy and Kotlin examples that are included in the documentation. This would align them with the approach that's been taken in the integration tests where `GradleCompatibilitySuite` is used to run against different versions of Gradle. The suite would run the tests using both a `.gradle` file and a `.gradle.kts` file and would avoid the need for creating a separate test class for testing the two languages for each example.\r\n\r\n",
    "clean_message": "Thanks. Things are definitely better now, but  is still a bit too broad to be merged as-is. For example, the change to how the plugin classpath looks like a good thing to do, but it's unrelated to applying Kotlin examples in the documentation. It's also confusing to me in its current form as sometimes the classpath is configured in the test, and sometimes the classpath is configured in the build script. I'd prefer that the classpath is configured consistently across the whole module. Do you have time to break things up further? I'd really like to keep the changes in this PR focussed solely on adding Kotlin examples. Also, I wonder if a Suite-based approach could be taken for testing the Groovy and Kotlin examples that are included in the documentation. This would align them with the approach that's been taken in the integration tests where  is used to run against different versions of Gradle. The suite would run the tests using both a  file and a  file and would avoid the need for creating a separate test class for testing the two languages for each example.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/14585#issuecomment-425559612",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "+1 for JsonJqTransform",
    "clean_message": "+1 for JsonJqTransform",
    "message_url": "https://github.com/Netflix/conductor/pull/227#issuecomment-310749635",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the PR @eddumelendez! This is now merged into master.",
    "clean_message": "Thanks for the PR ! This is now merged into master.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7119#issuecomment-516030488",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Error in CLA occurred because of my global Git configuration on computer I worked, what should I do in this case ? My GitHub account match in CLA but commits are using different email address\n",
    "clean_message": "Error in CLA occurred because of my global Git configuration on computer I worked, what should I do in this case ? My GitHub account match in CLA but commits are using different email address",
    "message_url": "https://github.com/google/ExoPlayer/pull/1234#issuecomment-179796100",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@mattrjacobs  ... sounds good. thank you. \n",
    "clean_message": "... sounds good. thank you. ",
    "message_url": "https://github.com/Netflix/Hystrix/pull/959#issuecomment-152633998",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Good catch, merged. Thanks!",
    "clean_message": "Good catch, merged. Thanks!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7765#issuecomment-269346268",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks, @shazin! Would you please squash your commits and format it to look something like:\r\n\r\n```\r\nOpen Saml2AuthenticationRequestContext\r\n\r\nFixes gh-8356\r\n```\r\n\r\nFor extra context, please see the contribution guidelines for [squashing](https://github.com/spring-projects/spring-security/blob/master/CONTRIBUTING.md#squash-commits) and [formatting](https://github.com/spring-projects/spring-security/blob/master/CONTRIBUTING.md#format-commit-messages) commits.",
    "clean_message": "Thanks, ! Would you please squash your commits and format it to look something like: For extra context, please see the contribution guidelines for squashing and formatting commits.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/8364#issuecomment-612122241",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks @stevegury.  Just modified the state in `AbstractCommand` to be volatile whenever possible\n",
    "clean_message": "Thanks .  Just modified the state in  to be volatile whenever possible",
    "message_url": "https://github.com/Netflix/Hystrix/pull/1204#issuecomment-219140880",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Ha you beat me to it. Was about to commit almost an identical change to the tests. Apologies for not adding them to the original pr, but I could not clone the source at work.",
    "clean_message": "Ha you beat me to it. Was about to commit almost an identical change to the tests. Apologies for not adding them to the original pr, but I could not clone the source at work.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/8924#issuecomment-295152049",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "@philwebb good point, I thought of that as well and decided to go the oversight route and nuke it. Fair enough, I'll restore it in `2.0.x`.\r\n\r\nThe second copy is package private so I won't restore it.",
    "clean_message": "good point, I thought of that as well and decided to go the oversight route and nuke it. Fair enough, I'll restore it in . The second copy is package private so I won't restore it.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/14072#issuecomment-418630193",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I'm planning to pull this as-is and clean it up a bit after the merge. Unless you're actively working on it still.\n",
    "clean_message": "I'm planning to pull this as-is and clean it up a bit after the merge. Unless you're actively working on it still.",
    "message_url": "https://github.com/google/ExoPlayer/pull/498#issuecomment-110814150",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks again, @dratler. This is now merged into `main` via 3820f0f3a39e2539ccdf265e68d59d204725e219. I also committed a polish via e91cacfdafc9d23667a9e889826750bb3518631f",
    "clean_message": "Thanks again, . This is now merged into  via 3820f0f3a39e2539ccdf265e68d59d204725e219. I also committed a polish via e91cacfdafc9d23667a9e889826750bb3518631f",
    "message_url": "https://github.com/spring-projects/spring-security/pull/9612#issuecomment-870087384",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "There was something wrong with the original pull request but I've since\nfixed it.  Yet the test still fails.  From looking at the code this seems\nto be a problem that always existed with the MockRemoteEurekaServer so I'm\nnot sure how this ever passed.  Although the fact that it ran before means\nthat I probably missed something.\n\nOn Tue, Apr 1, 2014 at 11:26 AM, Nitesh Kant notifications@github.comwrote:\n\n>  Looks like there's a problem with this pull request\n> \n>  Since, the same test failed twice, which does not happen in other pull\n> requests. I suspect that there is a change in this PR that is causing the\n> failure. @elandau https://github.com/elandau can you verify?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/Netflix/eureka/pull/94#issuecomment-39240617\n> .\n",
    "clean_message": "There was something wrong with the original pull request but I've since fixed it.  Yet the test still fails.  From looking at the code this seems to be a problem that always existed with the MockRemoteEurekaServer so I'm not sure how this ever passed.  Although the fact that it ran before means that I probably missed something. On Tue, Apr 1, 2014 at 11:26 AM, Nitesh Kant :",
    "message_url": "https://github.com/Netflix/eureka/pull/94#issuecomment-39252427",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for investigating! In the meantime I started to set my server up freshly. Out of whatever reasons, the class loading error does not show up any more when using the originally released hystrix-core 1.5.6 artifact.\n\nSo the whole thing turned out to be due to some misconfiguration of my environment. \n\nSorry for the inconvenience.\n\nAlexander\n",
    "clean_message": "Thanks for investigating! In the meantime I started to set my server up freshly. Out of whatever reasons, the class loading error does not show up any more when using the originally released hystrix-core 1.5.6 artifact. So the whole thing turned out to be due to some misconfiguration of my environment.  Sorry for the inconvenience. Alexander",
    "message_url": "https://github.com/Netflix/Hystrix/pull/1401#issuecomment-256059927",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Merged with edits (commit f6c12e0), thanks\n",
    "clean_message": "Merged with edits (commit f6c12e0), thanks",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/300#issuecomment-33806307",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks Johnny. This was backported to 2.1.x so maybe the error occurred when rebasing or something. If nobody beats me to it, I\u2019ll double check those branches too. ",
    "clean_message": "Thanks Johnny. This was backported to 2.1.x so maybe the error occurred when rebasing or something. If nobody beats me to it, I\u2019ll double check those branches too. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/19377#issuecomment-565952654",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for the ping.\r\n\r\nI'd say we should just expose the handler via a Bean lookup similar to how httpFirewall is looked up in `WebSecurity`.\r\n\r\nI'm not sure what is happening with the JDK. Our travis build is passing with JDK 8. How did you reproduce this?\r\n\r\n",
    "clean_message": "Thanks for the ping. I'd say we should just expose the handler via a Bean lookup similar to how httpFirewall is looked up in . I'm not sure what is happening with the JDK. Our travis build is passing with JDK 8. How did you reproduce this?",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7052#issuecomment-514688228",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for the PR. The current behaviour is intentional and is described on the constructors that take additional converters where it says the following:\r\n\r\n> Items are added just before any default converter of the same type (or at the front of the list if no\r\n> default converter is found)\r\n\r\nI'm going to close this PR as we can't just change the behaviour. If the behaviour is causing you a problem, please open an issue describing that problem in as much detail as possible and we'll see what can be done.",
    "clean_message": "Thanks for the PR. The current behaviour is intentional and is described on the constructors that take additional converters where it says the following: I'm going to close this PR as we can't just change the behaviour. If the behaviour is causing you a problem, please open an issue describing that problem in as much detail as possible and we'll see what can be done.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/11867#issuecomment-361988714",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "+1 interest\n\nOtherwise i followed this approch to redirect after authentication on specific page : http://jlorenzen.blogspot.fr/2013/07/remember-target-url-with-spring.html\n",
    "clean_message": "+1 interest Otherwise i followed this approch to redirect after authentication on specific page : ",
    "message_url": "https://github.com/spring-projects/spring-security/pull/40#issuecomment-76986263",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks Christoph. I've backported the cassandra fix as I wanted it to be fixed in `2.3.x` as well.",
    "clean_message": "Thanks Christoph. I've backported the cassandra fix as I wanted it to be fixed in  as well.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/22945#issuecomment-674826286",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@adutra Those names sound sensible to me. We can always refine them if we think of something better when we merge.",
    "clean_message": "Those names sound sensible to me. We can always refine them if we think of something better when we merge.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/20887#issuecomment-634339861",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "Thank you for your patient.I think I understand what you mean.\ud83d\ude03\ud83d\ude03\ud83d\ude03",
    "clean_message": "Thank you for your patient.I think I understand what you mean.\ud83d\ude03\ud83d\ude03\ud83d\ude03",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/14894#issuecomment-431083395",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@dmgcodevil Thats weird - I don't see any unresolved comments on https://github.com/Netflix/Hystrix/pull/1397. It shows just myself and @mattrjacobs as the only _participants_ on my screen.\n",
    "clean_message": "Thats weird - I don't see any unresolved comments on . It shows just myself and  as the only participants on my screen.",
    "message_url": "https://github.com/Netflix/Hystrix/pull/1412#issuecomment-259375223",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks again, @dreis2211!",
    "clean_message": "Thanks again, !",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/18349#issuecomment-535009308",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> Thanks, @dkodippily! I've left some feedback inline. Also, once you get to refactoring the class under test, will you please squash your commits like so:\r\n> \r\n> 1. one commit for the tests, followed by\r\n> 2. one commit for the refactor\r\n> \r\n> The first commit should end with `Issue gh-12344` and the second comment should end with `Closes gh-12344`.\r\n\r\n@jzheaux Thanks for the comments , I've added the changes",
    "clean_message": "Thanks for the comments , I've added the changes",
    "message_url": "https://github.com/spring-projects/spring-security/pull/12468#issuecomment-1374265386",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Please take the time to compile and test your changes before submitting a pull request. As shown by the fact that this change breaks the build, we still auto-configure the layout dialect when it's on the classpath.",
    "clean_message": "Please take the time to compile and test your changes before submitting a pull request. As shown by the fact that this change breaks the build, we still auto-configure the layout dialect when it's on the classpath.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/8190#issuecomment-277282090",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I'm afraid the change that you're suggesting cannot be made because it would break existing code. \r\n\r\nHave you considered injecting the properties directly instead? Something like:\r\n\r\n```java\r\n@Bean\r\npublic JedisClientConfigurationBuilderCustomizer myCustomizer(RedisProperties redisProperties) {\r\n    return (builder) -> {\r\n        // use builder and redisProperties here\r\n    }\r\n}\r\n```",
    "clean_message": "I'm afraid the change that you're suggesting cannot be made because it would break existing code.  Have you considered injecting the properties directly instead? Something like:",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/21123#issuecomment-619404523",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@wilkinsona sorry for disturbing but I found that you mentioned at comment https://github.com/spring-projects/spring-boot/pull/22885#issuecomment-671964861 that CI failures are general problem. Mine PR fails at `No space left on device` as mentioned above... is it same problem and will be fixed?\r\n",
    "clean_message": "sorry for disturbing but I found that you mentioned at comment  that CI failures are general problem. Mine PR fails at  as mentioned above... is it same problem and will be fixed?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/22896#issuecomment-673352510",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@jvemugunta I have been working off of and only really looking at the `2.0` branch.  There are significant changes to how modules/configuration/bootstrapping works in 2.0, so you might want to take a look at that.  If you need to test something you are welcome to pull the branch from this pr gorzell:gorzell/upstream/mysql-config.  Keep in mind that it is based on the 2.0 branch though, so it will probably look quite a bit different than `dev`/`master`.\r\n\r\nIf you have need for those additional configuration values I am happy to expose them.  But note that the names will likely change to enable better name spacing and ensure that they are consistent with the other values.",
    "clean_message": "I have been working off of and only really looking at the  branch.  There are significant changes to how modules/configuration/bootstrapping works in 2.0, so you might want to take a look at that.  If you need to test something you are welcome to pull the branch from this pr gorzell:gorzell/upstream/mysql-config.  Keep in mind that it is based on the 2.0 branch though, so it will probably look quite a bit different than /. If you have need for those additional configuration values I am happy to expose them.  But note that the names will likely change to enable better name spacing and ensure that they are consistent with the other values.",
    "message_url": "https://github.com/Netflix/conductor/pull/742#issuecomment-418043042",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "positive"
  },
  {
    "raw_message": "@nkjackzhang  thanks a lot for your first contribution to Spring Boot. This is now merged in `2.0.x` and `master`.",
    "clean_message": "thanks a lot for your first contribution to Spring Boot. This is now merged in  and .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/13288#issuecomment-392698903",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for your reply @mhalbritter. This PR was submitted based on Andy's [comment](https://github.com/spring-projects/spring-boot/issues/24968#issuecomment-1015365254). It's essentially a variant of `AnnotatedTypeMetadata.getAllAnnotationAttributes(String)` , simplifying some logic and accounting for attribute overriding.\r\n\r\nI didn't modify the code in `metaAndDirectAnnotationConditionDoesNotMatchWhenOnlyDirectPropertyIsSet` and this unit test passed.",
    "clean_message": "Thanks for your reply . This PR was submitted based on Andy's comment. It's essentially a variant of  , simplifying some logic and accounting for attribute overriding. I didn't modify the code in  and this unit test passed.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/30505#issuecomment-1087522352",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@dyroberts we are still looking into the idea of mapping this to config properties. While this does appear to be a common way to handle multi-tenancy in resource servers, it's not clear whether or not Resource Server Multi-Tenancy itself is so common as to want to add Spring Boot support.\r\n\r\nThat said, this class leaves open this possibility.",
    "clean_message": "we are still looking into the idea of mapping this to config properties. While this does appear to be a common way to handle multi-tenancy in resource servers, it's not clear whether or not Resource Server Multi-Tenancy itself is so common as to want to add Spring Boot support. That said, this class leaves open this possibility.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7733#issuecomment-568046689",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Do you understand exactly what the specification means by \"successive frames\"? Video frames are quite often re-ordered during decode, and it's unclear whether successive is defined before or after this re-ordering occurs.\n",
    "clean_message": "Do you understand exactly what the specification means by \"successive frames\"? Video frames are quite often re-ordered during decode, and it's unclear whether successive is defined before or after this re-ordering occurs.",
    "message_url": "https://github.com/google/ExoPlayer/pull/1223#issuecomment-181588029",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "There are other places in the configuration where you have to wrap thing in yaml for this to work; `baselineVersion : \"0\"` will work. Having said that, it isn't such a big deal to upgrade the converter to support that use case as well.\n",
    "clean_message": "There are other places in the configuration where you have to wrap thing in yaml for this to work;  will work. Having said that, it isn't such a big deal to upgrade the converter to support that use case as well.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4981#issuecomment-173495178",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the Pull Request! This is now merged into master :smile:",
    "clean_message": "Thanks for the Pull Request! This is now merged into master :smile:",
    "message_url": "https://github.com/spring-projects/spring-security/pull/5741#issuecomment-416353321",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I don't really understand what this is for. That said, I don't think it's the right way of doing whatever it is that you're trying to do. Since the event is being posted from playback thread to main thread, you don't really have any strong guarantees about when that event will end up being handled on the main thread. So if you're relying on the event to do something that's needed when switching DRM scheme, I don't think there's any strong guarantee that you'd do it in time.\r\n\r\nPlease clarify.",
    "clean_message": "I don't really understand what this is for. That said, I don't think it's the right way of doing whatever it is that you're trying to do. Since the event is being posted from playback thread to main thread, you don't really have any strong guarantees about when that event will end up being handled on the main thread. So if you're relying on the event to do something that's needed when switching DRM scheme, I don't think there's any strong guarantee that you'd do it in time. Please clarify.",
    "message_url": "https://github.com/google/ExoPlayer/pull/2918#issuecomment-326977068",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Sorry for the late reply..\nhttps://github.com/elans3/spring-boot/tree/76cb09e6de633530248eda25e740ec297f987323/spring-boot-samples/spring-boot-sample-rs-cxf\n\nThanks,\nElan\n\nOn Wed, Feb 3, 2016 at 3:41 AM, P M VADIVEL notifications@github.com\nwrote:\n\n> Hi elans3, I need that example. Can you please share that link?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/spring-projects/spring-boot/pull/3104#issuecomment-179126696\n> .\n",
    "clean_message": "Sorry for the late reply.. Thanks, Elan On Wed, Feb 3, 2016 at 3:41 AM, P M VADIVEL  wrote:",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3104#issuecomment-198381745",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks a lot @vpavic! I am not sure we'll have time to review this one for 2.0 still. I am flagging it now to get more feedback.",
    "clean_message": "Thanks a lot ! I am not sure we'll have time to review this one for 2.0 still. I am flagging it now to get more feedback.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4965#issuecomment-331794540",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@Dav1dde Can you confirm that this issue was fixed in gh-7687 and if so please close this PR?",
    "clean_message": "Can you confirm that this issue was fixed in gh-7687 and if so please close this PR?",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6599#issuecomment-565042321",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "`Click here` links to https://github.com/spring-projects/spring-security/pull/null which is 404.\n",
    "clean_message": "links to  which is 404.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/3944#issuecomment-228235355",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Please submit another PR for 1.4.x.\n",
    "clean_message": "Please submit another PR for 1.4.x.",
    "message_url": "https://github.com/Netflix/Hystrix/pull/242#issuecomment-40445761",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@igor-suhorukov thanks, I've merged your contribution with a [polish commit](https://github.com/spring-projects/spring-boot/commit/ba29788482b5ce8f62eec659349affc86e281835). If you run the maven build, those formatting failures will show up with an instruction on how to fix them.",
    "clean_message": "-suhorukov thanks, I've merged your contribution with a polish commit. If you run the maven build, those formatting failures will show up with an instruction on how to fix them.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/15424#issuecomment-445527061",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Please note that both https://github.com/spring-projects/spring-framework/pull/24977 and https://github.com/spring-projects/spring-boot/pull/21133 have been closed.",
    "clean_message": "Please note that both  and  have been closed.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/8436#issuecomment-761845074",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@kkovach this is great, can you rebase so we can pull this in?\n",
    "clean_message": "this is great, can you rebase so we can pull this in?",
    "message_url": "https://github.com/google/dagger/pull/295#issuecomment-179416864",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I just tested out the \"user passes in their own `MethodHandle.lookups()`\" approach, and it solves the problem (when combined with your PR).\r\n\r\n@mcculls, do you want to take a stab at incorporating this properly?  I'd imagine an optional `withLookups(MethodHandles.Lookup)` method on FactoryModuleBuilder that passes the lookups to FactoryProvider2, down through the new `superMethodHandle` methods.  `superMethodHandle` would fallback to a Guice-constructed lookups if the user didn't supply one, and warn the user that they need to start supplying one if the factory type is non-public.\r\n\r\nWe'd also want to do something about the thread-safety issue (if indeed there is one) with the mutable static state.",
    "clean_message": "I just tested out the \"user passes in their own \" approach, and it solves the problem (when combined with your PR). , do you want to take a stab at incorporating this properly?  I'd imagine an optional  method on FactoryModuleBuilder that passes the lookups to FactoryProvider2, down through the new  methods.   would fallback to a Guice-constructed lookups if the user didn't supply one, and warn the user that they need to start supplying one if the factory type is non-public. We'd also want to do something about the thread-safety issue (if indeed there is one) with the mutable static state.",
    "message_url": "https://github.com/google/guice/pull/1448#issuecomment-772733105",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Not a problem @rwinch \r\nI have amended the commit as requested",
    "clean_message": "Not a problem I have amended the commit as requested",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6221#issuecomment-444244558",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I signed it!",
    "clean_message": "I signed it!",
    "message_url": "https://github.com/google/gson/pull/1379#issuecomment-418222567",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@andrewlewis - I can take a look at this if you like.",
    "clean_message": " I can take a look at this if you like. ",
    "message_url": "https://github.com/google/ExoPlayer/pull/7449#issuecomment-637093583",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Fair enough.\r\nWe didn't upgrade yet.\r\nThe change is simple enough, but I guess it is matter of taste.\r\nCons are - we expose something that is not needed outside of the class\r\nPros - no extra classes generated.\r\n\r\nWill close this PR as eventually it wouldn't matter anyway.\r\n\r\nThank you for looking!\r\n",
    "clean_message": "Fair enough. We didn't upgrade yet. The change is simple enough, but I guess it is matter of taste. Cons are - we expose something that is not needed outside of the class Pros - no extra classes generated. Will close this PR as eventually it wouldn't matter anyway. Thank you for looking!",
    "message_url": "https://github.com/google/ExoPlayer/pull/9935#issuecomment-1042210159",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@qxo Thanks for the PR, but things right now are working as expected. The idea of `BackgroundPreinitializer` is that it can do so early in a separate thread so that this costly call is applied (and cached) before `AllEncompassingFormHttpMessageConverter` calls it in the main thread that starts the context.",
    "clean_message": "Thanks for the PR, but things right now are working as expected. The idea of  is that it can do so early in a separate thread so that this costly call is applied (and cached) before  calls it in the main thread that starts the context.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/29168#issuecomment-1002001325",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Isn't that code just mapping \"jvmArgs\" to something more obscure that is needed by the gradle code that we wrap? I assume \"jvmArgs\" or \"allJvmArgs\" or \"systemProperties\" would work just as well (see http://www.gradle.org/docs/current/dsl/org.gradle.api.tasks.JavaExec.html).\n\nAnd there was never any indication that this issue was resolved. It may be resolved at some point and marked as \"Won'tFix\" because it seems to be a general problem with gradle, not specifically anything to do with Boot. Or maybe not.Tomas's point that the Grails plugin has taken the lead and exposed properties in a more friendly way is well made: we could have a stronger position here, but  the pull request as it stands is not going to work, so it's waiting for someone to fix it.\n",
    "clean_message": "Isn't that code just mapping \"jvmArgs\" to something more obscure that is needed by the gradle code that we wrap? I assume \"jvmArgs\" or \"allJvmArgs\" or \"systemProperties\" would work just as well (see ). And there was never any indication that this issue was resolved. It may be resolved at some point and marked as \"Won'tFix\" because it seems to be a general problem with gradle, not specifically anything to do with Boot. Or maybe not.Tomas's point that the Grails plugin has taken the lead and exposed properties in a more friendly way is well made: we could have a stronger position here, but  the pull request as it stands is not going to work, so it's waiting for someone to fix it.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/592#issuecomment-51546512",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks, @izeye. The indention looks ok in the rendered docs, but we should swap out the spaces for tabs regardless.",
    "clean_message": "Thanks, . The indention looks ok in the rendered docs, but we should swap out the spaces for tabs regardless.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/19170#issuecomment-559387531",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@sameb while you can use `git diff master -C -M --find-copies-harder` or similar on the command-line, I couldn't find a way to do this in github. So instead I separated this into two commits: the first just copies `ManagedFilterPipeline` / `ManagedServletPipeline` to `AbstractFilterPipeline` / `AbstractServletPipeline`, while the second makes the actual changes to make them extensible. Hopefully that's easier to review.\n",
    "clean_message": "while you can use  or similar on the command-line, I couldn't find a way to do this in github. So instead I separated this into two commits: the first just copies  /  to  / , while the second makes the actual changes to make them extensible. Hopefully that's easier to review.",
    "message_url": "https://github.com/google/guice/pull/873#issuecomment-61998066",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "\ud83e\udd26\u200d\u2642\ufe0f Thank you, @izeye!",
    "clean_message": "\ud83e\udd26\u200d\u2642\ufe0f Thank you, !",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10848#issuecomment-340835340",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@Konrado85 thanks for the PR. We can polish the formatting as part of reviewing this PR. Going forward, please build the project locally before submitting the PR.",
    "clean_message": "thanks for the PR. We can polish the formatting as part of reviewing this PR. Going forward, please build the project locally before submitting the PR.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/20882#issuecomment-611096574",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@ayudovin thank you for trying, we'll give it another go.",
    "clean_message": "thank you for trying, we'll give it another go.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/16403#issuecomment-480723157",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> Having slept on it I realise that if I put a into the text the decoder doesn't need to keep the styles. Is that the sort of thing you have in mind?\r\n\r\nI'm not sure what this means; I think there might be some words missing from your sentence :)?\r\n\r\n> Should separate lines of text in a subtitle go into separate cues?\r\n\r\nNot unless they're positioned differently. If it's just a line break then it should be a single cue that contains a line break.",
    "clean_message": "I'm not sure what this means; I think there might be some words missing from your sentence :)? Not unless they're positioned differently. If it's just a line break then it should be a single cue that contains a line break.",
    "message_url": "https://github.com/google/ExoPlayer/pull/2281#issuecomment-272507842",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@rwinch finally all tests pass. :)",
    "clean_message": "finally all tests pass. :)",
    "message_url": "https://github.com/spring-projects/spring-security/pull/8507#issuecomment-636795716",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@rwinch @ynojima Can we have faster work on this. Spring Security currently no way to login without password. Login with OTP, Finger Print, Retina Scan, Face Recognization, QR are all used in Modern Web Apps and we neeed to move with time. If time is issue please point here, so community can come in and take part in development to move it fast.",
    "clean_message": "Can we have faster work on this. Spring Security currently no way to login without password. Login with OTP, Finger Print, Retina Scan, Face Recognization, QR are all used in Modern Web Apps and we neeed to move with time. If time is issue please point here, so community can come in and take part in development to move it fast.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6842#issuecomment-523755307",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks! I'll work on getting this merged.",
    "clean_message": "Thanks! I'll work on getting this merged.",
    "message_url": "https://github.com/google/ExoPlayer/pull/8943#issuecomment-844006965",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@kiall , I forgot to remove the colored boxes around the page regions and the region objects but they only should appear in the debug builds...",
    "clean_message": ", I forgot to remove the colored boxes around the page regions and the region objects but they only should appear in the debug builds...",
    "message_url": "https://github.com/google/ExoPlayer/pull/1781#issuecomment-287194004",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Any luck?\n",
    "clean_message": "Any luck?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/1230#issuecomment-49377655",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@rwinch Sorry for my delay, I was on Holidays :-)\nYour question is very interesting; I discussed this issue with @leleuj. We think there is a performance problem even in the original CAS client; the behavior is exactly the same. We should probably change the gatewayResolver to try a gateway authentication every xx minutes.\n\nI will discuss the question on the CAS mailing list and come back with answers.\nAny suggestions from you are welcome.\n",
    "clean_message": "Sorry for my delay, I was on Holidays :-) Your question is very interesting; I discussed this issue with . We think there is a performance problem even in the original CAS client; the behavior is exactly the same. We should probably change the gatewayResolver to try a gateway authentication every xx minutes. I will discuss the question on the CAS mailing list and come back with answers. Any suggestions from you are welcome.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/40#issuecomment-38549987",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Yep. My search foo wasn\u2019t good. ",
    "clean_message": "Yep. My search foo wasn\u2019t good. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/12905#issuecomment-382360421",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "General purpose playlists would be nice indeed. I think there are two kinds of multi-source playback: \n- those where you are interested in playing full clips - one after the other - where progress bars and UI change upon the next clip (for example album cover when playing music, current time, time remaining), having possibly very different formats (video/audio mixed)\n- and secondly playback where the source is subdivided (like HLS) but where chunks have some meaning (are clips) and possibly have a slightly different MediaFormat (max buffer size or codec initialisation data).\n\nIn the first case 'some' delay would be acceptable and a simple `player.stop(); rendererBuilder.buildRenderers(newClipData);` would suffice. It's the latter case I'm interested in, but I'm not sure if that requires changing TrackRenderers. It would of course be nice if ExoPlayer would support a dynamic playlist where you can start multiple audio sources with different offsets / independently from the video... that way it would be more efficient to make TrackRenderers dynamically bound.\n\nIn our case we have a single timeline, showing all chunks/clips and you can seek through the whole thing. This is the latter case, since although we need to know which clip is playing (to apply selected GPU Fx for example) we do not swap UI's and would like to prevent any delay incurred by flushing the codec, sample sources and/or renderers.\n\nCurrently our UI needs to know the complete duration to show progress. We retrieve the durations from the sample sources. That's why we are preparing all sources right now. This would be solvable if we had a database of this information on before hand. That would be fine too. If I think about it more, the clips currently are represented as fixed width (horizontal-)list items, so if the player would know which clip is playing we would only need to know the duration of the current clip. For example `getCurrentPosition()` could simply return a tuple of the clip index and the position (s/ms/us) in that clip. This would be a breaking change though. Better to handle that outside ExoPlayer using that database of durations...\n\nBuffering should indeed we handled the way you propose. Our situation only deals with clips of approximately 10 seconds and a total duration of like a minute, but for a general solution this should be looked into.\n\nI'm looking forward to the outcome of you guys looking into this!\n\nSome extra food for thought: say we want to create transitions between video's. Thats a thing that would need to be handled a layer above the codec, at SurfaceTexture level. Would it be possible to have multiple (2) textures (GL_TEXTURE_EXTERNAL_OES if I'm correct), render those simultaneously and blend them in the GPU? Or can't those textures co-exist?\n",
    "clean_message": "General purpose playlists would be nice indeed. I think there are two kinds of multi-source playback:  - those where you are interested in playing full clips - one after the other - where progress bars and UI change upon the next clip (for example album cover when playing music, current time, time remaining), having possibly very different formats (video/audio mixed) - and secondly playback where the source is subdivided (like HLS) but where chunks have some meaning (are clips) and possibly have a slightly different MediaFormat (max buffer size or codec initialisation data). In the first case 'some' delay would be acceptable and a simple  would suffice. It's the latter case I'm interested in, but I'm not sure if that requires changing TrackRenderers. It would of course be nice if ExoPlayer would support a dynamic playlist where you can start multiple audio sources with different offsets / independently from the video... that way it would be more efficient to make TrackRenderers dynamically bound. In our case we have a single timeline, showing all chunks/clips and you can seek through the whole thing. This is the latter case, since although we need to know which clip is playing (to apply selected GPU Fx for example) we do not swap UI's and would like to prevent any delay incurred by flushing the codec, sample sources and/or renderers. Currently our UI needs to know the complete duration to show progress. We retrieve the durations from the sample sources. That's why we are preparing all sources right now. This would be solvable if we had a database of this information on before hand. That would be fine too. If I think about it more, the clips currently are represented as fixed width (horizontal-)list items, so if the player would know which clip is playing we would only need to know the duration of the current clip. For example  could simply return a tuple of the clip index and the position (s/ms/us) in that clip. This would be a breaking change though. Better to handle that outside ExoPlayer using that database of durations... Buffering should indeed we handled the way you propose. Our situation only deals with clips of approximately 10 seconds and a total duration of like a minute, but for a general solution this should be looked into. I'm looking forward to the outcome of you guys looking into this! Some extra food for thought: say we want to create transitions between video's. Thats a thing that would need to be handled a layer above the codec, at SurfaceTexture level. Would it be possible to have multiple (2) textures (GL_TEXTURE_EXTERNAL_OES if I'm correct), render those simultaneously and blend them in the GPU? Or can't those textures co-exist?",
    "message_url": "https://github.com/google/ExoPlayer/pull/1070#issuecomment-173867224",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 2,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> Is there a reason why the test Liquibase xml's are using https and not http in them?\r\n\r\nYes, using HTTP introduces the risk of a man-in-the-middle attack. We moved to HTTPS (and enforce it via [NoHttp](https://spring.io/blog/2019/06/10/announcing-nohttp)) to avoid the problem described in [this blog post](https://medium.com/@jonathan.leitschuh/want-to-take-over-the-java-ecosystem-all-you-need-is-a-mitm-1fc329d898fb).\r\n\r\nI think the problem with HTTPS must be specific to your environment. It works fine on CI and on the local machines of everyone else that I'm aware of. Thanks for you efforts here, but we won't be able to make a switch from `https` to `http` so I'm going to close this pull request.",
    "clean_message": "Yes, using HTTP introduces the risk of a man-in-the-middle attack. We moved to HTTPS (and enforce it via NoHttp) to avoid the problem described in this blog post. I think the problem with HTTPS must be specific to your environment. It works fine on CI and on the local machines of everyone else that I'm aware of. Thanks for you efforts here, but we won't be able to make a switch from  to  so I'm going to close this pull request.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/20230#issuecomment-588390824",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Both Quasar and Akka rely on plain old threads eventually, so the concurrency models may be different but they base on the same building blocks. In http://docs.paralleluniverse.co/quasar/ is says: \n\n\"Using ThreadLocals in a fiber works as you\u2019d expect \u2013 the values are local to the fiber.\"\n\nBecause a fiber is nothing but a wrapped Thread at the end of the day. Every concurrency library out there is based on plain old threads and ThreadLocal cannot be \"tricked\" out of working, so there is nothing to worry about. As long as every code execution in java happens in the context of a java thread, ThreadLocals will work and this patch will work. \n",
    "clean_message": "Both Quasar and Akka rely on plain old threads eventually, so the concurrency models may be different but they base on the same building blocks. In  is says:  \"Using ThreadLocals in a fiber works as you\u2019d expect \u2013 the values are local to the fiber.\" Because a fiber is nothing but a wrapped Thread at the end of the day. Every concurrency library out there is based on plain old threads and ThreadLocal cannot be \"tricked\" out of working, so there is nothing to worry about. As long as every code execution in java happens in the context of a java thread, ThreadLocals will work and this patch will work. ",
    "message_url": "https://github.com/google/guava/pull/2112#issuecomment-259922973",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@joshiste Thanks for the PR. We discussed this again today and have decided that we'd prefer to tackle this by enhancing the existing code that looks at settings.xml to also honour the repositories that are configured there. Would you like to take a look at that in another PR?\n",
    "clean_message": "Thanks for the PR. We discussed this again today and have decided that we'd prefer to tackle this by enhancing the existing code that looks at settings.xml to also honour the repositories that are configured there. Would you like to take a look at that in another PR?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/2683#issuecomment-112836969",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@fschmager thank you for making your first contribution to Spring Boot. I've polished it in aa4dad1 ",
    "clean_message": "thank you for making your first contribution to Spring Boot. I've polished it in aa4dad1 ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/20223#issuecomment-594534508",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hi @mcculls -- extremely sorry for the delay in replying.  Life (and my actual job) got in the way.\r\n\r\nI still had some reservations about if this worked if the params or return types were package private, so I tested it out to see if my concerns had merit, and it turns out they do.  This [gist](https://gist.github.com/sameb/35226b7a375ab0c02e555efb49a66685) illustrates the problem.  I basically just copied FactoryProvider2Test.testGeneratedDefaultMethodsForwardCorrectly (and its associated classes) to a [subpackage \"subpkg\"](https://gist.github.com/sameb/d0344fae29a6e9695989fa8a37961528), and [commented out the fallback](https://gist.github.com/sameb/806cd0f634e423fb0e330aadeeedc9b8) to the java 8 (PRIVATE) behavior.  Note that if we don't move the test to another package, then nothing fails because the test is in the same package as the code trying to do the lookup, so everything is otherwise copacetic.\r\n\r\nThe test fails with the error message:\r\n```\r\n1) An exception was caught and reported. Message: Unable to access method: public default PackageTests$AbstractAssisted PackageTests$ConcreteAssistedWithOverride$Factory.create(CharSequence)\r\n  at PackageTests$2.configure(PackageTests.java:81)\r\n  [...]\r\nCaused by: IllegalAccessException: symbolic reference class is not accessible: interface PackageTests$ConcreteAssistedWithOverride$Factory, from PackageTests$ConcreteAssistedWithOverride$Factory/noaccess (unnamed module @175b9425)\r\n\tat java.base/MemberName.makeAccessException(MemberName.java:943)\r\n\tat java.base/MethodHandles$Lookup.checkSymbolicClass(MethodHandles.java:2054)\r\n\tat java.base/MethodHandles$Lookup.resolveOrFail(MethodHandles.java:2026)\r\n\tat java.base/MethodHandles$Lookup.findSpecial(MethodHandles.java:1395)\r\n\tat FactoryProvider2$SuperMethodLookup$2.superMethodHandle(FactoryProvider2.java:931)\r\n\tat FactoryProvider2$SuperMethodLookup$1.superMethodHandle(FactoryProvider2.java:920)\r\n\tat FactoryProvider2.superMethodHandle(FactoryProvider2.java:901)\r\n\t... 56 more\r\n```\r\n\r\nThe problem AFAICT is that neither UNREFLECT_SPECIAL nor FIND_SPECIAL will work when any of the params (or return type) isn't public, regardless of the method signature of the method itself (which as you say will always be public).\r\n\r\nAs-is the PR doesn't fail because it falls back to PRIVATE_LOOKUP using the reflection... but the fallback is global for the whole injector... so if some factory doesn't need it (b/c it only has public types) but a prior one did need it, then it will still use PRIVATE_LOOKUP.\r\n\r\nAs a whole, I don't really see the benefit in the complexity of the PR, since we're going to need PRIVATE_LOOKUP no matter what (since we need to support non-public types).  And worse: the PR adds some non-determinism in that the order of your factory installations will impact what kind of lookup it uses (b/c a prior one impacts a later one).\r\n\r\nIf there were a way to do this w/o the private lookup while also supporting non-public types, I'll happily merge it.  But as-is, it doesn't look like this does much to help?",
    "clean_message": "Hi  -- extremely sorry for the delay in replying.  Life (and my actual job) got in the way. I still had some reservations about if this worked if the params or return types were package private, so I tested it out to see if my concerns had merit, and it turns out they do.  This gist illustrates the problem.  I basically just copied FactoryProvider2Test.testGeneratedDefaultMethodsForwardCorrectly (and its associated classes) to a subpackage \"subpkg\", and commented out the fallback to the java 8 (PRIVATE) behavior.  Note that if we don't move the test to another package, then nothing fails because the test is in the same package as the code trying to do the lookup, so everything is otherwise copacetic. The test fails with the error message: The problem AFAICT is that neither UNREFLECT_SPECIAL nor FIND_SPECIAL will work when any of the params (or return type) isn't public, regardless of the method signature of the method itself (which as you say will always be public). As-is the PR doesn't fail because it falls back to PRIVATE_LOOKUP using the reflection... but the fallback is global for the whole injector... so if some factory doesn't need it (b/c it only has public types) but a prior one did need it, then it will still use PRIVATE_LOOKUP. As a whole, I don't really see the benefit in the complexity of the PR, since we're going to need PRIVATE_LOOKUP no matter what (since we need to support non-public types).  And worse: the PR adds some non-determinism in that the order of your factory installations will impact what kind of lookup it uses (b/c a prior one impacts a later one). If there were a way to do this w/o the private lookup while also supporting non-public types, I'll happily merge it.  But as-is, it doesn't look like this does much to help?",
    "message_url": "https://github.com/google/guice/pull/1448#issuecomment-772070023",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Any application that calls these methods and that has been compiled against a version of Gson before this change would fail when run with a version of Gson after the change. The reason is that the return type of a method is part of its signature at the JVM level, even though that is not true for the Java language.",
    "clean_message": "Any application that calls these methods and that has been compiled against a version of Gson before this change would fail when run with a version of Gson after the change. The reason is that the return type of a method is part of its signature at the JVM level, even though that is not true for the Java language.",
    "message_url": "https://github.com/google/gson/pull/2188#issuecomment-1233328827",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "That's good to hear. Please review #2633 and let me know if you have more ideas and then when we can start working on the actual features in a branch. I'll merge your PR there once I have a basic infra in place.\n",
    "clean_message": "That's good to hear. Please review #2633 and let me know if you have more ideas and then when we can start working on the actual features in a branch. I'll merge your PR there once I have a basic infra in place.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/2602#issuecomment-78232911",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> @kishorebanala and @apanicker-nflx, thanks for reviewing this PR.\r\n> \r\n> @kishorebanala, I liked your idea! Just to make sure, are you suggesting something like it was done with the elasticsearch modules, whether you can opt which one you're going to install based on the configuration or to port the implementations to the contribs module and leave just the interfaces on the core and server modules?\r\n> \r\n> I'll add the documentation once I get the changes done.\r\n\r\nPlease create a new module akin to the elasticsearch modules, so that users can choose to install this module if required.",
    "clean_message": "Please create a new module akin to the elasticsearch modules, so that users can choose to install this module if required.",
    "message_url": "https://github.com/Netflix/conductor/pull/1131#issuecomment-493631062",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@icbaker \r\nSorry, when I submitted this time, I used the company's computer and the mailbox was the company's email. This email could not receive the verification email from Google, so I was unable to signed the CLA. I changed the git email and resubmitted.",
    "clean_message": "Sorry, when I submitted this time, I used the company's computer and the mailbox was the company's email. This email could not receive the verification email from Google, so I was unable to signed the CLA. I changed the git email and resubmitted.",
    "message_url": "https://github.com/google/ExoPlayer/pull/7917#issuecomment-693131990",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@wilkinsona Ah, sorry. I didn't know that `isSampled()` is checked before `getTraceId()` or `getSpanId()`. Feel free to close this if that's the case.",
    "clean_message": "Ah, sorry. I didn't know that  is checked before  or . Feel free to close this if that's the case.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/32817#issuecomment-1285391452",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I've found an issue when the datasource that's auto closed being exposed as a bean means it's picked up by the datasource health auto indicator, which doesn't really like finding the pool closed.\r\nNot sure if the good move is to filter it out once it closes or to on the contrary support a closed datasource pool as \"healthy\" in that case.\r\nThe second sounds really contrived to me so I would think of the first as better ; opinions?",
    "clean_message": "I've found an issue when the datasource that's auto closed being exposed as a bean means it's picked up by the datasource health auto indicator, which doesn't really like finding the pool closed. Not sure if the good move is to filter it out once it closes or to on the contrary support a closed datasource pool as \"healthy\" in that case. The second sounds really contrived to me so I would think of the first as better ; opinions?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/18240#issuecomment-532193145",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> Thanks for sending us the PR!\r\n> \r\n> Since it's the first case we see this quirky behaviour, and the code in this PR fixes your use case. I will take a notice in case the same issue comes up in the future; but until then, I'd be hesitant merging this.\r\n\r\nNo problem. I've tried to take a generic approach, so it can be easily extended (hence the regex).\r\n",
    "clean_message": "No problem. I've tried to take a generic approach, so it can be easily extended (hence the regex).",
    "message_url": "https://github.com/google/ExoPlayer/pull/9353#issuecomment-909590879",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Btw. I'm having trouble to see the concourse builds at the moment (it redirects me to a blank page). Might be related to the build-pipeline rename, but I thought I mention it at least ;-)",
    "clean_message": "Btw. I'm having trouble to see the concourse builds at the moment (it redirects me to a blank page). Might be related to the build-pipeline rename, but I thought I mention it at least ;-)",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/18961#issuecomment-552851662",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "Sorry, this isn't something I see us wanting to add to Guava.",
    "clean_message": "Sorry, this isn't something I see us wanting to add to Guava.",
    "message_url": "https://github.com/google/guava/pull/3071#issuecomment-373122421",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "We've discussed a few things and we'd like a different output format. We'd like to list the caches with a name, potentially adding a reference to the cache manager when they are two caches with the same name. I don't like the idea of adding the penalty of the `CacheManager` reference where the vast majority of apps only have one and I don't like the idea of using a bean name there either.\r\n\r\nWe've also discussed that the `POST` operation should just drop the cache with given names, with the ability to further qualify in case of conflicts (but, IMO, that's a corner case that shouldn't happen).\r\n\r\nI am not sure yet how to structure the read operation so we need to give it a bit more thought. We will use this PR as the base for this work.",
    "clean_message": "We've discussed a few things and we'd like a different output format. We'd like to list the caches with a name, potentially adding a reference to the cache manager when they are two caches with the same name. I don't like the idea of adding the penalty of the  reference where the vast majority of apps only have one and I don't like the idea of using a bean name there either. We've also discussed that the  operation should just drop the cache with given names, with the ability to further qualify in case of conflicts (but, IMO, that's a corner case that shouldn't happen). I am not sure yet how to structure the read operation so we need to give it a bit more thought. We will use this PR as the base for this work.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/12216#issuecomment-382425541",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@wilkinsona where is the XSD? This is so disappointing.\n",
    "clean_message": "where is the XSD? This is so disappointing.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4647#issuecomment-161022247",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I resubmitted this.",
    "clean_message": "I resubmitted this.",
    "message_url": "https://github.com/google/ExoPlayer/pull/3851#issuecomment-366049812",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "yes, it will be nice if springboot supports messagepack soon",
    "clean_message": "yes, it will be nice if springboot supports messagepack soon",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4573#issuecomment-649123617",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Just did the process again. It didn't look like it actually was signed (Why would it give that message?)\n",
    "clean_message": "Just did the process again. It didn't look like it actually was signed (Why would it give that message?)",
    "message_url": "https://github.com/spring-projects/spring-security/pull/3905#issuecomment-225678157",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@portizb \r\nhi friends  \r\ni bought a new ip camera    tp link nc220   it is h.264 \r\nbut exo-player can't play stream \r\n\r\nthis is log cat :\r\n2019-05-21 16:33:55.883 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@d9f77c8[SampleChooserActivity]: ViewPostIme pointer 0\r\n2019-05-21 16:33:55.923 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@d9f77c8[SampleChooserActivity]: ViewPostIme pointer 1\r\n2019-05-21 16:33:55.926 13764-13764/com.google.android.exoplayer2.demo D/AbsListView: onTouchUp() mTouchMode : 0\r\n2019-05-21 16:33:56.075 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@d9f77c8[SampleChooserActivity]: MSG_WINDOW_FOCUS_CHANGED 0\r\n2019-05-21 16:33:56.606 13764-13783/com.google.android.exoplayer2.demo I/zygote: Do partial code cache collection, code=126KB, data=91KB\r\n2019-05-21 16:33:56.606 13764-13783/com.google.android.exoplayer2.demo I/zygote: After code cache collection, code=126KB, data=91KB\r\n2019-05-21 16:33:56.606 13764-13783/com.google.android.exoplayer2.demo I/zygote: Increasing code cache capacity to 512KB\r\n2019-05-21 16:33:56.805 13764-13764/com.google.android.exoplayer2.demo I/ExoPlayerImpl: Init 12872e9 [ExoPlayerLib/2.9.0] [j7xelte, SM-J710F, samsung, 27]\r\n2019-05-21 16:33:56.918 13764-13764/com.google.android.exoplayer2.demo D/EventLogger: state [0.04, 0.00, window=0, true, BUFFERING]\r\n2019-05-21 16:33:56.934 13764-14031/com.google.android.exoplayer2.demo V/Client: opening: elapsedRealtime=[69489246]\r\n2019-05-21 16:33:56.943 13764-13764/com.google.android.exoplayer2.demo D/InputTransport: Input channel constructed: fd=98\r\n2019-05-21 16:33:56.944 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@8c5829c[PlayerActivity]: setView = DecorView@a8c54a5[PlayerActivity] TM=true MM=false\r\n2019-05-21 16:33:56.947 13764-13764/com.google.android.exoplayer2.demo I/Choreographer: Skipped 51 frames!  The application may be doing too much work on its main thread.\r\n2019-05-21 16:33:56.964 13764-13764/com.google.android.exoplayer2.demo D/SurfaceView: onWindowVisibilityChanged(0) true c28807a of ViewRootImpl@8c5829c[PlayerActivity]\r\n2019-05-21 16:33:56.981 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@8c5829c[PlayerActivity]: dispatchAttachedToWindow\r\n2019-05-21 16:33:57.017 13764-13764/com.google.android.exoplayer2.demo V/Surface: sf_framedrop debug : 0x4f4c, game : false, logging : 0\r\n2019-05-21 16:33:57.020 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@8c5829c[PlayerActivity]: Relayout returned: old=[0,0][0,0] new=[0,0][720,1280] result=0x7 surface={valid=true 3485743104} changed=true\r\n2019-05-21 16:33:57.024 13764-13869/com.google.android.exoplayer2.demo D/mali_winsys: EGLint new_window_surface(egl_winsys_display *, void *, EGLSurface, EGLConfig, egl_winsys_surface **, egl_color_buffer_format *, EGLBoolean) returns 0x3000,  [720x1280]-format:1\r\n2019-05-21 16:33:57.024 13764-13869/com.google.android.exoplayer2.demo D/OpenGLRenderer: eglCreateWindowSurface = 0xd1073fa8, 0xcfc43808\r\n2019-05-21 16:33:57.046 13764-13764/com.google.android.exoplayer2.demo D/SurfaceView: BG show() Surface(name=Background for - SurfaceView - com.google.android.exoplayer2.demo/com.google.android.exoplayer2.demo.PlayerActivity@c28807a@0) android.view.SurfaceView{c28807a V.E...... ......ID 0,0-720,1232}\r\n2019-05-21 16:33:57.056 13764-13764/com.google.android.exoplayer2.demo V/Surface: sf_framedrop debug : 0x4f4c, game : false, logging : 0\r\n2019-05-21 16:33:57.057 13764-13764/com.google.android.exoplayer2.demo D/SurfaceView: surfaceCreated 1 #8 android.view.SurfaceView{c28807a V.E...... ......ID 0,0-720,1232}\r\n2019-05-21 16:33:57.058 13764-13764/com.google.android.exoplayer2.demo D/SurfaceView: surfaceChanged (720,1232) 1 #8 android.view.SurfaceView{c28807a V.E...... ......ID 0,0-720,1232}\r\n2019-05-21 16:33:57.059 13764-13764/com.google.android.exoplayer2.demo D/EventLogger: surfaceSizeChanged [0.18, 0.00, window=0, 720, 1232]\r\n2019-05-21 16:33:57.073 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@8c5829c[PlayerActivity]: Relayout returned: old=[0,0][720,1280] new=[0,0][720,1280] result=0x3 surface={valid=true 3485743104} changed=false\r\n2019-05-21 16:33:57.155 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@8c5829c[PlayerActivity]: MSG_RESIZED_REPORT: frame=Rect(0, 0 - 720, 1280) ci=Rect(0, 48 - 0, 0) vi=Rect(0, 48 - 0, 0) or=1\r\n2019-05-21 16:33:57.156 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@8c5829c[PlayerActivity]: MSG_WINDOW_FOCUS_CHANGED 1\r\n2019-05-21 16:33:57.171 13764-13764/com.google.android.exoplayer2.demo V/InputMethodManager: Starting input: tba=android.view.inputmethod.EditorInfo@cc0102b nm : com.google.android.exoplayer2.demo ic=null\r\n2019-05-21 16:33:57.171 13764-13764/com.google.android.exoplayer2.demo D/InputMethodManager: startInputInner - Id : 0\r\n2019-05-21 16:33:57.171 13764-13764/com.google.android.exoplayer2.demo I/InputMethodManager: startInputInner - mService.startInputOrWindowGainedFocus\r\n2019-05-21 16:33:57.176 13764-13764/com.google.android.exoplayer2.demo D/InputTransport: Input channel constructed: fd=100\r\n2019-05-21 16:33:57.176 13764-13764/com.google.android.exoplayer2.demo D/InputTransport: Input channel destroyed: fd=85\r\n2019-05-21 16:33:57.217 13764-13869/com.google.android.exoplayer2.demo D/OpenGLRenderer: eglDestroySurface = 0xd1072018, 0xd1cff800\r\n2019-05-21 16:33:57.230 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@d9f77c8[SampleChooserActivity]: Relayout returned: old=[0,0][720,1280] new=[0,0][720,1280] result=0x5 surface={valid=false 0} changed=true\r\n2019-05-21 16:33:57.605 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@d9f77c8[SampleChooserActivity]: Relayout returned: old=[0,0][720,1280] new=[0,0][720,1280] result=0x1 surface={valid=false 0} changed=false\r\n2019-05-21 16:33:57.709 13764-13783/com.google.android.exoplayer2.demo I/zygote: Compiler allocated 4MB to compile void android.view.ViewRootImpl.performTraversals()\r\n2019-05-21 16:33:58.111 13764-14036/com.google.android.exoplayer2.demo V/Sender: OPTIONS rtsp://admin:admin@192.168.1.103:554/h264_vga.sdp RTSP/1.0\r\n    CSeq: 1\r\n    User-Agent: ExoPlayerLib/2.9.0 (Media Player for Android)\r\n2019-05-21 16:33:58.122 13764-14035/com.google.android.exoplayer2.demo V/Receiver: RTSP/1.0 200 OK\r\n    CSeq: 1\r\n    Public: DESCRIBE OPTIONS SETUP PLAY PAUSE TEARDOWN GET_PARAMETER SET_PARAMETER\r\n2019-05-21 16:33:58.127 13764-14036/com.google.android.exoplayer2.demo V/Sender: DESCRIBE rtsp://admin:admin@192.168.1.103:554/h264_vga.sdp RTSP/1.0\r\n    CSeq: 2\r\n    User-Agent: ExoPlayerLib/2.9.0 (Media Player for Android)\r\n    Accept: application/sdp\r\n2019-05-21 16:33:58.145 13764-14035/com.google.android.exoplayer2.demo V/Receiver: RTSP/1.0 401 Unauthorized\r\n    CSeq: 2\r\n    Server: Streaming Server\r\n    WWW-Authenticate: Digest realm=\"TP-Link IP-Camera\", nonce=\"d248c8735a0323d7027027a84e09f25c00000938076d2d5d\"\r\n2019-05-21 16:33:58.174 13764-14036/com.google.android.exoplayer2.demo V/Sender: DESCRIBE rtsp://admin:admin@192.168.1.103:554/h264_vga.sdp RTSP/1.0\r\n    CSeq: 3\r\n    User-Agent: ExoPlayerLib/2.9.0 (Media Player for Android)\r\n    Accept: application/sdp\r\n    Authorization: Digest username=\"admin\", realm=\"TP-Link IP-Camera\", nonce=\"d248c8735a0323d7027027a84e09f25c00000938076d2d5d\", uri=\"rtsp://admin:admin@192.168.1.103:554/h264_vga.sdp\", response=\"e99c5bad8af73c23e9ff1df41649f8de\"\r\n2019-05-21 16:33:58.222 13764-14035/com.google.android.exoplayer2.demo V/Receiver: RTSP/1.0 200 OK\r\n    CSeq: 3\r\n    Server: NC220 1.0/1.0\r\n    Date: Fri, 08 Aug 2014 00:39:15 GMT\r\n    Content-Base: rtsp://192.168.1.103:554/h264_vga.sdp\r\n    Content-Type: application/sdp\r\n    Content-Length: 628\r\n    \r\n    v=0\r\n    o=- pmtm70rhg1fowxz 354fkzxi3yliwgm IN IP4 192.168.1.103:554/h264_vga.sdp\r\n    s=RTSP/RTP stream from NC220 1.0\r\n    i=NC220 1.0 1.0 Streaming Server\r\n    t=0 0\r\n    a=type:unicast\r\n    a=control:*\r\n    a=range:npt=0-\r\n    a=x-qt-text-nam:RTSP/RTP stream from NC220 1.0\r\n    a=x-qt-text-inf:h264_vga.sdp\r\n    m=video 0 RTP/AVP 96\r\n    c=IN IP4 0.0.0.0/0\r\n    a=rtpmap:96 h264/90000\r\n    a=control:rtsp://192.168.1.103:554/h264_vga.sdp/getvideo\r\n    a=fmtp:96 packetization-mode=1;profile-level-id=4d401f;sprop-parameter-sets=Z01AH5ZUBQHsgA==,aO44gA==;\r\n    m=audio 0 RTP/AVP 0\r\n    c=IN IP4 0.0.0.0/0\r\n    a=rtpmap:0 PCMU/16000\r\n    a=control:rtsp://192.168.1.103:554/h264_vga.sdp/getaudio\r\n\r\n",
    "clean_message": "hi friends i bought a new ip camera    tp link nc220   it is h.264  but exo-player can't play stream  this is log cat : 2019-05-21 16:33:55.883 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@d9f77c8[SampleChooserActivity]: ViewPostIme pointer 0 2019-05-21 16:33:55.923 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@d9f77c8[SampleChooserActivity]: ViewPostIme pointer 1 2019-05-21 16:33:55.926 13764-13764/com.google.android.exoplayer2.demo D/AbsListView: onTouchUp() mTouchMode : 0 2019-05-21 16:33:56.075 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@d9f77c8[SampleChooserActivity]: MSG_WINDOW_FOCUS_CHANGED 0 2019-05-21 16:33:56.606 13764-13783/com.google.android.exoplayer2.demo I/zygote: Do partial code cache collection, code=126KB, data=91KB 2019-05-21 16:33:56.606 13764-13783/com.google.android.exoplayer2.demo I/zygote: After code cache collection, code=126KB, data=91KB 2019-05-21 16:33:56.606 13764-13783/com.google.android.exoplayer2.demo I/zygote: Increasing code cache capacity to 512KB 2019-05-21 16:33:56.805 13764-13764/com.google.android.exoplayer2.demo I/ExoPlayerImpl: Init 12872e9 [ExoPlayerLib/2.9.0] [j7xelte, SM-J710F, samsung, 27] 2019-05-21 16:33:56.918 13764-13764/com.google.android.exoplayer2.demo D/EventLogger: state [0.04, 0.00, window=0, true, BUFFERING] 2019-05-21 16:33:56.934 13764-14031/com.google.android.exoplayer2.demo V/Client: opening: elapsedRealtime=[69489246] 2019-05-21 16:33:56.943 13764-13764/com.google.android.exoplayer2.demo D/InputTransport: Input channel constructed: fd=98 2019-05-21 16:33:56.944 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@8c5829c[PlayerActivity]: setView = DecorView@a8c54a5[PlayerActivity] TM=true MM=false 2019-05-21 16:33:56.947 13764-13764/com.google.android.exoplayer2.demo I/Choreographer: Skipped 51 frames!  The application may be doing too much work on its main thread. 2019-05-21 16:33:56.964 13764-13764/com.google.android.exoplayer2.demo D/SurfaceView: onWindowVisibilityChanged(0) true c28807a of ViewRootImpl@8c5829c[PlayerActivity] 2019-05-21 16:33:56.981 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@8c5829c[PlayerActivity]: dispatchAttachedToWindow 2019-05-21 16:33:57.017 13764-13764/com.google.android.exoplayer2.demo V/Surface: sf_framedrop debug : 0x4f4c, game : false, logging : 0 2019-05-21 16:33:57.020 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@8c5829c[PlayerActivity]: Relayout returned: old=[0,0][0,0] new=[0,0][720,1280] result=0x7 surface={valid=true 3485743104} changed=true 2019-05-21 16:33:57.024 13764-13869/com.google.android.exoplayer2.demo D/mali_winsys: EGLint new_window_surface(egl_winsys_display , void , EGLSurface, EGLConfig, egl_winsys_surface *, egl_color_buffer_format , EGLBoolean) returns 0x3000,  [720x1280]-format:1 2019-05-21 16:33:57.024 13764-13869/com.google.android.exoplayer2.demo D/OpenGLRenderer: eglCreateWindowSurface = 0xd1073fa8, 0xcfc43808 2019-05-21 16:33:57.046 13764-13764/com.google.android.exoplayer2.demo D/SurfaceView: BG show() Surface(name=Background for - SurfaceView - com.google.android.exoplayer2.demo/com.google.android.exoplayer2.demo.PlayerActivity@c28807a@0) android.view.SurfaceView{c28807a V.E...... ......ID 0,0-720,1232} 2019-05-21 16:33:57.056 13764-13764/com.google.android.exoplayer2.demo V/Surface: sf_framedrop debug : 0x4f4c, game : false, logging : 0 2019-05-21 16:33:57.057 13764-13764/com.google.android.exoplayer2.demo D/SurfaceView: surfaceCreated 1 #8 android.view.SurfaceView{c28807a V.E...... ......ID 0,0-720,1232} 2019-05-21 16:33:57.058 13764-13764/com.google.android.exoplayer2.demo D/SurfaceView: surfaceChanged (720,1232) 1 #8 android.view.SurfaceView{c28807a V.E...... ......ID 0,0-720,1232} 2019-05-21 16:33:57.059 13764-13764/com.google.android.exoplayer2.demo D/EventLogger: surfaceSizeChanged [0.18, 0.00, window=0, 720, 1232] 2019-05-21 16:33:57.073 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@8c5829c[PlayerActivity]: Relayout returned: old=[0,0][720,1280] new=[0,0][720,1280] result=0x3 surface={valid=true 3485743104} changed=false 2019-05-21 16:33:57.155 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@8c5829c[PlayerActivity]: MSG_RESIZED_REPORT: frame=Rect(0, 0 - 720, 1280) ci=Rect(0, 48 - 0, 0) vi=Rect(0, 48 - 0, 0) or=1 2019-05-21 16:33:57.156 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@8c5829c[PlayerActivity]: MSG_WINDOW_FOCUS_CHANGED 1 2019-05-21 16:33:57.171 13764-13764/com.google.android.exoplayer2.demo V/InputMethodManager: Starting input: tba=android.view.inputmethod.EditorInfo@cc0102b nm : com.google.android.exoplayer2.demo ic=null 2019-05-21 16:33:57.171 13764-13764/com.google.android.exoplayer2.demo D/InputMethodManager: startInputInner - Id : 0 2019-05-21 16:33:57.171 13764-13764/com.google.android.exoplayer2.demo I/InputMethodManager: startInputInner - mService.startInputOrWindowGainedFocus 2019-05-21 16:33:57.176 13764-13764/com.google.android.exoplayer2.demo D/InputTransport: Input channel constructed: fd=100 2019-05-21 16:33:57.176 13764-13764/com.google.android.exoplayer2.demo D/InputTransport: Input channel destroyed: fd=85 2019-05-21 16:33:57.217 13764-13869/com.google.android.exoplayer2.demo D/OpenGLRenderer: eglDestroySurface = 0xd1072018, 0xd1cff800 2019-05-21 16:33:57.230 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@d9f77c8[SampleChooserActivity]: Relayout returned: old=[0,0][720,1280] new=[0,0][720,1280] result=0x5 surface={valid=false 0} changed=true 2019-05-21 16:33:57.605 13764-13764/com.google.android.exoplayer2.demo D/ViewRootImpl@d9f77c8[SampleChooserActivity]: Relayout returned: old=[0,0][720,1280] new=[0,0][720,1280] result=0x1 surface={valid=false 0} changed=false 2019-05-21 16:33:57.709 13764-13783/com.google.android.exoplayer2.demo I/zygote: Compiler allocated 4MB to compile void android.view.ViewRootImpl.performTraversals() 2019-05-21 16:33:58.111 13764-14036/com.google.android.exoplayer2.demo V/Sender: OPTIONS rtsp://admin::554/h264_vga.sdp RTSP/1.0     CSeq: 1     User-Agent: ExoPlayerLib/2.9.0 (Media Player for Android) 2019-05-21 16:33:58.122 13764-14035/com.google.android.exoplayer2.demo V/Receiver: RTSP/1.0 200 OK     CSeq: 1     Public: DESCRIBE OPTIONS SETUP PLAY PAUSE TEARDOWN GET_PARAMETER SET_PARAMETER 2019-05-21 16:33:58.127 13764-14036/com.google.android.exoplayer2.demo V/Sender: DESCRIBE rtsp://admin::554/h264_vga.sdp RTSP/1.0     CSeq: 2     User-Agent: ExoPlayerLib/2.9.0 (Media Player for Android)     Accept: application/sdp 2019-05-21 16:33:58.145 13764-14035/com.google.android.exoplayer2.demo V/Receiver: RTSP/1.0 401 Unauthorized     CSeq: 2     Server: Streaming Server     WWW-Authenticate: Digest realm=\"TP-Link IP-Camera\", nonce=\"d248c8735a0323d7027027a84e09f25c00000938076d2d5d\" 2019-05-21 16:33:58.174 13764-14036/com.google.android.exoplayer2.demo V/Sender: DESCRIBE rtsp://admin::554/h264_vga.sdp RTSP/1.0     CSeq: 3     User-Agent: ExoPlayerLib/2.9.0 (Media Player for Android)     Accept: application/sdp     Authorization: Digest username=\"admin\", realm=\"TP-Link IP-Camera\", nonce=\"d248c8735a0323d7027027a84e09f25c00000938076d2d5d\", uri=\"rtsp://admin::554/h264_vga.sdp\", response=\"e99c5bad8af73c23e9ff1df41649f8de\" 2019-05-21 16:33:58.222 13764-14035/com.google.android.exoplayer2.demo V/Receiver: RTSP/1.0 200 OK     CSeq: 3     Server: NC220 1.0/1.0     Date: Fri, 08 Aug 2014 00:39:15 GMT     Content-Base: rtsp://192.168.1.103:554/h264_vga.sdp     Content-Type: application/sdp     Content-Length: 628 v=0 o=- pmtm70rhg1fowxz 354fkzxi3yliwgm IN IP4 192.168.1.103:554/h264_vga.sdp s=RTSP/RTP stream from NC220 1.0 i=NC220 1.0 1.0 Streaming Server t=0 0 a=type:unicast a=control:* a=range:npt=0- a=x-qt-text-nam:RTSP/RTP stream from NC220 1.0 a=x-qt-text-inf:h264_vga.sdp m=video 0 RTP/AVP 96 c=IN IP4 0.0.0.0/0 a=rtpmap:96 h264/90000 a=control:rtsp://192.168.1.103:554/h264_vga.sdp/getvideo a=fmtp:96 packetization-mode=1;profile-level-id=4d401f;sprop-parameter-sets=Z01AH5ZUBQHsgA==,aO44gA==; m=audio 0 RTP/AVP 0 c=IN IP4 0.0.0.0/0 a=rtpmap:0 PCMU/16000 a=control:rtsp://192.168.1.103:554/h264_vga.sdp/getaudio ",
    "message_url": "https://github.com/google/ExoPlayer/pull/3854#issuecomment-494373508",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hello we are using .. version 1.3.9 we are seeing similar error: it hides the true exception:\n\nCaused by: java.lang.Throwable: Calling Thread included as the last 'caused by' on the chain.\nat sun.misc.Unsafe.park(Native Method)\nat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)\nat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1033)\nat java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1326)\nat java.util.concurrent.CountDownLatch.await(CountDownLatch.java:282)\nat rx.operators.OperationToFuture$2.get(OperationToFuture.java:113)\nat com.netflix.hystrix.HystrixCommand$1.performBlockingGetWithTimeout(HystrixCommand.java:617)\nat com.netflix.hystrix.HystrixCommand$1.get(HystrixCommand.java:516)\nat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:425)\nat com.expedia.abacus.bucketing.client.rest.BucketingClient.callBucketingService(BucketingClient.java:40)\n",
    "clean_message": "Hello we are using .. version 1.3.9 we are seeing similar error: it hides the true exception: Caused by: java.lang.Throwable: Calling Thread included as the last 'caused by' on the chain. at sun.misc.Unsafe.park(Native Method) at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226) at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1033) at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1326) at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:282) at rx.operators.OperationToFuture$2.get(OperationToFuture.java:113) at com.netflix.hystrix.HystrixCommand$1.performBlockingGetWithTimeout(HystrixCommand.java:617) at com.netflix.hystrix.HystrixCommand$1.get(HystrixCommand.java:516) at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:425) at com.expedia.abacus.bucketing.client.rest.BucketingClient.callBucketingService(BucketingClient.java:40)",
    "message_url": "https://github.com/Netflix/Hystrix/pull/196#issuecomment-68751554",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "IMHO the problem is not the corrupt input file but the input validation. In any case I would never expect an application to throw a `NullPointerException`. I would consider that as a bug (or as bad practice). The pull request gracefully goes over a non-readable user detail. But of course a warning could be added in addition, there.\n",
    "clean_message": "IMHO the problem is not the corrupt input file but the input validation. In any case I would never expect an application to throw a . I would consider that as a bug (or as bad practice). The pull request gracefully goes over a non-readable user detail. But of course a warning could be added in addition, there.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/256#issuecomment-220771979",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks. Can you please squash and then please update the commit message to align with [the Spring Security conventions](https://github.com/spring-projects/spring-security/blob/master/CONTRIBUTING.md#format-commit-messages)? It should end with `Fixes: gh-6002`",
    "clean_message": "Thanks. Can you please squash and then please update the commit message to align with the Spring Security conventions? It should end with ",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6376#issuecomment-452884391",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@eleftherias Sorry, have not investigated further yet.",
    "clean_message": "Sorry, have not investigated further yet.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/10808#issuecomment-1044125289",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@snicoll I think there ia nothing you can change on your side. The spring boot defaults are ok. This happens when one actively uses [failover transport](http://activemq.apache.org/failover-transport-reference.html) without setting anything (just addresses). I can submit an issue for them. However, other vendors might be doing something like that as well.\r\n\r\nAlso keep in mind that if one does such configuration mistake the entire health endpoint is blocked. At first I didn't know why the endpoint was not working. I noticed that it blocks only because I was trying something with spring boot admin and they have a timeout on the request, which means that they report that the service is offline.\r\n\r\nI am open to other ideas about improving this as well. \r\n\r\nIn the end it is completely up to you whether you want to have something like this. The elasticsearch endpoint has something similar, although they support it in their API.",
    "clean_message": "I think there ia nothing you can change on your side. The spring boot defaults are ok. This happens when one actively uses failover transport without setting anything (just addresses). I can submit an issue for them. However, other vendors might be doing something like that as well. Also keep in mind that if one does such configuration mistake the entire health endpoint is blocked. At first I didn't know why the endpoint was not working. I noticed that it blocks only because I was trying something with spring boot admin and they have a timeout on the request, which means that they report that the service is offline. I am open to other ideas about improving this as well.  In the end it is completely up to you whether you want to have something like this. The elasticsearch endpoint has something similar, although they support it in their API.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10853#issuecomment-341003311",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "https://ci.spring.io/builds/79665\r\n\r\n> [INFO] Results:\r\n> [INFO] \r\n> [ERROR] Errors: \r\n> [ERROR]   ReactiveElasticsearchRepositoriesAutoConfigurationTests ? ExceptionInInitializer\r\n> [ERROR]   ReactiveRestClientAutoConfigurationTests ? ExceptionInInitializer\r\n> [INFO] \r\n> [ERROR] Tests run: 2185, Failures: 0, Errors: 2, Skipped: 11\r\n\r\nYou have to rebase against `upstream master` @wilkinsona has fixed this in #17092",
    "clean_message": "You have to rebase against   has fixed this in #17092",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/17091#issuecomment-500779418",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks, @izeye. Unfortunately, it is necessary. `kotlin-daemon-client` embeds an old version of `net.rubygrapefruit.platform` which is incompatible with the version that Gradle's generated API embeds. It isn't a problem in a TestKit-powered integration test where, I think, Gradle's class loader isolation keeps the two separate but is a problem in tests that use `ProjectBuilder` when `kotlin-daemon-client` appears on the classpath before Gradle's generated API jar.",
    "clean_message": "Thanks, . Unfortunately, it is necessary.  embeds an old version of  which is incompatible with the version that Gradle's generated API embeds. It isn't a problem in a TestKit-powered integration test where, I think, Gradle's class loader isolation keeps the two separate but is a problem in tests that use  when  appears on the classpath before Gradle's generated API jar.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/23173#issuecomment-686433165",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "(I think I have it working.)",
    "clean_message": "(I think I have it working.)",
    "message_url": "https://github.com/google/guava/pull/2687#issuecomment-268151259",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> The very obvious solution to the above is for Gson to see the target type of `Any?`, then _infer_ the destination type based on the JSON value, setting the answer values to `String`, `Int`, `Double` and `null` respectively.\r\n\r\nWhen you tell Gson to deserialize a Java `Object` / Kotlin `Any` and it finds a JSON number it deserializes it by default as `Double` regardless of the format of the number. I assume for historical reasons that could not be changed which is why this PR here was proposed to allow customizing the behavior.\r\n\r\nThe `ToNumberStrategy` allows you to implement the functionality you want. A very simple implementation which just checks if the number contains a `.` could look like this:\r\n```kotlin\r\nval gson = GsonBuilder()\r\n    .setObjectToNumberStrategy { reader ->\r\n        // Read the JSON number as string to inspect its format\r\n        val numberAsString = reader.nextString()\r\n\r\n        if (numberAsString.contains('.')) numberAsString.toDouble()\r\n            else numberAsString.toInt()\r\n    }\r\n    .create()\r\n```\r\nYou could also have a look at the implementation of Gson's `ToNumberPolicy.LONG_OR_DOUBLE` which implements the same concept except for `Long` and `Double`, and also rejects non-finite values and produces more helpful exception messages when parsing the number fails.",
    "clean_message": "When you tell Gson to deserialize a Java  / Kotlin  and it finds a JSON number it deserializes it by default as  regardless of the format of the number. I assume for historical reasons that could not be changed which is why this PR here was proposed to allow customizing the behavior. The  allows you to implement the functionality you want. A very simple implementation which just checks if the number contains a  could look like this: You could also have a look at the implementation of Gson's  which implements the same concept except for  and , and also rejects non-finite values and produces more helpful exception messages when parsing the number fails.",
    "message_url": "https://github.com/google/gson/pull/1290#issuecomment-1246092423",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@TwoUnderscorez that change works fine for me in Postgres.",
    "clean_message": "that change works fine for me in Postgres.",
    "message_url": "https://github.com/Netflix/conductor/pull/2075#issuecomment-853995222",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks! I found a few more so I tweaked the fix a little.",
    "clean_message": "Thanks! I found a few more so I tweaked the fix a little.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/8647#issuecomment-287186006",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks, @eleftherias! This is now merged into `master`.",
    "clean_message": "Thanks, ! This is now merged into .",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6914#issuecomment-497807711",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "sorry, wrong merge direction",
    "clean_message": "sorry, wrong merge direction",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/11195#issuecomment-347738434",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@grafjo thank you for making your first contribution to Spring Boot. I've [polished your contribution](https://github.com/spring-projects/spring-boot/commit/462442e7d24ab11a7c0a2f9b8c56257662b1ed12) to address code formatting and checkstyle violations for the most part. Please consider running the build locally next time as it would exhibit those issues and offer a way to reformat the code.",
    "clean_message": "thank you for making your first contribution to Spring Boot. I've polished your contribution to address code formatting and checkstyle violations for the most part. Please consider running the build locally next time as it would exhibit those issues and offer a way to reformat the code.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/19528#issuecomment-572030699",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thank you for your work on this pull request. We are looking into how we can starting merging pieces of this into ExoPlayer, but some CLA issues need to be fixed first:\r\n\r\n- @ened, @portizb, please could you give author consent for us to use the contribution by replying `@googlebot I consent.` here?\r\n- @tobigun, please could you [sign the CLA](https://cla.developers.google.com/)? (Or alternatively df3122c89aaa5b4353730576d5df3f0b7ad7e316 would need to be to be removed from the pull request.)\r\n\r\n@portizb Is it the case that https://github.com/portizb/ExoPlayer/tree/dev-v2-rtsp is the same as this pull request but implemented against the release branch rather than `dev-v2`? If you have any changes we should include that are on the fork but not present in this pull request, please could you add them to this pull request? Thanks!\r\n\r\n[Internal note: the CLA status can be checked at go/prinfo]",
    "clean_message": "Thank you for your work on this pull request. We are looking into how we can starting merging pieces of this into ExoPlayer, but some CLA issues need to be fixed first:  , , please could you give author consent for us to use the contribution by replying  here? , please could you sign the CLA? (Or alternatively df3122c89aaa5b4353730576d5df3f0b7ad7e316 would need to be to be removed from the pull request.)  Is it the case that  is the same as this pull request but implemented against the release branch rather than ? If you have any changes we should include that are on the fork but not present in this pull request, please could you add them to this pull request? Thanks! [Internal note: the CLA status can be checked at go/prinfo]",
    "message_url": "https://github.com/google/ExoPlayer/pull/3854#issuecomment-700555387",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I have been using jar files as an executable file. So this is not good practice in spring boot world, right? \n",
    "clean_message": "I have been using jar files as an executable file. So this is not good practice in spring boot world, right? ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/2245#issuecomment-68221664",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks very much for making your first contribution to Spring Boot, @youribonnaffe.",
    "clean_message": "Thanks very much for making your first contribution to Spring Boot, .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/31145#issuecomment-1140518524",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Merged. Thanks!\n",
    "clean_message": "Merged. Thanks!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/1652#issuecomment-58216970",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks again @dreis2211 !",
    "clean_message": "Thanks again  !",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/12495#issuecomment-373378035",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Reverted the change",
    "clean_message": "Reverted the change",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/16446#issuecomment-479996881",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Yeah - that was my idea as well because it's only temporary anyhow (until Gradle 7 is out). Already working on a follow-up PR. Unfortunately, I had stuff in my local Gradle caches still and hence they ran locally. Sorry for that.",
    "clean_message": "Yeah - that was my idea as well because it's only temporary anyhow (until Gradle 7 is out). Already working on a follow-up PR. Unfortunately, I had stuff in my local Gradle caches still and hence they ran locally. Sorry for that.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/25519#issuecomment-791622058",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I signed it!\n",
    "clean_message": "I signed it!",
    "message_url": "https://github.com/google/guava/pull/2422#issuecomment-197250253",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@mattnelson this is an update to your PR #821\n",
    "clean_message": "this is an update to your PR #821",
    "message_url": "https://github.com/Netflix/eureka/pull/832#issuecomment-242246164",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@jkschneider I've merged this and also [polished up](https://github.com/spring-projects/spring-boot/commit/22a6ee03ebe9326364c3c79318942dc0694189f3) `MetricsEndpoint` a little. Let me know if think I've broken anything.",
    "clean_message": "I've merged this and also polished up  a little. Let me know if think I've broken anything.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10535#issuecomment-335608060",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for the PR @bono007. We've discussed this request and implementing it has its quirks and compromises. We've investigated several options and none of them (including this one) are satisfactory.\r\n\r\nTaking a step back, we'd like to revisit `@AutoConfigureTestDabase` entirely, I'll comment in that issue shortly. Thanks again. ",
    "clean_message": "Thanks for the PR . We've discussed this request and implementing it has its quirks and compromises. We've investigated several options and none of them (including this one) are satisfactory. Taking a step back, we'd like to revisit  entirely, I'll comment in that issue shortly. Thanks again. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/19166#issuecomment-575279556",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@picaron The build after merge failed https://travis-ci.org/Netflix/conductor/builds/286218218 because QueueDAO interface has a new method setOffsetTime(), you will have to implement that in your MySQLQueueDAO class.",
    "clean_message": "The build after merge failed  because QueueDAO interface has a new method setOffsetTime(), you will have to implement that in your MySQLQueueDAO class.",
    "message_url": "https://github.com/Netflix/conductor/pull/315#issuecomment-335602089",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Oops, sorry. I didn't mean to push that. Thanks for noticing my mistake. I was experimenting to see if I could learn if it was possible to get doclint to fail the build when javadoc references a deprecated method. I've reinstated the changes.",
    "clean_message": "Oops, sorry. I didn't mean to push that. Thanks for noticing my mistake. I was experimenting to see if I could learn if it was possible to get doclint to fail the build when javadoc references a deprecated method. I've reinstated the changes.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/31713#issuecomment-1189444495",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for your time, I've worked on your suggestion @jzheaux.",
    "clean_message": "Thanks for your time, I've worked on your suggestion .",
    "message_url": "https://github.com/spring-projects/spring-security/pull/9813#issuecomment-848867940",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "google3 is marginally easier for us, but I'm fine with whatever you prefer.",
    "clean_message": "google3 is marginally easier for us, but I'm fine with whatever you prefer.",
    "message_url": "https://github.com/google/guava/pull/3649#issuecomment-540181401",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I'm aware of the check in the constructor, but since the lack of using a null safe equals causes problems with a code quality checking tool (which is arguably a bug in the tool, which was also reported) and changing the code doesn't hurt anything... anyways not surprised.",
    "clean_message": "I'm aware of the check in the constructor, but since the lack of using a null safe equals causes problems with a code quality checking tool (which is arguably a bug in the tool, which was also reported) and changing the code doesn't hurt anything... anyways not surprised.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/4166#issuecomment-283675780",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Oops. Where do the other commits come from? My intention was a pull request for this commit only fe33669. Any ideas on how to solve this?\n",
    "clean_message": "Oops. Where do the other commits come from? My intention was a pull request for this commit only fe33669. Any ideas on how to solve this?",
    "message_url": "https://github.com/spring-projects/spring-security/pull/82#issuecomment-76198437",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Please can you revert the indentation changes before we look at this? Specifically (but not limited to) C.java and TsExtractor.java. If you look at the diff (by clicking \"Files changed\"), it appears as though you've deleted and re-added huge parts of these files because you've changed them to have 4 character indentation rather than 2 character indentation. This makes it very hard to review what you've actually changed. ExoPlayer source code uses 2 character indentation (and 4 character indentation for line continuations only).\r\n\r\nThanks!",
    "clean_message": "Please can you revert the indentation changes before we look at this? Specifically (but not limited to) C.java and TsExtractor.java. If you look at the diff (by clicking \"Files changed\"), it appears as though you've deleted and re-added huge parts of these files because you've changed them to have 4 character indentation rather than 2 character indentation. This makes it very hard to review what you've actually changed. ExoPlayer source code uses 2 character indentation (and 4 character indentation for line continuations only). Thanks!",
    "message_url": "https://github.com/google/ExoPlayer/pull/2921#issuecomment-307927493",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "positive"
  },
  {
    "raw_message": "> We will soon push a fix along with tests for it. A commit reference will appear here.\r\n\r\nthanks,  does it mean my commit will be merged with your changes?",
    "clean_message": "thanks,  does it mean my commit will be merged with your changes?",
    "message_url": "https://github.com/google/ExoPlayer/pull/4145#issuecomment-382339583",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I don't know any other library that supports delayed operations, where you have to wait some time to perform assertion. Awaitility is standard in that area and allows you to spent min time in waiting. await().atMost(2, TimeUnit.SECONDS) causes that code is waiting at most 2 seconds, but checks condition every 100ms. So if it'll be true after 100ms tests is finished - you don't have to wait for example 600ms, as in case from this commit. It allows us to use higher timeouts which ensures that there will be no flickering tests in CI environment.\n",
    "clean_message": "I don't know any other library that supports delayed operations, where you have to wait some time to perform assertion. Awaitility is standard in that area and allows you to spent min time in waiting. await().atMost(2, TimeUnit.SECONDS) causes that code is waiting at most 2 seconds, but checks condition every 100ms. So if it'll be true after 100ms tests is finished - you don't have to wait for example 600ms, as in case from this commit. It allows us to use higher timeouts which ensures that there will be no flickering tests in CI environment.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/664#issuecomment-41094806",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This has been merged but copybara didn't integrate properly with github again :(",
    "clean_message": "This has been merged but copybara didn't integrate properly with github again :(",
    "message_url": "https://github.com/google/ExoPlayer/pull/8858#issuecomment-832533437",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This is my first time squashing commits of a branch, so I might have messed up somewhere along the way. Can you please help me make sure everything is correct?",
    "clean_message": "This is my first time squashing commits of a branch, so I might have messed up somewhere along the way. Can you please help me make sure everything is correct?",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7597#issuecomment-733223306",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "latest commit has proper formatting of PluginXmlParser.java classs.",
    "clean_message": "latest commit has proper formatting of PluginXmlParser.java classs.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/20190#issuecomment-586540324",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "The issue is quite simple: https://codehaus-cargo.atlassian.net/browse/CARGO-1336\nThe problem I face is that our proxies do virus checks and silently interrupt the download of an archive. Cargo before 1.4.16 does not recognize this and thinks everything is fine until it tries to extract an incomplete archive. This manifests in the exception above. My wildfly zip is only 11MB in size, but should be much larger...\n",
    "clean_message": "The issue is quite simple:  The problem I face is that our proxies do virus checks and silently interrupt the download of an archive. Cargo before 1.4.16 does not recognize this and thinks everything is fine until it tries to extract an incomplete archive. This manifests in the exception above. My wildfly zip is only 11MB in size, but should be much larger...",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4367#issuecomment-166605091",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Unfortunately, I don't think this is compatible with what callers currently expect.\n",
    "clean_message": "Unfortunately, I don't think this is compatible with what callers currently expect.",
    "message_url": "https://github.com/google/gson/pull/728#issuecomment-153943593",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> I have create a variable 'profiles' and configure gradle as following:\r\n> \r\n> ```groovy\r\n> bootRun {\r\n> \tif (project.hasProperty('profiles')) {\r\n> \t\tenvironment SPRING_PROFILES_ACTIVE: profiles\r\n> \t} else {\r\n> \t\tdef profiles = 'local'\r\n> \t\tenvironment SPRING_PROFILES_ACTIVE: profiles\r\n> \t}\r\n> }\r\n> ```\r\n> \r\n> Then at command line, give following arguments in order to pick up respective profiles\r\n> \r\n> ```\r\n> prompt> gradle :bootRun -Pprofiles=dev\r\n> ```\r\n> \r\n> In order to pickup local profile as default, no arguments required\r\n> \r\n> ```\r\n> prompt> gradle :bootRun\r\n> ```\r\n\r\nThe best way that a found was:\r\n`./gradlew bootRun --args='--spring.profiles.active=local'`\r\n\r\njust specificy what profile do you want and be happy. I believe thats its best way to do that.\r\n\r\nI hope that it works to another person.\r\n\r\nCheers!",
    "clean_message": "The best way that a found was: just specificy what profile do you want and be happy. I believe thats its best way to do that. I hope that it works to another person. Cheers!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/592#issuecomment-880263914",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "An example is Lightbend's Lagom Framework: it is based on Play! Framework, which uses Guice. It is stuck on Java 8 until these problems are sorted out. They have recently decided to jump directly to 11 (citing Cassandra's team same decision).\r\n\r\nWork on Guice for JDK 10/11 seems ongoing here:\r\nhttps://github.com/google/guice/pull/1169\r\n\r\nRelevant discussions:\r\nhttps://github.com/playframework/playframework/issues/8454\r\nhttps://github.com/lagom/lagom/issues/1276\r\nhttps://github.com/lagom/lagom/issues/1417\r\n\r\nThanks to all the contributors for their work!",
    "clean_message": "An example is Lightbend's Lagom Framework: it is based on Play! Framework, which uses Guice. It is stuck on Java 8 until these problems are sorted out. They have recently decided to jump directly to 11 (citing Cassandra's team same decision). Work on Guice for JDK 10/11 seems ongoing here: Relevant discussions: Thanks to all the contributors for their work!",
    "message_url": "https://github.com/google/guice/pull/1195#issuecomment-402057062",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for this! I think it would make more sense just to keep the aarch64 exclusion in the `android/` tree and remove it in the `guava/` tree. This is easier for people on the Guava team to do, so I'll look into it.",
    "clean_message": "Thanks for this! I think it would make more sense just to keep the aarch64 exclusion in the  tree and remove it in the  tree. This is easier for people on the Guava team to do, so I'll look into it.",
    "message_url": "https://github.com/google/guava/pull/5954#issuecomment-1072632714",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Speaking as a Governator owner, @dimo414 is correct in that this implementation does raise some larger questions. The behavior of this in combination with Modules.override for example is poorly defined. I'd definitely +1 for a solution to this issue, but this implementation by itself feels incomplete. ",
    "clean_message": "Speaking as a Governator owner,  is correct in that this implementation does raise some larger questions. The behavior of this in combination with Modules.override for example is poorly defined. I'd definitely +1 for a solution to this issue, but this implementation by itself feels incomplete. ",
    "message_url": "https://github.com/google/guice/pull/1127#issuecomment-330661104",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "When you have completed your changes, can you also squash your commits please?",
    "clean_message": "When you have completed your changes, can you also squash your commits please?",
    "message_url": "https://github.com/spring-projects/spring-security/pull/5037#issuecomment-368129575",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the PR @matthiasstock! This is now merged into master.",
    "clean_message": "Thanks for the PR ! This is now merged into master.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7755#issuecomment-570242071",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@bennettpeter I am actually busy doing that myself. It should be available in a few days.",
    "clean_message": "I am actually busy doing that myself. It should be available in a few days.",
    "message_url": "https://github.com/google/ExoPlayer/pull/7988#issuecomment-703797017",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks once again, @dreis2211.",
    "clean_message": "Thanks once again, .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/18648#issuecomment-543634275",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hey @elisherer & @heinrichcohn, thanks for picking up this long awaited feature.\r\n\r\nWhile documentation definitely helps, we could still run into a situation where setVariables is called enough number of times, knowingly or accidentally to become a large payload blob. This could in turn cause unforeseen issues in Persistence layer, for eg., wide rows in Cassandra, which we'll have limited control over.\r\n\r\nHow about checking the variables hashmap size in SetVariable's `execute` method, everytime this task is executed? I.e We shall limit max size to a configurable value defaulting to 256KB, and reject any updates to this hashmap over this limit by failing the task.",
    "clean_message": "Hey  & , thanks for picking up this long awaited feature. While documentation definitely helps, we could still run into a situation where setVariables is called enough number of times, knowingly or accidentally to become a large payload blob. This could in turn cause unforeseen issues in Persistence layer, for eg., wide rows in Cassandra, which we'll have limited control over. How about checking the variables hashmap size in SetVariable's  method, everytime this task is executed? I.e We shall limit max size to a configurable value defaulting to 256KB, and reject any updates to this hashmap over this limit by failing the task.",
    "message_url": "https://github.com/Netflix/conductor/pull/1835#issuecomment-680322493",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I missed an integration test. I'll look into that.",
    "clean_message": "I missed an integration test. I'll look into that.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/15735#issuecomment-455501857",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "MediaInfo will be adding support for recognizing Dolby Vision inside MKV files in their next release: https://github.com/MediaArea/MediaInfo/issues/478#issuecomment-677483293\r\n\r\nVery excited for this PR as it's the missing piece of the Dolby Vision playback puzzle! Thanks so much @willtrking!",
    "clean_message": "MediaInfo will be adding support for recognizing Dolby Vision inside MKV files in their next release:  Very excited for this PR as it's the missing piece of the Dolby Vision playback puzzle! Thanks so much !",
    "message_url": "https://github.com/google/ExoPlayer/pull/7667#issuecomment-678675081",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Oops. Didn't merge yesterday's PR. Let me do that and try again.",
    "clean_message": "Oops. Didn't merge yesterday's PR. Let me do that and try again.",
    "message_url": "https://github.com/google/dagger/pull/1712#issuecomment-572609887",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Error from my side sorry.\n",
    "clean_message": "Error from my side sorry.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5255#issuecomment-189114887",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Merged via 057587e",
    "clean_message": "Merged via 057587e",
    "message_url": "https://github.com/spring-projects/spring-security/pull/5729#issuecomment-418884501",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Belated thanks for the review!\r\n\r\nI'm working on this now. Do you like updates squashed?",
    "clean_message": "Belated thanks for the review! I'm working on this now. Do you like updates squashed?",
    "message_url": "https://github.com/google/dagger/pull/606#issuecomment-288585775",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "There is an experimental module in JUnit5 that [we haven't added at all in our dependency management](https://github.com/spring-projects/spring-boot/pull/10240#issuecomment-328890903) so if we want to be consistent we should either reject this or add the one of Junit5",
    "clean_message": "There is an experimental module in JUnit5 that we haven't added at all in our dependency management so if we want to be consistent we should either reject this or add the one of Junit5",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10239#issuecomment-330440361",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@dbyron-sf There is something strange happening. It doesn't let you sign the CLA twice, so that is an indicator that the signature hasn't been registered. I looked and I do not see a corporate signature from you nor do I see an individual signature.\r\n\r\n> I took a leap and re-submitted the corporate CLA. I ended up back at https://cla.pivotal.io/#sign-form. \r\n\r\nWere there any messages when you got to this point?\r\n\r\nNote that I'd expect you to try and sign the individual CLA unless you are \"representing a company wanting its employees to contribute\".",
    "clean_message": "-sf There is something strange happening. It doesn't let you sign the CLA twice, so that is an indicator that the signature hasn't been registered. I looked and I do not see a corporate signature from you nor do I see an individual signature. Were there any messages when you got to this point? Note that I'd expect you to try and sign the individual CLA unless you are \"representing a company wanting its employees to contribute\".",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/26311#issuecomment-833178870",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi. I merged this with the bitrate adjustments and a few other tweaks. You can view and check the final version [here](https://github.com/google/ExoPlayer/commit/c40d1c6620afa33134dc15195fe97ac800c95437). Please let us know if there are any issues, and thanks for your contribution!",
    "clean_message": "Hi. I merged this with the bitrate adjustments and a few other tweaks. You can view and check the final version here. Please let us know if there are any issues, and thanks for your contribution!",
    "message_url": "https://github.com/google/ExoPlayer/pull/8462#issuecomment-763076160",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks! I think Caliper support is pretty much best-effort at this stage but it's definitely better to have a more recent version.",
    "clean_message": "Thanks! I think Caliper support is pretty much best-effort at this stage but it's definitely better to have a more recent version.",
    "message_url": "https://github.com/google/gson/pull/2019#issuecomment-975782242",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@zhengoogle could you send the complete log with details of the RTSP messages?\r\nIt seems that the url is not well formed. An **rtsp://** schema is required and apparently it is not included in the url.",
    "clean_message": "could you send the complete log with details of the RTSP messages? It seems that the url is not well formed. An rtsp:// schema is required and apparently it is not included in the url.",
    "message_url": "https://github.com/google/ExoPlayer/pull/3854#issuecomment-377564419",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Checked this change on Eclipse 4.4 - have not observed any differences in how formatter works.\n",
    "clean_message": "Checked this change on Eclipse 4.4 - have not observed any differences in how formatter works.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3384#issuecomment-117696101",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This looks like a sensible approach to me. (I think @cgdecker is doing the actual review.)\r\n\r\nAside: It's a shame we can't use ImmutableMap here, of course, but c.g.common.math can't depend on c.g.common.collect without creating a circular dependency :-(.",
    "clean_message": "This looks like a sensible approach to me. (I think  is doing the actual review.) Aside: It's a shame we can't use ImmutableMap here, of course, but c.g.common.math can't depend on c.g.common.collect without creating a circular dependency :-(.",
    "message_url": "https://github.com/google/guava/pull/2989#issuecomment-343924819",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I'm with Andy on this one I'm afraid. We have a checkstyle rule to enforce the `this.` prefix so I think there's limited value in enforcing different local variable names. In fact, I often prefer the simpler names you get when you aren't forced to choose something different.",
    "clean_message": "I'm with Andy on this one I'm afraid. We have a checkstyle rule to enforce the  prefix so I think there's limited value in enforcing different local variable names. In fact, I often prefer the simpler names you get when you aren't forced to choose something different.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/11705#issuecomment-359220647",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@wilkinsona I indeed found a way to avoid the duplicated test execution. Hope that changes your mind about the PR :)",
    "clean_message": "I indeed found a way to avoid the duplicated test execution. Hope that changes your mind about the PR :)",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/17491#issuecomment-510676961",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Here we go : I committed all changes and sent pull request #14. I messed up again with git in squashing properly commits that's why pull request #12 was closed.\n\nI'm pretty happy with the results : it looks well designed and well integrated in Spring Security. I followed at best what we agreed upon and what I proposed.\n\nI did realize my first proposal has a bug as the isRememberMe() method was acting like the isAuthenticated() method.\n\nI added several unit tests and two integration tests you can call with : gradlew spring-security-samples-cassample:integrationTest.\n\nI'm looking forward to your feedback.\n",
    "clean_message": "Here we go : I committed all changes and sent pull request #14. I messed up again with git in squashing properly commits that's why pull request #12 was closed. I'm pretty happy with the results : it looks well designed and well integrated in Spring Security. I followed at best what we agreed upon and what I proposed. I did realize my first proposal has a bug as the isRememberMe() method was acting like the isAuthenticated() method. I added several unit tests and two integration tests you can call with : gradlew spring-security-samples-cassample:integrationTest. I'm looking forward to your feedback.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/11#issuecomment-6815277",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@aconstantin Thank you for making your first contribution to Spring Boot. This is now merged in `1.5.x` and `master`.",
    "clean_message": "Thank you for making your first contribution to Spring Boot. This is now merged in  and .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10256#issuecomment-328582586",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "You're correct. Parts of the library that are important to library developers may not match the interest level of application developers using the library. This seems to touch on a broader issue of log \"composition,\" i.e., the log intentions of application developers may not coincide with the application's dependencies in general. ",
    "clean_message": "You're correct. Parts of the library that are important to library developers may not match the interest level of application developers using the library. This seems to touch on a broader issue of log \"composition,\" i.e., the log intentions of application developers may not coincide with the application's dependencies in general. ",
    "message_url": "https://github.com/google/guava/pull/3713#issuecomment-561436047",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Sorry for the trouble, @Na3blis, and thanks for taking the time to make us aware of the problem caused. I've added [an entry](https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.1-Release-Notes#consistent-max-http-header-size-across-all-embedded-web-servers) to the release notes for 2.1 so that others hopefully have an easier time of it.",
    "clean_message": "Sorry for the trouble, , and thanks for taking the time to make us aware of the problem caused. I've added an entry to the release notes for 2.1 so that others hopefully have an easier time of it.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/14234#issuecomment-490982711",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@eddumelendez Check out https://github.com/philwebb/spring-boot/tree/pr/2214, that's the reworked version of this one.\n",
    "clean_message": "Check out , that's the reworked version of this one.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/2214#issuecomment-120548208",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "It appears this was opened in error. ",
    "clean_message": "It appears this was opened in error. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/25781#issuecomment-805964797",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I think you might need to rebase onto master and repush (--force) because there are conflicts with the message codes stuff now. Sorry.\n",
    "clean_message": "I think you might need to rebase onto master and repush (--force) because there are conflicts with the message codes stuff now. Sorry.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/755#issuecomment-42104166",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Merged to `master` and `5.2.x`",
    "clean_message": "Merged to  and ",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7744#issuecomment-575746935",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@Neustradamus - You can/should implement this in your own codebase. The code snippet @noamtamim provided above should help. We don't plan to merge this pull request for the reasons mentioned further up this thread.",
    "clean_message": " You can/should implement this in your own codebase. The code snippet  provided above should help. We don't plan to merge this pull request for the reasons mentioned further up this thread. ",
    "message_url": "https://github.com/google/ExoPlayer/pull/6347#issuecomment-824000780",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@anthonyvdotbe thank you for making your first contribution to Spring Boot.",
    "clean_message": "thank you for making your first contribution to Spring Boot.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/31276#issuecomment-1153878995",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@bitbier Awesome, it looks good. However, I just noticed you were trying to merge this into 1.12; We're actively working on 2.0 right now, and this should go to `dev` branch. Would you mind changing it to `dev` branch please. Let me know if you need any help in doing that.",
    "clean_message": "Awesome, it looks good. However, I just noticed you were trying to merge this into 1.12; We're actively working on 2.0 right now, and this should go to  branch. Would you mind changing it to  branch please. Let me know if you need any help in doing that.",
    "message_url": "https://github.com/Netflix/conductor/pull/803#issuecomment-431535429",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Released. Closing this pull request.\n",
    "clean_message": "Released. Closing this pull request.",
    "message_url": "https://github.com/google/dagger/pull/249#issuecomment-153818853",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@huytn12 is this something you are still interesting in contributing?",
    "clean_message": "is this something you are still interesting in contributing?",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6841#issuecomment-492363928",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@ojw28 OK, let me check more devices and let you know.\n\nBTW about the consensus,\nI think I can say that this might be a platform bug as you said,\nbut it might also be an ExoPlayer's bug.\nIt's the problem that there is no standard for vertical video.\nAs you know, we say 720P as when width is 720 px, not height commonly.\nBut it's not always correct when we say vertical video.\nI mean that we need more robust rules can be applied to vertical video if we say whether this is a platform's or exo's issue.\nConverting width & height is also a kind of this problem.\nI'm thinking It's... it's a little complicated... :(\n\nPlease let me know if you all arrive at a conclusion about this issue.\nThanks.\n",
    "clean_message": "OK, let me check more devices and let you know. BTW about the consensus, I think I can say that this might be a platform bug as you said, but it might also be an ExoPlayer's bug. It's the problem that there is no standard for vertical video. As you know, we say 720P as when width is 720 px, not height commonly. But it's not always correct when we say vertical video. I mean that we need more robust rules can be applied to vertical video if we say whether this is a platform's or exo's issue. Converting width & height is also a kind of this problem. I'm thinking It's... it's a little complicated... :( Please let me know if you all arrive at a conclusion about this issue. Thanks.",
    "message_url": "https://github.com/google/ExoPlayer/pull/1776#issuecomment-242616540",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thank you for such an in-depth explanation of your reasoning. While I still would have been confused and would likely have chosen the wrong version at first, you are right in your estimation that it would have been more logical to use `24.0` than `24.0-ga`. I therefore withdraw my initial rejection of this change.",
    "clean_message": "Thank you for such an in-depth explanation of your reasoning. While I still would have been confused and would likely have chosen the wrong version at first, you are right in your estimation that it would have been more logical to use  than . I therefore withdraw my initial rejection of this change.",
    "message_url": "https://github.com/google/guava/pull/2945#issuecomment-330691857",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I think we're currently stuck with it not really being possible to robustly track battery state at the application layer. I have an internal bug open about that, but no progress so far [Internal ref: b/156962128].",
    "clean_message": "I think we're currently stuck with it not really being possible to robustly track battery state at the application layer. I have an internal bug open about that, but no progress so far [Internal ref: b/156962128].",
    "message_url": "https://github.com/google/ExoPlayer/pull/7138#issuecomment-699118067",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@ojw28  Yes I updated the commit and did a force-push.   Sure, in the future I'll make new commits each time for reviews you are on.   Some people don't like lots of commits on a pull request branch, but I can see addressing review comments it is nice to see the diffs.\r\n\r\nI do like when people interactive rebase to a single change before the final merge, that makes a cleaner history.  But next time, I'll have you let me know when you are ready to merge then I can do that before the final merge.\r\n\r\nThanks for the review...  BTW, the change does speed up paused seeks on i-Frame only playlist a bit.  I've got some other things I'm working on for #8592 as well.\r\n\r\nOnce it is all a bit more baked I can add a track selector setting for iFrame only mode and add the scrub seek to the demo app.",
    "clean_message": "Yes I updated the commit and did a force-push.   Sure, in the future I'll make new commits each time for reviews you are on.   Some people don't like lots of commits on a pull request branch, but I can see addressing review comments it is nice to see the diffs. I do like when people interactive rebase to a single change before the final merge, that makes a cleaner history.  But next time, I'll have you let me know when you are ready to merge then I can do that before the final merge. Thanks for the review...  BTW, the change does speed up paused seeks on i-Frame only playlist a bit.  I've got some other things I'm working on for #8592 as well. Once it is all a bit more baked I can add a track selector setting for iFrame only mode and add the scrub seek to the demo app.",
    "message_url": "https://github.com/google/ExoPlayer/pull/9536#issuecomment-960115472",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Will do.\n",
    "clean_message": "Will do.",
    "message_url": "https://github.com/google/guice/pull/983#issuecomment-172284200",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@mattnelson thank you for the PR! Much appreciated. I'll take a look at this as soon as I can.\n",
    "clean_message": "thank you for the PR! Much appreciated. I'll take a look at this as soon as I can.",
    "message_url": "https://github.com/Netflix/eureka/pull/821#issuecomment-234133043",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the PR @ThomasVitale ! I went ahead and added a polish commit to get this merged. This is now in master.",
    "clean_message": "Thanks for the PR  ! I went ahead and added a polish commit to get this merged. This is now in master.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/8501#issuecomment-629389686",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thank you, @jonatan-ivanov.",
    "clean_message": "Thank you, -ivanov.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/32415#issuecomment-1277564955",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@philwebb @wilkinsona @bclozel this is waiting for three months now without feedback... :-(",
    "clean_message": "this is waiting for three months now without feedback... :-(",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/9930#issuecomment-338575745",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@snicoll I will work to get a small sample to you. ",
    "clean_message": "I will work to get a small sample to you. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/22994#issuecomment-676532413",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks @ch4mpy. Apologies, I haven't been able to review it thoroughly yet, as I'm still heads down. However, glancing at it, I wanted to mention one thing to think about. You may want to consider the `Converter` interface from spring-core. It's used fairly extensively throughout the framework already, and we'd probably want to prefer that over introducing new interfaces. Switching that over will get you a bit ahead on review feedback.\r\n\r\nI'll let you know when I have a bit more time to review.",
    "clean_message": "Thanks . Apologies, I haven't been able to review it thoroughly yet, as I'm still heads down. However, glancing at it, I wanted to mention one thing to think about. You may want to consider the  interface from spring-core. It's used fairly extensively throughout the framework already, and we'd probably want to prefer that over introducing new interfaces. Switching that over will get you a bit ahead on review feedback. I'll let you know when I have a bit more time to review.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/11665#issuecomment-1227783778",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Closing as alternate PR as been merged.",
    "clean_message": "Closing as alternate PR as been merged.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6367#issuecomment-478366716",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Since Arjen and I are writing a spring WS guide I'll definitely be able to offer feedback through a PR later on (probably no sooner than after this GA on the next version). \n\nSent from my iPhone\n\n> On Feb 28, 2014, at 6:42 AM, Marten Deinum notifications@github.com wrote:\n> \n> The sample has been added, including a short readme.\n> \n> I took the spring-boot-starter-web as starting point for this one, so I would expect everything to be parameterizable already. Or maybe I'm missing something, if so please clarify.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n",
    "clean_message": "Since Arjen and I are writing a spring WS guide I'll definitely be able to offer feedback through a PR later on (probably no sooner than after this GA on the next version).  Sent from my iPhone",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/412#issuecomment-36343342",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "Merged (and rebased) thanks.\n",
    "clean_message": "Merged (and rebased) thanks.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/76#issuecomment-25930075",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "OK, then I'll look at the CI problem",
    "clean_message": "OK, then I'll look at the CI problem",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/22885#issuecomment-671963232",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thank you!",
    "clean_message": "Thank you!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/8300#issuecomment-280059038",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the PR @iphayao Now that we support discovery from the issuer uri, it is the preferred mechanism for registering providers instead of adding lots of well known endpoints.",
    "clean_message": "Thanks for the PR  Now that we support discovery from the issuer uri, it is the preferred mechanism for registering providers instead of adding lots of well known endpoints.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7575#issuecomment-547952497",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hi wilkinsona,\nsorry, that was my fault!\n\nI tried to add a folder that did not exist.\nAs the error said, that the given folder was not a directory, I misunderstood the assert.\n\nI would like to suggest to add an additional assert _before_ the `folder.isDirectory()`check:\n`Assert.isTrue(folder.exists(), \"Folder does not exist\");`\n\nMaybe this additional check helps if someone mistyped the directory name, like me :)\n\nSorry for the inconvenience!\nShould I add an other pull request with this `folder.exists()`  assert?\n",
    "clean_message": "Hi wilkinsona, sorry, that was my fault! I tried to add a folder that did not exist. As the error said, that the given folder was not a directory, I misunderstood the assert. I would like to suggest to add an additional assert before the check: Maybe this additional check helps if someone mistyped the directory name, like me :) Sorry for the inconvenience! Should I add an other pull request with this   assert?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3918#issuecomment-138450068",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@ojw28 \r\nAs I wrote earlier, I've tested this implementation with a real live tv channel, and as it turned out, they're sending the images in \"full screen\" (with transparent area),\r\n\r\n```\r\n </metadata>\r\n    <styling />\r\n    <layout>\r\n      <region tts:extent=\"720px 576px\" tts:origin=\"0% 0%\" xml:id=\"Region\" />\r\n    </layout>\r\n  </head>\r\n  <body>\r\n    <div smpte:backgroundImage=\"#Subtitle_2208\" region=\"Region\" begin=\"03:14:28.829\" end=\"03:14:28.868\" />\r\n    <div smpte:backgroundImage=\"#Subtitle_2209\" region=\"Region\" begin=\"03:14:28.868\" end=\"03:14:30.021\" />\r\n```\r\nThis leads to a problem, because based on the logic that we discussed yesterday this \"full screen\" image will be pushed into a smaller box (50% width, 10% height) and the cues will be extremely small, impossible to read. If I manually set the cueSize and cueBitmapHeight to 1.0f for this particular TTML, then it is rendered \"correctly\", same way as on other players.\r\n\r\nDo you think we can add support for regions that are defined by pixels?\r\n\r\nOr can you think of any shortcut that could solve this edge case? One idea would be to parse the pixels also, and check the region size against common video resolutions (1920x1080, 1280x720, 720x576 etc), and assume fullscreen if so. Of course this would be checked only in case of image based cues.",
    "clean_message": "As I wrote earlier, I've tested this implementation with a real live tv channel, and as it turned out, they're sending the images in \"full screen\" (with transparent area), This leads to a problem, because based on the logic that we discussed yesterday this \"full screen\" image will be pushed into a smaller box (50% width, 10% height) and the cues will be extremely small, impossible to read. If I manually set the cueSize and cueBitmapHeight to 1.0f for this particular TTML, then it is rendered \"correctly\", same way as on other players. Do you think we can add support for regions that are defined by pixels? Or can you think of any shortcut that could solve this edge case? One idea would be to parse the pixels also, and check the region size against common video resolutions (1920x1080, 1280x720, 720x576 etc), and assume fullscreen if so. Of course this would be checked only in case of image based cues.",
    "message_url": "https://github.com/google/ExoPlayer/pull/5066#issuecomment-438167310",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the PR but we have a semi-automated process to upgrade dependencies so we don't accept such PRs for that reason.",
    "clean_message": "Thanks for the PR but we have a semi-automated process to upgrade dependencies so we don't accept such PRs for that reason.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/15734#issuecomment-455329773",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the PR, it was very helpful (especially the Tomcat stuff). In the end I've fixed this is a slightly different way (see b5679594826e7b609524bea1c4ac7806af62bd5a). Cheers!\n",
    "clean_message": "Thanks for the PR, it was very helpful (especially the Tomcat stuff). In the end I've fixed this is a slightly different way (see b5679594826e7b609524bea1c4ac7806af62bd5a). Cheers!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5502#issuecomment-214902024",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "It should have said `org.apache.ant:ant:1.10.3` but GitHub mangled it.",
    "clean_message": "It should have said  but GitHub mangled it.",
    "message_url": "https://github.com/google/guice/pull/1174#issuecomment-491358169",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Please, see an update in the PR about an `IntegrationEnvironmentPostProcessor`.\r\nI'm not fully sure that I understood an `OriginLookup` contract correctly.\r\nPlus it is not clear how to test with `EnvironmentPostProcessors` in the `ApplicationContextRunner`.\r\n\r\nThanks",
    "clean_message": "Please, see an update in the PR about an . I'm not fully sure that I understood an  contract correctly. Plus it is not clear how to test with  in the . Thanks",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/25377#issuecomment-792934594",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@ojw28 As you've probably seen already, I've now split up the PR. This PR is now dependant on #9421.\r\n\r\n> This change feels a bit more controversial to me, because I think this kind of stream property change should trigger the start of a new Period in a DASH manifest, and the inclusion of an EXT-X-DISCONTINUITY with a fresh EXT-X-MAP in an HLS media playlist. I suspect (but did not confirm for HLS) that ExoPlayer handles the pixel aspect ratio change correctly if the manifest level signalling is present.\r\n\r\nI did some tests before working on this PR and `EXT-X-DISCONTINUITY` does currently not suffice to make ExoPlayer notice the aspect ratio change. For Apple AVKit and VLC, a discontinuity is sufficient, but required to make the aspect ratio change get noticed. And FFmpeg/FFplay notices the aspect ratio changes even without discontinuities.\r\n\r\nRFC8216 [says about this](https://datatracker.ietf.org/doc/html/rfc8216#section-4.3.2.3):\r\n>  The EXT-X-DISCONTINUITY tag SHOULD be present if there is a change in\r\n   any of the following characteristics:\r\n> - encoding parameters\r\n> - encoding sequence\r\n\r\nSo at least to my understanding, a discontinuity is not strictly required in this case. And my opinion is that, if it doesn't cause any issues on the player side, why not make PAR changes just work out of the box, even without discontinuities?\r\n\r\nThis would at least make the stream creation easier. e.g. in my case, I had to write a patch (https://github.com/google/shaka-packager/pull/976) for shaka-packager to make it insert these discontinuities because Apples player requires them. But even then the switches are still not as smooth as with FFmpeg/FFplay (and thanks to this PR with ExoPlayer, too) because the segment cuts might not happen exactly where the aspect ratio change occurs. And fixing this will require even more effort and complexity on the stream-creation side.\r\n\r\nSo as you can see, I highly prefer how FFmpeg does it because it's way less of a burden to get it to work and I don't see a reason not to support this.",
    "clean_message": "As you've probably seen already, I've now split up the PR. This PR is now dependant on #9421. I did some tests before working on this PR and  does currently not suffice to make ExoPlayer notice the aspect ratio change. For Apple AVKit and VLC, a discontinuity is sufficient, but required to make the aspect ratio change get noticed. And FFmpeg/FFplay notices the aspect ratio changes even without discontinuities. RFC8216 says about this:    any of the following characteristics: So at least to my understanding, a discontinuity is not strictly required in this case. And my opinion is that, if it doesn't cause any issues on the player side, why not make PAR changes just work out of the box, even without discontinuities? This would at least make the stream creation easier. e.g. in my case, I had to write a patch () for shaka-packager to make it insert these discontinuities because Apples player requires them. But even then the switches are still not as smooth as with FFmpeg/FFplay (and thanks to this PR with ExoPlayer, too) because the segment cuts might not happen exactly where the aspect ratio change occurs. And fixing this will require even more effort and complexity on the stream-creation side. So as you can see, I highly prefer how FFmpeg does it because it's way less of a burden to get it to work and I don't see a reason not to support this.",
    "message_url": "https://github.com/google/ExoPlayer/pull/9318#issuecomment-918032525",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> Hope you like it! \ud83d\ude00\n\nI do :)\n",
    "clean_message": "I do :)",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7373#issuecomment-260451095",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks Sebastian, this should have been on the list  for quite a while already!",
    "clean_message": "Thanks Sebastian, this should have been on the list  for quite a while already!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7997#issuecomment-272815801",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I saw that gwtproject/gwt#9206 seems to be resolved.\n\nCould someone restart following builds, please?\n- https://travis-ci.org/google/guava/builds/86643322\n- https://travis-ci.org/google/guava/builds/86655829\n\nI'd like to avoid pushing commits just to trigger rebuild.\n",
    "clean_message": "I saw that gwtproject/gwt#9206 seems to be resolved. Could someone restart following builds, please?    I'd like to avoid pushing commits just to trigger rebuild.",
    "message_url": "https://github.com/google/guava/pull/2197#issuecomment-150305170",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I see this was also proposed as #25080. @stategen sorry that we couldn't merge your changes. Please don't spam the repository with duplicate pull requests.",
    "clean_message": "I see this was also proposed as #25080.  sorry that we couldn't merge your changes. Please don't spam the repository with duplicate pull requests.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/25082#issuecomment-771453791",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks very much, @vpavic.",
    "clean_message": "Thanks very much, .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/31267#issuecomment-1149787374",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@wilkinsona ok then i would apply the fix directly in the DataSize class at first and create a separate PR in the spring framework and leave the Converters untouched at the moment.\r\n\r\nSo from my perspective this PR could be closed then.",
    "clean_message": "ok then i would apply the fix directly in the DataSize class at first and create a separate PR in the spring framework and leave the Converters untouched at the moment. So from my perspective this PR could be closed then.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/31481#issuecomment-1161850887",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I will try to setup a scenario with wireshark next week to do a capture.\n\nEl vie., 3 may. 2019 17:28, Pablo Ortiz <notifications@github.com> escribi\u00f3:\n\n> @portizb <https://github.com/portizb>\n>\n> This is all that I have: if there is any way to get more logs let me know.\n> So far I am using:\n>\n> player!!.addListener(PlayerEventListener())\n> player!!.videoComponent!!.addVideoListener(VideoEventListener())\n> player!!.audioComponent!!.addAudioListener(AudioEventListener())\n>\n> 2019-05-03 16:39:20.834 15616-15616/xxxxxxxxxxxxxxx D/ViewRootImpl@ffbff7f[SelectionActivity]:\n> ViewPostIme pointer 0\n> 2019-05-03 16:39:20.937 15616-15616/xxxxxxxxxxxxxxx D/ViewRootImpl@ffbff7f[SelectionActivity]:\n> ViewPostIme pointer 1\n> 2019-05-03 16:39:20.970 15616-16211/xxxxxxxxxxxxxxx V/FA: Recording user\n> engagement, ms: 49540\n> 2019-05-03 16:39:20.972 15616-16211/xxxxxxxxxxxxxxx V/FA: Connecting to\n> remote service\n> 2019-05-03 16:39:21.030 15616-16211/xxxxxxxxxxxxxxx V/FA: Activity paused,\n> time: 85885997\n> 2019-05-03 16:39:21.040 15616-15616/xxxxxxxxxxxxxxx W/ActivityThread:\n> handleWindowVisibility: no activity for token android.os.BinderProxy@d61c986\n> 2019-05-03 16:39:21.041 15616-16211/xxxxxxxxxxxxxxx D/FA: Logging event\n> (FE): user_engagement(_e), Bundle[{firebase_event_origin(_o)=auto,\n> engagement_time_msec(_et)=49540,\n> firebase_screen_class(_sc)=SelectionActivity,\n> firebase_screen_id(_si)=7594982139117627347}]\n> 2019-05-03 16:39:21.066 15616-16211/xxxxxxxxxxxxxxx V/FA: Connection\n> attempt already in progress\n> 2019-05-03 16:39:21.088 15616-15616/xxxxxxxxxxxxxxx V/FA: onActivityCreated\n> 2019-05-03 16:39:21.175 15616-15616/xxxxxxxxxxxxxxx W/ndroid.anpr.de:\n> Accessing hidden method Landroid/graphics/FontFamily;->()V (light greylist,\n> reflection)\n> 2019-05-03 16:39:21.175 15616-15616/xxxxxxxxxxxxxxx W/ndroid.anpr.de:\n> Accessing hidden method\n> Landroid/graphics/FontFamily;->addFontFromAssetManager(Landroid/content/res/AssetManager;Ljava/lang/String;IZIII[Landroid/graphics/fonts/FontVariationAxis;)Z\n> (light greylist, reflection)\n> 2019-05-03 16:39:21.175 15616-15616/xxxxxxxxxxxxxxx W/ndroid.anpr.de:\n> Accessing hidden method\n> Landroid/graphics/FontFamily;->addFontFromBuffer(Ljava/nio/ByteBuffer;I[Landroid/graphics/fonts/FontVariationAxis;II)Z\n> (light greylist, reflection)\n> 2019-05-03 16:39:21.175 15616-15616/xxxxxxxxxxxxxxx W/ndroid.anpr.de:\n> Accessing hidden method Landroid/graphics/FontFamily;->freeze()Z (light\n> greylist, reflection)\n> 2019-05-03 16:39:21.175 15616-15616/xxxxxxxxxxxxxxx W/ndroid.anpr.de:\n> Accessing hidden method Landroid/graphics/FontFamily;->abortCreation()V\n> (light greylist, reflection)\n> 2019-05-03 16:39:21.175 15616-15616/xxxxxxxxxxxxxxx W/ndroid.anpr.de:\n> Accessing hidden method\n> Landroid/graphics/Typeface;->createFromFamiliesWithDefault([Landroid/graphics/FontFamily;Ljava/lang/String;II)Landroid/graphics/Typeface;\n> (light greylist, reflection)\n> 2019-05-03 16:39:21.460 15616-15616/xxxxxxxxxxxxxxx W/ndroid.anpr.de:\n> Accessing hidden method Landroid/media/AudioTrack;->getLatency()I (light\n> greylist, reflection)\n> 2019-05-03 16:39:21.467 15616-15616/xxxxxxxxxxxxxxx I/ExoPlayerImpl: Init\n> 9e172f6 [ExoPlayerLib/2.9.0] [crownlte, SM-N960F, samsung, 28]\n> 2019-05-03 16:39:21.485 15616-15616/xxxxxxxxxxxxxxx D/FragmentExoPlayer:\n> Player State: STATE_BUFFERING, playWhenReady:true\n> 2019-05-03 16:39:21.489 15616-16232/xxxxxxxxxxxxxxx V/Client: opening:\n> elapsedRealtime=[85886520]\n> 2019-05-03 16:39:21.490 15616-16232/xxxxxxxxxxxxxxx D/TcpOptimizer:\n> TcpOptimizer-ON\n> 2019-05-03 16:39:21.496 15616-16211/xxxxxxxxxxxxxxx D/FA: Logging event\n> (FE): screen_view(_vs), Bundle[{firebase_event_origin(_o)=auto,\n> firebase_previous_class(_pc)=SelectionActivity,\n> firebase_previous_id(_pi)=7594982139117627347,\n> firebase_screen_class(_sc)=CameraActivityRstpExo,\n> firebase_screen_id(_si)=7594982139117627348}]\n> 2019-05-03 16:39:21.512 15616-16211/xxxxxxxxxxxxxxx V/FA: Connection\n> attempt already in progress\n> 2019-05-03 16:39:21.512 15616-16211/xxxxxxxxxxxxxxx V/FA: Connection\n> attempt already in progress\n> 2019-05-03 16:39:21.513 15616-16211/xxxxxxxxxxxxxxx V/FA: Activity\n> resumed, time: 85886517\n> 2019-05-03 16:39:21.543 15616-15616/xxxxxxxxxxxxxxx W/System.err:\n> java.io.IOException: grpc failed\n> 2019-05-03 16:39:21.543 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.location.Geocoder.getFromLocation(Geocoder.java:136)\n> 2019-05-03 16:39:21.543 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> xxxxxxx.FragmentExoPlayer.requestLocationUptades(FragmentExoPlayer.kt:370)\n> 2019-05-03 16:39:21.543 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> xxxxxxx.FragmentExoPlayer.onResume(FragmentExoPlayer.kt:244)\n> 2019-05-03 16:39:21.543 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.support.v4.app.Fragment.performResume(Fragment.java:2498)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1501)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(FragmentManager.java:1784)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1852)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.support.v4.app.FragmentManagerImpl.dispatchStateChange(FragmentManager.java:3269)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.support.v4.app.FragmentManagerImpl.dispatchResume(FragmentManager.java:3241)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.support.v4.app.FragmentController.dispatchResume(FragmentController.java:223)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.support.v4.app.FragmentActivity.onResumeFragments(FragmentActivity.java:538)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.support.v4.app.FragmentActivity.onPostResume(FragmentActivity.java:527)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.support.v7.app.AppCompatActivity.onPostResume(AppCompatActivity.java:172)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.app.Activity.performResume(Activity.java:7582)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.app.ActivityThread.performResumeActivity(ActivityThread.java:3979)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.app.ActivityThread.handleResumeActivity(ActivityThread.java:4019)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.app.servertransaction.ResumeActivityItem.execute(ResumeActivityItem.java:51)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.app.servertransaction.TransactionExecutor.executeLifecycleState(TransactionExecutor.java:145)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:70)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.app.ActivityThread$H.handleMessage(ActivityThread.java:1926)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.os.Handler.dispatchMessage(Handler.java:106)\n> 2019-05-03 16:39:21.544 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.os.Looper.loop(Looper.java:214)\n> 2019-05-03 16:39:21.545 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> android.app.ActivityThread.main(ActivityThread.java:6981)\n> 2019-05-03 16:39:21.545 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> java.lang.reflect.Method.invoke(Native Method)\n> 2019-05-03 16:39:21.545 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\n> 2019-05-03 16:39:21.545 15616-15616/xxxxxxxxxxxxxxx W/System.err: at\n> com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1445)\n> 2019-05-03 16:39:21.571 15616-16240/xxxxxxxxxxxxxxx W/DynamiteModule:\n> Local module descriptor class for\n> com.google.android.gms.vision.dynamite.text not found.\n> 2019-05-03 16:39:21.575 15616-16240/xxxxxxxxxxxxxxx I/DynamiteModule:\n> Considering local module com.google.android.gms.vision.dynamite.text:0 and\n> remote module com.google.android.gms.vision.dynamite.text:0\n> 2019-05-03 16:39:21.575 15616-16240/xxxxxxxxxxxxxxx D/TextNativeHandle:\n> Cannot load feature, fall back to load whole module.\n> 2019-05-03 16:39:21.576 15616-16240/xxxxxxxxxxxxxxx W/DynamiteModule:\n> Local module descriptor class for com.google.android.gms.vision.dynamite\n> not found.\n> 2019-05-03 16:39:21.581 15616-16240/xxxxxxxxxxxxxxx W/ndroid.anpr.de:\n> Unsupported class loader\n> 2019-05-03 16:39:21.585 15616-16240/xxxxxxxxxxxxxxx W/ndroid.anpr.de:\n> Skipping duplicate class check due to unsupported classloader\n> 2019-05-03 16:39:21.587 15616-16240/xxxxxxxxxxxxxxx I/DynamiteModule:\n> Considering local module com.google.android.gms.vision.dynamite:0 and\n> remote module com.google.android.gms.vision.dynamite:2501\n> 2019-05-03 16:39:21.588 15616-16240/xxxxxxxxxxxxxxx I/DynamiteModule:\n> Selected remote version of com.google.android.gms.vision.dynamite, version\n> >= 2501\n> 2019-05-03 16:39:21.588 15616-16240/xxxxxxxxxxxxxxx V/DynamiteModule:\n> Dynamite loader version >= 2, using loadModule2NoCrashUtils\n> 2019-05-03 16:39:21.603 15616-16240/xxxxxxxxxxxxxxx W/ndroid.anpr.de:\n> Unsupported class loader\n> 2019-05-03 16:39:21.606 15616-16240/xxxxxxxxxxxxxxx W/ndroid.anpr.de:\n> Skipping duplicate class check due to unsupported classloader\n> 2019-05-03 16:39:21.662 15616-16240/xxxxxxxxxxxxxxx I/Vision: Loading\n> library libocr.so\n> 2019-05-03 16:39:21.666 15616-16240/xxxxxxxxxxxxxxx I/ndroid.anpr.de: The\n> ClassLoaderContext is a special shared library.\n> 2019-05-03 16:39:21.671 15616-16240/xxxxxxxxxxxxxxx I/ndroid.anpr.de: The\n> ClassLoaderContext is a special shared library.\n> 2019-05-03 16:39:21.682 15616-16240/xxxxxxxxxxxxxxx W/ndroid.anpr.de:\n> Accessing hidden method\n> Ldalvik/system/VMRuntime;->getRuntime()Ldalvik/system/VMRuntime; (light\n> greylist, reflection)\n> 2019-05-03 16:39:21.682 15616-16240/xxxxxxxxxxxxxxx W/ndroid.anpr.de:\n> Accessing hidden method Ldalvik/system/VMRuntime;->is64Bit()Z (light\n> greylist, reflection)\n> 2019-05-03 16:39:21.697 15616-15616/xxxxxxxxxxxxxxx W/ndroid.anpr.de:\n> Accessing hidden field Ljava/nio/Buffer;->address:J (light greylist,\n> reflection)\n> 2019-05-03 16:39:21.717 15616-15616/xxxxxxxxxxxxxxx D/InputTransport:\n> Input channel constructed: fd=137\n> 2019-05-03 16:39:21.717 15616-15616/xxxxxxxxxxxxxxx D/ViewRootImpl@bcdef1d[CameraActivityRstpExo]:\n> setView = DecorView@2f7d592[CameraActivityRstpExo] TM=true MM=false\n> 2019-05-03 16:39:21.723 15616-16240/xxxxxxxxxxxxxxx I/Vision: libocr.so\n> library load status: true\n> 2019-05-03 16:39:21.723 15616-15616/xxxxxxxxxxxxxxx\n> D/CustomNavigationDrawerFragment2: Vehicle Recognised List Updated\n> 2019-05-03 16:39:21.724 15616-16240/xxxxxxxxxxxxxxx I/Vision: Reading ocr\n> models from /data/user/0/com.google.android.gms/app_vision/ocr/data/models\n> 2019-05-03 16:39:21.725 15616-16240/xxxxxxxxxxxxxxx I/native:\n> jni_helper.cc:166 Loading model config\n> /data/user/0/com.google.android.gms/app_vision/ocr/data/models/rpn_lstm_engine_tfmini.bincfg\n> 2019-05-03 16:39:21.725 15616-16240/xxxxxxxxxxxxxxx E/native:\n> jni_helper.cc:170 GetContents failed:\n> /data/user/0/com.google.android.gms/app_vision/ocr/data/models/rpn_lstm_engine_tfmini.bincfg\n> 2019-05-03 16:39:21.725 15616-16240/xxxxxxxxxxxxxxx I/native:\n> jni_helper.cc:166 Loading model config\n> /data/user/0/com.google.android.gms/app_vision/ocr/data/models/semanticlift_engine_0.2.bincfg\n> 2019-05-03 16:39:21.725 15616-16240/xxxxxxxxxxxxxxx E/native:\n> jni_helper.cc:170 GetContents failed:\n> /data/user/0/com.google.android.gms/app_vision/ocr/data/models/semanticlift_engine_0.2.bincfg\n> 2019-05-03 16:39:21.725 15616-16240/xxxxxxxxxxxxxxx I/native:\n> jni_helper.cc:166 Loading model config\n> /data/user/0/com.google.android.gms/app_vision/ocr/data/models/tfmini_lstm_engine_latin_0.2.bincfg\n> 2019-05-03 16:39:21.725 15616-16240/xxxxxxxxxxxxxxx I/native: timer.cc:71\n> PhotoOcrEngine::Init (detector): 0.11 ms (elapsed)\n> 2019-05-03 16:39:21.727 15616-16244/xxxxxxxxxxxxxxx I/native: timer.cc:71\n> BeamSearch::Init (mutator): 0.871 ms (elapsed)\n> 2019-05-03 16:39:21.727 15616-16240/xxxxxxxxxxxxxxx I/native: timer.cc:71\n> PhotoOcrEngine::Init (recognizer): 1.37 ms (elapsed)\n> 2019-05-03 16:39:21.727 15616-16240/xxxxxxxxxxxxxxx I/native: timer.cc:71\n> void ocr::photo::PhotoOcrEngine::Init(): 1.721 ms (elapsed)\n> 2019-05-03 16:39:21.739 15616-15616/xxxxxxxxxxxxxxx I/Choreographer:\n> Skipped 42 frames! The application may be doing too much work on its main\n> thread.\n> 2019-05-03 16:39:21.761 15616-15616/xxxxxxxxxxxxxxx D/ViewRootImpl@bcdef1d[CameraActivityRstpExo]:\n> dispatchAttachedToWindow\n> 2019-05-03 16:39:21.779 15616-15616/xxxxxxxxxxxxxxx W/ndroid.anpr.de:\n> Accessing hidden method\n> Landroid/graphics/drawable/DrawableContainer;->getOpticalInsets()Landroid/graphics/Insets;\n> (light greylist, reflection)\n> 2019-05-03 16:39:21.808 15616-15616/xxxxxxxxxxxxxxx D/ViewRootImpl@bcdef1d[CameraActivityRstpExo]:\n> Relayout returned: old=[0,0][2220,1080] new=[0,0][2220,1080] result=0x7\n> surface={valid=true 3908495360} changed=true\n> 2019-05-03 16:39:21.816 15616-15918/xxxxxxxxxxxxxxx D/mali_winsys: EGLint\n> new_window_surface(egl_winsys_display *, void *, EGLSurface, EGLConfig,\n> egl_winsys_surface **, EGLBoolean) returns 0x3000\n> 2019-05-03 16:39:21.816 15616-15918/xxxxxxxxxxxxxxx D/OpenGLRenderer:\n> eglCreateWindowSurface = 0xeb506ec0, 0xe8f6e808\n> 2019-05-03 16:39:21.860 15616-15616/xxxxxxxxxxxxxxx D/ViewRootImpl@ffbff7f[SelectionActivity]:\n> MSG_WINDOW_FOCUS_CHANGED 0 1\n> 2019-05-03 16:39:21.860 15616-15616/xxxxxxxxxxxxxxx D/InputMethodManager:\n> prepareNavigationBarInfo() DecorView@15eab4c[SelectionActivity]\n> 2019-05-03 16:39:21.860 15616-15616/xxxxxxxxxxxxxxx D/InputMethodManager:\n> getNavigationBarColor() -855310\n> 2019-05-03 16:39:21.862 15616-15918/xxxxxxxxxxxxxxx I/OpenGLRenderer:\n> Davey! duration=831ms; Flags=1, IntendedVsync=79491299755980,\n> Vsync=79491999755952, OldestInputEvent=9223372036854775807,\n> NewestInputEvent=0, HandleInputStart=79492008515681,\n> AnimationStart=79492008643643, PerformTraversalsStart=79492009902066,\n> DrawStart=79492127077643, SyncQueued=79492128277912,\n> SyncStart=79492128348066, IssueDrawCommandsStart=79492128418720,\n> SwapBuffers=79492129478720, FrameCompleted=79492130910566,\n> DequeueBufferDuration=185000, QueueBufferDuration=242000,\n> 2019-05-03 16:39:21.878 15616-15616/xxxxxxxxxxxxxxx D/FragmentExoPlayer:\n> Player VideoListener onSurfaceSizeChanged width: 2094, height: 891\n> 2019-05-03 16:39:21.925 15616-15616/xxxxxxxxxxxxxxx D/ViewRootImpl@bcdef1d[CameraActivityRstpExo]:\n> MSG_WINDOW_FOCUS_CHANGED 1 1\n> 2019-05-03 16:39:21.926 15616-15616/xxxxxxxxxxxxxxx D/InputMethodManager:\n> prepareNavigationBarInfo() DecorView@2f7d592[CameraActivityRstpExo]\n> 2019-05-03 16:39:21.926 15616-15616/xxxxxxxxxxxxxxx D/InputMethodManager:\n> getNavigationBarColor() -855310\n> 2019-05-03 16:39:21.928 15616-15616/xxxxxxxxxxxxxxx D/InputMethodManager:\n> prepareNavigationBarInfo() DecorView@2f7d592[CameraActivityRstpExo]\n> 2019-05-03 16:39:21.928 15616-15616/xxxxxxxxxxxxxxx D/InputMethodManager:\n> getNavigationBarColor() -855310\n> 2019-05-03 16:39:21.928 15616-15616/xxxxxxxxxxxxxxx V/InputMethodManager:\n> Starting input: tba=xxxxxxxxxxxxxxx ic=null mNaviBarColor -855310\n> mIsGetNaviBarColorSuccess true , NavVisible : true , NavTrans : false\n> 2019-05-03 16:39:21.928 15616-15616/xxxxxxxxxxxxxxx D/InputMethodManager:\n> startInputInner - Id : 0\n> 2019-05-03 16:39:21.929 15616-15616/xxxxxxxxxxxxxxx I/InputMethodManager:\n> startInputInner - mService.startInputOrWindowGainedFocus\n> 2019-05-03 16:39:21.930 15616-15616/xxxxxxxxxxxxxxx D/InputTransport:\n> Input channel constructed: fd=139\n> 2019-05-03 16:39:21.930 15616-15616/xxxxxxxxxxxxxxx D/InputTransport:\n> Input channel destroyed: fd=104\n> 2019-05-03 16:39:21.949 15616-15616/xxxxxxxxxxxxxxx D/ViewRootImpl@bcdef1d[CameraActivityRstpExo]:\n> MSG_RESIZED_REPORT: frame=Rect(0, 0 - 2220, 1080) ci=Rect(0, 63 - 126, 0)\n> vi=Rect(0, 63 - 126, 0) or=2\n> 2019-05-03 16:39:21.950 15616-16211/xxxxxxxxxxxxxxx D/FA: Connected to\n> remote service\n> 2019-05-03 16:39:21.951 15616-16211/xxxxxxxxxxxxxxx V/FA: Processing\n> queued up service tasks: 4\n> 2019-05-03 16:39:21.958 15616-15918/xxxxxxxxxxxxxxx W/libEGL:\n> EGLNativeWindowType 0xe9a52008 disconnect failed\n> 2019-05-03 16:39:21.958 15616-15918/xxxxxxxxxxxxxxx D/OpenGLRenderer:\n> eglDestroySurface = 0xeb506740, 0xe9a52000\n> 2019-05-03 16:39:21.965 15616-15616/xxxxxxxxxxxxxxx D/ViewRootImpl@ffbff7f[SelectionActivity]:\n> Relayout returned: old=[0,0][1080,2220] new=[0,0][1080,2220] result=0x5\n> surface={valid=false 0} changed=true\n> 2019-05-03 16:39:21.981 15616-15616/xxxxxxxxxxxxxxx D/ViewRootImpl@ffbff7f[SelectionActivity]:\n> Surface release. android.view.WindowManagerGlobal.setStoppedState:669\n> android.app.Activity.performStop:7646\n> android.app.ActivityThread.callActivityOnStop:4352\n> android.app.ActivityThread.performStopActivityInner:4330\n> android.app.ActivityThread.handleStopActivity:4405\n> android.app.servertransaction.StopActivityItem.execute:41\n> android.app.servertransaction.TransactionExecutor.executeLifecycleState:145\n> android.app.servertransaction.TransactionExecutor.execute:70\n> 2019-05-03 16:39:26.980 15616-16211/xxxxxxxxxxxxxxx V/FA: Inactivity,\n> disconnecting from the service\n>\n> @jllarraz <https://github.com/jllarraz> I need the logcat for the RTSP\n> messages but if you only provide me a logcat of your device (without the\n> RTSP log) I can not help you.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/google/ExoPlayer/pull/3854#issuecomment-489157480>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABFQ57ZUB6OPKD43UVF35R3PTRR4PANCNFSM4EQ53FYA>\n> .\n>\n",
    "clean_message": "I will try to setup a scenario with wireshark next week to do a capture. El vie., 3 may. 2019 17:28, Pablo Ortiz <",
    "message_url": "https://github.com/google/ExoPlayer/pull/3854#issuecomment-489158434",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@holy12345 thank you for making your first contribution to Spring Boot. I've merged your contribution with a [polish commit](https://github.com/spring-projects/spring-boot/commit/f2ca2533d51281f4c27da8231e8ab036e8f88310). I've also updated `WebMvcTags` as discussed in this issue in [a separate commit](https://github.com/spring-projects/spring-boot/commit/a85e27c7cd391d4cbe1297857a8b4cbd0000cc69).",
    "clean_message": "thank you for making your first contribution to Spring Boot. I've merged your contribution with a polish commit. I've also updated  as discussed in this issue in a separate commit.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/15130#issuecomment-443735727",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I don't yet understand why these unit tests failed on the build server. \n",
    "clean_message": "I don't yet understand why these unit tests failed on the build server. ",
    "message_url": "https://github.com/Netflix/Hystrix/pull/256#issuecomment-42205073",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "> I'm maintainer of influxdb-client-java\r\n\r\nI am aware of that. I didn't understand what you mean by \"we will select correct path\".\r\n\r\n> I think that your implementation is fine (https://github.com/snicoll/spring-boot/tree/influx-client-java), just a preferred way for authentication is by token\r\n\r\nThank you for reviewing. Let's move this conversation on #25891. I know that token is preferred with v2 but that would introduce a v2 specific property and I am not sure yet we want to do that. I've flagged the issue for team meeting so that we can discuss our options.\r\n",
    "clean_message": "I am aware of that. I didn't understand what you mean by \"we will select correct path\". Thank you for reviewing. Let's move this conversation on #25891. I know that token is preferred with v2 but that would introduce a v2 specific property and I am not sure yet we want to do that. I've flagged the issue for team meeting so that we can discuss our options.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/25319#issuecomment-814147903",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Adding a line to the settings.gradle will get it compile into the build, but we still need to program the app to use okhttp instead default one. There is no magic (like reflection) to pick up the okhttp.\n",
    "clean_message": "Adding a line to the settings.gradle will get it compile into the build, but we still need to program the app to use okhttp instead default one. There is no magic (like reflection) to pick up the okhttp.",
    "message_url": "https://github.com/google/ExoPlayer/pull/735#issuecomment-152408839",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@wilkinsona I figured it out - it was our old friend slf4j; excluding that from the test dependency solved it.\n\nProduced some weird failures, though; which is what threw me and made me think it was something worse...\n\n```\nFailed tests: \n  FreeMarkerAutoConfigurationTests.nonExistentTemplateLocation \nExpected: (a string containing \"Cannot find template location\")\n     but: a string containing \"Cannot find template location\" was \"\"\n...\n```\n",
    "clean_message": "I figured it out - it was our old friend slf4j; excluding that from the test dependency solved it. Produced some weird failures, though; which is what threw me and made me think it was something worse...",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5516#issuecomment-203591165",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "lgtm \n",
    "clean_message": "lgtm ",
    "message_url": "https://github.com/Netflix/eureka/pull/790#issuecomment-218316573",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi, \r\nthanks for sharing the view and proposing to implement a codec/renderer specific messaging and a setCodecParameters() as opposed to reusing the exisiting setPlaybackParameters().\r\n\r\nHow different would the suggested setCodecParametes() be from the existing sendRendererMessage():\r\n``` java\r\n private void sendVolumeToRenderers() {\r\n    float scaledVolume = volume * audioFocusManager.getVolumeMultiplier();\r\n    sendRendererMessage(TRACK_TYPE_AUDIO, MSG_SET_VOLUME, scaledVolume);\r\n  }\r\n```\r\nI understand that the MSG_SET_CODEC_PARAMETERS  would have to bundle multiple controls , say multiple TLV fields , one of them being the AC4_DIALOG_ENHANCEMENT, others the AAC_DRC parameters and so on and that the message parser would have to dispatch the TLVs to the actual codec.setParameter function as in the ConfigureAC4() from my commit : \r\n\r\n```java\r\npublic void ConfigureAC4(int dialogEnhancementGain) {\r\n\r\n      if (audioCodecInfo != null && audioCodecInfo.name.contains(\"ac4\")) {\r\n        Bundle bundle = new Bundle(1);\r\n        bundle.putInt(\"vendor.dolby.dialog-enhancement-gain.value\", dialogEnhancementGain);\r\n\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {\r\n          super.getCodec().setParameters(bundle);\r\n        }\r\n      }\r\n  }\r\n```\r\n\r\nIs my understanding correct ? or did you target a larger refactoring that would replace AAC_DRC_PARAMETERs with codec agnostic DRC parameters and my AC4_DIALOG_ENHANCEMENT gain with a codec agnostic dialog enhancement gain without knowing whether the underlying codec will actually apply it or ignore it ? ",
    "clean_message": "Hi,  thanks for sharing the view and proposing to implement a codec/renderer specific messaging and a setCodecParameters() as opposed to reusing the exisiting setPlaybackParameters(). How different would the suggested setCodecParametes() be from the existing sendRendererMessage(): I understand that the MSG_SET_CODEC_PARAMETERS  would have to bundle multiple controls , say multiple TLV fields , one of them being the AC4_DIALOG_ENHANCEMENT, others the AAC_DRC parameters and so on and that the message parser would have to dispatch the TLVs to the actual codec.setParameter function as in the ConfigureAC4() from my commit :  Is my understanding correct ? or did you target a larger refactoring that would replace AAC_DRC_PARAMETERs with codec agnostic DRC parameters and my AC4_DIALOG_ENHANCEMENT gain with a codec agnostic dialog enhancement gain without knowing whether the underlying codec will actually apply it or ignore it ? ",
    "message_url": "https://github.com/google/ExoPlayer/pull/10134#issuecomment-1098080223",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks @qct, this is now merged with a [polish commit](https://github.com/spring-projects/spring-boot/commit/8771b34c159c85f5eb2b480dc3e0176a6de5398b)",
    "clean_message": "Thanks , this is now merged with a polish commit",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/14234#issuecomment-418301341",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I just copied from start.spring.io. If you want to change it there as well, fine by me. I don't think you are missing anything.",
    "clean_message": "I just copied from start.spring.io. If you want to change it there as well, fine by me. I don't think you are missing anything.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/17736#issuecomment-516778922",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Unfortunately, I think it is. Trivial changes are really just one-liners, typo corrections, etc\n",
    "clean_message": "Unfortunately, I think it is. Trivial changes are really just one-liners, typo corrections, etc",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/1652#issuecomment-57626679",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks, updated the commit message and posted a response to the Issue :)\n",
    "clean_message": "Thanks, updated the commit message and posted a response to the Issue :)",
    "message_url": "https://github.com/google/guava/pull/2164#issuecomment-141764032",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hey @bharadwajrembar, are you still planning to work on this feature? We still feel this would be an important addition to ES modules.",
    "clean_message": "Hey , are you still planning to work on this feature? We still feel this would be an important addition to ES modules.",
    "message_url": "https://github.com/Netflix/conductor/pull/1209#issuecomment-617463942",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Rebased to `master` and adopted this PR to the changes from #6142.\n",
    "clean_message": "Rebased to  and adopted this PR to the changes from #6142.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5855#issuecomment-228727400",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the speedy update @rastadrian! This is now merged into master.",
    "clean_message": "Thanks for the speedy update ! This is now merged into master.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7557#issuecomment-553318885",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> the bug was these classes were not implementing MessageSourceAware as they should, fixing the bug is juts to implement it\r\n\r\nGood points. It's quite common in Spring Security to test that setters have non-null guards. For example, you can see this in `JdbcDaoImplTests#setMessageSourceWhenNullThenThrowsException`. I believe this PR should at least test that the setters check for `null`.\r\n\r\nAdditionally, I was thinking that tests would confirm that the `MessageSource` used by the class is the one that the setter provided. But, after trying it out myself on `SubjectDnX509PrincipalExtractorTests`, it seems to create a test that heavily overlaps other tests. Also, this kind of test isn't done anywhere else in the repo, so maybe we can leave those out.\r\n\r\nCan you add tests that confirm that the setters check for null?",
    "clean_message": "Good points. It's quite common in Spring Security to test that setters have non-null guards. For example, you can see this in . I believe this PR should at least test that the setters check for . Additionally, I was thinking that tests would confirm that the  used by the class is the one that the setter provided. But, after trying it out myself on , it seems to create a test that heavily overlaps other tests. Also, this kind of test isn't done anywhere else in the repo, so maybe we can leave those out. Can you add tests that confirm that the setters check for null?",
    "message_url": "https://github.com/spring-projects/spring-security/pull/9151#issuecomment-719765148",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@jzheaux I made a mistake and the PR was closed. So I reopened at #12503 ",
    "clean_message": "I made a mistake and the PR was closed. So I reopened at #12503 ",
    "message_url": "https://github.com/spring-projects/spring-security/pull/12449#issuecomment-1374421484",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "yeah : it's the wrong place, sorry !\n",
    "clean_message": "yeah : it's the wrong place, sorry !",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5808#issuecomment-215052225",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I've edited the contact info.",
    "clean_message": "I've edited the contact info.",
    "message_url": "https://github.com/google/dagger/pull/858#issuecomment-325098444",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Me too :(",
    "clean_message": "Me too :(",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7786#issuecomment-269653509",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "LGTM\n",
    "clean_message": "LGTM",
    "message_url": "https://github.com/google/gson/pull/772#issuecomment-172565086",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@mbhave Could you please take a look at the test cases added by me, and help me understand what I am doing wrong in that. Thanks",
    "clean_message": "Could you please take a look at the test cases added by me, and help me understand what I am doing wrong in that. Thanks",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/21630#issuecomment-647479289",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@dependabot squash and merge",
    "clean_message": "squash and merge",
    "message_url": "https://github.com/Netflix/conductor/pull/2846#issuecomment-1067337454",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Guava is a mature, low-level, general-purpose library. Because of its maturity, much of it is quite stable. It looks like your prototype took that to mean that all logging statements should be at `FINEST`, but I'm not sure how well your interesting theory tying logging levels to code stability applies.\r\n\r\nI wonder whether your research is intended to apply more to application/service code than to general-purpose library code.",
    "clean_message": "Guava is a mature, low-level, general-purpose library. Because of its maturity, much of it is quite stable. It looks like your prototype took that to mean that all logging statements should be at , but I'm not sure how well your interesting theory tying logging levels to code stability applies. I wonder whether your research is intended to apply more to application/service code than to general-purpose library code.",
    "message_url": "https://github.com/google/guava/pull/3435#issuecomment-480320723",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hey @sullis, could you please take a look at this when you get a chance?",
    "clean_message": "Hey , could you please take a look at this when you get a chance?",
    "message_url": "https://github.com/Netflix/zuul/pull/1473#issuecomment-1437611446",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Disclaimer: The following is not an official statement; I am not a member of this project.\r\n\r\n---\r\n\r\nThis only affects [Java Serialization](https://docs.oracle.com/en/java/javase/17/docs/specs/serialization/index.html), if neither your code nor your dependencies are not using it, then you are not affected by this.\r\n\r\nI was not the one who filed / requested the CVE or the Snyk vulnerability entry and was not even aware of its existence until I saw your comment. I created this pull request as preventive action, but _not_ because I was aware of any specific existing exploit, nor have I investigated whether a denial of service attack is really possible. The description of this pull request was meant as hypothetical worst case consequence of the current code. (Though arguably I did not make that clear enough.)\r\n\r\nHowever, to put this into perspective: Java Serialization is in general dangerous and should be avoided by applications. It is rather likely that other libraries have not paid close attention to sanitization during deserialization, and that even the JDK classes might be vulnerable by chaining multiple objects with recursive references together, allowing to cause a denial of service in some situations. But unless you (or your dependencies) use Java Serialization such serializable classes without proper prevention of denial of service attacks is not a big issue (remote code execution vulnerabilities caused by serializable classes is of course a different topic).\r\n\r\nTherefore, in my personal opinion the current CVSS score of 7.3 with claimed high impact on availability and integrity is exaggerated. Similarly the \"Details\" section of the [Snyk vulnerability entry](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLECODEGSON-1730327) seems to contain a generic Java Serialization vulnerabilities text, without being specific to the situation of Gson. To my knowledge the old Gson code could for example not directly have been exploited for a remote code execution attack. (It could however be the case that Snyk has private knowledge about a possible exploit.)\r\n\r\n---\r\n\r\n@eamonnmcmanus, would be good if you could comment on this, and maybe provide an official statement here. Might also be worth to [contact Snyk](https://support.snyk.io/hc/en-us/requests/new) to clarify the situation and to find out how they determined the CVSS score.",
    "clean_message": "Disclaimer: The following is not an official statement; I am not a member of this project.  This only affects Java Serialization, if neither your code nor your dependencies are not using it, then you are not affected by this. I was not the one who filed / requested the CVE or the Snyk vulnerability entry and was not even aware of its existence until I saw your comment. I created this pull request as preventive action, but not because I was aware of any specific existing exploit, nor have I investigated whether a denial of service attack is really possible. The description of this pull request was meant as hypothetical worst case consequence of the current code. (Though arguably I did not make that clear enough.) However, to put this into perspective: Java Serialization is in general dangerous and should be avoided by applications. It is rather likely that other libraries have not paid close attention to sanitization during deserialization, and that even the JDK classes might be vulnerable by chaining multiple objects with recursive references together, allowing to cause a denial of service in some situations. But unless you (or your dependencies) use Java Serialization such serializable classes without proper prevention of denial of service attacks is not a big issue (remote code execution vulnerabilities caused by serializable classes is of course a different topic). Therefore, in my personal opinion the current CVSS score of 7.3 with claimed high impact on availability and integrity is exaggerated. Similarly the \"Details\" section of the Snyk vulnerability entry seems to contain a generic Java Serialization vulnerabilities text, without being specific to the situation of Gson. To my knowledge the old Gson code could for example not directly have been exploited for a remote code execution attack. (It could however be the case that Snyk has private knowledge about a possible exploit.)  , would be good if you could comment on this, and maybe provide an official statement here. Might also be worth to contact Snyk to clarify the situation and to find out how they determined the CVSS score.",
    "message_url": "https://github.com/google/gson/pull/1991#issuecomment-1121629844",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks @OleksiiBondar. I've squashed your commits into [one commit](https://github.com/spring-projects/spring-boot/commit/b52dddf784a0b6296d19149737c9385709f6d127).",
    "clean_message": "Thanks . I've squashed your commits into one commit.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/15586#issuecomment-450691786",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@lltx good catch and thank you for making your first contribution to Spring Boot.",
    "clean_message": "good catch and thank you for making your first contribution to Spring Boot.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/21906#issuecomment-643935560",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Right, got it. Thanks!",
    "clean_message": "Right, got it. Thanks!",
    "message_url": "https://github.com/google/ExoPlayer/pull/2372#issuecomment-282025041",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks @chrisgray \n",
    "clean_message": "Thanks  ",
    "message_url": "https://github.com/Netflix/Hystrix/pull/240#issuecomment-40445792",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks, merged. If we want to align what we do in the annotation processor, looking for the `Collection` and `Map` type is what we should do. Those methods are a bit too permissive with regards to what we actually bind. I've polished that and changed the name of the test to make the intent clearer.",
    "clean_message": "Thanks, merged. If we want to align what we do in the annotation processor, looking for the  and  type is what we should do. Those methods are a bit too permissive with regards to what we actually bind. I've polished that and changed the name of the test to make the intent clearer.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/9052#issuecomment-303334424",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> Please resolve conflicts.\r\n\r\nDone :)",
    "clean_message": "Done :)",
    "message_url": "https://github.com/Netflix/conductor/pull/2296#issuecomment-862582514",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I'm looking at this pr. I'll have some comments tomorrow. Sorry about the delay!",
    "clean_message": "I'm looking at this pr. I'll have some comments tomorrow. Sorry about the delay!",
    "message_url": "https://github.com/google/dagger/pull/670#issuecomment-295948257",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks very much for the PR @bendiscz. One of the reasons we've got away with this for so long is that `CompositeMeterRegistryAutoConfiguration` just happens to be alphabetically before the configurations that use it.\r\n\r\nUnfortunately, despite my best efforts, I couldn't find an easy way to test the fix. Each test I tried ended up causing a order cycle. I'm pretty confident with the fix, so we'll have to just run with it.",
    "clean_message": "Thanks very much for the PR . One of the reasons we've got away with this for so long is that  just happens to be alphabetically before the configurations that use it. Unfortunately, despite my best efforts, I couldn't find an easy way to test the fix. Each test I tried ended up causing a order cycle. I'm pretty confident with the fix, so we'll have to just run with it.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/21134#issuecomment-675162716",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Fair enough. Thanks for coming back to me, @snicoll ",
    "clean_message": "Fair enough. Thanks for coming back to me,  ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/14221#issuecomment-417067686",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hm, I think there are slightly bigger problems here, because \"line\" and \"position\" can both have an optional alignment suffix.\n",
    "clean_message": "Hm, I think there are slightly bigger problems here, because \"line\" and \"position\" can both have an optional alignment suffix.",
    "message_url": "https://github.com/google/ExoPlayer/pull/786#issuecomment-140056089",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "hehe, interesting. Thanks!\n",
    "clean_message": "hehe, interesting. Thanks!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/2320#issuecomment-69393530",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This was merged in https://github.com/google/ExoPlayer/commit/e58ffc06827073710586c14ef80403eb0a910ed4 but our tooling didn't correctly link it back to this PR, so I'm closing it manually.",
    "clean_message": "This was merged in  but our tooling didn't correctly link it back to this PR, so I'm closing it manually.",
    "message_url": "https://github.com/google/ExoPlayer/pull/9893#issuecomment-1060598576",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": ":) Thanks for the PR.\n\nIf you want to fix the typo in the commit message, you can amend the commit and then force push to your `docs-spelling` branch.\n",
    "clean_message": ":) Thanks for the PR. If you want to fix the typo in the commit message, you can amend the commit and then force push to your  branch.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/1510#issuecomment-54604942",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Needs more work.\n",
    "clean_message": "Needs more work.",
    "message_url": "https://github.com/google/ExoPlayer/pull/1250#issuecomment-182775438",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I do not understand what this is for. The refresh rate is of the display, not of the content.",
    "clean_message": "I do not understand what this is for. The refresh rate is of the display, not of the content.",
    "message_url": "https://github.com/google/ExoPlayer/pull/3345#issuecomment-336141922",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Yeah, but the [`put` to the `ci-docker-branch`](https://github.com/spring-projects/spring-boot/blob/4dad56a4911d0b0a50f86335db9311ab0e371edf/ci/pipeline.yml#L235) happens no matter what the `detect-docker-updates.sh` does. That's the reason we do [this](https://github.com/spring-projects/spring-boot/blob/4dad56a4911d0b0a50f86335db9311ab0e371edf/ci/scripts/detect-docker-updates.sh#L8-L11) so that if there is an existing PR, the branch remains unchanged.",
    "clean_message": "Yeah, but the  to the  happens no matter what the  does. That's the reason we do this so that if there is an existing PR, the branch remains unchanged.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/20793#issuecomment-607442568",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I've updated the PR, `management.getPort() != null` part is useless after equality check.\n",
    "clean_message": "I've updated the PR,  part is useless after equality check.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4502#issuecomment-156859450",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thank you, @dreis2211.",
    "clean_message": "Thank you, .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/17471#issuecomment-509913259",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@PanchumarthiAbhinav, you don't have to open a new pull request when you notice an issue with your existing one, you can just update the existing one. For example the CLA check will notice automatically when you sign the CLA.\r\n\r\nAlso, regarding the \"Fixes ...\" text, I meant the pull request description, not the title. You can edit the description by clicking the ![icon screenshot](https://user-images.githubusercontent.com/11685886/228361351-a4e6ec18-66bb-4442-b49e-a68fde7ee2d9.png) icon at the top right corner of your pull request.\r\n",
    "clean_message": ", you don't have to open a new pull request when you notice an issue with your existing one, you can just update the existing one. For example the CLA check will notice automatically when you sign the CLA. Also, regarding the \"Fixes ...\" text, I meant the pull request description, not the title. You can edit the description by clicking the  icon at the top right corner of your pull request.",
    "message_url": "https://github.com/google/gson/pull/2361#issuecomment-1487564367",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Need https://github.com/spring-projects/spring-session/issues/488 and https://github.com/spring-projects/spring-session/issues/489\n",
    "clean_message": "Need  and ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5158#issuecomment-211306496",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Merged via ac93f10",
    "clean_message": "Merged via ac93f10",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6658#issuecomment-476948628",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks @kazuki43zoo, I understand your use-case but I think a little bit of pain here is probably better for most Spring Boot applications. Since you have the `EmbeddedServletContainerCustomizer` option I'll close this one.\n\nThanks anyway for the PR!\n",
    "clean_message": "Thanks , I understand your use-case but I think a little bit of pain here is probably better for most Spring Boot applications. Since you have the  option I'll close this one. Thanks anyway for the PR!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5497#issuecomment-202564338",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks. I've manually picked most of these in 9159c87bf9f073810ac3da9a85292a9253d09985.",
    "clean_message": "Thanks. I've manually picked most of these in 9159c87bf9f073810ac3da9a85292a9253d09985.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5994#issuecomment-271595431",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Closing and re-opening to trigger a new build.",
    "clean_message": "Closing and re-opening to trigger a new build.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/12209#issuecomment-368250990",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@b95505017, thanks for this OkHttp version. @talklittle can you share how you set this up to get caching working with mp4s? Are you working with partial responses at all?\n",
    "clean_message": ", thanks for this OkHttp version.  can you share how you set this up to get caching working with mp4s? Are you working with partial responses at all?",
    "message_url": "https://github.com/google/ExoPlayer/pull/735#issuecomment-145068770",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "You can test out these changes using `2.4.7.BUILD-SNAPSHOT` or `3.0.9.BUILD-SNAPSHOT` (until a release is made).",
    "clean_message": "You can test out these changes using  or  (until a release is made).",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/17274#issuecomment-600868858",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "You are absolutely right, there's a mistake in the relocation POM name. We are fixing it as soon as possible.\r\n\r\nMind that we'll be publishing relocation POMs for a limited number of releases and you should move on to using the new maven coordinates as soon as possible.\r\n\r\nThank you for making us aware of the issue. ",
    "clean_message": "You are absolutely right, there's a mistake in the relocation POM name. We are fixing it as soon as possible. Mind that we'll be publishing relocation POMs for a limited number of releases and you should move on to using the new maven coordinates as soon as possible. Thank you for making us aware of the issue. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/32747#issuecomment-1282234121",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Ok, after reviewing the mentioned ticket I think I understand my misunderstanding. I am working with 2.4.1 where that feature is working, it was on 2.4.2 when this stopped working, that's why I did not understand the example.\r\nThat said, this paragraph was there in the docs before 2.4, so it was not added with 2.4.2 regression, I don't know what was the behavior in older versions but I agree with you that if what you describe was the original intent of the documentation is better to just remove it.\r\nI will modify it and remove the paragraph.",
    "clean_message": "Ok, after reviewing the mentioned ticket I think I understand my misunderstanding. I am working with 2.4.1 where that feature is working, it was on 2.4.2 when this stopped working, that's why I did not understand the example. That said, this paragraph was there in the docs before 2.4, so it was not added with 2.4.2 regression, I don't know what was the behavior in older versions but I agree with you that if what you describe was the original intent of the documentation is better to just remove it. I will modify it and remove the paragraph.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/24620#issuecomment-780430772",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi @holy12345 we are probably going to look at some of the other outstanding PRs before a new release. This PR only adds a guard against misconfiguration (i.e. when the config value is specified incorrectly as > 1), and can be addressed for now by appropriately setting the config. Is there an urgent need for a release? Thanks.",
    "clean_message": "Hi  we are probably going to look at some of the other outstanding PRs before a new release. This PR only adds a guard against misconfiguration (i.e. when the config value is specified incorrectly as > 1), and can be addressed for now by appropriately setting the config. Is there an urgent need for a release? Thanks.",
    "message_url": "https://github.com/Netflix/eureka/pull/1013#issuecomment-349415437",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> > > Looks like there's a problem with this pull request\n\nSince, the same test failed twice, which does not happen in other pull requests. I suspect that there is a change in this PR that is causing the failure. @elandau can you verify?\n",
    "clean_message": "Since, the same test failed twice, which does not happen in other pull requests. I suspect that there is a change in this PR that is causing the failure.  can you verify?",
    "message_url": "https://github.com/Netflix/eureka/pull/94#issuecomment-39240617",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@snicoll Would you please check if this looks good whenever you have some time for this?",
    "clean_message": "Would you please check if this looks good whenever you have some time for this?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/28544#issuecomment-987194137",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "Cool, have you signed the CLA? \n",
    "clean_message": "Cool, have you signed the CLA? ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3054#issuecomment-106205598",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@wilkinsona Thanks for the explanation! Somehow I had a faulty assumption that `spring-web` will always be present based on [the `pom.xml` for `spring-boot-starter-jersey`](https://github.com/spring-projects/spring-boot/blob/7405efa326773a69bfc71a06a31d51a9781eb98e/spring-boot-project/spring-boot-starters/spring-boot-starter-jersey/pom.xml#L38-L41).",
    "clean_message": "Thanks for the explanation! Somehow I had a faulty assumption that  will always be present based on the  for .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/17199#issuecomment-504660490",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Greg, looking at the report I'm not sure I see duplicates. Could you please verify that you pasted the correct logging snippet. \n\nThanks.\n",
    "clean_message": "Greg, looking at the report I'm not sure I see duplicates. Could you please verify that you pasted the correct logging snippet.  Thanks.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/127#issuecomment-30438735",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@alex-fu Are you available to continue working on this PR? Thanks",
    "clean_message": "-fu Are you available to continue working on this PR? Thanks",
    "message_url": "https://github.com/Netflix/conductor/pull/1823#issuecomment-697021193",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I think that another valid argument is that `HttpMessageConvertersAutoConfiguration` just must create different `HttpConverters` and delegate the configuration on each of used tools (e.g. `JacksonAutoConfiguration` or `GsonAutoConfiguration` ).\n",
    "clean_message": "I think that another valid argument is that  just must create different  and delegate the configuration on each of used tools (e.g.  or  ).",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/1919#issuecomment-63199790",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks @rwinch - no disagreements. you are more than welcome to implement all the changes or let me know to perform them. While I may not agree on limiting extensibility by making protected methods final, or testability removing getters, it does not limit the PR or the benefit we get from our use of Spring Security LDAP.\n\nAs for the formatting changes, not sure the formatter I have configured is aligned with the rest of Spring Security LDAP. are you just looking for an extra space on each side of an operator?\n",
    "clean_message": "Thanks  - no disagreements. you are more than welcome to implement all the changes or let me know to perform them. While I may not agree on limiting extensibility by making protected methods final, or testability removing getters, it does not limit the PR or the benefit we get from our use of Spring Security LDAP. As for the formatting changes, not sure the formatter I have configured is aligned with the rest of Spring Security LDAP. are you just looking for an extra space on each side of an operator?",
    "message_url": "https://github.com/spring-projects/spring-security/pull/104#issuecomment-50226752",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "In my opinion, there isn't a strong argument for us to start using Kotlin in the core library at this point in time. We (the whole team) spent some time using Kotlin toward the end of last year, and I agree there's a lot to like.\r\n\r\nHowever, forcing app developers who aren't already bundling the Kotlin runtime to do so is very painful. I would argue that it's probably significantly worse for us to do this than for a network stack library, because there are fewer good alternatives (that a developer could switch to) and because streaming media is an area that's evolving very rapidly (which makes it less viable for a developer to freeze on the current version for an extended period of time).\r\n\r\n> Many companies from various sizes have already adopted Kotlin and some important libraries on the Android ecosystem start to migrate to Kotlin as well.\r\n\r\nIt's interesting that OkHttp have migrated. That will provide us with a data point to keep an eye on. It should be noted that not all of the feedback has been positive (e.g. some of the responses in https://github.com/square/okhttp/issues/4723).\r\n\r\n> Besides making ExoPlayer's API type-safe with regards to nullability (while still providing Java interop)\r\n\r\nWe're already using Checker framework to achieve this with the current Java implementation. The vast majority of the library is already checked, and we hope to complete removal of the remaining exemptions relatively soon.",
    "clean_message": "In my opinion, there isn't a strong argument for us to start using Kotlin in the core library at this point in time. We (the whole team) spent some time using Kotlin toward the end of last year, and I agree there's a lot to like. However, forcing app developers who aren't already bundling the Kotlin runtime to do so is very painful. I would argue that it's probably significantly worse for us to do this than for a network stack library, because there are fewer good alternatives (that a developer could switch to) and because streaming media is an area that's evolving very rapidly (which makes it less viable for a developer to freeze on the current version for an extended period of time). It's interesting that OkHttp have migrated. That will provide us with a data point to keep an eye on. It should be noted that not all of the feedback has been positive (e.g. some of the responses in ). We're already using Checker framework to achieve this with the current Java implementation. The vast majority of the library is already checked, and we hope to complete removal of the remaining exemptions relatively soon.",
    "message_url": "https://github.com/google/ExoPlayer/pull/6826#issuecomment-570552951",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@JiangXi-YuYan thanks for asking, I believe your working copy of `master` was outdated. Next time, please make sure you're up-to-date with `origin/master` before creating a branch for a PR. I am reviewing the PR, no action required on your end at this point.",
    "clean_message": "-YuYan thanks for asking, I believe your working copy of  was outdated. Next time, please make sure you're up-to-date with  before creating a branch for a PR. I am reviewing the PR, no action required on your end at this point.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/18307#issuecomment-534054989",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Unfortunately the issue we generally find with `SocketUtils.findAvailableTcpPort` isn't that it fails, but rather it thinks it has succeeded but in reality the port is not available. Adding a retry is unlikely so solve that issue I'm afraid.\r\n\r\nThe way that `SocketUtils.findAvailableTcpPort` works is that it first finds a free port and then it releases it so that it can be used by the real server. After the release happens the OS assumes it's free to dish it out again, so it can be used before the real server actually gets a chance to start.\r\n\r\nThe only way I can think of to support this would be to dig into the internals of Tomcat/Undertow/Jetty to see if it's possible to obtain and keep the server port directly.",
    "clean_message": "Unfortunately the issue we generally find with  isn't that it fails, but rather it thinks it has succeeded but in reality the port is not available. Adding a retry is unlikely so solve that issue I'm afraid. The way that  works is that it first finds a free port and then it releases it so that it can be used by the real server. After the release happens the OS assumes it's free to dish it out again, so it can be used before the real server actually gets a chance to start. The only way I can think of to support this would be to dig into the internals of Tomcat/Undertow/Jetty to see if it's possible to obtain and keep the server port directly.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/9403#issuecomment-306378500",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I suspect that we want:\r\n\r\n    ( cd android && ... )\r\n\r\nInstead of:\r\n\r\n    cd android && ...\r\n\r\nSo that we restore the original directory for the later commands. Currently, I think that we're changing directory for `install` and then ending up in the wrong place for `verify`.",
    "clean_message": "I suspect that we want: ( cd android && ... )  Instead of: cd android && ...  So that we restore the original directory for the later commands. Currently, I think that we're changing directory for  and then ending up in the wrong place for .",
    "message_url": "https://github.com/google/guava/pull/2802#issuecomment-297804959",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@erichhsun Yes, there are more flaky tests unfortunately. I'll have a look \u2013 the master build failed as well after my PR was merged.",
    "clean_message": "Yes, there are more flaky tests unfortunately. I'll have a look \u2013 the master build failed as well after my PR was merged.",
    "message_url": "https://github.com/Netflix/Hystrix/pull/1757#issuecomment-379649225",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I download the `spring-boot-sample-web-ui` and run it. But I got some thing wrong, \r\n\r\n```\r\norg.thymeleaf.exceptions.TemplateProcessingException: Could not parse as fragment selection: \"fragments :: head(title=~{::title/text()})\" (messages/list:3)\r\n\tat org.thymeleaf.standard.expression.FragmentSelectionUtils.parseFragmentSelection(FragmentSelectionUtils.java:106)\r\n\tat org.thymeleaf.standard.fragment.StandardFragmentProcessor.computeStandardFragmentSpec(StandardFragmentProcessor.java:73)\r\n\tat org.thymeleaf.standard.processor.attr.AbstractStandardFragmentHandlingAttrProcessor.computeFragment(AbstractStandardFragmentHandlingAttrProcessor.java:68)\r\n```\r\n\r\nAnd I think a more clear and easier guide is better for the newbies. No matter what's the next step, I will still contribute. Be in this Spring family.",
    "clean_message": "I download the  and run it. But I got some thing wrong,  And I think a more clear and easier guide is better for the newbies. No matter what's the next step, I will still contribute. Be in this Spring family.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/13536#issuecomment-399046265",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "what does waiting-for-triage tag mean? sorry if its a silly question",
    "clean_message": "what does waiting-for-triage tag mean? sorry if its a silly question",
    "message_url": "https://github.com/spring-projects/spring-security/pull/10541#issuecomment-975952635",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "**PR: Fix #3720**\r\n\r\nUpdate:\r\nindexOf(byte[] array, byte target, int fromIndex)  [Byte.java]\r\nindexOf(byte[] array, byte[] target, int fromIndex)  [Byte.java]\r\nlastIndexOf(byte[] array, byte target, int fromIndex)  [Byte.java]\r\nlastIndexOf(byte[] array, byte[] target, int fromIndex)  [Byte.java]\r\n\r\nThese 4 methods are written strictly according to the requirements of the issue #3720.\r\n\r\nUnit Tests written:\r\ntestIndexOf_arrayTarget_fromIndex()  [ByteTest.java]\r\ntestIndexOf_fromIndex()  [ByteTest.java]\r\ntestLastIndexOf_fromIndex()  [ByteTest.java]\r\n\r\nThese tests try to cover a case coverage as comprehensively as possible.\r\n\r\nI think the requirements of this issue have been met. If there are extra requirements or bugs exists, please just comment here.\r\n\r\nThanks for reviewing it!\r\n",
    "clean_message": "PR: Fix #3720 Update: indexOf(byte[] array, byte target, int fromIndex)  [Byte.java] indexOf(byte[] array, byte[] target, int fromIndex)  [Byte.java] lastIndexOf(byte[] array, byte target, int fromIndex)  [Byte.java] lastIndexOf(byte[] array, byte[] target, int fromIndex)  [Byte.java] These 4 methods are written strictly according to the requirements of the issue #3720. Unit Tests written: testIndexOf_arrayTarget_fromIndex()  [ByteTest.java] testIndexOf_fromIndex()  [ByteTest.java] testLastIndexOf_fromIndex()  [ByteTest.java] These tests try to cover a case coverage as comprehensively as possible. I think the requirements of this issue have been met. If there are extra requirements or bugs exists, please just comment here. Thanks for reviewing it!",
    "message_url": "https://github.com/google/guava/pull/6218#issuecomment-1293187675",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@thelproad thanks again.",
    "clean_message": "thanks again.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/19000#issuecomment-557788573",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@linkqu I went ahead and fixed this in  8f53c2e - Thanks for the report",
    "clean_message": "I went ahead and fixed this in  8f53c2e - Thanks for the report",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/13041#issuecomment-388723545",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@philwebb I am sorry.I am just confused by [this](https://github.com/spring-projects/spring-boot/commit/835108e522ca4a1969d35a96ecf731e63f554ea2):`Support binding of YAML style true/false values to 'ON'/'OFF'.`\r\n\r\nThank you for your reply.\r\n\r\n\r\n\r\n.Thank you for your reply.",
    "clean_message": "I am sorry.I am just confused by this: Thank you for your reply. .Thank you for your reply.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/17823#issuecomment-520122071",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Please let me know if `logs` is supposed to be an optional field. I can do that as well. I wasn't able to figure it out from the docs.\r\n\r\nThe [schema on API docs page](https://netflix.github.io/conductor/runtime/#schema-for-updating-task-result) doesn't mention logs.",
    "clean_message": "Please let me know if  is supposed to be an optional field. I can do that as well. I wasn't able to figure it out from the docs. The schema on API docs page doesn't mention logs.",
    "message_url": "https://github.com/Netflix/conductor/pull/1010#issuecomment-466932358",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Changed git commit message to comply to the standard.",
    "clean_message": "Changed git commit message to comply to the standard.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6969#issuecomment-505153858",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "It does but better be safe than sorry. We know about the travis situation. We'll fix that today. Thanks. \n",
    "clean_message": "It does but better be safe than sorry. We know about the travis situation. We'll fix that today. Thanks. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4093#issuecomment-145427446",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> Sorry for the amount of small PRs\r\n\r\nNo need to apologize, we prefer merging lots of smaller PRs to splitting up large ones :)\r\n\r\nThanks once again!",
    "clean_message": "No need to apologize, we prefer merging lots of smaller PRs to splitting up large ones :) Thanks once again!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/18384#issuecomment-536147265",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks!\r\n\r\nI think you now just need to do what the robot says in https://github.com/google/ExoPlayer/pull/7199#issuecomment-610507573 and reply with a message that **only** contains `@googlebot I consent.`.",
    "clean_message": "Thanks! I think you now just need to do what the robot says in  and reply with a message that only contains .",
    "message_url": "https://github.com/google/ExoPlayer/pull/7199#issuecomment-610545581",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I am not sure about that `assertFalse`/`assertTrue`/ `assertNull` replacements as the error message is simply AssertionError in that case. \n",
    "clean_message": "I am not sure about that //  replacements as the error message is simply AssertionError in that case. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/735#issuecomment-41400167",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Working on it :)",
    "clean_message": "Working on it :)",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6096#issuecomment-439130081",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks again for the PR @ayudovin. That's not exactly what I had in mind for the test, I've updated your proposal with what I had in mind.",
    "clean_message": "Thanks again for the PR . That's not exactly what I had in mind for the test, I've updated your proposal with what I had in mind.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/17504#issuecomment-512230251",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry ;) i saw Josh already in LA again. But he's no measure\n",
    "clean_message": "Sorry ;) i saw Josh already in LA again. But he's no measure",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3899#issuecomment-142066964",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Hi @charanbir, thanks for the efforts here, unfortunately this isn't what we're ultimately looking to do. We want to remove our dependency, not exclude the one from Hibernate. Thanks anyway!",
    "clean_message": "Hi , thanks for the efforts here, unfortunately this isn't what we're ultimately looking to do. We want to remove our dependency, not exclude the one from Hibernate. Thanks anyway!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/15207#issuecomment-439771624",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Oh, the contribution is the least you can make :) , you know my github page.\nhttps://github.com/abaxanean\n",
    "clean_message": "Oh, the contribution is the least you can make :) , you know my github page.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/259#issuecomment-194417792",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "They have class retention, though, so they'll be in the output. Maybe they shouldn't be, but arbitrary tools don't know that :( Maybe file a bug against Animal Sniffer?",
    "clean_message": "They have class retention, though, so they'll be in the output. Maybe they shouldn't be, but arbitrary tools don't know that :( Maybe file a bug against Animal Sniffer?",
    "message_url": "https://github.com/google/guava/pull/3649#issuecomment-540075016",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@jbduncan thanks for the very kind words and the tips \ud83d\ude03 I appreciate that a lot, it's good to know that it's not an ununsual case.\r\n\r\n@cpovirk also thanks for taking it serious and trying to get pull requests integrated into your triage process \ud83d\udc4d  ",
    "clean_message": "thanks for the very kind words and the tips \ud83d\ude03 I appreciate that a lot, it's good to know that it's not an ununsual case. also thanks for taking it serious and trying to get pull requests integrated into your triage process \ud83d\udc4d  ",
    "message_url": "https://github.com/google/guava/pull/3023#issuecomment-358808884",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@philwebb Yes, I have signed the CLA.\n",
    "clean_message": "Yes, I have signed the CLA.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4195#issuecomment-148411740",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Is there any feedback on this?",
    "clean_message": "Is there any feedback on this?",
    "message_url": "https://github.com/google/dagger/pull/1082#issuecomment-370881220",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "We don't want to break backward compatible for this one. This should be possible by keeping the existing health indicator, adding this one and updating the auto-configuration to try this one and then the existing one if none apply. Unfortunately, the existing health indicator is in the `cassandra` package so we can't really have an additional one without having to use a name we wouldn't like. We've discovered brainstorming on this one that #11574 could be extended to package space as well as the actuator has no notion of data vs. raw driver.\r\n\r\nIt is unfortunately too late to make a breaking change in `2.3.x` so I've scheduled this for the next feature release.",
    "clean_message": "We don't want to break backward compatible for this one. This should be possible by keeping the existing health indicator, adding this one and updating the auto-configuration to try this one and then the existing one if none apply. Unfortunately, the existing health indicator is in the  package so we can't really have an additional one without having to use a name we wouldn't like. We've discovered brainstorming on this one that #11574 could be extended to package space as well as the actuator has no notion of data vs. raw driver. It is unfortunately too late to make a breaking change in  so I've scheduled this for the next feature release.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/20887#issuecomment-627276653",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for the PR. I've merged it into 1.3.x and forward into master.\n",
    "clean_message": "Thanks for the PR. I've merged it into 1.3.x and forward into master.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5059#issuecomment-181444927",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hi @eleftherias ,\r\nI have run it on my local machine twice before pushing it.\r\nI didn't have any issues.\r\nLet me check the error and I will work on them.\r\nSorry about thta",
    "clean_message": "Hi  , I have run it on my local machine twice before pushing it. I didn't have any issues. Let me check the error and I will work on them. Sorry about thta",
    "message_url": "https://github.com/spring-projects/spring-security/pull/8434#issuecomment-635642410",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for the analysis, that's very helpful!\r\n\r\n> Debug why the proxyTargetClass=false default from the AopAutoConfiguration is ignored downstream when PlatformTransactionManager.class is present and spring.aop.proxy-target-type=(empty)\r\n\r\nBecause of the  `matchIfMissing` argument in the link you gave. I totally forgot I had fix that in the `1.5.x` line. We introduced a different opinion for transactions (which is unfortunate considering the default for AOP and we've fixed that in 2.x).\r\n\r\nYour PR is spot on (in `1.5.x`, thank you very much for the feedback).",
    "clean_message": "Thanks for the analysis, that's very helpful! Because of the   argument in the link you gave. I totally forgot I had fix that in the  line. We introduced a different opinion for transactions (which is unfortunate considering the default for AOP and we've fixed that in 2.x). Your PR is spot on (in , thank you very much for the feedback).",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10134#issuecomment-329944976",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "My fault.) Done.",
    "clean_message": "My fault.) Done.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/9153#issuecomment-717230845",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I believe the build failure is unrelated to the PR. Looks like the build is also failing on master.",
    "clean_message": "I believe the build failure is unrelated to the PR. Looks like the build is also failing on master.",
    "message_url": "https://github.com/Netflix/Hystrix/pull/1777#issuecomment-373095607",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "This change would not be enough to make `newCustomTable` thread-safe: While it makes calls to `getOrCreate` thread-safe (assuming that the backing map and supplier are thread-safe), it does not make other operations like `remove` thread-safe.\r\n\r\nStill, the simplification to the code is nice. Unfortunately, we currently still maintain compatibility with older versions of Java for our Android and JRE7 users, so we can't use `computeIfAbsent` in code that works there. We _can_ use `computeIfAbsent` in environments in which it's available while avoiding it when it's not, but this typically makes our code more complex. So we almost always avoid that approach.\r\n\r\nOnce we start requiring all our users to target environments that contain `computeIfAbsent`, we could make changes like this. But I expect that not to happen for years.",
    "clean_message": "This change would not be enough to make  thread-safe: While it makes calls to  thread-safe (assuming that the backing map and supplier are thread-safe), it does not make other operations like  thread-safe. Still, the simplification to the code is nice. Unfortunately, we currently still maintain compatibility with older versions of Java for our Android and JRE7 users, so we can't use  in code that works there. We can use  in environments in which it's available while avoiding it when it's not, but this typically makes our code more complex. So we almost always avoid that approach. Once we start requiring all our users to target environments that contain , we could make changes like this. But I expect that not to happen for years.",
    "message_url": "https://github.com/google/guava/pull/5588#issuecomment-856005353",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I don't think this should've been merged.\r\n\r\nFirst of all, `DefaultBearerTokenResolver` extracts the value of `Authorization` header, which is really different thing from `WWW-Authenticate` which was used as argument for this change. The RFC 6750 is quite explicit about the syntax of `Authorization` header in [section 2.1](https://tools.ietf.org/html/rfc6750#section-2.1):\r\n\r\n```\r\nb64token    = 1*( ALPHA / DIGIT /\r\n                       \"-\" / \".\" / \"_\" / \"~\" / \"+\" / \"/\" ) *\"=\"\r\ncredentials = \"Bearer\" 1*SP b64token\r\n```\r\n\r\nIt also states that _Unless otherwise noted, all the protocol parameter names and values are case sensitive_ in [section 1.1](https://tools.ietf.org/html/rfc6750#section-1.1).\r\n\r\nRegarding `WWW-Authenticate` itself, [section 3](https://tools.ietf.org/html/rfc6750#section-3) quite explicitly says that _All challenges defined by this specification MUST use the auth-scheme value \"Bearer\"_.\r\n\r\nTo my understanding, the RFC 2617 uses case-insensitivity in terms of identifying auth scheme on the client, which isn't really a subject of Resource Server support.",
    "clean_message": "I don't think this should've been merged. First of all,  extracts the value of  header, which is really different thing from  which was used as argument for this change. The RFC 6750 is quite explicit about the syntax of  header in section 2.1: It also states that Unless otherwise noted, all the protocol parameter names and values are case sensitive in section 1.1. Regarding  itself, section 3 quite explicitly says that All challenges defined by this specification MUST use the auth-scheme value \"Bearer\". To my understanding, the RFC 2617 uses case-insensitivity in terms of identifying auth scheme on the client, which isn't really a subject of Resource Server support.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6150#issuecomment-442706414",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@ankurpathak Sorry that I was not clear. I was speaking in reference to adding documentation at https://github.com/spring-projects/spring-security/blob/0656d2bc052358b2d8fc5fd1be2be682f3e8169e/docs/manual/src/docs/asciidoc/_includes/reactive/headers.adoc#webflux-headers-hsts",
    "clean_message": "Sorry that I was not clear. I was speaking in reference to adding documentation at ",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6321#issuecomment-452437445",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Looks good, thanks @holy12345 .",
    "clean_message": "Looks good, thanks  .",
    "message_url": "https://github.com/Netflix/eureka/pull/1100#issuecomment-410079725",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks @spencergibb .  I'll also backport this to 1.4.x so the fix is available there\n",
    "clean_message": "Thanks  .  I'll also backport this to 1.4.x so the fix is available there",
    "message_url": "https://github.com/Netflix/Hystrix/pull/1167#issuecomment-205279183",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@fml2 Thanks very much for making your first contribution to Spring Boot.",
    "clean_message": "Thanks very much for making your first contribution to Spring Boot.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/28376#issuecomment-946907619",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "If everyone here agrees, I'd open a PR focused purely on addressing #5668 off [this branch](https://github.com/vpavic/spring-security/tree/gh-5668) in my fork. That still leaves room for @gburboz to re-submit the PR with some of the nice optimizations outlined here, like moving exceptions to constants and validating the token chars.",
    "clean_message": "If everyone here agrees, I'd open a PR focused purely on addressing #5668 off this branch in my fork. That still leaves room for  to re-submit the PR with some of the nice optimizations outlined here, like moving exceptions to constants and validating the token chars.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6040#issuecomment-436774442",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@cpovirk When it comes to security, disruption should be least of concerns.  See SolarWinds hack 2020...",
    "clean_message": "When it comes to security, disruption should be least of concerns.  See SolarWinds hack 2020...",
    "message_url": "https://github.com/google/guava/pull/5324#issuecomment-746772655",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Can I get an update on any thinking on this? I'm happy to look for another approach if this isn't going to be taken, but we don't want to need to maintain our own fork long-term just for this one change.",
    "clean_message": "Can I get an update on any thinking on this? I'm happy to look for another approach if this isn't going to be taken, but we don't want to need to maintain our own fork long-term just for this one change.",
    "message_url": "https://github.com/google/ExoPlayer/pull/3217#issuecomment-330944756",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@icbaker sorry, I apparently did a mistake. Do you have any clue how to change this in this pull request ?",
    "clean_message": "sorry, I apparently did a mistake. Do you have any clue how to change this in this pull request ?",
    "message_url": "https://github.com/google/ExoPlayer/pull/7241#issuecomment-614599219",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi @nkonev, thanks for the contribution.\r\n\r\nYou can go ahead and close that ticket in Spring Framework.\r\n\r\nAbout the PR, I don't think we want to solve it this way. Instead, a delegate that delays the initialization of the bean would probably work in this case. I created https://github.com/spring-projects/spring-security/issues/12367 for that",
    "clean_message": "Hi , thanks for the contribution. You can go ahead and close that ticket in Spring Framework. About the PR, I don't think we want to solve it this way. Instead, a delegate that delays the initialization of the bean would probably work in this case. I created  for that",
    "message_url": "https://github.com/spring-projects/spring-security/pull/12366#issuecomment-1346979928",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the PR @fpavageau! This is now in 4.2.x",
    "clean_message": "Thanks for the PR ! This is now in 4.2.x",
    "message_url": "https://github.com/spring-projects/spring-security/pull/4759#issuecomment-340916566",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Please resolve the merge conflicts. Thanks for your contribution.",
    "clean_message": "Please resolve the merge conflicts. Thanks for your contribution.",
    "message_url": "https://github.com/Netflix/conductor/pull/1468#issuecomment-571374581",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "There was never any followup from the platform team about this issue, so I think it remains the case that it's not possible to robustly track battery state at the application layer, unfortunately.",
    "clean_message": "There was never any followup from the platform team about this issue, so I think it remains the case that it's not possible to robustly track battery state at the application layer, unfortunately.",
    "message_url": "https://github.com/google/ExoPlayer/pull/7138#issuecomment-1177717743",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@martinfrancois I'm not on the Guava team myself, so I can't truly speak on their behalf, but as someone who's contributed to the project for a couple of years now, I think it's worth letting you know that they can be very slow addressing new issues and PRs, which I think happens because they're busy as a whole dealing with Google-internal priorities.\r\n\r\nSo if they take forever to respond (which seems likely at this stage, sadly), it absolutely won't be because you did something wrong; they're just apparently very, _very_ busy with their day-to-day jobs, and someone from the team _will_ eventually respond to this PR.\r\n\r\nIf you don't get a response as quickly as you'd like, writing a reminder message like the one you wrote [here](https://github.com/google/guava/pull/3023#issuecomment-357791229) every now and then should encourage a more timely response, even if they're a bit too busy to review the PR properly.\r\n\r\nI hope this helps! :)",
    "clean_message": "I'm not on the Guava team myself, so I can't truly speak on their behalf, but as someone who's contributed to the project for a couple of years now, I think it's worth letting you know that they can be very slow addressing new issues and PRs, which I think happens because they're busy as a whole dealing with Google-internal priorities. So if they take forever to respond (which seems likely at this stage, sadly), it absolutely won't be because you did something wrong; they're just apparently very, very busy with their day-to-day jobs, and someone from the team will eventually respond to this PR. If you don't get a response as quickly as you'd like, writing a reminder message like the one you wrote here every now and then should encourage a more timely response, even if they're a bit too busy to review the PR properly. I hope this helps! :)",
    "message_url": "https://github.com/google/guava/pull/3023#issuecomment-357803167",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I think this is worth documenting as proposed and/or by mentioning `@Profile` in the documentation for `@ConfigurationPropertiesScan`.",
    "clean_message": "I think this is worth documenting as proposed and/or by mentioning  in the documentation for .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/16622#issuecomment-485694662",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Could you sign the CLA and ensure the PR is merging into the \"dev-v2\" branch? Otherwise we can't accept the contribution.",
    "clean_message": "Could you sign the CLA and ensure the PR is merging into the \"dev-v2\" branch? Otherwise we can't accept the contribution.",
    "message_url": "https://github.com/google/ExoPlayer/pull/9709#issuecomment-975486900",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks, have you signed the CLA?\n",
    "clean_message": "Thanks, have you signed the CLA?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3752#issuecomment-130987519",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@agg505 thank you for making your first contribution to Spring Boot.",
    "clean_message": "thank you for making your first contribution to Spring Boot.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/26320#issuecomment-830641448",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Okay, here I may have misunderstood the usage of the `-flag` for\r\n`createTextFormatSample`.\r\nSome of them are setting it `DEFAULT`, some are `FORCED`, some are\r\n`AUTO_SELECT`...\r\n\r\nBut most of all, `auto` selecting for videos or audios, I can understand,\r\nbut for subtitles.. I really think it's even hard to understand for service users\r\ntoo. (e.g. watching NETFLIX, and I click on changing subtitle button and it shows current option is on  \"AUTO\")...?\r\nAnd that's why I wanted to remove that option from the first place.\r\n\r\nSince not using this method doesn't affect anything else anyway, how about\r\nthrowing `illegalStateException` in `setShowAutoOption` method when the\r\nuser didn't set default value?\r\nAnd so there will be `setDefaultOption( int defaultOption )` and make\r\nconstant value for `None` option = -1\r\n\r\n(I really want to remove `Auto` option...)\r\n\r\n2019\ub144 2\uc6d4 19\uc77c (\ud654) \uc624\ud6c4 10:53, Oliver Woodman <notifications@github.com>\ub2d8\uc774 \uc791\uc131:\r\n\r\n> The problem with doing this is that \"auto\" is the default selection. If\r\n> you hide it, it's unclear what should be selected instead (selecting\r\n> nothing is strange, and selecting \"None\" isn't guaranteed to do the right\r\n> thing).\r\n>\r\n> What should probably happen is that instead of \"auto\" being the default\r\n> selection, we instead actually select what the default selection is. \"Auto\"\r\n> then becomes a \"reset\" button that'll reset back to the default selection.\r\n> At this point having an option to hide the \"reset\" button makes a lot of\r\n> sense.\r\n>\r\n> \u2014\r\n> You are receiving this because you authored the thread.\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/google/ExoPlayer/pull/5531#issuecomment-465135769>,\r\n> or mute the thread\r\n> <https://github.com/notifications/unsubscribe-auth/AJ7c64j3Ijs58-Pa6jC7ObOUPQrM8VOqks5vPAHogaJpZM4bB7yr>\r\n> .\r\n>\r\n",
    "clean_message": "Okay, here I may have misunderstood the usage of the  for . Some of them are setting it , some are , some are ... But most of all,  selecting for videos or audios, I can understand, but for subtitles.. I really think it's even hard to understand for service users too. (e.g. watching NETFLIX, and I click on changing subtitle button and it shows current option is on  \"AUTO\")...? And that's why I wanted to remove that option from the first place. Since not using this method doesn't affect anything else anyway, how about throwing  in  method when the user didn't set default value? And so there will be  and make constant value for  option = -1 (I really want to remove  option...) 2019\ub144 2\uc6d4 19\uc77c (\ud654) \uc624\ud6c4 10:53, Oliver Woodman <",
    "message_url": "https://github.com/google/ExoPlayer/pull/5531#issuecomment-465176780",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "What I'm saying is:\n- The work done in `final void doSomeWork(long, long)` is vital. If you remove final from that method, as proposed here, it would allow someone to make the mistake of overriding it and failing to call `super.doSomeWork(long, long)` from their override. This is why it's final.\n- You should just be able to implement `doSomeWork(long, long, boolean)` to do what you need. You shouldn't need to override `doSomeWork(long, long)`.\n",
    "clean_message": "What I'm saying is: - The work done in  is vital. If you remove final from that method, as proposed here, it would allow someone to make the mistake of overriding it and failing to call  from their override. This is why it's final. - You should just be able to implement  to do what you need. You shouldn't need to override .",
    "message_url": "https://github.com/google/ExoPlayer/pull/1277#issuecomment-185157467",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Ok - this looks good.  I'll merge in. \n",
    "clean_message": "Ok - this looks good.  I'll merge in. ",
    "message_url": "https://github.com/google/dagger/pull/93#issuecomment-90264998",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@holy12345 thanks for the PR, you logic seems sound and there does seem to be an error in the code. Before I merge in your fix however, I'd appreciate it if you added a unit test that assert and validate the expected behaviour? Thanks.",
    "clean_message": "thanks for the PR, you logic seems sound and there does seem to be an error in the code. Before I merge in your fix however, I'd appreciate it if you added a unit test that assert and validate the expected behaviour? Thanks.",
    "message_url": "https://github.com/Netflix/eureka/pull/1020#issuecomment-351206949",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "CEA608 is hardly ever used in on-demand content, but it is widely used for over-the-air television. The artificial alignment of the content providers often creates scenarios when consecutive lines aligned differently become very hard to read. The existing optimization of ExoPlayer does not consider multiple lines when decides about alignment of each line individually.\r\n\r\nThis change fixes lots of issues when the **data contains** something like (note that the left sides of the lines were matched fore easy readability):\r\n```\r\n1  2  3  4  5  6  7  8  9 10 11 12 13 14 15\r\n                      Joe:\r\n                      What's up\r\n```\r\n----\r\nWith the optimization **before this change** (aligning lines individually)\r\n```\r\n1  2  3  4  5  6  7  8  9 10 11 12 13 14 15\r\n                      Joe:\r\n                                       What's up        // this line gets switched to right alignment as has less space on the right hand side.\r\n```\r\n----\r\n**Possible side effect** of the new change: both lines are accidentally matching the criteria for center alignment. That is not a real issue, as it is still easy to read:\r\n```\r\n1  2  3  4  5  6  7  8  9 10 11 12 13 14 15\r\n                      Joe:\r\n                    What's up                       // this line is also getting center aligned\r\n```\r\n----\r\n**worst case scenario** (everything reverted back to the left alignment and gets displayed exactly as defined in the content, easy to read (this is the exact placement requested by the specification)\r\n```\r\n1  2  3  4  5  6  7  8  9 10 11 12 13 14 15\r\n                       Joe:\r\n                       What's up              // gets left aligned without any optimization\r\n```\r\n",
    "clean_message": "CEA608 is hardly ever used in on-demand content, but it is widely used for over-the-air television. The artificial alignment of the content providers often creates scenarios when consecutive lines aligned differently become very hard to read. The existing optimization of ExoPlayer does not consider multiple lines when decides about alignment of each line individually. This change fixes lots of issues when the data contains something like (note that the left sides of the lines were matched fore easy readability):  With the optimization before this change (aligning lines individually)  Possible side effect of the new change: both lines are accidentally matching the criteria for center alignment. That is not a real issue, as it is still easy to read:  worst case scenario (everything reverted back to the left alignment and gets displayed exactly as defined in the content, easy to read (this is the exact placement requested by the specification)",
    "message_url": "https://github.com/google/ExoPlayer/pull/5201#issuecomment-444654389",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@ramato-procon `JmsTemplate` is not going to help, the timeout offered by the provider is related to message consumption (which is certainly not something you want to do as part  of a health check).\r\n\r\nAs for what Phil said, it's related to backporting the change to `1.5.x`, there is no lambda there.",
    "clean_message": "-procon  is not going to help, the timeout offered by the provider is related to message consumption (which is certainly not something you want to do as part  of a health check). As for what Phil said, it's related to backporting the change to , there is no lambda there.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10853#issuecomment-344317984",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> Thanks very much for the PR, @bono007. On first review, this looks excellent. I've left a few minor comments for your consideration when you have a moment.\r\n\r\nThanks @wilkinsona . I am just now getting back to this and will update w/ suggestions shortly.\r\n\r\n> Unfortunately, it's too late to add enhancements in 2.4, but we should hopefully be able to merge this for 2.5.\r\n\r\nNo worries. \r\n",
    "clean_message": "Thanks  . I am just now getting back to this and will update w/ suggestions shortly. No worries. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/23990#issuecomment-725080435",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hmm, that sounds like the same problem, only worse. Greg can say for sure what bit him, but I think it was SD Gemfire. I guess in that case he chose a version of SDG that happened to work with the latest SDC, but wasn't really supported in that combination. Or something. \n\nWe can certainly revert this change if it causes problems.\n",
    "clean_message": "Hmm, that sounds like the same problem, only worse. Greg can say for sure what bit him, but I think it was SD Gemfire. I guess in that case he chose a version of SDG that happened to work with the latest SDC, but wasn't really supported in that combination. Or something.  We can certainly revert this change if it causes problems.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/509#issuecomment-38392000",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hi @ben-manes you can create a bean like [this](https://github.com/eddumelendez/spring-boot/blob/gh-4899/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/cache/CacheAutoConfigurationTests.java#L799-L802) and the auto-configuration will take this.\n",
    "clean_message": "Hi -manes you can create a bean like this and the auto-configuration will take this.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4903#issuecomment-169899943",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@srinivascodes I suspect this PR won't be merged anyway, so here's my two cents:\r\n\r\n- Do not check for equality using `==`. Use `equals` instead. It's possible to construct `BigInteger` equal to `BigInteger.ZERO` but\u00a0not being the same instance as `BigInteger.ZERO`. One of many possibilities is to call `new BigInteger(0, new byte[0])`.\r\n- First divide, then multiply. It's more efficient. As rounding is indeed `UNNECESSARY`, don't use it at all (it is sufficient to use `BigInteger.divide`).\r\n- There's no need to call `abs()` more than once.\r\n\r\n```\r\npublic static BigInteger lcm(BigInteger a, BigInteger b) {\r\n\tif (a.equals(BigInteger.ZERO) || b.equals(BigInteger.ZERO)) {\r\n\t\treturn BigInteger.ZERO;\r\n\t}\r\n\tBigInteger gcd = a.gcd(b);\r\n\treturn a.divide(gcd).multiply(b).abs();\r\n}\r\n```",
    "clean_message": "I suspect this PR won't be merged anyway, so here's my two cents:  Do not check for equality using . Use  instead. It's possible to construct  equal to  but\u00a0not being the same instance as . One of many possibilities is to call . First divide, then multiply. It's more efficient. As rounding is indeed , don't use it at all (it is sufficient to use ). There's no need to call  more than once. ",
    "message_url": "https://github.com/google/guava/pull/3063#issuecomment-371575976",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I think Gson.lenient flag probably does more harm than good in the current state.  The comments on the GsonBuilder.setLenient() method say \n\n> By default, Gson is strict and only accepts JSON as specified by <a href=\"http://www.ietf.org/rfc/rfc4627.txt\">RFC 4627</a>.\n\nThe comments on Gson.setLenient() also references the JsonReader.setLenient(boolean) method which has a great explanation of what should and shouldn't be considered when using the lenient flag.\n\nThe unfortunate fact here is that due to the Gson.fromJson(JsonReader, Type) method always setting the lenient flag to true when parsing, almost none of what is commented in GsonBuilder about the default behavior of Gson is true.  The only affect that setting the lenient flag on Gson will do is to allow comments to be at the end of your json buffer when calling Gson.fromJson(Reader, Type) since the assertFullConsumption(Object, JsonReader) method will be called from here and only checks for data at the end of the buffer having not been consumed (e.g. comments at the end).\n\nConsider, for example, the test in com.google.gson.functional.LeniencyTest\n\n```\n    @Override\n   protected void setUp() throws Exception {\n     super.setUp();\n     gson = new GsonBuilder().setLenient().create();\n   }\n\n   public void testLenientFromJson() {\n     List<String> json = gson.fromJson(\"\"\n         + \"[ # One!\\n\"\n         + \"  'Hi' #Element!\\n\"\n         + \"] # Array!\", new TypeToken<List<String>>() {}.getType());\n     assertEquals(singletonList(\"Hi\"), json);\n   }\n```\n\nIf you were to remove the comment at the end of the String (\"# Array!\"), then it would not make any difference at all whether or not the lenient flag had been set.  The following would also pass:\n\n```\n     List<String> json = new GsonBuilder().create().fromJson(\"\"\n         + \"[ # One!\\n\"\n         + \"  'Hi' #Element!\\n\"\n         + \"]\", new TypeToken<List<String>>() {}.getType());\n     assertEquals(singletonList(\"Hi\"), json);\n```\n\nIt seems counterintuitive that with the lenient flag unset, comments in the middle of the JSON data would be ignored but comments at the end would cause a failure when the Gson parser is supposed to be \"strict\".\n\nIf it is considered undesirable to change the default behavior (to the behavior that is documented) by actually respecting a default lenient flag being set to false (i.e. default to strict), then perhaps the correct answer is to respect the lenient flag, default Gson to have the lenient flag set to true, and update the javadocs to reflect that Gson by default is lenient.\n\nDo you have any thoughts on this alternate approach?\n",
    "clean_message": "I think Gson.lenient flag probably does more harm than good in the current state.  The comments on the GsonBuilder.setLenient() method say  The comments on Gson.setLenient() also references the JsonReader.setLenient(boolean) method which has a great explanation of what should and shouldn't be considered when using the lenient flag. The unfortunate fact here is that due to the Gson.fromJson(JsonReader, Type) method always setting the lenient flag to true when parsing, almost none of what is commented in GsonBuilder about the default behavior of Gson is true.  The only affect that setting the lenient flag on Gson will do is to allow comments to be at the end of your json buffer when calling Gson.fromJson(Reader, Type) since the assertFullConsumption(Object, JsonReader) method will be called from here and only checks for data at the end of the buffer having not been consumed (e.g. comments at the end). Consider, for example, the test in com.google.gson.functional.LeniencyTest If you were to remove the comment at the end of the String (\"# Array!\"), then it would not make any difference at all whether or not the lenient flag had been set.  The following would also pass: It seems counterintuitive that with the lenient flag unset, comments in the middle of the JSON data would be ignored but comments at the end would cause a failure when the Gson parser is supposed to be \"strict\". If it is considered undesirable to change the default behavior (to the behavior that is documented) by actually respecting a default lenient flag being set to false (i.e. default to strict), then perhaps the correct answer is to respect the lenient flag, default Gson to have the lenient flag set to true, and update the javadocs to reflect that Gson by default is lenient. Do you have any thoughts on this alternate approach?",
    "message_url": "https://github.com/google/gson/pull/795#issuecomment-187768323",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@friscoMad The example is trying to show unexpected behavior when there is a nested document in a profile-specific file. It is saying that even if you have the `dev` profile activated and the `application-dev.yml` file is loaded, the nested document under `!test` will not be processed. This is due to the filtering of nested documents that occurs in profile-specific files. It is an example to show why you should not use `spring.config.activate.on-profile` with profile-specific files. Hope this answers your question.",
    "clean_message": "The example is trying to show unexpected behavior when there is a nested document in a profile-specific file. It is saying that even if you have the  profile activated and the  file is loaded, the nested document under  will not be processed. This is due to the filtering of nested documents that occurs in profile-specific files. It is an example to show why you should not use  with profile-specific files. Hope this answers your question.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/24620#issuecomment-780038974",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@MeeTooFirst1 PR stands for pull-request but please don't spam our issue tracker with questions.",
    "clean_message": "PR stands for pull-request but please don't spam our issue tracker with questions.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/12800#issuecomment-382133554",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "This is a great change.  (Sorry it took me so long to see it.)  One small style nit though.\n",
    "clean_message": "This is a great change.  (Sorry it took me so long to see it.)  One small style nit though.",
    "message_url": "https://github.com/google/dagger/pull/240#issuecomment-159729859",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Weird that things changed there. Thanks for getting to the bottom of that, I've get to upgrade to 4.5.\n",
    "clean_message": "Weird that things changed there. Thanks for getting to the bottom of that, I've get to upgrade to 4.5.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3384#issuecomment-117842289",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "so cool.\n",
    "clean_message": "so cool.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4647#issuecomment-164207638",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@jvwilge thank you for making your first contribution to Spring Boot. I've polished your contribution to use `spring-boot.repackage.excludeDevtools` for consistency. There are include/exclude-related user properties in `spring-boot` but these apply to multiple plugins and this one does not.",
    "clean_message": "thank you for making your first contribution to Spring Boot. I've polished your contribution to use  for consistency. There are include/exclude-related user properties in  but these apply to multiple plugins and this one does not.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/16701#issuecomment-493894275",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@wilkinsona The test is awesome. Thank you all reviewing and merging the pull request.\n",
    "clean_message": "The test is awesome. Thank you all reviewing and merging the pull request.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5867#issuecomment-218197841",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@googlebot I signed it!",
    "clean_message": "I signed it!",
    "message_url": "https://github.com/google/ExoPlayer/pull/9196#issuecomment-880942565",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@snicoll, oh, it's my mistake, I'm so sorry. We could delete this pull request if Brian has started working on this enhancement.",
    "clean_message": ", oh, it's my mistake, I'm so sorry. We could delete this pull request if Brian has started working on this enhancement.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/14030#issuecomment-411992138",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@hdeadman thank you for making your first contribution to Spring Boot. I've [polished your contribution](https://github.com/spring-projects/spring-boot/commit/4cae2c9c94c273b36eab5e45df528cb4f40a0a1a) as the error message in the test you've added was misleading. This turned out to be a bigger change than I anticipated. Hopefully, the reason provided in the log is more accurate now.",
    "clean_message": "thank you for making your first contribution to Spring Boot. I've polished your contribution as the error message in the test you've added was misleading. This turned out to be a bigger change than I anticipated. Hopefully, the reason provided in the log is more accurate now.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/15394#issuecomment-450395941",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hi @NiteshKant, assumed correctly! ;) I forgot to mention [#164](https://github.com/Netflix/zuul/issues/164) in the request, apologies.\n",
    "clean_message": "Hi , assumed correctly! ;) I forgot to mention #164 in the request, apologies.",
    "message_url": "https://github.com/Netflix/zuul/pull/171#issuecomment-146701287",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "I'd quite like to go the other way and add some additional CSS styles. I think the HTML snippets are quite useful for people.\n",
    "clean_message": "I'd quite like to go the other way and add some additional CSS styles. I think the HTML snippets are quite useful for people.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5049#issuecomment-178885248",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@techyragu sorry, the pull request was #1546, not 1526.",
    "clean_message": "sorry, the pull request was #1546, not 1526.",
    "message_url": "https://github.com/Netflix/conductor/pull/1519#issuecomment-746345112",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This commit is already included in this PR: https://github.com/spring-projects/spring-boot/pull/4066\nBut I can send a separate PR if needed.\n",
    "clean_message": "This commit is already included in this PR:  But I can send a separate PR if needed.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4088#issuecomment-145522493",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@clevertension Either way. Before we merge, you'll need to force push down to one commit. Some folks like to keep commits separate while the review is going on. For small PRs like this, it doesn't make a big difference.",
    "clean_message": "Either way. Before we merge, you'll need to force push down to one commit. Some folks like to keep commits separate while the review is going on. For small PRs like this, it doesn't make a big difference.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6562#issuecomment-468882659",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "FWIW, I have no objections to using a `com.sun` type. I assume that @philwebb doesn't either given that this is now in the 1.5.0.M1 milestone. I'll mark if for discussion just in case.\n\nIn addition to being protected by a condition at runtime, use of `com.sun.management.GarbageCollectorMXBean` should be done via reflection to ensure that the code will compile on a JDK without the `com.sun` classes. See [HeapdumpMvcEndpoint](https://github.com/spring-projects/spring-boot/blob/v1.4.1.RELEASE/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HeapdumpMvcEndpoint.java) for an example of that.\n",
    "clean_message": "FWIW, I have no objections to using a  type. I assume that  doesn't either given that this is now in the 1.5.0.M1 milestone. I'll mark if for discussion just in case. In addition to being protected by a condition at runtime, use of  should be done via reflection to ensure that the code will compile on a JDK without the  classes. See HeapdumpMvcEndpoint for an example of that.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/6988#issuecomment-251617947",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I have updated description with my use-case.\n",
    "clean_message": "I have updated description with my use-case.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4436#issuecomment-155900013",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "It will break people who rely on the existing behavior, which is why Gson is effectively frozen in time.\n\nOn Wed, Sep 9, 2020, at 8:36 PM, Phillip Hellewell wrote:\n> \n\n>> Consider using Moshi where we fixed this behavior.\n\n> Good to know, but is there a reason not to merge this for Gson. Is it deemed too risky? If so, maybe the least we could do here is add a comment or something to indicate that the convenience methods like fromJson() are always lenient.\n\n\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/google/gson/pull/804#issuecomment-689898552>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAAQIEKQ4N6Z5DVAZUGA2EDSFANRTANCNFSM4B5AN3QQ>.\n\n",
    "clean_message": "It will break people who rely on the existing behavior, which is why Gson is effectively frozen in time. On Wed, Sep 9, 2020, at 8:36 PM, Phillip Hellewell wrote:",
    "message_url": "https://github.com/google/gson/pull/804#issuecomment-689899677",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks @dsyer, yes I have signed the Contributors agreement. Yes, I totally understand not encouraging the use of jsp as a view technology - and absolutely fine if this pull request is not merged. \n\nI wanted to contribute this as I personally use jsp for view and tiles for layout extensively in all my projects, and more recently have been using Spring boot but with jsp and tiles ( I have tried thymeleaf, but I am yet to take a shine to it :-) ).  \n",
    "clean_message": "Thanks , yes I have signed the Contributors agreement. Yes, I totally understand not encouraging the use of jsp as a view technology - and absolutely fine if this pull request is not merged.  I wanted to contribute this as I personally use jsp for view and tiles for layout extensively in all my projects, and more recently have been using Spring boot but with jsp and tiles ( I have tried thymeleaf, but I am yet to take a shine to it :-) ).  ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/371#issuecomment-35499223",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Lol, sorry.  Copy and paste did me in when I grabbed the existing buildAudioRenderers and made a minor change in my new class.  That function uses componentListener and not the passed in eventListener.",
    "clean_message": "Lol, sorry.  Copy and paste did me in when I grabbed the existing buildAudioRenderers and made a minor change in my new class.  That function uses componentListener and not the passed in eventListener.",
    "message_url": "https://github.com/google/ExoPlayer/pull/2132#issuecomment-264165884",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Hello,\nIf you wanna add many byte values and you don't know how many. You can't this structure.\nThanks your comment.\n",
    "clean_message": "Hello, If you wanna add many byte values and you don't know how many. You can't this structure. Thanks your comment.",
    "message_url": "https://github.com/google/guava/pull/2424#issuecomment-197202222",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "So should the documentation then be updated to state that a MalformedJsonException is thrown and JsonTreeReader be adjusted accordingly? Because the current behavior is inconsistent.",
    "clean_message": "So should the documentation then be updated to state that a MalformedJsonException is thrown and JsonTreeReader be adjusted accordingly? Because the current behavior is inconsistent.",
    "message_url": "https://github.com/google/gson/pull/1767#issuecomment-681969396",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@cdupuis @wilkinsona Sorry, I missed the Java 6 requirement.\n\nI believe that you can use the `File.getUsableSpace()` instead. I chose to use `FileStore` because I thought it would be beneficial to have a \"fail fast\" approach. For example, if the app does not have read privilege of the specified path, or the security manager has not been configured correct, I prefer to have the exception during startup as opposed to when the health check is called. But nothing prevents you from calling  `File.getUsableSpace()` in the constructor as well.\n",
    "clean_message": "Sorry, I missed the Java 6 requirement. I believe that you can use the  instead. I chose to use  because I thought it would be beneficial to have a \"fail fast\" approach. For example, if the app does not have read privilege of the specified path, or the security manager has not been configured correct, I prefer to have the exception during startup as opposed to when the health check is called. But nothing prevents you from calling   in the constructor as well.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/1297#issuecomment-50358253",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I didn't have my coffee yet - sorry for the polishing commits.",
    "clean_message": "I didn't have my coffee yet - sorry for the polishing commits.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/20541#issuecomment-599945506",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for PR! Can you please update your commit message to align for contributor guidelines https://github.com/spring-projects/spring-security/blob/master/CONTRIBUTING.adoc#format-commit-messages\r\n\r\nSomething like this works:\r\n\r\n```\r\nRename Preface to Introduction\r\n\r\nCloses gh-8188\r\n```",
    "clean_message": "Thanks for PR! Can you please update your commit message to align for contributor guidelines  Something like this works:",
    "message_url": "https://github.com/spring-projects/spring-security/pull/8411#issuecomment-615495110",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@bmscomp thanks a lot for the PR.",
    "clean_message": "thanks a lot for the PR.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/20356#issuecomment-594573362",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I always forget the `expected`, `actual` order for `assertEquals`. A lot of the other tests use `assertThat` which I generally prefer for both the error messages that it produces and the readability of the code.\n\nFor example: https://github.com/spring-projects/spring-boot/blob/v1.0.2.RELEASE/spring-boot/src/test/java/org/springframework/boot/ansi/AnsiOutputTest.java#L53\n",
    "clean_message": "I always forget the ,  order for . A lot of the other tests use  which I generally prefer for both the error messages that it produces and the readability of the code. For example: ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/735#issuecomment-41465102",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi @qiangdavidliu \r\nThank you for your reply, thank you very much.\r\nI will try to validate my logic by adding test code because the update is done in a thread and I currently have no idea how to test it(These days I have been looking for ways  but unfortunately did not find) .but do not worry I'm trying to figure out how to solve this problem",
    "clean_message": "Hi Thank you for your reply, thank you very much. I will try to validate my logic by adding test code because the update is done in a thread and I currently have no idea how to test it(These days I have been looking for ways  but unfortunately did not find) .but do not worry I'm trying to figure out how to solve this problem",
    "message_url": "https://github.com/Netflix/eureka/pull/1020#issuecomment-354063359",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Well don't revert it, that would revert it in master too!  Just rebase this branch.\n",
    "clean_message": "Well don't revert it, that would revert it in master too!  Just rebase this branch.",
    "message_url": "https://github.com/google/guice/pull/952#issuecomment-166731076",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for doing this!",
    "clean_message": "Thanks for doing this!",
    "message_url": "https://github.com/google/gson/pull/2231#issuecomment-1427071798",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@michael-simons been taking a look at your comment, and in regards of possible side effects, MongoProperties has a method to create a MongoClient, is there any risk of the MongoClient being created before the post processing happens? Probably its a silly question, as I'm not that familiar with BeanPostProcessors, my apologies if that is the case.\r\n\r\nAs for alternatives, what about extending MongoProperties and overriding the getPort method to return a fixed 0 if super is null, and make sure that this new class is the one being used for the AutoConfiguration in the tests? \r\n\r\nAlso, in regards of https://github.com/spring-projects/spring-boot/pull/7600#issuecomment-268639732 would you prefeer that i open a PR to your repository, or better that i wait for the PR to be closed and then i open a new one afterwards? ",
    "clean_message": "-simons been taking a look at your comment, and in regards of possible side effects, MongoProperties has a method to create a MongoClient, is there any risk of the MongoClient being created before the post processing happens? Probably its a silly question, as I'm not that familiar with BeanPostProcessors, my apologies if that is the case. As for alternatives, what about extending MongoProperties and overriding the getPort method to return a fixed 0 if super is null, and make sure that this new class is the one being used for the AutoConfiguration in the tests?  Also, in regards of  would you prefeer that i open a PR to your repository, or better that i wait for the PR to be closed and then i open a new one afterwards? ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7600#issuecomment-272036997",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "It's my custom extractor code that's broken.\n",
    "clean_message": "It's my custom extractor code that's broken.",
    "message_url": "https://github.com/google/ExoPlayer/pull/892#issuecomment-150949183",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "hi. I see many other opensource projects using Guice. They are moving on java 10, so they are forced to delete Guice as dependency unless Guice move to java 10 too",
    "clean_message": "hi. I see many other opensource projects using Guice. They are moving on java 10, so they are forced to delete Guice as dependency unless Guice move to java 10 too",
    "message_url": "https://github.com/google/guice/pull/1195#issuecomment-401721959",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi @portizb,\r\nWere you able to take a look at my comment above?\r\nhttps://github.com/google/ExoPlayer/pull/3854#issuecomment-526957626\r\nThank you very much!",
    "clean_message": "Hi , Were you able to take a look at my comment above? Thank you very much!",
    "message_url": "https://github.com/google/ExoPlayer/pull/3854#issuecomment-527443523",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Merged, thanks (commit b8c4720).\n",
    "clean_message": "Merged, thanks (commit b8c4720).",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/497#issuecomment-37808767",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Jetty relies on modifying the bootclasspath. I'm not sure whether to require Spring Boot users to do that when running their app is a viable option.\r\n\r\nTwo solutions come to my mind:\r\n\r\n 1. Decide that HTTP/2 will only be supported for Java 9 and later.\r\n 2. Provide our own nasty hack to support ALPN on Java 8\r\n\r\nWhat do you think? Is there a general solution to problems like this one, where a feature is not equally supported by all three Servlet Containers?",
    "clean_message": "Jetty relies on modifying the bootclasspath. I'm not sure whether to require Spring Boot users to do that when running their app is a viable option. Two solutions come to my mind:  Decide that HTTP/2 will only be supported for Java 9 and later. Provide our own nasty hack to support ALPN on Java 8  What do you think? Is there a general solution to problems like this one, where a feature is not equally supported by all three Servlet Containers?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/9981#issuecomment-321700286",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Hmm,  is it possible that respecting settings.xml is only implemented for\ngrab- and not for install-command?\n",
    "clean_message": "Hmm,  is it possible that respecting settings.xml is only implemented for grab- and not for install-command?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/2683#issuecomment-84948860",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks!\n",
    "clean_message": "Thanks!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/6835#issuecomment-245307240",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Having discussed this, our current feeling is that we're happy with this as it is. However, we'd like to know if you encountered a problem that was caused by the code in its current form? That would probably change our opinion.\n",
    "clean_message": "Having discussed this, our current feeling is that we're happy with this as it is. However, we'd like to know if you encountered a problem that was caused by the code in its current form? That would probably change our opinion.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4690#issuecomment-163303815",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "It is recommended to reconsider this action.",
    "clean_message": "It is recommended to reconsider this action.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/32181#issuecomment-1234159950",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Given there are 800+ commits in this PR, I am guessing you made a mistake setting up this PR. I'm going to close this so you can create a new PR with a single commit for the changes you need. If you need help, please let me know on gh-7578 and I can try and guide you through the process.",
    "clean_message": "Given there are 800+ commits in this PR, I am guessing you made a mistake setting up this PR. I'm going to close this so you can create a new PR with a single commit for the changes you need. If you need help, please let me know on gh-7578 and I can try and guide you through the process.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7579#issuecomment-547483494",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@inder123 for review\r\n",
    "clean_message": "for review",
    "message_url": "https://github.com/google/gson/pull/1037#issuecomment-286814254",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Got it. Too bad. In that case I recommend copying the code you need into your project. I don\u2019t want to encourage anyone to pull code from Gson\u2019s `internal` package.\n",
    "clean_message": "Got it. Too bad. In that case I recommend copying the code you need into your project. I don\u2019t want to encourage anyone to pull code from Gson\u2019s  package.",
    "message_url": "https://github.com/google/gson/pull/901#issuecomment-239680849",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "See #5208 \n",
    "clean_message": "See #5208 ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5852#issuecomment-216531804",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "[Resolved now, thanks](https://github.com/spring-projects/spring-security/commit/ca76e8d784b27cb2bcd4e9080be09545b4479b52#commitcomment-17934809).\n",
    "clean_message": "Resolved now, thanks.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/3905#issuecomment-227182303",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry I was trying something else before pushing my commit, all tests take 13mins in my machine. I ran them all three times \ud83d\ude43",
    "clean_message": "Sorry I was trying something else before pushing my commit, all tests take 13mins in my machine. I ran them all three times \ud83d\ude43",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6084#issuecomment-438518744",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for the suggestion, but we think it's probably more useful to have the complete set of results rather than failing fast.",
    "clean_message": "Thanks for the suggestion, but we think it's probably more useful to have the complete set of results rather than failing fast.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/17326#issuecomment-506781244",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thank you for the PR @mhyeon-lee! This is now in master.",
    "clean_message": "Thank you for the PR -lee! This is now in master.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/5495#issuecomment-406071347",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Funny enough, I had a similar version before (with `with` instead of `using` but hey) and I too find the double `on` sub-optimal. I decided to append it at the end to less likely break it for anyone parsing this log statement - (I've seen people do this for startup statistics).\r\n\r\nI'm totally fine with what you suggested. Let me know if I should change it.",
    "clean_message": "Funny enough, I had a similar version before (with  instead of  but hey) and I too find the double  sub-optimal. I decided to append it at the end to less likely break it for anyone parsing this log statement - (I've seen people do this for startup statistics). I'm totally fine with what you suggested. Let me know if I should change it.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/21559#issuecomment-637511192",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hello, @philwebb !\n\nI don't know what was wrong (may be just my hands :smile: during release), but I asked @trevormarshall for the help about promoting from our `libs-release-local`.\nMaybe you have some advice how to be ?\n\nThanks\n",
    "clean_message": "Hello,  ! I don't know what was wrong (may be just my hands :smile: during release), but I asked  for the help about promoting from our . Maybe you have some advice how to be ? Thanks",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/6414#issuecomment-233483527",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@jvz it's been a while since this PR was opened and I'd like to understand how relevant it is. Can you please update us with the current sate of affair?",
    "clean_message": "it's been a while since this PR was opened and I'd like to understand how relevant it is. Can you please update us with the current sate of affair?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7992#issuecomment-465558215",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Signed on behalf of corporation, Vidku, Inc.\n",
    "clean_message": "Signed on behalf of corporation, Vidku, Inc.",
    "message_url": "https://github.com/google/ExoPlayer/pull/1513#issuecomment-218269405",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> Updating the parent workflow when subworkflow completes is a synchronous operation currently, which does not seem to be changed as part of this PR. However, the tests seem to suggest otherwise. Please verify if this is a side-effect.\r\n> \r\n> The long-term idea that we discussed was to make this asynchronous as well, so maybe that is the direction we need to move in. This would need some changes in the WorkflowExecutor on top of what has been done for retry/restart.\r\n\r\nBoth the `completeWorkflow` and `terminateWorkflow` methods push the parent workflow id to the `_deciderQueue` and don't call `decide` synchronously. This is the reason the tests need to call `WorkflowSweeper.sweep()` for the parent workflow state to be updated. The subworkflow still accesses the parent workflow's task synchronously and updates it.",
    "clean_message": "Both the  and  methods push the parent workflow id to the  and don't call  synchronously. This is the reason the tests need to call  for the parent workflow state to be updated. The subworkflow still accesses the parent workflow's task synchronously and updates it.",
    "message_url": "https://github.com/Netflix/conductor/pull/2125#issuecomment-799577924",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "These days we're trying to only add media types as entries only if Spring projects have a specific support for that, or if this type is officially added by containers we're in sync with. In the interest of efficiency, we won't add that one right now.\r\n\r\nThanks!",
    "clean_message": "These days we're trying to only add media types as entries only if Spring projects have a specific support for that, or if this type is officially added by containers we're in sync with. In the interest of efficiency, we won't add that one right now. Thanks!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/23234#issuecomment-689409414",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@mattrjacobs I have finished adding Unit tests and Javadoc. The only thing I noticed/changed is how the HystrixPlugin is loaded as a singleton eagerly.\n\n``` java\n    //We should not load unless we are requested to. This avoids accidental initialization. @agentgt\n    //See https://en.wikipedia.org/wiki/Initialization-on-demand_holder_idiom\n    private static class LazyHolder { private static final HystrixPlugins INSTANCE = HystrixPlugins.create(); }\n```\n\nI prefer lazy loading so you don't accidentally kick off loading by just importing `HystrixPlugin`. There is a slight chance this could affect backward compatibility and or performance (but this is very dubious). This may have been even done on purpose. Perhaps @benjchristensen would know?\n\nLet me know if and when you want me to squash the commits.\n",
    "clean_message": "I have finished adding Unit tests and Javadoc. The only thing I noticed/changed is how the HystrixPlugin is loaded as a singleton eagerly. I prefer lazy loading so you don't accidentally kick off loading by just importing . There is a slight chance this could affect backward compatibility and or performance (but this is very dubious). This may have been even done on purpose. Perhaps  would know? Let me know if and when you want me to squash the commits.",
    "message_url": "https://github.com/Netflix/Hystrix/pull/1083#issuecomment-179297083",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "And I forgot to update the doc as part of the polish.",
    "clean_message": "And I forgot to update the doc as part of the polish.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/9669#issuecomment-317646548",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I just realized you're the author of Traute. I sorry we couldn't use it ourselves, but I'm sure for many projects will find it a very nice way to reduce boilerplate. Good luck with project!",
    "clean_message": "I just realized you're the author of Traute. I sorry we couldn't use it ourselves, but I'm sure for many projects will find it a very nice way to reduce boilerplate. Good luck with project!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/11128#issuecomment-346739287",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@wilkinsona , @snicoll , I addressed your concerns and rebased to the `master`.\nWill hope that I have guessed what you mean :smile: \n\nThank you for taking a look though :smile: \n",
    "clean_message": ",  , I addressed your concerns and rebased to the . Will hope that I have guessed what you mean :smile:  Thank you for taking a look though :smile: ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/6154#issuecomment-225967883",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Any recent movement on this issue? We recently hit this problem when upgrading Bouncy Castle from 1.65 to 1.66 in our applications. When running the Spring Boot Plugin created uber jar we started to see a 20 - 30 second hit to our startup time when initializing Bouncy Castle. If we do a \"classic\" -cp style execution of the same application then there is no startup performance problems. We also noticed this only occurs on Java 11 and the problem did not exist if we ran against Java 8 (we didn't try any non-LTS releases of Java).\r\n\r\nNothing in the Bouncy Castle 1.66 release notes really jumped out at us as a potential cause and then we stumbled upon this PR. We did notice that the bcprov-jdk15on-1.65.jar was ~4.25MB in size vs the bcprov-jdk15on-1.66.jar which is ~5.61MB. Looking into a bit more and the META-INF for 1.66 is significantly larger than 1.65. So if this problem is anything like the bug referenced by @gjd6640 above then the steep increase in initialization time would make sense.\r\n\r\nFor the time being we are going to downgrade to Bouncy Castle 1.65 but that is obviously not a long-term solution. We are willing to help test or validate any proposed solution here.",
    "clean_message": "Any recent movement on this issue? We recently hit this problem when upgrading Bouncy Castle from 1.65 to 1.66 in our applications. When running the Spring Boot Plugin created uber jar we started to see a 20 - 30 second hit to our startup time when initializing Bouncy Castle. If we do a \"classic\" -cp style execution of the same application then there is no startup performance problems. We also noticed this only occurs on Java 11 and the problem did not exist if we ran against Java 8 (we didn't try any non-LTS releases of Java). Nothing in the Bouncy Castle 1.66 release notes really jumped out at us as a potential cause and then we stumbled upon this PR. We did notice that the bcprov-jdk15on-1.65.jar was ~4.25MB in size vs the bcprov-jdk15on-1.66.jar which is ~5.61MB. Looking into a bit more and the META-INF for 1.66 is significantly larger than 1.65. So if this problem is anything like the bug referenced by  above then the steep increase in initialization time would make sense. For the time being we are going to downgrade to Bouncy Castle 1.65 but that is obviously not a long-term solution. We are willing to help test or validate any proposed solution here.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/19041#issuecomment-670586927",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@snicoll I've restructured the section and added more general instructions on how to use JAXB.",
    "clean_message": "I've restructured the section and added more general instructions on how to use JAXB.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/16005#issuecomment-466665545",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@JakeWharton merging. Please review and send me feedback, and I will incorporate it in another PR",
    "clean_message": "merging. Please review and send me feedback, and I will incorporate it in another PR",
    "message_url": "https://github.com/google/gson/pull/1311#issuecomment-387860521",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "@ShinDongHun1, thanks for your patience.\r\n\r\nI put together a pretty simple test to measure performance differences with this code change. I tested just the method `cache.saveRequest(request, response)` with 100,000,000 iterations, and ran the test a number of times before and after the code change. The request that was saved included 4 headers, 4 cookies, 4 preferred locales and 4 parameters, causing the constructor to do some work on each iteration.\r\n\r\nThere were no discernible differences with the default configuration for `HttpSessionRequestCache`. However, with `cache.setCreateSessionAllowed(false)`:\r\n\r\nBefore code change:\r\n\r\n* Average ~1,464 nanoseconds per `saveRequest`\r\n\r\nAfter code change:\r\n\r\n* Average ~114 nanoseconds per `saveRequest`\r\n\r\nSo we save about 1.35 microseconds per request. This is pretty small, but proves that the performance impact is non-negligible. It's worth noting that most applications would use the `NullRequestCache` in the stateless scenario (`sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)` or even `SessionCreationPolicy.NEVER`), so I'm not sure many applications will benefit from this. Still, this is another way to configure the application to avoid session creation when desired and may improve performance in that case.",
    "clean_message": ", thanks for your patience. I put together a pretty simple test to measure performance differences with this code change. I tested just the method  with 100,000,000 iterations, and ran the test a number of times before and after the code change. The request that was saved included 4 headers, 4 cookies, 4 preferred locales and 4 parameters, causing the constructor to do some work on each iteration. There were no discernible differences with the default configuration for . However, with : Before code change:  Average ~1,464 nanoseconds per   After code change:  Average ~114 nanoseconds per   So we save about 1.35 microseconds per request. This is pretty small, but proves that the performance impact is non-negligible. It's worth noting that most applications would use the  in the stateless scenario ( or even ), so I'm not sure many applications will benefit from this. Still, this is another way to configure the application to avoid session creation when desired and may improve performance in that case.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/11666#issuecomment-1226261263",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@nlebas @jzheaux The same change needs to be applied to the reactive counterpart. I added #6195",
    "clean_message": "The same change needs to be applied to the reactive counterpart. I added #6195",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6150#issuecomment-443172222",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@ojw28 Calling format multiple times on the `TrackOutput` causes the video to freeze while testing. My test bitstream currently appends display orientation SEI every 150 frames for a 30 FPS video. Are there any limitations or rules to the `format()` method I should be aware of?",
    "clean_message": "Calling format multiple times on the  causes the video to freeze while testing. My test bitstream currently appends display orientation SEI every 150 frames for a 30 FPS video. Are there any limitations or rules to the  method I should be aware of?",
    "message_url": "https://github.com/google/ExoPlayer/pull/7497#issuecomment-644459916",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@snicoll thanks, the API is published with Hazelcast 4.0.2 and I am now working on this to finalize. \r\n\r\n> My initial reaction is that it's a lot of reflection code. I had hoped that the change would have been a bit less invasive.\r\n\r\nYes, unfortunately we had to check for 3 classes within the new API to make it work together with Hazelcast 3.x and 4.x. The good news is I used `MethodHandle`s, which won't add any performance drawbacks. \r\n\r\nAs I mentioned, I am working to finalize and I will let you know about my updates.\r\n",
    "clean_message": "thanks, the API is published with Hazelcast 4.0.2 and I am now working on this to finalize.  Yes, unfortunately we had to check for 3 classes within the new API to make it work together with Hazelcast 3.x and 4.x. The good news is I used s, which won't add any performance drawbacks.  As I mentioned, I am working to finalize and I will let you know about my updates.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/20881#issuecomment-655556917",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks. Would going all the way to 2.3.3 be worse for your dependency-agreement efforts?",
    "clean_message": "Thanks. Would going all the way to 2.3.3 be worse for your dependency-agreement efforts?",
    "message_url": "https://github.com/google/guava/pull/3439#issuecomment-481832123",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Aaah, ok.",
    "clean_message": "Aaah, ok.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/26311#issuecomment-853138163",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@ksmilek-wr thank you for making your first contribution to Spring Boot.",
    "clean_message": "-wr thank you for making your first contribution to Spring Boot.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/22760#issuecomment-671317011",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks again. Having recalled that `StatisticsHandler` is a `HandlerWrapper` and looked a bit more closely at [Jetty's documentation](https://www.eclipse.org/jetty/documentation/current/statistics-handler.html), I don't think this PR is taking the right approach to configuring statistics. It's not completely clear from the XML, but I believe you need to create a `StatisticsHandler` and use it to wrap the server's existing `Handler`. You can see an example of this wrapping here: https://github.com/spring-projects/spring-boot/blob/ae45b6730b99025e457feda72a49bef78a1727f2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyServletWebServerFactory.java#L179-L189.\r\n",
    "clean_message": "Thanks again. Having recalled that  is a  and looked a bit more closely at Jetty's documentation, I don't think this PR is taking the right approach to configuring statistics. It's not completely clear from the XML, but I believe you need to create a  and use it to wrap the server's existing . You can see an example of this wrapping here: .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/12128#issuecomment-367041038",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks a lot!\n",
    "clean_message": "Thanks a lot!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4446#issuecomment-156154772",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Begging your pardon, but how do I wire up a minimal embedded setup using that for test purposes? So far, I have the following code, but I don't know how to bridge that to either `EmbeddedWebApplicationContext` or `ServletRegstirationBean`. What's missing so I can test my changes?\n\n``` java\n    @Test\n    public void containerWithAutomatedMultipartTomcatConfiguration() {\n        this.context = new AnnotationConfigEmbeddedWebApplicationContext(\n                ContainerWithEverythingTomcat.class,\n                MultipartAutoConfiguration.class);\n        try {\n            assertNotNull(this.context.getBean(MultipartConfigElement.class));\n            assertNotNull(this.context.getBean(StandardServletMultipartResolver.class));\n        } finally {\n            this.context.close();\n        }\n    }\n\n    @Configuration\n    public static class ContainerWithEverythingTomcat {\n        @Bean\n        MultipartConfigElement multipartConfigElement() {\n            return new MultipartConfigElement(\"\");\n        }\n\n        @Bean\n        TomcatEmbeddedServletContainerFactory containerFactory() {\n            return new TomcatEmbeddedServletContainerFactory();\n        }\n    }\n```\n",
    "clean_message": "Begging your pardon, but how do I wire up a minimal embedded setup using that for test purposes? So far, I have the following code, but I don't know how to bridge that to either  or . What's missing so I can test my changes?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/2#issuecomment-19413226",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Yeah looking back on my arguments against doing this, they're not very convincing :).  This way is certainly way simpler than trying to cache failures just during injector creation.  So +1 for this approach from me, except for the change to `Errors`.\n",
    "clean_message": "Yeah looking back on my arguments against doing this, they're not very convincing :).  This way is certainly way simpler than trying to cache failures just during injector creation.  So +1 for this approach from me, except for the change to .",
    "message_url": "https://github.com/google/guice/pull/883#issuecomment-66341009",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the suggestion, @dreis2211. I'd prefer to keep the message enabled for local builds. I think it provides useful information for contributors who aren't familiar with the version of Gradle that we're using.",
    "clean_message": "Thanks for the suggestion, . I'd prefer to keep the message enabled for local builds. I think it provides useful information for contributors who aren't familiar with the version of Gradle that we're using.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/25264#issuecomment-778597357",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@dawn9117 If you would like us to look at this issue, please provide the information requested in #8866. If the information is not provided within the next 7 days this issue will be closed.",
    "clean_message": "If you would like us to look at this issue, please provide the information requested in #8866. If the information is not provided within the next 7 days this issue will be closed.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/8867#issuecomment-855686975",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Since RC1 is around the corner, heads-up that reactive bits of #5918 need to get reverted. Or maybe all of it, if this PR doesn't make the cut.",
    "clean_message": "Since RC1 is around the corner, heads-up that reactive bits of #5918 need to get reverted. Or maybe all of it, if this PR doesn't make the cut.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/5994#issuecomment-505160556",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Closing this in favor of #858, with the assertions added @skyguard1 \r\n",
    "clean_message": "Closing this in favor of #858, with the assertions added  ",
    "message_url": "https://github.com/Netflix/zuul/pull/838#issuecomment-663129355",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the PR. This auto-configuration doesn't feel like a natural fit for inclusion in Spring Boot. IMO, it would be better as a third-party starter. We could then add it to the [list of such starters](https://github.com/spring-projects/spring-boot/tree/master/spring-boot-starters#community-contributions)\n",
    "clean_message": "Thanks for the PR. This auto-configuration doesn't feel like a natural fit for inclusion in Spring Boot. IMO, it would be better as a third-party starter. We could then add it to the list of such starters",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5231#issuecomment-188714396",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the PR. Sorry, I didn't see this until after a build had failed for me locally and I had pushed the fix.",
    "clean_message": "Thanks for the PR. Sorry, I didn't see this until after a build had failed for me locally and I had pushed the fix.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/15975#issuecomment-464702350",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@shakuzen M2 is approaching, any news about this one? Thanks!\n",
    "clean_message": "M2 is approaching, any news about this one? Thanks!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5158#issuecomment-202889981",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@ptreitler Unfortunately, when the audio and/or video codec is not supported on the device there is no fix to it. I also have a Samsung S7 and I have the same issue. :(",
    "clean_message": "Unfortunately, when the audio and/or video codec is not supported on the device there is no fix to it. I also have a Samsung S7 and I have the same issue. :(",
    "message_url": "https://github.com/google/ExoPlayer/pull/3854#issuecomment-386275765",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@jrtom I found 26 hits inside google using \"Iterables\\.get\\(.*random\", which is more than you, but still fairly low on the ubiquity scale.\r\n\r\nI'm also generally -1 on this proposal (all of the above comments are good), but I'm happy to leave this open in the \"research\" category in case other folks want to make a stronger case for it.\r\n\r\nIn the case that you have a `List` (which I suspect is the majority case), we're not actually saving much:\r\n`list.get(random.nextInt(list.size()); // before`\r\n`Iterables.getRandom(list, random); // after`\r\n\r\nIf you have an `Iterable`/`Collection`, sure it's a little longer, but still not that much of a savings:\r\n`Iterables.get(iterable, random.nextInt(Iterables.size(iterable))); // before`\r\n`Iterables.getRandom(iterable, random); // after`",
    "clean_message": "I found 26 hits inside google using \"Iterables.get(.*random\", which is more than you, but still fairly low on the ubiquity scale. I'm also generally -1 on this proposal (all of the above comments are good), but I'm happy to leave this open in the \"research\" category in case other folks want to make a stronger case for it. In the case that you have a  (which I suspect is the majority case), we're not actually saving much: If you have an /, sure it's a little longer, but still not that much of a savings:",
    "message_url": "https://github.com/google/guava/pull/3266#issuecomment-422073026",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for approval and merge @qiangdavidliu !\r\nMay I ask, when should we expect next release to happen?",
    "clean_message": "Thanks for approval and merge  ! May I ask, when should we expect next release to happen?",
    "message_url": "https://github.com/Netflix/eureka/pull/1107#issuecomment-410601642",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for doing this!\r\n\r\nSome remarks:\r\n1. Can you avoid moving methods around? It makes reviewing harder.\r\n2. Some of the formatting changes are a bit distracting. Fixing indentation to be consistent with Google style (+4 continuation lines) is good, but for example there's no need to split `new TypeToken<Foo>() {}.getType()` between the braces.\r\n3. Your test failure is due to a subtle problem with ProGuard. `EnumWithObfuscatedTest` verifies that enum serialization works even when the code is processed by ProGuard. The ProGuard configuration [here](https://github.com/google/gson/blob/4aaf1385db5ffbc99de7411e5e80201fd8da7f3c/gson/src/test/resources/testcases-proguard.conf#L17) needs to be adjusted to reflect the change of `setUp` from `protected` to `public`. (That ProGuard just silently ignores `setUp` because it's specified with the wrong modifier seems pretty hostile to me, but there it is.)",
    "clean_message": "Thanks for doing this! Some remarks: 1. Can you avoid moving methods around? It makes reviewing harder. 2. Some of the formatting changes are a bit distracting. Fixing indentation to be consistent with Google style (+4 continuation lines) is good, but for example there's no need to split EnumWithObfuscatedTestsetUpprotectedpublicsetUp` because it's specified with the wrong modifier seems pretty hostile to me, but there it is.)",
    "message_url": "https://github.com/google/gson/pull/2291#issuecomment-1359653140",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "- Those `@Override`s can't be added, as explained: `@SuppressWarnings(\"MissingOverride\") // Supermethod does not exist under GWT.`\r\n- There's no reason to extract that `Pattern`, as the `newMatchResult()` method itself is only called once.",
    "clean_message": " Those s can't be added, as explained:  There's no reason to extract that , as the  method itself is only called once. ",
    "message_url": "https://github.com/google/guava/pull/5383#issuecomment-762981072",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Though sadly we can't really test it for real real until it's merged. :/\n",
    "clean_message": "Though sadly we can't really test it for real real until it's merged. :/",
    "message_url": "https://github.com/google/guice/pull/813#issuecomment-48518148",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "> h264 and mpeg4 support now perfectly .\r\n> exoplayer support wide range of IP camera .special thanks @portizb\r\n> do you know what other video format IP camera have that Exoplayer don't support ?\r\n\r\n@rezarazavim Yes, Motion JPEG and H265 video formats are not yet supported on Exoplayer RTSP.\r\n",
    "clean_message": "Yes, Motion JPEG and H265 video formats are not yet supported on Exoplayer RTSP.",
    "message_url": "https://github.com/google/ExoPlayer/pull/3854#issuecomment-492757158",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> Thanks, @Drezir, for the updates!\r\n> \r\n> In addition to my inline feedback, will you please add some unit tests to `WebSecurityTests` for the new method and to a class called `CompositeRequestRejectedHandlerTests` for the new class? Remember to place those tests in their respective commits.\r\n\r\nI have added some tests, thanks to that I have discovered one problem so the tests have proven that they are useful :+1:\r\nI did not want to squash commits during code review, would you like me to do it and organize it like 1st commit for CompositeHandler and  2nd commit for WebSecurity setter?",
    "clean_message": "I have added some tests, thanks to that I have discovered one problem so the tests have proven that they are useful :+1: I did not want to squash commits during code review, would you like me to do it and organize it like 1st commit for CompositeHandler and  2nd commit for WebSecurity setter?",
    "message_url": "https://github.com/spring-projects/spring-security/pull/10603#issuecomment-994998140",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Does this *require* an ownerEmail now on a task?",
    "clean_message": "Does this require an ownerEmail now on a task?",
    "message_url": "https://github.com/Netflix/conductor/pull/1430#issuecomment-565628791",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the updated PR. Unfortunately we won't be able to upgrade until the passivity issues are fixed. The reason for this is that it will potentially break users that are using the non-passive APIs. Furthermore, if they are interested in upgrading the CAS client it is very simple for them to declare the updated version.\n\nAlso note that running \"./gradlew build\" will fail with a NullPointerException in the CAS integration tests after making these changes due to https://issues.jasig.org/browse/CASC-223\n",
    "clean_message": "Thanks for the updated PR. Unfortunately we won't be able to upgrade until the passivity issues are fixed. The reason for this is that it will potentially break users that are using the non-passive APIs. Furthermore, if they are interested in upgrading the CAS client it is very simple for them to declare the updated version. Also note that running \"./gradlew build\" will fail with a NullPointerException in the CAS integration tests after making these changes due to ",
    "message_url": "https://github.com/spring-projects/spring-security/pull/86#issuecomment-40876216",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "rebased to latest dev-v2.  There is still some funkyness if you jump around in a true hd clip with the latest code.  It didn't happen before when I was buffering, but without the buffering it gets weird.  Going to look into this again soon (hopefully).",
    "clean_message": "rebased to latest dev-v2.  There is still some funkyness if you jump around in a true hd clip with the latest code.  It didn't happen before when I was buffering, but without the buffering it gets weird.  Going to look into this again soon (hopefully).",
    "message_url": "https://github.com/google/ExoPlayer/pull/2136#issuecomment-308915631",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@gkorland thank you for the PR but we don't need those as we have a semi-automated process to upgrade dependencies and we'll upgrade this one in due course.\r\n\r\n(There is a note about that in the template when you submit a PR).",
    "clean_message": "thank you for the PR but we don't need those as we have a semi-automated process to upgrade dependencies and we'll upgrade this one in due course. (There is a note about that in the template when you submit a PR).",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/15858#issuecomment-461091942",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Have decided against this design change. Yes it makes it more difficult to cause a memory leak, but it does it at the expense of a more awkward API that doesn't match the rest of the strategy pattern classes.\n\nThe Javadocs are clear on the contract that initialize() is the only place where publishing should occur - I'll leave it at for now instead of a late change such as this.\n",
    "clean_message": "Have decided against this design change. Yes it makes it more difficult to cause a memory leak, but it does it at the expense of a more awkward API that doesn't match the rest of the strategy pattern classes. The Javadocs are clear on the contract that initialize() is the only place where publishing should occur - I'll leave it at for now instead of a late change such as this.",
    "message_url": "https://github.com/Netflix/Hystrix/pull/2#issuecomment-10675070",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks @dreis2211, I've merged this to 2.3.x and master. ",
    "clean_message": "Thanks , I've merged this to 2.3.x and master. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/21732#issuecomment-640097944",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Oops, good catch. We should add more tests because some should have covered us when we did the refactoring. I discussed with @mp911de about it unless you want to give that a try? ",
    "clean_message": "Oops, good catch. We should add more tests because some should have covered us when we did the refactoring. I discussed with  about it unless you want to give that a try? ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/9583#issuecomment-310838763",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I built what got merged (release-v2) and it's failing on most of my samples.  It appears most of the clock/AV sync code was removed.  This is what needs to get added back in (in order) to get a functional release:\r\n\r\n1. The clock code.  Since AVI does not store PTS for each frame, it needs to be generated via some sort of clock generator.\r\n2. The XXX ChunkHandler, this code feeds the clock and keeps it in sync with the stream.  Usually you will need one of these per codec.  Probably the most import are MP4V and MpegAudio.\r\n3. The Audio Stream positioning in the SeekMap.  The audio stream is muxed in chunks (groups of frames), not frames.  The audio frame number is stored for each video frame that can be seeked to sync audio clock.  I'll admit that my impl. is hard to follow, but it's hard to store all that info efficiently.  Note:  Some streams (MJPEG) are 100% key frames, so just storing the key frames can be problematic.\r\n\r\nIt would be nice to have back the code that fixes up the aspect ratio based on the underlying codec data.  A lot of the AVI muxers don't pick up on the anamorphic flags in the video stream when muxing.  This results in the video being played back with the wrong aspect ratio.",
    "clean_message": "I built what got merged (release-v2) and it's failing on most of my samples.  It appears most of the clock/AV sync code was removed.  This is what needs to get added back in (in order) to get a functional release:  The clock code.  Since AVI does not store PTS for each frame, it needs to be generated via some sort of clock generator. The XXX ChunkHandler, this code feeds the clock and keeps it in sync with the stream.  Usually you will need one of these per codec.  Probably the most import are MP4V and MpegAudio. The Audio Stream positioning in the SeekMap.  The audio stream is muxed in chunks (groups of frames), not frames.  The audio frame number is stored for each video frame that can be seeked to sync audio clock.  I'll admit that my impl. is hard to follow, but it's hard to store all that info efficiently.  Note:  Some streams (MJPEG) are 100% key frames, so just storing the key frames can be problematic.  It would be nice to have back the code that fixes up the aspect ratio based on the underlying codec data.  A lot of the AVI muxers don't pick up on the anamorphic flags in the video stream when muxing.  This results in the video being played back with the wrong aspect ratio.",
    "message_url": "https://github.com/google/ExoPlayer/pull/9915#issuecomment-1164443664",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I'm confused. I cannot reproduce the issue you're describing with Spring Boot 2.6.5. Could you provide a sample application that shows the problem?\r\n\r\nAlso, checking for the presence of `ViewResolver` classes on the classpath looks strange to me. The `@ConditionalOnWebApplication` condition already performs classpath checks on classes that are in spring-webmvc or spring-webflux JARs.",
    "clean_message": "I'm confused. I cannot reproduce the issue you're describing with Spring Boot 2.6.5. Could you provide a sample application that shows the problem? Also, checking for the presence of  classes on the classpath looks strange to me. The  condition already performs classpath checks on classes that are in spring-webmvc or spring-webflux JARs.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/30456#issuecomment-1081485265",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Yeah, it's a bit frustrating that there isn't a way to log debug info at a different level. I'll take another look to see if we can put it back.\n",
    "clean_message": "Yeah, it's a bit frustrating that there isn't a way to log debug info at a different level. I'll take another look to see if we can put it back.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/2288#issuecomment-69062720",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "The prebuild failed after almost an hour with the following message\r\n\r\n> \"We are having trouble connecting to the server. Either you are offline or websocket connections are blocked.\"\r\n\r\nClicking `Skip Prebuild` then allowed the IDE to open in my browser but there's no Java extension installed. I can open the code, but it's treated as plain text.\r\n\r\nUnfortunately, it's getting increasingly difficult to justify spending more time on this. Flagging for discussion at a team meeting so that we can decide what we want to do.",
    "clean_message": "The prebuild failed after almost an hour with the following message Clicking  then allowed the IDE to open in my browser but there's no Java extension installed. I can open the code, but it's treated as plain text. Unfortunately, it's getting increasingly difficult to justify spending more time on this. Flagging for discussion at a team meeting so that we can decide what we want to do.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/31185#issuecomment-1188910841",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@szantopeter Sorry. We would normally have taken a bit more time to give you a chance to make the suggested updates but we're trying to finish off 1.5.4 which is due on Thursday. Please don't misinterpret the PR not being merged as us not appreciating your efforts.",
    "clean_message": "Sorry. We would normally have taken a bit more time to give you a chance to make the suggested updates but we're trying to finish off 1.5.4 which is due on Thursday. Please don't misinterpret the PR not being merged as us not appreciating your efforts.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/9360#issuecomment-306465390",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@benas - I'm seeing the same behavior on a COMPLETED job. Just trying to run multiple times with a different parameter  value for `localFilePath`.  Works fine for non-id parameter `-localFilePath`",
    "clean_message": " I'm seeing the same behavior on a COMPLETED job. Just trying to run multiple times with a different parameter  value for .  Works fine for non-id parameter  ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/14933#issuecomment-433171390",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@philwebb thank you for double check and your help!",
    "clean_message": "thank you for double check and your help!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/11760#issuecomment-360372124",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "After some consideration we've decided that we'd rather not add product specific log messages. Although it seems like a good idea, there are lots of other reasons why this exception could be thrown and adding a specific message could be confusing in those cases. We also don't really want to start adding specific code paths for issues that should ultimately be fixed upstream.\n\nHopefully people searching for the problem will find this issue, or the [stackoverflow answer](http://stackoverflow.com/a/30241983/1526192) until [IDEA-107048](https://youtrack.jetbrains.com/issue/IDEA-107048) gets fixed.\n",
    "clean_message": "After some consideration we've decided that we'd rather not add product specific log messages. Although it seems like a good idea, there are lots of other reasons why this exception could be thrown and adding a specific message could be confusing in those cases. We also don't really want to start adding specific code paths for issues that should ultimately be fixed upstream. Hopefully people searching for the problem will find this issue, or the stackoverflow answer until IDEA-107048 gets fixed.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4830#issuecomment-173344337",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@frankgrimes97 See these comments here: https://github.com/google/guice/issues/1198#issuecomment-423221773 - Seems like we get an updated Guice very soon.",
    "clean_message": "See these comments here:  - Seems like we get an updated Guice very soon.",
    "message_url": "https://github.com/google/guice/pull/1203#issuecomment-425088685",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "All,  If we went with allowing a \".conf\" file to be included in the project, would we add \"embeddedLaunchConfig\" or \"embeddedLaunchConf\" at the same level as \"embeddedLaunchScript\"?  Or would you see it as another embeddedLaunchScriptProperties?\r\n\r\nEither way, procedurally how should we move forward?  A separate issue with a new pull request or edit this one?  I'm happy to do the development, but I'm not sure we would make the next 1.5.x release.",
    "clean_message": "All,  If we went with allowing a \".conf\" file to be included in the project, would we add \"embeddedLaunchConfig\" or \"embeddedLaunchConf\" at the same level as \"embeddedLaunchScript\"?  Or would you see it as another embeddedLaunchScriptProperties? Either way, procedurally how should we move forward?  A separate issue with a new pull request or edit this one?  I'm happy to do the development, but I'm not sure we would make the next 1.5.x release.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/9375#issuecomment-305569478",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the fast PR! I have added feedback to the code.\n",
    "clean_message": "Thanks for the fast PR! I have added feedback to the code.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/3700#issuecomment-184219399",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks, Gary. This one feels a little bit different to me as there's a setter on container factory whereas other additions (such as https://github.com/spring-projects/spring-boot/issues/19220) have directly mapped one of our properties to a Kafka property.\r\n\r\nIt doesn't sound like you have an objection so I think it makes sense to add this one, particularly given the setter in Spring Kafka.\r\n\r\n@pascal-ayotte Do you have time to update your proposal to add a `private Duration idlePartitionEventInterval` field to `KafkaProperties` and the corresponding getter and setter methods?",
    "clean_message": "Thanks, Gary. This one feels a little bit different to me as there's a setter on container factory whereas other additions (such as ) have directly mapped one of our properties to a Kafka property. It doesn't sound like you have an objection so I think it makes sense to add this one, particularly given the setter in Spring Kafka. -ayotte Do you have time to update your proposal to add a  field to  and the corresponding getter and setter methods?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/28290#issuecomment-940815880",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "> Unless it's impossible, I really think that Byte Buddy is the right place to fix this, rather than us heading down a slippery slope of introducing point fixes as these problems are encountered.\n\nIt is impossible. Upon using core reflection of a class, the JVM always eagerly asserts the consistency of a type. It does not matter if `getField`, `getDeclaredField` or any other method is called. The JVM does not allow the use of reflection on an invalidly linked class.\n\n> This is clearly false.  The JVM has no problem whatsoever with the signature of BeanDefinitionLoader when it's used as intended. \n\nIt does have a problem with it, therefore the `NoClassDefFoundError` is emitted upon linking the Spring Boot class. The only reason that it works today is the fact that HotSpot links types lazily as suggested in [JVMS \u00a75.4](https://docs.oracle.com/javase/specs/jvms/se7/html/jvms-5.html#jvms-5.5):\n\n> For example, a Java Virtual Machine implementation may choose to resolve each symbolic reference in a class or interface individually when it is used (\"lazy\" or \"late\" resolution), or to resolve them all at once when the class is being verified (\"eager\" or \"static\" resolution). This means that the resolution process may continue, in some implementations, after a class or interface has been initialized. Whichever strategy is followed, any error detected during resolution must be thrown at a point in the program that (directly or indirectly) uses a symbolic reference to the class or interface. \n\nAt the same time, the JVMS does not give any guarantees about lazy resolution. Spring Boot does therefore violate the specification and would not work on a spec-confirmant VM that applies eager linkage. Furthermore, with project Jigsaw in place, the module verification step would trigger a full linkage even without any third-party interaction. You are coding against the implementation, not the specification. This does not make this a legal pattern to be applied on the JVM, this goes for the current implementation as for the suggested `GroovyReader` alternative. Strictly speaking, only reflective access of optional types is a legal pattern. This is also how Byte Buddy implements it itself to function on Android where linkage is applied eagerly.\n\n> In short, you're using an internal class in a way that was never intended.\n\nNeither the instrumentation or reflection APIs are explicitly bound to visibility scopes. A good example for this behavior is the usage of reflection by the Spring framework itself. Ironically, your own framework could not \"work-arround\" such a limitation if other people impelented a patter as the one that you suggest. As for reflection, only access of non-visible members is guarded and checked by a `SecurityManager`. And even if this was true, if you ever declared a public subclass or implemented a public interface of the class in question, calling `getField` on this class would result in the same error.\n\nThis is a bug in Spring Boot.\n",
    "clean_message": "It is impossible. Upon using core reflection of a class, the JVM always eagerly asserts the consistency of a type. It does not matter if ,  or any other method is called. The JVM does not allow the use of reflection on an invalidly linked class. It does have a problem with it, therefore the  is emitted upon linking the Spring Boot class. The only reason that it works today is the fact that HotSpot links types lazily as suggested in JVMS \u00a75.4: At the same time, the JVMS does not give any guarantees about lazy resolution. Spring Boot does therefore violate the specification and would not work on a spec-confirmant VM that applies eager linkage. Furthermore, with project Jigsaw in place, the module verification step would trigger a full linkage even without any third-party interaction. You are coding against the implementation, not the specification. This does not make this a legal pattern to be applied on the JVM, this goes for the current implementation as for the suggested  alternative. Strictly speaking, only reflective access of optional types is a legal pattern. This is also how Byte Buddy implements it itself to function on Android where linkage is applied eagerly. Neither the instrumentation or reflection APIs are explicitly bound to visibility scopes. A good example for this behavior is the usage of reflection by the Spring framework itself. Ironically, your own framework could not \"work-arround\" such a limitation if other people impelented a patter as the one that you suggest. As for reflection, only access of non-visible members is guarded and checked by a . And even if this was true, if you ever declared a public subclass or implemented a public interface of the class in question, calling  on this class would result in the same error. This is a bug in Spring Boot.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5040#issuecomment-175661437",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Yes, I have signed it.\n",
    "clean_message": "Yes, I have signed it.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5453#issuecomment-203095937",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thank you! :smile: ",
    "clean_message": "Thank you! :smile: ",
    "message_url": "https://github.com/google/guice/pull/1108#issuecomment-632402252",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "`api` it is then.",
    "clean_message": "it is then.",
    "message_url": "https://github.com/google/guava/pull/3154#issuecomment-391498209",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": " I signed it",
    "clean_message": "I signed it",
    "message_url": "https://github.com/google/guice/pull/1195#issuecomment-401555629",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@vpavic are you willing to rework this PR in that direction?",
    "clean_message": "are you willing to rework this PR in that direction?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/6366#issuecomment-355298738",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the feedback. I've re-read the section and we're already mentioning quite advanced details about `@ComponentScan`. That nullifies my previous argument.",
    "clean_message": "Thanks for the feedback. I've re-read the section and we're already mentioning quite advanced details about . That nullifies my previous argument.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/26937#issuecomment-863008212",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thank you, @sdeleuze.",
    "clean_message": "Thank you, .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/32653#issuecomment-1276082281",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the PR. I'm inclined to leave those lines because they do explain the difference between the methods and the equivalent non-\"try\" method on Integer itself. It's true that the method doesn't throw if parsing fails, but parsing failing and the input being null are different things. I do see how it could be confusing, so I'm inclined to add explicit `@throws NullPointerException` to the Javadoc instead (even though that's not a thing we normally do). We've already done that in a similar cases, as pointed out in #1259.",
    "clean_message": "Thanks for the PR. I'm inclined to leave those lines because they do explain the difference between the methods and the equivalent non-\"try\" method on Integer itself. It's true that the method doesn't throw if parsing fails, but parsing failing and the input being null are different things. I do see how it could be confusing, so I'm inclined to add explicit  to the Javadoc instead (even though that's not a thing we normally do). We've already done that in a similar cases, as pointed out in #1259.",
    "message_url": "https://github.com/google/guava/pull/2806#issuecomment-537676430",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@akuma8 sorry that you were sick, I hope that you are feeling better now. Thank you for the updates.\r\n\r\nLet's please do two more changes:\r\n\r\n* First, will you please rebase your branch to resolve the conflict in the PR?\r\n* Second, will you please deprecate the old `Properties` method? This is a suggestion that @jgrandja made to me offline; my apologies that it wasn't in my initial review. To deprecate a method, please add both the `@Deprecated` annotation to the method and the `@deprecated` JavaDoc tag that includes instructions to use the new `Map` method you've created.",
    "clean_message": "sorry that you were sick, I hope that you are feeling better now. Thank you for the updates. Let's please do two more changes:  First, will you please rebase your branch to resolve the conflict in the PR? Second, will you please deprecate the old  method? This is a suggestion that  made to me offline; my apologies that it wasn't in my initial review. To deprecate a method, please add both the  annotation to the method and the  JavaDoc tag that includes instructions to use the new  method you've created. ",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7925#issuecomment-589273521",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "Thanks. Have you [signed the CLA](https://github.com/spring-projects/spring-boot/blob/master/CONTRIBUTING.adoc#sign-the-contributor-license-agreement)?\n",
    "clean_message": "Thanks. Have you signed the CLA?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/1931#issuecomment-63304899",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I think your Amazon address is part of that group, but you're using a Lab126 address that isn't. You need to get the Lab126 address added to the group, or use your Amazon address on GitHub. The bot does verify corp CLA signers, so you should be able to reply `I signed it!` once this is resolved.\n",
    "clean_message": "I think your Amazon address is part of that group, but you're using a Lab126 address that isn't. You need to get the Lab126 address added to the group, or use your Amazon address on GitHub. The bot does verify corp CLA signers, so you should be able to reply  once this is resolved.",
    "message_url": "https://github.com/google/ExoPlayer/pull/934#issuecomment-154718502",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@candrews This one has been flagged for team attention so that we discuss it on one of our calls.\r\n\r\nI'm personally not too keen on the lazy bean idea, it's not that common for auto-configurations. In this instant, it would be nice if we could configure `SessionManagementConfigurer` so that the `sessionRegistry` must be provided. It feels like the confusion is caused by the fact that `getSessionRegistry` creates the `SessionRegistryImpl` for you. If it actually failed and made you configure something, at least you'd be making a conscious choice.",
    "clean_message": "This one has been flagged for team attention so that we discuss it on one of our calls. I'm personally not too keen on the lazy bean idea, it's not that common for auto-configurations. In this instant, it would be nice if we could configure  so that the  must be provided. It feels like the confusion is caused by the fact that  creates the  for you. If it actually failed and made you configure something, at least you'd be making a conscious choice.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/21494#issuecomment-634222824",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Maybe my PR is not accurate and need to be improved. I allow edits from maintainers. \r\nI'm trying to improve docs for users without familiarity with Spring Security.\r\n\r\nConsider the next use case. \"A very busy developer\"\u2122 want to set up monitoring with Prometheus for a Spring Boot 2.1 app. They know:\r\n   \r\n  * Spring Boot app authorize with form-based auth (because it works in the browser)\r\n  * Prometheus cannot use form-based auth but can use HTTP Basic auth.\r\n\r\nThey search for more info in Spring Boot docs and finds:\r\n\r\n> Form-based login or HTTP Basic security (depending on Content-Type)\r\n\r\nWhat this?!! What HTTP Content-Type header do they need to pass to enable Basic Auth. Current documentation is really confusing!\r\n\r\nIn my case, I drilling into debug session, spend 1 hour and send this PR to help future users of Spring Boot 2.1 `/actuator` endpoint.\r\n\r\n",
    "clean_message": "Maybe my PR is not accurate and need to be improved. I allow edits from maintainers.  I'm trying to improve docs for users without familiarity with Spring Security. Consider the next use case. \"A very busy developer\"\u2122 want to set up monitoring with Prometheus for a Spring Boot 2.1 app. They know:  Spring Boot app authorize with form-based auth (because it works in the browser) Prometheus cannot use form-based auth but can use HTTP Basic auth.  They search for more info in Spring Boot docs and finds: What this?!! What HTTP Content-Type header do they need to pass to enable Basic Auth. Current documentation is really confusing! In my case, I drilling into debug session, spend 1 hour and send this PR to help future users of Spring Boot 2.1  endpoint.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/15549#issuecomment-450956333",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Ohhh ok, thank you \ud83d\ude03 ",
    "clean_message": "Ohhh ok, thank you \ud83d\ude03 ",
    "message_url": "https://github.com/google/gson/pull/2291#issuecomment-1360011495",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks anyway!",
    "clean_message": "Thanks anyway!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7619#issuecomment-266517164",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> Nothing at the moment, @StefanBratanov. Moritz is out for a few weeks on paternity leave so it may take us a little while to get to it. 3.0 doesn't GA until November so there's no rush at this stage.\r\n\r\nSure. No worries. Thank you for quick update. Congratulations to Moritz. \ud83d\ude42 ",
    "clean_message": "Sure. No worries. Thank you for quick update. Congratulations to Moritz. \ud83d\ude42 ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/30792#issuecomment-1115785037",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Also, if you add support for `14.04.4` (as you should) do you intend to keep the `14.04.3` test? IMO there's not much value in keeping it.\n\nAnd if there's a change in a point release that affects the test execution, you'd like to be aware of that ASAP, right?\n\nBoth of these cases are handled automatically by using `14.04` tag.\n",
    "clean_message": "Also, if you add support for  (as you should) do you intend to keep the  test? IMO there's not much value in keeping it. And if there's a change in a point release that affects the test execution, you'd like to be aware of that ASAP, right? Both of these cases are handled automatically by using  tag.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5397#issuecomment-196083758",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "It's unclear what this is trying to do. Note however we do not accept pull requests directly into the release branch.",
    "clean_message": "It's unclear what this is trying to do. Note however we do not accept pull requests directly into the release branch.",
    "message_url": "https://github.com/google/ExoPlayer/pull/6518#issuecomment-542683091",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "reply",
    "clean_message": "reply",
    "message_url": "https://github.com/google/gson/pull/1448#issuecomment-448403066",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@snicoll Thank you a lot for your time. ",
    "clean_message": "Thank you a lot for your time. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/12707#issuecomment-394317635",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@mashurex @apanicker-nflx I don't have any recent SQL Server experience so I wouldn't be a good resource to review this. As far as combining all sql-based database persistence modules, that is what we did before the Postgres module was introduced. We created a sql-persistence module. There were actually very few differences between MySQL and Postgres which we accommodated by having an interface for all query strings with default methods for the ones that were the same and the individual implementations would override what they needed to. This worked pretty well.\r\n\r\nThe problem that we faced with doing it that way is that our knowledge of MySQL started to dwindle and whenever we would make a change for Postgres we would also have to be on the hook for making the MySQL changes. Since we no longer had a MySQL DBMS inhouse we couldn't test the changes for that db. When the Postgres persistence module was introduced we decided to bag our implementation in favor of that one because of the logistics of contributing back.",
    "clean_message": "-nflx I don't have any recent SQL Server experience so I wouldn't be a good resource to review this. As far as combining all sql-based database persistence modules, that is what we did before the Postgres module was introduced. We created a sql-persistence module. There were actually very few differences between MySQL and Postgres which we accommodated by having an interface for all query strings with default methods for the ones that were the same and the individual implementations would override what they needed to. This worked pretty well. The problem that we faced with doing it that way is that our knowledge of MySQL started to dwindle and whenever we would make a change for Postgres we would also have to be on the hook for making the MySQL changes. Since we no longer had a MySQL DBMS inhouse we couldn't test the changes for that db. When the Postgres persistence module was introduced we decided to bag our implementation in favor of that one because of the logistics of contributing back.",
    "message_url": "https://github.com/Netflix/conductor/pull/2075#issuecomment-788079255",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Sorry for the late response; could you please update the pull request to resolve the merge conflicts?",
    "clean_message": "Sorry for the late response; could you please update the pull request to resolve the merge conflicts?",
    "message_url": "https://github.com/google/gson/pull/1760#issuecomment-1207504620",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This is close to what I've been using. I'd suggest the following changes:\r\n\r\n1. This shouldn't be called a `JsonTransform`. There are lots of ways of transforming JSON, this is very particular to jq.\r\n2. I would just use the whole inputData as the input. Additionally, I made an optional argument to instead use the entire task as the input to the transform, thus allowing access to things like the task ID.\r\n3. Cache the compiled queries (e.g. a Guava cache). \r\n4. Looks like a NullPointerException: `e.getCause().getMessage()`\r\n5. A list of one is still a list. The conversion of the result makes the output challenging to consume if you don't know the exact size ahead of time. I'd suggest something like the following.\r\n\r\n```\r\n            if (result == null) {\r\n                outputDataMap.put(\"result\", null);\r\n                outputDataMap.put(\"resultList\", null);\r\n            } else if (result.isEmpty()) {\r\n                outputDataMap.put(\"result\", null);\r\n                outputDataMap.put(\"resultList\", result);\r\n            } else {\r\n                outputDataMap.put(\"result\", result.get(0));\r\n                outputDataMap.put(\"resultList\", result);\r\n            }\r\n\r\n```",
    "clean_message": "This is close to what I've been using. I'd suggest the following changes:  This shouldn't be called a . There are lots of ways of transforming JSON, this is very particular to jq. I would just use the whole inputData as the input. Additionally, I made an optional argument to instead use the entire task as the input to the transform, thus allowing access to things like the task ID. Cache the compiled queries (e.g. a Guava cache).  Looks like a NullPointerException:  A list of one is still a list. The conversion of the result makes the output challenging to consume if you don't know the exact size ahead of time. I'd suggest something like the following. ",
    "message_url": "https://github.com/Netflix/conductor/pull/227#issuecomment-310532645",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This is really nice stuff, thanks!\n\nI need to make a few minor modification because the Flyway result wouldn't produce JSON and the ordering of auto-configurations needed to be tweaked. See 3995c16ba60bbeb1933c2233ffcab368655fb3c2 for the differences.\n",
    "clean_message": "This is really nice stuff, thanks! I need to make a few minor modification because the Flyway result wouldn't produce JSON and the ordering of auto-configurations needed to be tweaked. See 3995c16ba60bbeb1933c2233ffcab368655fb3c2 for the differences.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3435#issuecomment-119399296",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I think switching from `Closure` to `Action` would be a cleaner approach. Cleaner in the sense that it will avoid passing around the `Project` instance just to use its `configure` method.\r\n\r\n```java\r\npublic void upgrade(Closure<?> closure) {\r\n    ConfigureUtil.configure(closure, this.upgradeHandler);\r\n}\r\n\r\n// to\r\n\r\npublic void upgrade(Action<? super UpgradeHandler> action) {\r\n    action.execute(this.upgradeHandler);\r\n}\r\n```",
    "clean_message": "I think switching from  to  would be a cleaner approach. Cleaner in the sense that it will avoid passing around the  instance just to use its  method.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/26903#issuecomment-861993355",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> It is about \"the first on the list\" and there is no way to disable that behaviour.\r\n\r\nAgree with this and I understand your worries. \r\n\r\nAnother option can be adding a customizer.",
    "clean_message": "Agree with this and I understand your worries.  Another option can be adding a customizer.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/13502#issuecomment-398428695",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This is merged into dev-v2, but the git history got a bit messed so I'm having to manually close it as github hasn't detected it as \"merged\".",
    "clean_message": "This is merged into dev-v2, but the git history got a bit messed so I'm having to manually close it as github hasn't detected it as \"merged\".",
    "message_url": "https://github.com/google/ExoPlayer/pull/7199#issuecomment-619908173",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "So please update your PR!\n",
    "clean_message": "So please update your PR!",
    "message_url": "https://github.com/google/gson/pull/772#issuecomment-172562428",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> What would be the distribution of consumers of ExoPlayer that have Java-only codebases in contrast to mixed Java/Kotlin or Kotlin-only. Would be quite interesting to have that data publicly if you can provide it (on top of that, out of curiosity, of Google's media apps, like YouTube, Google Play Music, which ones are already bundling Kotlin? Universal Android Music Player was rebuilt from the ground up; so arguably there are more up to date Kotlin documentation than Java on that space).\r\n\r\nI'm not able to share that information here, sorry. Although I'd suggest that results from a survey of developers who use Kotlin as one of their primary programming languages is probably not the most reliable of indicators for measuring Kotlin adoption.\r\n\r\nWe will continue to look at the language mix being used by app developers who also depend on ExoPlayer, and this will continue to be an input into deciding when it makes sense for us to start using Kotlin within the library.\r\n\r\n> Universal Android Music Player was rebuilt from the ground up; so arguably there are more up to date Kotlin documentation than Java on that space).\r\n\r\nKotlin demo apps are great. We might convert some of ours as well. We're committed to making ExoPlayer easy to use from Kotlin (hence all of the nullness annotation work we've undertaken). It's unclear how this is directly related to what language we develop the core library in, however.\r\n\r\n> What exactly is very painful about bundling the Kotlin runtime? Is it because of method count/APK size as described in OkHttp's thread? Proguard and D8/R8 can help slimming the impact in these metrics, stripping out unused code. I'd also like to point that given OkHttp's move to Kotlin sources, that means at least part of the consumers of ExoPlayer already bundle the runtime within their apps; certainly most of the users of the OkHttp extension.\r\n\r\nYes, that's the main pain point. And yes, it's correct that those using OkHttp 4 will already be pulling it in. That's why OkHttp 4 adoption is a good data point for us to keep an eye on. Regarding the ExoPlayer OkHttp extension specifically, I can say that adoption is tiny relative to adoption of the core library.\r\n\r\n> I'd like to add that the proposal in this PR is to include Kotlin in test-sources only for now, which also means it isn't code that will be delivered to the final production APKs of app developers.\r\n\r\nThere's no technical reason not to use Kotlin for tests, but I don't agree that it's beneficial to do so. It effectively requires developers to understand two languages before they can do anything, rather than one. I think there needs to be a bigger payoff than being able to use Kotlin syntax in test code for that to be worthwhile.\r\n\r\n> It will be a good playground for the maintainer team to get familiar with the extra tools for modeling and API-design; besides making the codebase friendlier for newcomers overall.\r\n\r\nThis argument gets floated a lot for tooling that might make the development team's job a bit easier. You can make a similar argument for _insert your favourite dependency injection framework here_, AutoValue, other annotation processors and so on. If you're developing an app then this argument often makes sense, but the same is not so true when you're developing a widely used open source library that a large number of developers from different companies need to dip in and out of. The more tools we use, the harder it is for developers to do this. Some development inefficiency on our side is a price worth paying for keeping the code accessible to the widest group of external developers. This doesn't mean that we we'll never adopt additional tooling, but it does mean that the bar for adoption is significantly higher than it would be were we developing an app.\r\n\r\n> I have a good example of diff that would have been way less painful to produce given some features that Java unfortunately does not yet provide, like default parameters, value objects and copy constructors.\r\n\r\nThe `Format` class has grown into a bit of a mess, and adding a new field is indeed very painful at the moment. However it's a stretch to say that Kotlin features are important for fixing it. There are ways to rewrite `Format` in Java that would also solve the problem. We also had an internal discussion where AutoValue was mooted as the solution.\r\n\r\n> Android Jetpack provides kotlin extensions: https://developer.android.com/kotlin/ktx as optional libraries. This could be a way to go for Exoplayer too.\r\n\r\nWe've considered doing this, and I agree that it seems like a much better approach. We didn't see any compelling reasons or use cases to prioritize a more in depth investigation, however.",
    "clean_message": "I'm not able to share that information here, sorry. Although I'd suggest that results from a survey of developers who use Kotlin as one of their primary programming languages is probably not the most reliable of indicators for measuring Kotlin adoption. We will continue to look at the language mix being used by app developers who also depend on ExoPlayer, and this will continue to be an input into deciding when it makes sense for us to start using Kotlin within the library. Kotlin demo apps are great. We might convert some of ours as well. We're committed to making ExoPlayer easy to use from Kotlin (hence all of the nullness annotation work we've undertaken). It's unclear how this is directly related to what language we develop the core library in, however. Yes, that's the main pain point. And yes, it's correct that those using OkHttp 4 will already be pulling it in. That's why OkHttp 4 adoption is a good data point for us to keep an eye on. Regarding the ExoPlayer OkHttp extension specifically, I can say that adoption is tiny relative to adoption of the core library. There's no technical reason not to use Kotlin for tests, but I don't agree that it's beneficial to do so. It effectively requires developers to understand two languages before they can do anything, rather than one. I think there needs to be a bigger payoff than being able to use Kotlin syntax in test code for that to be worthwhile. This argument gets floated a lot for tooling that might make the development team's job a bit easier. You can make a similar argument for insert your favourite dependency injection framework here, AutoValue, other annotation processors and so on. If you're developing an app then this argument often makes sense, but the same is not so true when you're developing a widely used open source library that a large number of developers from different companies need to dip in and out of. The more tools we use, the harder it is for developers to do this. Some development inefficiency on our side is a price worth paying for keeping the code accessible to the widest group of external developers. This doesn't mean that we we'll never adopt additional tooling, but it does mean that the bar for adoption is significantly higher than it would be were we developing an app. The  class has grown into a bit of a mess, and adding a new field is indeed very painful at the moment. However it's a stretch to say that Kotlin features are important for fixing it. There are ways to rewrite  in Java that would also solve the problem. We also had an internal discussion where AutoValue was mooted as the solution. We've considered doing this, and I agree that it seems like a much better approach. We didn't see any compelling reasons or use cases to prioritize a more in depth investigation, however.",
    "message_url": "https://github.com/google/ExoPlayer/pull/6826#issuecomment-570596707",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Would be nice to have a test for this class, but otherwise, LGTM. ",
    "clean_message": "Would be nice to have a test for this class, but otherwise, LGTM. ",
    "message_url": "https://github.com/Netflix/zuul/pull/1294#issuecomment-1232253296",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks @nosan, please consider reviewing [the polish commit](https://github.com/spring-projects/spring-boot/commit/71df2f311b04462784a76ed0b9288f2d659a68eb) when you get a chance.",
    "clean_message": "Thanks , please consider reviewing the polish commit when you get a chance.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/15954#issuecomment-463659638",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@philwebb yup and that's how I've found out about JOOq's error page :) \r\n\r\nThere isn't a valid link that matches the version AFAIK, e.g. https://www.jooq.org/doc/3.10.7/manual-single-page/#jooq-in-7-steps-step3\r\n\r\n@lukaseder is there a way to make that happen?",
    "clean_message": "yup and that's how I've found out about JOOq's error page :)  There isn't a valid link that matches the version AFAIK, e.g.  is there a way to make that happen?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/13262#issuecomment-392253267",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> I could certainly be persuaded that enabling HTTP/2 by default is the way to go, but only if we can avoid the aforementioned error message from Tomcat. Perhaps we can automatically enable it with Tomcat but only if the necessary native component is available?\r\n\r\nA tricky thing here would be to detect, whether a user explicitly wants to have HTTP/2 enabled on Tomcat &ndash; in that case you probably want to show the error from Tomcat that helps with properly configuring tomcat-native &ndash; or whether HTTP/2 is enabled by default. In that case you want to avoid the error message and silently fall back to HTTP/1.1.",
    "clean_message": "A tricky thing here would be to detect, whether a user explicitly wants to have HTTP/2 enabled on Tomcat \u2013 in that case you probably want to show the error from Tomcat that helps with properly configuring tomcat-native \u2013 or whether HTTP/2 is enabled by default. In that case you want to avoid the error message and silently fall back to HTTP/1.1.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/9981#issuecomment-321381548",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "You'll likely want to take a look at the newly merged `HystrixObservableCommand` as well.\n",
    "clean_message": "You'll likely want to take a look at the newly merged  as well.",
    "message_url": "https://github.com/Netflix/Hystrix/pull/217#issuecomment-37263681",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks again!",
    "clean_message": "Thanks again!",
    "message_url": "https://github.com/google/gson/pull/2287#issuecomment-1355463217",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> Can you explain why you'd like the Gradle plugin to be included in our dependency management? AIUI, it won't allow you to omit the version when configuring a Gradle project to use the plugin.\r\n\r\nTrue, but I'm hoping that we (or I) can fix that. I'm hoping that having this version specified in the BOM will be a step towards resolving https://github.com/spring-projects/spring-boot/issues/22109",
    "clean_message": "True, but I'm hoping that we (or I) can fix that. I'm hoping that having this version specified in the BOM will be a step towards resolving ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/28740#issuecomment-974197802",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@apanicker-nflx That's honestly a bit unfortunate, but that's a bit interesting as you can reproduce this issue under just one Conductor server instance. While locking does indeed help solve problems, it really shouldn't be a problem under a single instance.",
    "clean_message": "-nflx That's honestly a bit unfortunate, but that's a bit interesting as you can reproduce this issue under just one Conductor server instance. While locking does indeed help solve problems, it really shouldn't be a problem under a single instance.",
    "message_url": "https://github.com/Netflix/conductor/pull/1664#issuecomment-842744261",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I concur.\n\nAlso, I don't like the idea of having a path as the key of a map. This feels a bit unnatural to me.\n",
    "clean_message": "I concur. Also, I don't like the idea of having a path as the key of a map. This feels a bit unnatural to me.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3728#issuecomment-130219382",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@netdpb Thank you for this feedback! That is a really interesting insight. You may be right! We will certainly consider it.",
    "clean_message": "Thank you for this feedback! That is a really interesting insight. You may be right! We will certainly consider it.",
    "message_url": "https://github.com/google/guava/pull/3435#issuecomment-480332660",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@tburschka Since, we are not using RabbitMQ, we haven't been able to test this feature out. However, we would appreciate help from the community with testing this. \r\nPlease feel free to review the PR and we will be merging this soon.\r\nAlso, paging @jkaipa based on the discussion earlier in the PR.",
    "clean_message": "Since, we are not using RabbitMQ, we haven't been able to test this feature out. However, we would appreciate help from the community with testing this.  Please feel free to review the PR and we will be merging this soon. Also, paging  based on the discussion earlier in the PR.",
    "message_url": "https://github.com/Netflix/conductor/pull/1063#issuecomment-507895124",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Awesome! Thanks for your help @rwinch and quick feedback!",
    "clean_message": "Awesome! Thanks for your help  and quick feedback!",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6304#issuecomment-448360458",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@mattnelson we'll take a look. Thanks for the PR.",
    "clean_message": "we'll take a look. Thanks for the PR.",
    "message_url": "https://github.com/Netflix/eureka/pull/1001#issuecomment-339129389",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@ojw28 Re: https://github.com/google/ExoPlayer/issues/6166\r\n\r\nI've stubbed out the first part - adding the headers to `MediaItem` - but it feels very awkward to have to pass them around everywhere, especially when it's already possible to achieve this for playback by using a `HttpDataSourceFactory` that provides the headers.\r\n\r\nI went through the HLS playback flow, and was able to get it working, but wanted to stop and check in before I started in on the other types of media source. I",
    "clean_message": "Re:  I've stubbed out the first part - adding the headers to  - but it feels very awkward to have to pass them around everywhere, especially when it's already possible to achieve this for playback by using a  that provides the headers. I went through the HLS playback flow, and was able to get it working, but wanted to stop and check in before I started in on the other types of media source. I",
    "message_url": "https://github.com/google/ExoPlayer/pull/7852#issuecomment-686705063",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Good catch, I've fixed that in 5d3ac53\n",
    "clean_message": "Good catch, I've fixed that in 5d3ac53",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/6870#issuecomment-247033214",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I don't think so I am afraid. Having a bean with an empty registry is more confusing than the error IMO.",
    "clean_message": "I don't think so I am afraid. Having a bean with an empty registry is more confusing than the error IMO.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/18203#issuecomment-530707161",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@wilkinsona sorry for the slow feedback, the PR should now be ready for review. I am wondering if some more test cases could be added, I will continue thinking about that.\r\n\r\nI see the build is failing but I guess not because of my changes. I will keep an eye on `master` to see if a rebase if needed.",
    "clean_message": "sorry for the slow feedback, the PR should now be ready for review. I am wondering if some more test cases could be added, I will continue thinking about that. I see the build is failing but I guess not because of my changes. I will keep an eye on  to see if a rebase if needed.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/22610#issuecomment-668412213",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks again @izeye ",
    "clean_message": "Thanks again  ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/28944#issuecomment-989887735",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Oh, not really. I see your point and all that I can say is that maybe I was considering only my own use cases, where interruption is really a frequent thing, and I may have thought that this class was intended just for those situations. But thinking more carefully, it does not seem unlikely to use methods from this class, for example, just to avoid the verbosity of having to deal with InterruptedException in situations where the thread is actually never interrupted.\r\n\r\n",
    "clean_message": "Oh, not really. I see your point and all that I can say is that maybe I was considering only my own use cases, where interruption is really a frequent thing, and I may have thought that this class was intended just for those situations. But thinking more carefully, it does not seem unlikely to use methods from this class, for example, just to avoid the verbosity of having to deal with InterruptedException in situations where the thread is actually never interrupted.",
    "message_url": "https://github.com/google/guava/pull/6337#issuecomment-1442466609",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@rhamedy, it's a good question - addressing all permutations can get pretty hard to keep up with for really not that much benefit.\r\n\r\nI think the critical logic to verify is \r\n\r\n1. Does the endpoint resolution logic work?, e.g. does it correctly fall back, and\r\n2. Does it correctly parse the response into a `ClientRegistrations.Builder`.\r\n\r\nI think these can be tested independently for the most part - I wouldn't imagine there being 3x tests, it'd probably be one (or some) tests to verify the fallback logic and another set of tests confirming the parsing logic against the oauth2 endpoint.",
    "clean_message": ", it's a good question - addressing all permutations can get pretty hard to keep up with for really not that much benefit. I think the critical logic to verify is   Does the endpoint resolution logic work?, e.g. does it correctly fall back, and Does it correctly parse the response into a .  I think these can be tested independently for the most part - I wouldn't imagine there being 3x tests, it'd probably be one (or some) tests to verify the fallback logic and another set of tests confirming the parsing logic against the oauth2 endpoint.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6765#issuecomment-497433547",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This PR only touches files on the `spring-boot` module, `./gradlew :spring-boot-project:spring-boot:check` took 23s to build for me. ",
    "clean_message": "This PR only touches files on the  module,  took 23s to build for me. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/27819#issuecomment-906173751",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@cpovirk Thanks for the review and consideration.  We can close this PR then.",
    "clean_message": "Thanks for the review and consideration.  We can close this PR then.",
    "message_url": "https://github.com/google/guava/pull/3408#issuecomment-571191429",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the PR. This has been applied in efb699de608fa53a41fdf98229348d9c6e3cea47\n",
    "clean_message": "Thanks for the PR. This has been applied in efb699de608fa53a41fdf98229348d9c6e3cea47",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3962#issuecomment-144340591",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry for the confusion. Somehow I missed that antora markup was being used in the code comment. I think this makes sense and have merged it.",
    "clean_message": "Sorry for the confusion. Somehow I missed that antora markup was being used in the code comment. I think this makes sense and have merged it.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/12536#issuecomment-1396059742",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@artembilan Got it, thanks for the fix. Will merge for Boot 2.0.",
    "clean_message": "Got it, thanks for the fix. Will merge for Boot 2.0.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7744#issuecomment-269372237",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sure, we have video that contains information for mid rolls in TXXX frames http://aftonbladetlive-lh.akamaihd.net/i/20150928224817na_1@182509/master.m3u8?custom-mdt=on (don't ommit custom-mdt param) you should be able to see some extra TXXX at the beginning of this video\n\nBecause college of mine is working on iOS application, I know that extra information in TXXX frames are available. Those extra TXXX frames should contain keys like \"duration\" or \"trigger\" and those TXXX frames are there and are parsed correctly by parser but value in ID3 frames Map is constantly overwritten by last TXXX value.\n",
    "clean_message": "Sure, we have video that contains information for mid rolls in TXXX frames  (don't ommit custom-mdt param) you should be able to see some extra TXXX at the beginning of this video Because college of mine is working on iOS application, I know that extra information in TXXX frames are available. Those extra TXXX frames should contain keys like \"duration\" or \"trigger\" and those TXXX frames are there and are parsed correctly by parser but value in ID3 frames Map is constantly overwritten by last TXXX value.",
    "message_url": "https://github.com/google/ExoPlayer/pull/1234#issuecomment-182799667",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@snicoll ah I see, too bad :broken_heart: I'll work toward a stable release of SDC... a new version (at least a milestone) is needed anyway since we must rely on a Couchbase SDK release that is available on Maven Central (as pointed out by the CI error)...\n\n@eddumelendez thanks for the :gift: of PR :smiley:, looks like there's a tiny bit more work to do, I'll keep you updated\n",
    "clean_message": "ah I see, too bad :broken_heart: I'll work toward a stable release of SDC... a new version (at least a milestone) is needed anyway since we must rely on a Couchbase SDK release that is available on Maven Central (as pointed out by the CI error)... thanks for the :gift: of PR :smiley:, looks like there's a tiny bit more work to do, I'll keep you updated",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3499#issuecomment-141926818",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Could you please attach the stacktrace? Also do you have an example application? I've tried to make the Jetty sample fail in the same way but without any luck so far.\n",
    "clean_message": "Could you please attach the stacktrace? Also do you have an example application? I've tried to make the Jetty sample fail in the same way but without any luck so far.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/2245#issuecomment-68218937",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@guanbiaoHuang thank you for making your first contribution to Spring Boot. Please [review my comment](https://github.com/spring-projects/spring-boot/pull/17859#issuecomment-521121218) on the duplicate PR you've created.",
    "clean_message": "thank you for making your first contribution to Spring Boot. Please review my comment on the duplicate PR you've created.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/17860#issuecomment-521126234",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@googlebot  CLA is on file as Square Inc.\n",
    "clean_message": "CLA is on file as Square Inc.",
    "message_url": "https://github.com/google/dagger/pull/76#issuecomment-63590574",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Was this PR opened by mistake on the source instead of the fork?",
    "clean_message": "Was this PR opened by mistake on the source instead of the fork?",
    "message_url": "https://github.com/Netflix/conductor/pull/2145#issuecomment-818312034",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@cpovirk I talked to the Android Gradle Plugin team team and we think the `BuildTypeAttr` solution I provided right now is not very good. They are already looking into this use cases - a library having a JVM and Android variant - and they will probably make use of another attribute for it. We are discussing what the best solution here is.\r\n\r\nI would suggest we hold off merging until that discussion resolved. I'll get back to you once this moved forward, in a few days.",
    "clean_message": "I talked to the Android Gradle Plugin team team and we think the  solution I provided right now is not very good. They are already looking into this use cases - a library having a JVM and Android variant - and they will probably make use of another attribute for it. We are discussing what the best solution here is. I would suggest we hold off merging until that discussion resolved. I'll get back to you once this moved forward, in a few days.",
    "message_url": "https://github.com/google/guava/pull/3683#issuecomment-712642863",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "sorry, I just dont know that...\n\n> \u5728 2015\u5e7410\u670822\u65e5\uff0c14:27\uff0cThomas Broyer notifications@github.com \u5199\u9053\uff1a\n> \n> Any reason you don't simply update the PR rather than closing/reopening? It generates mail noise for those if us subscribed to the project.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n",
    "clean_message": "sorry, I just dont know that...",
    "message_url": "https://github.com/google/dagger/pull/246#issuecomment-150186332",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks, @zeeshanadnan, for the PR! This is now merged into `master` via 51b9b2f693ec48127f2cc8554aa3edbc58fccc92.\r\n\r\nNote that I polished the commit message just a bit, though it will still show you as the contributor. I added a small polish via 653400edfabf52760bdda3c30c8b51283b256b15.",
    "clean_message": "Thanks, , for the PR! This is now merged into  via 51b9b2f693ec48127f2cc8554aa3edbc58fccc92. Note that I polished the commit message just a bit, though it will still show you as the contributor. I added a small polish via 653400edfabf52760bdda3c30c8b51283b256b15.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7937#issuecomment-583114076",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Wow! Great findings! I will change the PR and fix the problem. I am so happy we figured out a proper fix!",
    "clean_message": "Wow! Great findings! I will change the PR and fix the problem. I am so happy we figured out a proper fix!",
    "message_url": "https://github.com/google/ExoPlayer/pull/3634#issuecomment-368376114",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "During the testing of the patch I saw weird things with the stream reproduction, it seems that there are sync problems between the Audio and Video tracks, in live channels the video seems to stutter a bit (and I\u00b4m almost sure that the frameDurationUs is properly calculated) ~~but in carousel channels, where there are bigger clock differences between the tracks, when the stream starts, the video is frozen while the audio is playing until the video timestamp surpass the audio timestamp. I think that it is related to the current player architecture and that it would be more sensible to discard the audio frames with a timestamp lower than the timestamp of the first video frame.~~\n\nUPDATE: after analyzing the stream PTSs thoroughly, the PTS differences between tracks can\u00b4t account for the observed delay in the video start, I\u00b4ll try to dig deeper in the problem and check if I can reproduce the problem filtering the audio tracks.\n\nUPDATE2: the stuttering observed in the video is due to the RK3288 decoder in other android boxes the video is fluid.\n",
    "clean_message": "During the testing of the patch I saw weird things with the stream reproduction, it seems that there are sync problems between the Audio and Video tracks, in live channels the video seems to stutter a bit (and I\u00b4m almost sure that the frameDurationUs is properly calculated) ~~but in carousel channels, where there are bigger clock differences between the tracks, when the stream starts, the video is frozen while the audio is playing until the video timestamp surpass the audio timestamp. I think that it is related to the current player architecture and that it would be more sensible to discard the audio frames with a timestamp lower than the timestamp of the first video frame.~~ UPDATE: after analyzing the stream PTSs thoroughly, the PTS differences between tracks can\u00b4t account for the observed delay in the video start, I\u00b4ll try to dig deeper in the problem and check if I can reproduce the problem filtering the audio tracks. UPDATE2: the stuttering observed in the video is due to the RK3288 decoder in other android boxes the video is fluid.",
    "message_url": "https://github.com/google/ExoPlayer/pull/325#issuecomment-76390935",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the PR. Unfortunately, AnsiColors should have been removed as part of removing support for image-based banners. I have opened https://github.com/spring-projects/spring-boot/issues/32209 to correct this oversight.",
    "clean_message": "Thanks for the PR. Unfortunately, AnsiColors should have been removed as part of removing support for image-based banners. I have opened  to correct this oversight.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/32181#issuecomment-1233870874",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "If you have time that would be fantastic. It looks like Jetty and Undertow should be fairly easy. Tomcat.... not so much :(\n",
    "clean_message": "If you have time that would be fantastic. It looks like Jetty and Undertow should be fairly easy. Tomcat.... not so much :(",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5502#issuecomment-206127746",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "(re: googlebot, i just ended up signing the CLA as my @google.com too.. seemed easiest.  didn't want to mess with potentially getting the pattern-match wrong.)\n",
    "clean_message": "(re: googlebot, i just ended up signing the CLA as my .com too.. seemed easiest.  didn't want to mess with potentially getting the pattern-match wrong.)",
    "message_url": "https://github.com/google/guice/pull/823#issuecomment-49806491",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thank you anyway, @AndreasKl, and thanks too for the feedback in #16756.",
    "clean_message": "Thank you anyway, , and thanks too for the feedback in #16756.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/16757#issuecomment-490985018",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Perhaps because you're not part of any org? If we want to continue investigating, let's do that on a dedicated issue on the CLA issue tracker. ",
    "clean_message": "Perhaps because you're not part of any org? If we want to continue investigating, let's do that on a dedicated issue on the CLA issue tracker. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/26311#issuecomment-833808031",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@snicoll I accidentally did this PR on a super old branch and all the tests failed so I closed it and opened the other one (on HEAD).  My bad.  Apologies.",
    "clean_message": "I accidentally did this PR on a super old branch and all the tests failed so I closed it and opened the other one (on HEAD).  My bad.  Apologies.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/9829#issuecomment-317273042",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Is there anything left to do for me or do you need any additional information?",
    "clean_message": "Is there anything left to do for me or do you need any additional information?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/22301#issuecomment-660840880",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@rickfish Sorry if I my previous comment is not clear. \r\n\r\nIt'd help to have an integration test for the case you've sent as part of Terminate task, for this PR to be merged.\r\n\r\nWe have ported integration tests for Terminate task here: https://github.com/Netflix/conductor/blob/master/test-harness/src/test/groovy/com/netflix/counductor/integration/test/LambdaAndTerminalTaskSpec.groovy\r\n\r\nLMK if you have further questions or comments.",
    "clean_message": "Sorry if I my previous comment is not clear.  It'd help to have an integration test for the case you've sent as part of Terminate task, for this PR to be merged. We have ported integration tests for Terminate task here:  LMK if you have further questions or comments.",
    "message_url": "https://github.com/Netflix/conductor/pull/1773#issuecomment-661430750",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@chaodhib Good idea, I'll update that. ",
    "clean_message": "Good idea, I'll update that. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7639#issuecomment-268627058",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I'm unable to reproduce the failure from CI. Any pointers or is that unrelated?",
    "clean_message": "I'm unable to reproduce the failure from CI. Any pointers or is that unrelated?",
    "message_url": "https://github.com/Netflix/conductor/pull/410#issuecomment-360916380",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "You can also send your test stream to `dev.exoplayer@gmail.com`. It's somewhat hard to tell whether the issue is with the media itself, or with ExoPlayer (and if so, where), without being able to take a look. I'm pretty sure we have some SCTE-35 test streams internally that work correctly with the current implementation.",
    "clean_message": "You can also send your test stream to . It's somewhat hard to tell whether the issue is with the media itself, or with ExoPlayer (and if so, where), without being able to take a look. I'm pretty sure we have some SCTE-35 test streams internally that work correctly with the current implementation.",
    "message_url": "https://github.com/google/ExoPlayer/pull/4557#issuecomment-407146885",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@sameb: Sorry, I don't have too much justification for the errors changes, I adapted kvaster's patch from #676 and fixed the tests.  I'm not entirely sure what that fix does.\n",
    "clean_message": ": Sorry, I don't have too much justification for the errors changes, I adapted kvaster's patch from #676 and fixed the tests.  I'm not entirely sure what that fix does.",
    "message_url": "https://github.com/google/guice/pull/883#issuecomment-67377708",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Oh, sorry for the confusion, I looked quickly at the pom and thought it\nwould always flow in.  Guava version mgmt has caused me some pain so wanted\nto avoid any possible future headaches.\n\nOn Oct 16, 2014, at 2:23 PM, Biju Kunjummen notifications@github.com\nwrote:\n\nOkay, this is not a required dependency though right Mark, it is only when\na project using spring-boot requires it and they explicitly add the guava\ndependency in their pom(without version) does this flow in. Agreed in\nprinciple with what you said though, I will go ahead and close the pull\nrequest.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/spring-projects/spring-boot/pull/1723#issuecomment-59406634\n.\n",
    "clean_message": "Oh, sorry for the confusion, I looked quickly at the pom and thought it would always flow in.  Guava version mgmt has caused me some pain so wanted to avoid any possible future headaches. On Oct 16, 2014, at 2:23 PM, Biju Kunjummen  wrote: Okay, this is not a required dependency though right Mark, it is only when a project using spring-boot requires it and they explicitly add the guava dependency in their pom(without version) does this flow in. Agreed in principle with what you said though, I will go ahead and close the pull request. \u2014 Reply to this email directly or view it on GitHub .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/1723#issuecomment-59407313",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I've always found it a little weird that we have this duplicated. I think it's probably in the best interest of our users though to have it in both locations. SGTM. \r\n\r\nIf you create both PRs, I'll take a look at both and submit. I forgot that they were different branches on github",
    "clean_message": "I've always found it a little weird that we have this duplicated. I think it's probably in the best interest of our users though to have it in both locations. SGTM.  If you create both PRs, I'll take a look at both and submit. I forgot that they were different branches on github",
    "message_url": "https://github.com/google/dagger/pull/293#issuecomment-298260947",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "FYI @tbak\n",
    "clean_message": "FYI ",
    "message_url": "https://github.com/Netflix/eureka/pull/752#issuecomment-187886703",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Indeed, the cited comment in #2150 applies here too.",
    "clean_message": "Indeed, the cited comment in #2150 applies here too.",
    "message_url": "https://github.com/google/gson/pull/1574#issuecomment-1200508181",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@googlebot I consent.",
    "clean_message": "I consent.",
    "message_url": "https://github.com/google/ExoPlayer/pull/7922#issuecomment-693137197",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "yep, just make seekbar focusable and workable",
    "clean_message": "yep, just make seekbar focusable and workable",
    "message_url": "https://github.com/google/ExoPlayer/pull/2475#issuecomment-281088419",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I've signed the CLA.\r\n\r\nWhy `./gradlew build` produces diffs like:\r\n```diff\r\ndiff --git i/acl/pom.xml w/acl/pom.xml\r\nindex 6ecd84a..a75abab 100644\r\n--- i/acl/pom.xml\r\n+++ w/acl/pom.xml\r\n@@ -3,7 +3,7 @@\r\n   <modelVersion>4.0.0</modelVersion>\r\n   <groupId>org.springframework.security</groupId>\r\n   <artifactId>spring-security-acl</artifactId>\r\n-  <version>4.2.2.RELEASE</version>\r\n+  <version>4.2.3.BUILD-SNAPSHOT</version>\r\n   <name>spring-security-acl</name>\r\n   <description>spring-security-acl</description>\r\n   <url>http://spring.io/spring-security</url>\r\n@@ -51,7 +51,7 @@\r\n     <dependency>\r\n       <groupId>org.springframework.security</groupId>\r\n       <artifactId>spring-security-core</artifactId>\r\n-      <version>4.2.2.RELEASE</version>\r\n+      <version>4.2.3.BUILD-SNAPSHOT</version>\r\n       <scope>compile</scope>\r\n     </dependency>\r\n     <dependency>\r\n@@ -151,6 +151,12 @@\r\n       <scope>test</scope>\r\n     </dependency>\r\n   </dependencies>\r\n+  <repositories>\r\n+    <repository>\r\n+      <id>spring-snapshot</id>\r\n+      <url>https://repo.spring.io/snapshot</url>\r\n+    </repository>\r\n+  </repositories>\r\n   <build>\r\n     <plugins>\r\n       <plugin>\r\n```\r\nDid I use the wrong branch ?\r\n",
    "clean_message": "I've signed the CLA. Why  produces diffs like: Did I use the wrong branch ?",
    "message_url": "https://github.com/spring-projects/spring-security/pull/4235#issuecomment-283669421",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I've upgrade to a version of the plugin that is compatible with Java 11. This PR is now ready.",
    "clean_message": "I've upgrade to a version of the plugin that is compatible with Java 11. This PR is now ready.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/12500#issuecomment-1382459178",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Just leaving a comment here because i want to follow this PR. Currently we are being bothered with some sporadic ANR's. And i very well believe this could fix it. ",
    "clean_message": "Just leaving a comment here because i want to follow this PR. Currently we are being bothered with some sporadic ANR's. And i very well believe this could fix it. ",
    "message_url": "https://github.com/google/ExoPlayer/pull/6603#issuecomment-551437639",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the pull request. I'm not sure that we should silently filter out null entries. If an import has been configured with a trailing comma, as shown in the tests (`spring.config.import: testimport.yml,`), this is likely to be due to a typo. I think the NPE is preferable to silently hiding the mistake, but something that fails and describes the cause of the null entry (if we can figure that out) would be preferable to a NPE. Let's see what the rest of the team thinks.",
    "clean_message": "Thanks for the pull request. I'm not sure that we should silently filter out null entries. If an import has been configured with a trailing comma, as shown in the tests (), this is likely to be due to a typo. I think the NPE is preferable to silently hiding the mistake, but something that fails and describes the cause of the null entry (if we can figure that out) would be preferable to a NPE. Let's see what the rest of the team thinks.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/24849#issuecomment-760882044",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "https://github.com/google/guice/commit/1a410a8bef1ec721e16f9f16a447235f09951f05 has done some work for type annotations. That may be sufficient for your needs (though I don't believe there's been a release yet).",
    "clean_message": "has done some work for type annotations. That may be sufficient for your needs (though I don't believe there's been a release yet).",
    "message_url": "https://github.com/google/guice/pull/1311#issuecomment-766957349",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@marcwrobel Thanks very much for making your first contribution to Spring Boot. I have applied the changes to 2.5.x and merged them forwards through 2.6.x and 2.7.x into main, picking up changes that were specific to those branches along the way. I don't think any of your improvements were lost along the way, but please let me know if I have missed something.",
    "clean_message": "Thanks very much for making your first contribution to Spring Boot. I have applied the changes to 2.5.x and merged them forwards through 2.6.x and 2.7.x into main, picking up changes that were specific to those branches along the way. I don't think any of your improvements were lost along the way, but please let me know if I have missed something.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/30773#issuecomment-1116157282",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@isopov thank you very much!",
    "clean_message": "thank you very much!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10548#issuecomment-344284815",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thank you, @garyrussell.",
    "clean_message": "Thank you, .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/17322#issuecomment-506987598",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@snicoll any feedback?",
    "clean_message": "any feedback?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/11953#issuecomment-364665180",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> For now I see no reason to change the title in the doc.\n\nSince \"Web Services\" is a very generic term it would clarify that this indeed related to Spring WS.\nMuch like chapters 37 and 38 refer to Spring Integration and Spring Session, not Integration and Session. Consistency argument applies here also.\n",
    "clean_message": "Since \"Web Services\" is a very generic term it would clarify that this indeed related to Spring WS. Much like chapters 37 and 38 refer to Spring Integration and Spring Session, not Integration and Session. Consistency argument applies here also.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5706#issuecomment-210780722",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for clarification in your previous response (although it seems to have disappeared somehow). I don't think you should modify `MimeTypes` as part of this change. I'm not convinced it's a good idea to change `FragmentedMp4Extractor` either.\r\n\r\nIt feels to me that you're trying to work around a bug in the underlying CDM implementation on older versions of Android. The correct place to do that is probably `DefaultDrmSessionManager.acquireSession`. There's already a workaround in that method for the Widevine CDM, so you can add a second workaround there that changes `schemeMimeType` if all of the following are true:\r\n\r\n1. `Util.SDK_INT < 23`\r\n1. `C.CENC_UUID.equals(uuid)`\r\n1. `MimeTypes.VIDEO_MP4.equals(schemeMimeType)`\r\n\r\nThat way the workaround will be applied correctly regardless of where the media is coming from (e.g. if another extractor implementation is used).",
    "clean_message": "Thanks for clarification in your previous response (although it seems to have disappeared somehow). I don't think you should modify  as part of this change. I'm not convinced it's a good idea to change  either. It feels to me that you're trying to work around a bug in the underlying CDM implementation on older versions of Android. The correct place to do that is probably . There's already a workaround in that method for the Widevine CDM, so you can add a second workaround there that changes  if all of the following are true:      That way the workaround will be applied correctly regardless of where the media is coming from (e.g. if another extractor implementation is used).",
    "message_url": "https://github.com/google/ExoPlayer/pull/2372#issuecomment-276039928",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hi @wilkinsona Thanks. Sorry my bad this was my first commit in code previously in docs, was on it but you were too quick. Noted henceforth will make sure to do the build. Thanks once again for the opportunity.",
    "clean_message": "Hi  Thanks. Sorry my bad this was my first commit in code previously in docs, was on it but you were too quick. Noted henceforth will make sure to do the build. Thanks once again for the opportunity.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/15550#issuecomment-449416583",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "We managed to get someone else reporting this issue (#12716), and I forgot we had this PR. Sorry about that. It's now fixed in a657a28f58e0eb8487eede9c60062186d850408d",
    "clean_message": "We managed to get someone else reporting this issue (#12716), and I forgot we had this PR. Sorry about that. It's now fixed in a657a28f58e0eb8487eede9c60062186d850408d",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/12672#issuecomment-377983707",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "It is actually amazing that no else found this sooner.",
    "clean_message": "It is actually amazing that no else found this sooner.",
    "message_url": "https://github.com/Netflix/conductor/pull/1883#issuecomment-697261032",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@wilkinsona Thank you for giving me this opportunity ",
    "clean_message": "Thank you for giving me this opportunity ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/31912#issuecomment-1198916316",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I'm very sorry. Should be fixed by now @snicoll ",
    "clean_message": "I'm very sorry. Should be fixed by now  ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/31459#issuecomment-1160018509",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks! I'll submit internally and a commit will reflect this when we sync later today!",
    "clean_message": "Thanks! I'll submit internally and a commit will reflect this when we sync later today!",
    "message_url": "https://github.com/google/dagger/pull/1049#issuecomment-361293757",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Closed in favor of https://github.com/spring-projects/spring-security/pull/8332",
    "clean_message": "Closed in favor of ",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7639#issuecomment-612255247",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "They all look safe but I think we should do this in 1.5. If nothing else it's another reason for people to upgrade.",
    "clean_message": "They all look safe but I think we should do this in 1.5. If nothing else it's another reason for people to upgrade.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/8002#issuecomment-273253201",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@spencergibb @NiteshKant removed logging the exception in ZuulServletFilter. Also removed similar line in ZuulServlet. Added logging to the example ErrorResponse filter in zuul-netfilx-webapp.\n",
    "clean_message": "removed logging the exception in ZuulServletFilter. Also removed similar line in ZuulServlet. Added logging to the example ErrorResponse filter in zuul-netfilx-webapp.",
    "message_url": "https://github.com/Netflix/zuul/pull/137#issuecomment-134684671",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@mangrish I was looking at `spring-data-neo4j` repository and seems that adding the following dependency the example will work. Do you think this would be fine or the original PR is the right approach to handle the neo4j version's server?\r\n\r\n```\r\n<dependency>\r\n    <groupId>org.neo4j</groupId>\r\n    <artifactId>neo4j-ogm-test</artifactId>\r\n    <version>${neo4j-ogm.version}</version>\r\n    <scope>test</scope>\r\n    <exclusions>\r\n        <exclusion>\r\n            <groupId>org.neo4j</groupId>\r\n            <artifactId>neo4j-security-enterprise</artifactId>\r\n        </exclusion>\r\n    </exclusions>\r\n</dependency>\r\n```",
    "clean_message": "I was looking at  repository and seems that adding the following dependency the example will work. Do you think this would be fine or the original PR is the right approach to handle the neo4j version's server?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/8567#issuecomment-286586507",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Very nice. Thanks very much! I've taken the liberty of splitting the PR into a number of distinct commits and also backported a couple to 2.7.",
    "clean_message": "Very nice. Thanks very much! I've taken the liberty of splitting the PR into a number of distinct commits and also backported a couple to 2.7.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/33987#issuecomment-1406049163",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> Thanks for the proposal and sorry for any wasted effort here\r\n\r\nNot a problem @wilkinsona . This is why we call these \"code proposals\"  \ud83d\ude3a . The effort was minimal and I learned a little something along the way. \r\n\r\nThe struggle I had was between creating a Spring Cloud Stream Rabbit Binder (SCSRB) Rabbit config and re-using the Spring Boot (SB) Rabbit config.  Some pros/cons (mostly converse of one another):\r\n\r\n**Re-use the Spring Boot Rabbit config classes**\r\n(+) DRY principle \r\n(+) parity sync - the SCSRB will use the same Rabbit config code as SB\r\n(-) violates the `auto-config-is-private-api` principle\r\n(-) tightly coupled, another integration point to SB\r\n\r\n**Create a Spring Cloud Stream Rabbit Binder (SCSRB) Rabbit config** \r\n(-) duplicates the SB Rabbit config code\r\n(-) parity drift - the SCSRB version will get out of sync w/ SB version quickly\r\n(+) does not violate the `auto-config-is-private-api` principle\r\n(+) less coupling\r\n\r\nI think the false assumption I was making is that the SCSRB version needs to have all the config knobs the SB version has. If this is not the case then the argument above for \"parity / lockstep\" can be thrown out the window. Identifying the minimal set of config options needed by SCSRB would be a good start. \r\n\r\nAs you suggested, I will comment on spring-cloud/spring-cloud-stream-binder-rabbit#187 when I have other ideas. Also, the fact that the binder service config looks like it will be largely re-worked, this Spring Boot auto-config aspect of it may not exist once that happens. \r\n\r\nThank you for the quick turnaround and feedback.",
    "clean_message": "Not a problem  . This is why we call these \"code proposals\"  \ud83d\ude3a . The effort was minimal and I learned a little something along the way.  The struggle I had was between creating a Spring Cloud Stream Rabbit Binder (SCSRB) Rabbit config and re-using the Spring Boot (SB) Rabbit config.  Some pros/cons (mostly converse of one another): Re-use the Spring Boot Rabbit config classes (+) DRY principle  (+) parity sync - the SCSRB will use the same Rabbit config code as SB (-) violates the  principle (-) tightly coupled, another integration point to SB Create a Spring Cloud Stream Rabbit Binder (SCSRB) Rabbit config  (-) duplicates the SB Rabbit config code (-) parity drift - the SCSRB version will get out of sync w/ SB version quickly (+) does not violate the  principle (+) less coupling I think the false assumption I was making is that the SCSRB version needs to have all the config knobs the SB version has. If this is not the case then the argument above for \"parity / lockstep\" can be thrown out the window. Identifying the minimal set of config options needed by SCSRB would be a good start.  As you suggested, I will comment on spring-cloud/spring-cloud-stream-binder-rabbit#187 when I have other ideas. Also, the fact that the binder service config looks like it will be largely re-worked, this Spring Boot auto-config aspect of it may not exist once that happens.  Thank you for the quick turnaround and feedback.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/26866#issuecomment-859957132",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Great - I'm on it.\n\nOn Wednesday, December 9, 2015, Andy Wilkinson notifications@github.com\nwrote:\n\n> Thanks, @jadekler https://github.com/jadekler. I think our team\n> discussion was based on a faulty assumption. Our goal was simply to have\n> all of the parsers thrown an exception with bad input. We don't really mind\n> exactly what exception they throw, as long as they throw one. However,\n> that's not the case at the moment. Consider these 6 tests:\n> \n> ```\n> @Test\n> public void mapWithNullThrowsARuntimeException() {\n>     this.thrown.expect(RuntimeException.class);\n>     this.parser.parseMap(null);\n> }\n> \n> @Test\n> public void listWithNullThrowsARuntimeException() {\n>     this.thrown.expect(RuntimeException.class);\n>     this.parser.parseList(null);\n> }\n> \n> @Test\n> public void mapWithEmptyStringThrowsARuntimeException() {\n>     this.thrown.expect(RuntimeException.class);\n>     this.parser.parseMap(\"\");\n> }\n> \n> @Test\n> public void listWithEmptyStringThrowsARuntimeException() {\n>     this.thrown.expect(RuntimeException.class);\n>     this.parser.parseList(\"\");\n> }\n> \n> @Test\n> public void mapWithListThrowsARuntimeException() {\n>     this.thrown.expect(RuntimeException.class);\n>     this.parser.parseMap(\"[]\");\n> }\n> \n> @Test\n> public void listWithMapThrowsARuntimeException() {\n>     this.thrown.expect(RuntimeException.class);\n>     this.parser.parseList(\"{}\");\n> }\n> ```\n> \n> They all pass with the JacksonParser, JsonJsonParser,\n> JsonSimpleJsonParser, but one or more fails with BasicJsonParser,\n> GsonJsonParser, and YamlJsonParser. Gson seems particularly broken: it\n> returns an empty map when given an empty list.\n> \n> An update to this pull request (force push to your branch) that updates\n> BasicJsonParser, GsonJsonParser, and YamlJsonParser to reject bad input in\n> the same way as the other parsers would be most welcome.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/spring-projects/spring-boot/pull/4690#issuecomment-163343204\n> .\n",
    "clean_message": "Great - I'm on it. On Wednesday, December 9, 2015, Andy Wilkinson  wrote:",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4690#issuecomment-163364353",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@andrewlewis The related change has been done and tested OK, could you please have a review? thanks!",
    "clean_message": "The related change has been done and tested OK, could you please have a review? thanks!",
    "message_url": "https://github.com/google/ExoPlayer/pull/6467#issuecomment-555440389",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I don't think that logging the information via the banner is the best way to make it available. Personally, I'd use the Actuator's JMX support and the existing info endpoint. I still believe that applications where the Actuator isn't available in any form are a niche.\r\n\r\nA builder is an improvement from an API perspective, but it doesn't do much to reduce the additional internal complexity that I am still not convinced is justified. It also leaves the banner with knowledge of build info and git properties. Those are currently only dealt with by the Actuator so the proposed changes introduce a conceptual cycle between those two modules.",
    "clean_message": "I don't think that logging the information via the banner is the best way to make it available. Personally, I'd use the Actuator's JMX support and the existing info endpoint. I still believe that applications where the Actuator isn't available in any form are a niche. A builder is an improvement from an API perspective, but it doesn't do much to reduce the additional internal complexity that I am still not convinced is justified. It also leaves the banner with knowledge of build info and git properties. Those are currently only dealt with by the Actuator so the proposed changes introduce a conceptual cycle between those two modules.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/11917#issuecomment-363699295",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Damn, I'd have a longer sleep if I'd just wait for you to answer :D\r\n\r\nI wrote `SecurityNamespaceHandlerTest` class and was trying to write some tests of `SecurityNamespaceHandler` from scratch. After about half on hours I found out that there already is a `SecurityNamespaceHandlerTest` class without missing 's'. After that I thought that the first thing should be writing a test to test well... a test. Which was to test if `InMemoryXmlApplicationContext#SPRING_SECURITY_VERSION` is set correctly:\r\n\r\n\t@Test\r\n\tpublic void InMemoryXmlWebApplicationContextRunsWithNewestXSDAsDefault() throws IOException {\r\n\t\tInMemoryXmlApplicationContext defaultContext = new InMemoryXmlApplicationContext(\"\");\r\n\t\tString computedXSDVersion = getSpringVersionFromSpringSchemas();\r\n\t\tInMemoryXmlApplicationContext versionedContext = new InMemoryXmlApplicationContext(\"\", computedXSDVersion,\r\n\t\t\t\tnull);\r\n\r\n\t\tResource defaultXML = Whitebox.getInternalState(defaultContext, \"inMemoryXml\");\r\n\t\tResource versionedXML = Whitebox.getInternalState(versionedContext, \"inMemoryXml\");\r\n\r\n\t\tassertThat(defaultXML).isEqualTo(versionedXML)\r\n\t\t\t\t.withFailMessage(\"InMemoryXmlApplicationContext is not using a current XSD schema as a default\");\r\n\t}\r\n\r\nThan I was trying to find out how to test it without `WhiteBox` and without getting direct access to the `InMemoryXmlApplicationContext#SPRING_SECURITY_VERSION`. Then I thought it's really time to sleep, so I turn off my PC and... read the message from you on my phone :-)\r\n\r\n----------------------------\r\n\r\nIf you say that `InMemoryXmlApplicationContext#SPRING_SECURITY_VERSION` should be computed, I'll do that.\r\n\r\nIf I'd ammend a commit on forked repo, push it (with `force`), will this force a test retrigger here on this PR?",
    "clean_message": "Damn, I'd have a longer sleep if I'd just wait for you to answer :D I wrote  class and was trying to write some tests of  from scratch. After about half on hours I found out that there already is a  class without missing 's'. After that I thought that the first thing should be writing a test to test well... a test. Which was to test if  is set correctly: public void InMemoryXmlWebApplicationContextRunsWithNewestXSDAsDefault() throws IOException {     InMemoryXmlApplicationContext defaultContext = new InMemoryXmlApplicationContext(\"\");     String computedXSDVersion = getSpringVersionFromSpringSchemas();     InMemoryXmlApplicationContext versionedContext = new InMemoryXmlApplicationContext(\"\", computedXSDVersion,             null);      Resource defaultXML = Whitebox.getInternalState(defaultContext, \"inMemoryXml\");     Resource versionedXML = Whitebox.getInternalState(versionedContext, \"inMemoryXml\");      assertThat(defaultXML).isEqualTo(versionedXML)             .withFailMessage(\"InMemoryXmlApplicationContext is not using a current XSD schema as a default\"); }  Than I was trying to find out how to test it without  and without getting direct access to the . Then I thought it's really time to sleep, so I turn off my PC and... read the message from you on my phone :-)  If you say that  should be computed, I'll do that. If I'd ammend a commit on forked repo, push it (with ), will this force a test retrigger here on this PR?",
    "message_url": "https://github.com/spring-projects/spring-security/pull/10348#issuecomment-937598546",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Unfortunately not, because I am not able to build spring-boot locally right now. Will rework the PR as soon as everything builds and tests run locally. Maybe @lukaseder can look at the PR in the meantime (and has probably a better idea how to test the mapping). \n",
    "clean_message": "Unfortunately not, because I am not able to build spring-boot locally right now. Will rework the PR as soon as everything builds and tests run locally. Maybe  can look at the PR in the meantime (and has probably a better idea how to test the mapping). ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5884#issuecomment-217825021",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I did try to restore the anchors with two values (using [this SO answer](https://stackoverflow.com/questions/35060449/how-can-i-add-mutiple-anchors-to-the-same-block) but that didn't really work as expected. Given the link is broken for quite some time anyway I went ahead and remove the outdated duplicate. Thanks for the PR!",
    "clean_message": "I did try to restore the anchors with two values (using this SO answer but that didn't really work as expected. Given the link is broken for quite some time anyway I went ahead and remove the outdated duplicate. Thanks for the PR!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10314#issuecomment-330517368",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "This commit is not so efficient because `String.matches` is always called.\nHowever I think this is enough because it's easy and this functionality is usually not required to perform fast.\n",
    "clean_message": "This commit is not so efficient because  is always called. However I think this is enough because it's easy and this functionality is usually not required to perform fast.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/1280#issuecomment-49619868",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi, \r\nI have reworked my commit so that it implements a generic MediaCodecParameter messaging between the application and the exoplayer renderers.\r\nThe new MediaCodecParameters class defines the DIALOG_ENHANCEMENT_LEVEL Key and should be extendable with any other codec parameters.\r\nIn this commit only the audioRenderer has been modified to manage the message.",
    "clean_message": "Hi,  I have reworked my commit so that it implements a generic MediaCodecParameter messaging between the application and the exoplayer renderers. The new MediaCodecParameters class defines the DIALOG_ENHANCEMENT_LEVEL Key and should be extendable with any other codec parameters. In this commit only the audioRenderer has been modified to manage the message.",
    "message_url": "https://github.com/google/ExoPlayer/pull/10134#issuecomment-1110028227",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Nice, thanks a lot! ",
    "clean_message": "Nice, thanks a lot! ",
    "message_url": "https://github.com/google/ExoPlayer/pull/2453#issuecomment-280002232",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Fixes #1146 ",
    "clean_message": "Fixes #1146 ",
    "message_url": "https://github.com/Netflix/eureka/pull/1147#issuecomment-433817052",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi @Ismaley, \r\nSorry I was busy recently. I read that you would like to improve the documentation later. But maybe it could be useful even for reviewer to better understand how this functionality works \ud83d\ude04 \r\nAnyway, thanks a lot for your efforts to complete this PR. Could you try to fix your commit with the comments provided by @apanicker-nflx ?\r\n\r\n\r\n",
    "clean_message": "Hi ,  Sorry I was busy recently. I read that you would like to improve the documentation later. But maybe it could be useful even for reviewer to better understand how this functionality works \ud83d\ude04  Anyway, thanks a lot for your efforts to complete this PR. Could you try to fix your commit with the comments provided by -nflx ?",
    "message_url": "https://github.com/Netflix/conductor/pull/1131#issuecomment-557467705",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for taking a look!\r\n\r\nOh, I was convinced we skip javadocs by default, but I see it makes sense to run them [after the integration tests](\r\nhttps://github.com/google/guava/blob/master/pom.xml#L191) if we also publish them on each commit.\r\n\r\n\r\nI agree that punishing 17+ -using users and requiring a 3y-old JDK is not good :)\r\n\r\nWhat do you think would be the best thing to do:\r\n1. Support correct Javadoc generation on all JDKs (8, 9\u201312, 13+): requires a JDK-version activated Maven profile, like in [this POM](https://github.com/exonum/exonum-java-binding/blob/master/exonum-java-binding/pom.xml#L671-L681)):\r\n    - (+) Don\u2019t depend on migrating all our release scripts to 17 \u2014 can fix this issue right now\r\n    - (+) Will produce correct Javadocs on all JDKs\r\n    - (-) / (?) A bit of extra complexity in the configs, but not too much\r\n    - If we eventually accept that JDK 17+ is required for development, and javadoc generation is not needed on earlier JDKs, it is a temporary measure.\r\n1. Skip Javadoc generation on 8 and 12+ (conditionally set maven.javadoc.skip through a JDK-version activated Maven profile):\r\n    - (+) Don\u2019t depend on migrating all our release scripts to 17 \u2014 can fix this issue right now\r\n    - (-) Same complexity as ^, but less benefits\r\n1. (If you anticipate that 17 issues will get addressed soon) Wait till migrate to 17:\r\n    - (+) No changes needed , no extra complexity in the configs\r\n    - (?) Search won\u2019t work on Javadocs generated with 11, but, arguably, [it won\u2019t matter](https://github.com/google/guava/issues/5801#issuecomment-984637851)\r\n\r\n",
    "clean_message": "Thanks for taking a look! Oh, I was convinced we skip javadocs by default, but I see it makes sense to run them after the integration tests if we also publish them on each commit. I agree that punishing 17+ -using users and requiring a 3y-old JDK is not good :) What do you think would be the best thing to do: 1. Support correct Javadoc generation on all JDKs (8, 9\u201312, 13+): requires a JDK-version activated Maven profile, like in this POM):     - (+) Don\u2019t depend on migrating all our release scripts to 17 \u2014 can fix this issue right now     - (+) Will produce correct Javadocs on all JDKs     - (-) / (?) A bit of extra complexity in the configs, but not too much     - If we eventually accept that JDK 17+ is required for development, and javadoc generation is not needed on earlier JDKs, it is a temporary measure. 1. Skip Javadoc generation on 8 and 12+ (conditionally set maven.javadoc.skip through a JDK-version activated Maven profile):     - (+) Don\u2019t depend on migrating all our release scripts to 17 \u2014 can fix this issue right now     - (-) Same complexity as ^, but less benefits 1. (If you anticipate that 17 issues will get addressed soon) Wait till migrate to 17:     - (+) No changes needed , no extra complexity in the configs     - (?) Search won\u2019t work on Javadocs generated with 11, but, arguably, it won\u2019t matter",
    "message_url": "https://github.com/google/guava/pull/5800#issuecomment-984649546",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@kriskrishna Despite us repeatedly asking you not to, you continue to close and reopen the same pull request. I'm now blocking you from this repository.\n",
    "clean_message": "Despite us repeatedly asking you not to, you continue to close and reopen the same pull request. I'm now blocking you from this repository.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7369#issuecomment-260480359",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "To reproduce, and see that the outline is painted with the foreground color:\r\n\r\neither manually change user captionning style\r\nLaunch Captionning manager,\r\n``` am start -a android.settings.CAPTIONING_SETTINGS ```\r\n\r\nswitch caption style to custom (last row radio button),\r\nthen select Edge Type -> Outline\r\non tv, enable then disable Show background to workaround an initialization value bug in leanback, on phones select no background\r\nthen back back back\r\n\r\nor you can programmatically do (my codebase is in Kotlin)\r\n```\r\n    val captionStyle = CaptionStyleCompat(Color.WHITE, Color.TRANSPARENT, Color.TRANSPARENT,\r\n            EDGE_TYPE_OUTLINE, Color.BLACK, Typeface.DEFAULT)\r\n    subtitleView.setStyle(captionStyle)\r\n```\r\nin library/ui/src/main/java/com/google/android/exoplayer2/ui/PlayerView.java:449\r\n\r\nTest in exoplayer demo in Subtitles -> WebVTT with the following patch applied:\r\n\r\n```\r\ndiff --git a/demos/main/src/main/assets/media.exolist.json b/demos/main/src/main/assets/media.exolist.json\r\nindex 06f063b1c..2faba848b 100644\r\n--- a/demos/main/src/main/assets/media.exolist.json\r\n+++ b/demos/main/src/main/assets/media.exolist.json\r\n@@ -601,6 +601,13 @@\r\n   {\r\n     \"name\": \"Subtitles\",\r\n     \"samples\": [\r\n+        {\r\n+        \"name\": \"WebVTT\",\r\n+        \"uri\": \"https://nnoury.github.io/sintel-short.mp4\",\r\n+        \"subtitle_uri\": \"https://nnoury.github.io/sintel-en.vtt\",\r\n+        \"subtitle_mime_type\": \"text/vtt\",\r\n+        \"subtitle_language\": \"en\"\r\n+      },\r\n       {\r\n         \"name\": \"TTML\",\r\n         \"uri\": \"https://html5demos.com/assets/dizzy.mp4\",\r\n```\r\n",
    "clean_message": "To reproduce, and see that the outline is painted with the foreground color: either manually change user captionning style Launch Captionning manager, switch caption style to custom (last row radio button), then select Edge Type -on tv, enable then disable Show background to workaround an initialization value bug in leanback, on phones select no background then back back back or you can programmatically do (my codebase is in Kotlin) in library/ui/src/main/java/com/google/android/exoplayer2/ui/PlayerView.java:449 Test in exoplayer demo in Subtitles -",
    "message_url": "https://github.com/google/ExoPlayer/pull/6724#issuecomment-564066900",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "~@icbaker looks good? or needs more changes, I am bit confused with the implementation \ud83d\udc40^^ related to Issue #9797 as well.~\r\nwill make it ready for review post verifying again, this doesn't seem to work :(",
    "clean_message": "~ looks good? or needs more changes, I am bit confused with the implementation \ud83d\udc40^^ related to Issue #9797 as well.~ will make it ready for review post verifying again, this doesn't seem to work :(",
    "message_url": "https://github.com/google/ExoPlayer/pull/10003#issuecomment-1049190607",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I tend to agree since there is a lot of different ways to configure Jackson, and this one is IMO the less relevant. It only allows to configure 2 properties that could be configured thanks to the spring.jackson.\\* ones or thanks to a `Jackson2ObjectMapperBuilder` `@Bean`.\n\nAlso, current implementation also has some unexpected side effects, cf. this PR I created yesterday: https://github.com/spring-projects/spring-boot/pull/1923.\n\n@philwebb, @wilkinsona Would you consider removing `HttpMapperProperties` before 1.2.0 release ? It may have some impact on Boot 1.x apps, but it could make Jackson configuration and documentation more obvious, and could avoid some strange behavior like the one described in his previous comment by @nicoglp or in my PR https://github.com/spring-projects/spring-boot/pull/1923 ?\n\nWe could just explain in the release notes that apps using http.mappers.\\* properties should now use their spring.jackson.\\* equivalent.\n\nLast argument in favor of removing it, current property names (jsonPrettyPrint, jsonSortKeys) may be confusing when using Jackson for XML serialization.\n",
    "clean_message": "I tend to agree since there is a lot of different ways to configure Jackson, and this one is IMO the less relevant. It only allows to configure 2 properties that could be configured thanks to the spring.jackson.* ones or thanks to a  . Also, current implementation also has some unexpected side effects, cf. this PR I created yesterday: . ,  Would you consider removing  before 1.2.0 release ? It may have some impact on Boot 1.x apps, but it could make Jackson configuration and documentation more obvious, and could avoid some strange behavior like the one described in his previous comment by  or in my PR  ? We could just explain in the release notes that apps using http.mappers.* properties should now use their spring.jackson.* equivalent. Last argument in favor of removing it, current property names (jsonPrettyPrint, jsonSortKeys) may be confusing when using Jackson for XML serialization.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/1919#issuecomment-63106262",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@snicoll ACK, the autoconfiguration part should work out of the box.\n",
    "clean_message": "ACK, the autoconfiguration part should work out of the box.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4678#issuecomment-162845424",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Fixed in https://github.com/google/guava/commit/1b6e4067d58fae4a9966911a348177671cc99f7c .\r\nNot required anymore.",
    "clean_message": "Fixed in  . Not required anymore.",
    "message_url": "https://github.com/google/guava/pull/3484#issuecomment-496721041",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@jgrandja Is there anything else you'd like me to do?\r\n\r\nThanks again",
    "clean_message": "Is there anything else you'd like me to do? Thanks again",
    "message_url": "https://github.com/spring-projects/spring-security/pull/9513#issuecomment-811274774",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for re-sending this! We will figure out a way to get it merged.",
    "clean_message": "Thanks for re-sending this! We will figure out a way to get it merged.",
    "message_url": "https://github.com/google/ExoPlayer/pull/7132#issuecomment-606179073",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@dhirenmathur thank you for making your first contribution to Spring Boot. Well done writing a test for testing the default, although [we already had one](https://github.com/spring-projects/spring-boot/blob/856543c1c249361a9f4c06007bac41fd7d8ed6f9/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfigurationTests.java#L406-L414). It is interesting we had the same chain of thoughts! Turns out those two tests are identical and  wrong since they assert the outcome of the auto-configuration rather than the actual default in Spring Kafka.\r\n\r\nI've moved [that test where it belongs](https://github.com/spring-projects/spring-boot/blob/73ca7030072a2e4c19d3ce3f02d4001cb718e471/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/kafka/KafkaPropertiesTests.java#L45-L50) now. Thanks again!",
    "clean_message": "thank you for making your first contribution to Spring Boot. Well done writing a test for testing the default, although we already had one. It is interesting we had the same chain of thoughts! Turns out those two tests are identical and  wrong since they assert the outcome of the auto-configuration rather than the actual default in Spring Kafka. I've moved that test where it belongs now. Thanks again!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/20917#issuecomment-612366793",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Squashed all my commits into one. and for commits messages I am already following convention stated in guideline of:\r\n```\r\nSubject\r\n\r\n1.\r\n2.\r\n3.\r\n```",
    "clean_message": "Squashed all my commits into one. and for commits messages I am already following convention stated in guideline of:",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6194#issuecomment-443372150",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@ramyavakity Thanks for your contribution. I'm trying to verify these changes locally by running `gulp watch`, and have been running into issues launching the UI from local. Here's my error stack trace:\r\n```\r\n> gulp watch\r\n[16:56:34] Failed to load external module @babel/register\r\n[16:56:34] Requiring external module babel-register\r\nprocess.argv =====>  [ '/usr/local/Cellar/node@8/8.15.1/bin/node',\r\n  '/usr/local/bin/gulp',\r\n  'watch' ]\r\nDEBUG =====>  true\r\nWATCH =====>  true\r\n[16:56:37] Using gulpfile ~/Playground/ConductorOSS/conductor/ui/gulpfile.babel.js\r\n[16:56:37] Starting 'watch'...\r\n[16:56:37] Starting 'clean'...\r\n[16:56:37] Finished 'clean' after 2.71 ms\r\n[16:56:37] Starting 'set-env'...\r\n[16:56:37] Starting 'browserSync'...\r\n[16:56:37] Starting 'watchTask'...\r\n[16:56:37] Starting 'public'...\r\n[16:56:37] Starting 'styles'...\r\n[16:56:37] Starting 'fonts'...\r\n[16:56:37] Starting 'images'...\r\n[16:56:37] Finished 'set-env' after 5.11 ms\r\n[16:56:37] Starting 'serve'...\r\nStats : undefined\r\n[16:56:37] 'serve' errored after 107 ms\r\n[16:56:37] WebpackOptionsValidationError: Invalid configuration object. Webpack has been initialised using a configuration object that does not match the API schema.\r\n - configuration[0].module has an unknown property 'loaders'. These properties are valid:\r\n   object { defaultRules?, exprContextCritical?, exprContextRecursive?, exprContextRegExp?, exprContextRequest?, noParse?, rules?, strictExportPresence?, strictThisContextOnImports?, unknownContextCritical?, unknownContextRecursive?, unknownContextRegExp?, unknownContextRequest?, unsafeCache?, wrappedContextCritical?, wrappedContextRecursive?, wrappedContextRegExp? }\r\n   -> Options affecting the normal modules (`NormalModuleFactory`).\r\n - configuration[0].resolve.extensions[0] should be an non-empty string.\r\n   -> A non-empty string\r\n - configuration[1] has an unknown property 'serverConfig'. These properties are valid:\r\n   object { amd?, bail?, cache?, context?, dependencies?, devServer?, devtool?, entry?, externals?, infrastructureLogging?, loader?, mode?, module?, name?, node?, optimization?, output?, parallelism?, performance?, plugins?, profile?, recordsInputPath?, recordsOutputPath?, recordsPath?, resolve?, resolveLoader?, serve?, stats?, target?, watch?, watchOptions? }\r\n - configuration[1].module has an unknown property 'loaders'. These properties are valid:\r\n   object { defaultRules?, exprContextCritical?, exprContextRecursive?, exprContextRegExp?, exprContextRequest?, noParse?, rules?, strictExportPresence?, strictThisContextOnImports?, unknownContextCritical?, unknownContextRecursive?, unknownContextRegExp?, unknownContextRequest?, unsafeCache?, wrappedContextCritical?, wrappedContextRecursive?, wrappedContextRegExp? }\r\n   -> Options affecting the normal modules (`NormalModuleFactory`).\r\n - configuration[1].resolve.extensions[0] should be an non-empty string.\r\n   -> A non-empty string\r\n    at webpack (/Users/kbanala/Playground/ConductorOSS/conductor/ui/node_modules/webpack/lib/webpack.js:31:9)\r\n    at /Users/kbanala/Playground/ConductorOSS/conductor/ui/gulpfile.babel.js:44:19\r\n    at taskWrapper (/Users/kbanala/Playground/ConductorOSS/conductor/ui/node_modules/undertaker/lib/set-task.js:13:15)\r\n    at bound (domain.js:301:14)\r\n    at runBound (domain.js:314:12)\r\n    at asyncRunner (/Users/kbanala/Playground/ConductorOSS/conductor/ui/node_modules/async-done/index.js:55:18)\r\n    at _combinedTickCallback (internal/process/next_tick.js:132:7)\r\n    at process._tickDomainCallback (internal/process/next_tick.js:219:9)\r\n[16:56:37] 'browserSync' errored after 174 ms\r\n[16:56:37] 'watch' errored after 179 ms\r\n[16:56:37] The following tasks did not complete: watchTask, public, styles, fonts, images\r\n[16:56:37] Did you forget to signal async completion?\r\n \u2718 kbanala@nfml-kbanalaRFH \ue0b0 ~/Playground/ConductorOSS/conductor/ui \ue0b0 \ue0a0 gulp_fix \u25cf \ue0b0 gulp watch\r\n[16:57:34] Failed to load external module @babel/register\r\n[16:57:34] Requiring external module babel-register\r\nprocess.argv =====>  [ '/usr/local/Cellar/node@8/8.15.1/bin/node',\r\n  '/usr/local/bin/gulp',\r\n  'watch' ]\r\nDEBUG =====>  true\r\nWATCH =====>  true\r\n[16:57:36] Using gulpfile ~/Playground/ConductorOSS/conductor/ui/gulpfile.babel.js\r\n[16:57:36] Starting 'watch'...\r\n[16:57:36] Starting 'clean'...\r\n[16:57:36] Finished 'clean' after 3.08 ms\r\n[16:57:36] Starting 'set-env'...\r\n[16:57:36] Starting 'browserSync'...\r\n[16:57:36] Starting 'watchTask'...\r\n[16:57:36] Starting 'public'...\r\n[16:57:36] Starting 'styles'...\r\n[16:57:36] Starting 'fonts'...\r\n[16:57:36] Starting 'images'...\r\n[16:57:36] Finished 'set-env' after 2.29 ms\r\n[16:57:36] Starting 'serve'...\r\nStats : undefined\r\n[16:57:36] 'serve' errored after 117 ms\r\n[16:57:36] WebpackOptionsValidationError: Invalid configuration object. Webpack has been initialised using a configuration object that does not match the API schema.\r\n - configuration[0].module has an unknown property 'loaders'. These properties are valid:\r\n   object { defaultRules?, exprContextCritical?, exprContextRecursive?, exprContextRegExp?, exprContextRequest?, noParse?, rules?, strictExportPresence?, strictThisContextOnImports?, unknownContextCritical?, unknownContextRecursive?, unknownContextRegExp?, unknownContextRequest?, unsafeCache?, wrappedContextCritical?, wrappedContextRecursive?, wrappedContextRegExp? }\r\n   -> Options affecting the normal modules (`NormalModuleFactory`).\r\n - configuration[0].resolve.extensions[0] should be an non-empty string.\r\n   -> A non-empty string\r\n - configuration[1] has an unknown property 'serverConfig'. These properties are valid:\r\n   object { amd?, bail?, cache?, context?, dependencies?, devServer?, devtool?, entry?, externals?, infrastructureLogging?, loader?, mode?, module?, name?, node?, optimization?, output?, parallelism?, performance?, plugins?, profile?, recordsInputPath?, recordsOutputPath?, recordsPath?, resolve?, resolveLoader?, serve?, stats?, target?, watch?, watchOptions? }\r\n - configuration[1].module has an unknown property 'loaders'. These properties are valid:\r\n   object { defaultRules?, exprContextCritical?, exprContextRecursive?, exprContextRegExp?, exprContextRequest?, noParse?, rules?, strictExportPresence?, strictThisContextOnImports?, unknownContextCritical?, unknownContextRecursive?, unknownContextRegExp?, unknownContextRequest?, unsafeCache?, wrappedContextCritical?, wrappedContextRecursive?, wrappedContextRegExp? }\r\n   -> Options affecting the normal modules (`NormalModuleFactory`).\r\n - configuration[1].resolve.extensions[0] should be an non-empty string.\r\n   -> A non-empty string\r\n    at webpack (/Users/kbanala/Playground/ConductorOSS/conductor/ui/node_modules/webpack/lib/webpack.js:31:9)\r\n    at /Users/kbanala/Playground/ConductorOSS/conductor/ui/gulpfile.babel.js:44:19\r\n    at taskWrapper (/Users/kbanala/Playground/ConductorOSS/conductor/ui/node_modules/undertaker/lib/set-task.js:13:15)\r\n    at bound (domain.js:301:14)\r\n    at runBound (domain.js:314:12)\r\n    at asyncRunner (/Users/kbanala/Playground/ConductorOSS/conductor/ui/node_modules/async-done/index.js:55:18)\r\n    at _combinedTickCallback (internal/process/next_tick.js:132:7)\r\n    at process._tickDomainCallback (internal/process/next_tick.js:219:9)\r\n[16:57:36] 'browserSync' errored after 160 ms\r\n[16:57:36] 'watch' errored after 165 ms\r\n[16:57:36] The following tasks did not complete: watchTask, public, styles, fonts, images\r\n[16:57:36] Did you forget to signal async completion?\r\n```\r\n\r\nAlso, here's my gulp details after running `npm install`:\r\n```\r\n> gulp -v\r\n[16:57:43] Failed to load external module @babel/register\r\n[16:57:43] Requiring external module babel-register\r\n[16:57:43] CLI version 2.0.1\r\n[16:57:43] Local version 4.0.2\r\n```\r\n\r\nLet me know if I'm missing something.",
    "clean_message": "Thanks for your contribution. I'm trying to verify these changes locally by running , and have been running into issues launching the UI from local. Here's my error stack trace: Also, here's my gulp details after running : Let me know if I'm missing something.",
    "message_url": "https://github.com/Netflix/conductor/pull/1639#issuecomment-620298989",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for the PR but we already have #33654 for this.",
    "clean_message": "Thanks for the PR but we already have #33654 for this.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/33664#issuecomment-1369782260",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Merged in 678f36cfefc7 (any chance the defaults could go in a parent pom?).\n",
    "clean_message": "Merged in 678f36cfefc7 (any chance the defaults could go in a parent pom?).",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3618#issuecomment-132652886",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks again @dreis2211 ",
    "clean_message": "Thanks again  ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/21266#issuecomment-621756283",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I've bumped Spring Boot 1.0.2 to use Codd SR2 but I'm going to leave the BOM out of the 1.0.x lines. We'll merge this into master when it jumps to 1.1.x.\n",
    "clean_message": "I've bumped Spring Boot 1.0.2 to use Codd SR2 but I'm going to leave the BOM out of the 1.0.x lines. We'll merge this into master when it jumps to 1.1.x.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/660#issuecomment-41256299",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Closing in favor of #14793",
    "clean_message": "Closing in favor of #14793",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/14228#issuecomment-429214976",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I'm somewhat unclear what the aim is here, or exactly what the desired workflow is. If you want to depend on a local snapshot, why not just build the .aar and then do \"File -> New -> New Module -> Import .JAR/.AAR Package\" in Android Studio? Please clarify. Thanks!",
    "clean_message": "I'm somewhat unclear what the aim is here, or exactly what the desired workflow is. If you want to depend on a local snapshot, why not just build the .aar and then do \"File -> New -> New Module -> Import .JAR/.AAR Package\" in Android Studio? Please clarify. Thanks!",
    "message_url": "https://github.com/google/ExoPlayer/pull/2379#issuecomment-286166982",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "1. Remove the test stream\r\n1. I was a bit confused about what happens with unsupported regions in the current implementation. Am I right in thinking all text content gets assigned to the anonymous region id (see `TtmlDecoder.parseNode`, specificall the switch statement case for `ATTR_REGION`). The generated cue will set everything to \"unset\", and it'll be left up to whatever UI component ends up drawing it to decide where to place it. Is that correct? If so, can it work in the same way for bitmaps as well? You probably need to modify `SubtitlePainter.setupBitmapLayout` to do something sensible if `cueSize == DIMEN_UNSET` to make this work properly.\r\n1. I would expect some tests in `TtmlDecoderTest` checking that the right thing is output from the decoder at least. Probably one for the bitmap with unsupported region case as well.",
    "clean_message": " Remove the test stream I was a bit confused about what happens with unsupported regions in the current implementation. Am I right in thinking all text content gets assigned to the anonymous region id (see , specificall the switch statement case for ). The generated cue will set everything to \"unset\", and it'll be left up to whatever UI component ends up drawing it to decide where to place it. Is that correct? If so, can it work in the same way for bitmaps as well? You probably need to modify  to do something sensible if  to make this work properly. I would expect some tests in  checking that the right thing is output from the decoder at least. Probably one for the bitmap with unsupported region case as well. ",
    "message_url": "https://github.com/google/ExoPlayer/pull/5066#issuecomment-437352454",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Nice idea, thanks! I think Mock MVC should be used a lot more in the samples.  It's particularly useful as a test of Views that actually render out of container (like Thymeleaf).\n\nHave you filled out the individual CLA (link in CONTRIBUTING.md guide)?\n",
    "clean_message": "Nice idea, thanks! I think Mock MVC should be used a lot more in the samples.  It's particularly useful as a test of Views that actually render out of container (like Thymeleaf). Have you filled out the individual CLA (link in CONTRIBUTING.md guide)?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/18#issuecomment-22332065",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry, I'm still not keen for a couple of reasons:\n- I can't see much benefit in externalising this configuration\n- It's less concise than the Java API\n\nIn short, I think it's adding the cost of there being another way to achieve something without any benefit.\n",
    "clean_message": "Sorry, I'm still not keen for a couple of reasons: - I can't see much benefit in externalising this configuration - It's less concise than the Java API In short, I think it's adding the cost of there being another way to achieve something without any benefit.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3728#issuecomment-135349546",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks very much for the PR. I've merged it to master and also restored the same behavior for Jetty and Undertow.",
    "clean_message": "Thanks very much for the PR. I've merged it to master and also restored the same behavior for Jetty and Undertow.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/14986#issuecomment-433782684",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> 9 also allows private but we build with Java 8.\r\n\r\nPrecisely, Java 9 has introduced that the `SafeVarargs` may be used only with `private` without `final`\r\n\r\n----\r\n\r\n> but we build with Java 8\r\n\r\nThat's why I closed the PR  #2275  and open this one :)",
    "clean_message": "Precisely, Java 9 has introduced that the  may be used only with  without   That's why I closed the PR  #2275  and open this one :)",
    "message_url": "https://github.com/google/gson/pull/2276#issuecomment-1344499347",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Duplicate of #20547 ",
    "clean_message": "Duplicate of #20547 ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/20546#issuecomment-600146531",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the PR. Unfortunately this seems to break one of our tests. I've reverted for now and opened #7810 to investigate.",
    "clean_message": "Thanks for the PR. Unfortunately this seems to break one of our tests. I've reverted for now and opened #7810 to investigate.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7807#issuecomment-270049075",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hmm, maybe samples should not be updated to `annotationProcessorPaths`, it has side-effects on the execution graph of the reactor build (i.e. `mvn package -pl examples/simple -am` will **not** build the annotation processor but will instead resolve it from the repositories).\nSee http://blog.ltgt.net/maven-is-broken-by-design-2/ for details.\n\nIt's also worth waiting for version 3.6 of the maven-compiler-plugin that will fix the incremental build issue introduced in 3.2 (three years ago or so).\n\nFeel free to close this PR following those findings.\n",
    "clean_message": "Hmm, maybe samples should not be updated to , it has side-effects on the execution graph of the reactor build (i.e.  will not build the annotation processor but will instead resolve it from the repositories). See  for details. It's also worth waiting for version 3.6 of the maven-compiler-plugin that will fix the incremental build issue introduced in 3.2 (three years ago or so). Feel free to close this PR following those findings.",
    "message_url": "https://github.com/google/dagger/pull/293#issuecomment-174315446",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@snicoll I've logged https://github.com/spring-projects/spring-boot/issues/8863 to outline Hazelcast IMDG Client & Server and Hazelcast Jet Client & Server, with a link to sample project on github - https://github.com/spring-projects/spring-boot/issues/8863\r\n\r\nI'm happy to make a fork to fix the issue myself, but just don't want this to clash with work already underway for this issue.\r\n\r\nLet me know what you'd prefer.",
    "clean_message": "I've logged  to outline Hazelcast IMDG Client & Server and Hazelcast Jet Client & Server, with a link to sample project on github -  I'm happy to make a fork to fix the issue myself, but just don't want this to clash with work already underway for this issue. Let me know what you'd prefer.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7469#issuecomment-292529753",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I need to move on to some of the more pressing bugs so this might need to take a back seat for a while. I'm still hoping that we can get it in to 1.3.\n",
    "clean_message": "I need to move on to some of the more pressing bugs so this might need to take a back seat for a while. I'm still hoping that we can get it in to 1.3.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3899#issuecomment-142678810",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Great, thanks @jzheaux ! I looked into your changes to learn the style... what do you mean by \r\n\r\n`Refactored methods to have only immutable method parameters`\r\n\r\nJust curious :)",
    "clean_message": "Great, thanks  ! I looked into your changes to learn the style... what do you mean by  Just curious :)",
    "message_url": "https://github.com/spring-projects/spring-security/pull/10849#issuecomment-1069371147",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "See #3223 for details.",
    "clean_message": "See #3223 for details.",
    "message_url": "https://github.com/google/guava/pull/3225#issuecomment-412955468",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Oh sorry for that.\r\n\r\nAll the groovy tests pass with gradle 4.4. But indeed, using the pluginManagement stuff in settings.gradle for snapshots only works since 4.10.\r\n\r\nUsing the `plugins` block instead of using `apply` to apply the plugin is important for Kotlin, because otherwise, none of the extensions provided by the plugin are available in the DSL. That's why I chose to use that consistently: almost the other Kotlin samples would fail if the plugin was not applied using the plugins block.\r\n\r\nSo maybe I can\r\n - make a separate PR that only removes the usages of the deprecated configurations\r\n - rebase this PR on the new PR (to avoid using the deprecated configurations in the new kotlin samples) \r\n - add an introduction saying that the Groovy samples are compatible with gradle 4.4 and above, and that all the Kotlin samples are compatible with gradle 4.10 and above\r\n - leave all the samples as is, except the 2 snapshot and milestone samples of the getting started section. For these samples, we can provide two sets of samples: one only for groovy as it was before, that must be used for gradle versions less than 4.10, and the ones I introduced that can be used for version 4.10 and above.\r\n\r\nPlease tell me what you think.",
    "clean_message": "Oh sorry for that. All the groovy tests pass with gradle 4.4. But indeed, using the pluginManagement stuff in settings.gradle for snapshots only works since 4.10. Using the  block instead of using  to apply the plugin is important for Kotlin, because otherwise, none of the extensions provided by the plugin are available in the DSL. That's why I chose to use that consistently: almost the other Kotlin samples would fail if the plugin was not applied using the plugins block. So maybe I can  - make a separate PR that only removes the usages of the deprecated configurations  - rebase this PR on the new PR (to avoid using the deprecated configurations in the new kotlin samples)   - add an introduction saying that the Groovy samples are compatible with gradle 4.4 and above, and that all the Kotlin samples are compatible with gradle 4.10 and above  - leave all the samples as is, except the 2 snapshot and milestone samples of the getting started section. For these samples, we can provide two sets of samples: one only for groovy as it was before, that must be used for gradle versions less than 4.10, and the ones I introduced that can be used for version 4.10 and above. Please tell me what you think.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/14585#issuecomment-423804560",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@viswatejan thank you for the PR! As mentioned above, these changes are not passive. Do you have an alternative solution that does not modify the method signature?",
    "clean_message": "thank you for the PR! As mentioned above, these changes are not passive. Do you have an alternative solution that does not modify the method signature?",
    "message_url": "https://github.com/spring-projects/spring-security/pull/5514#issuecomment-545121143",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I Followed the instruction and now only one commit is visible. Thanks",
    "clean_message": "I Followed the instruction and now only one commit is visible. Thanks",
    "message_url": "https://github.com/spring-projects/spring-security/pull/8364#issuecomment-613238541",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@wilkinsona Thought about opening up all of the available options, but decided against it to increase the likelihood of the change being backported. 3.x is unfortunately far away for most of these applications.\r\n\r\nBut it would be definitely better to offer all of the configuration options in the future",
    "clean_message": "Thought about opening up all of the available options, but decided against it to increase the likelihood of the change being backported. 3.x is unfortunately far away for most of these applications. But it would be definitely better to offer all of the configuration options in the future",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/32904#issuecomment-1293781705",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> if users want to handle scripts just by vendors I think a proper validation for scripts location would be useful.\r\n\r\nYes but the problem is that you're not providing a path in your configuration, you are providing a placeholder that's going to be replaced with the database that you are using. If you are using two databases and one of them does not need specific scripts, the startup will fail because the directory does not exist. It means that the use case of this feature is quite narrowed IMO: all the databases that you support _must_ require database specific scripts.\r\n\r\nDoes that make sense?\r\n",
    "clean_message": "Yes but the problem is that you're not providing a path in your configuration, you are providing a placeholder that's going to be replaced with the database that you are using. If you are using two databases and one of them does not need specific scripts, the startup will fail because the directory does not exist. It means that the use case of this feature is quite narrowed IMO: all the databases that you support must require database specific scripts. Does that make sense?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10387#issuecomment-333358130",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@snicoll Thanks for the explanation. In the future, I will not review the coding style.",
    "clean_message": "Thanks for the explanation. In the future, I will not review the coding style.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/26441#issuecomment-842236971",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "@ArtYemelianov - Could you please attach or send us a sample media file? Thanks!",
    "clean_message": " Could you please attach or send us a sample media file? Thanks! ",
    "message_url": "https://github.com/google/ExoPlayer/pull/6629#issuecomment-553363551",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@wilkinsona I'd say the answer to both questions is yes.\n\nRegarding registration by name, IMO registry should maintain a name, or key, for each of managed `HealthIndicator`s. Take the `HealthEndpoint` as an example of registry user - originally it contained `CompositeHealthIndicator` which is again a map of `HealthIndicator`s. If `HealthEndpoint` has a key to reference some `HealthIndicator`, I'd expect to be able to use the same key for that indicator in other parts of the system.\n\nInvocation of indicator does make it two responsibilites, but it also seems somewhat natural, doesn't it?  Having invocation service separated from the registry IMO seems more complicated for the users. Do you see any downsides of this approach?\n",
    "clean_message": "I'd say the answer to both questions is yes. Regarding registration by name, IMO registry should maintain a name, or key, for each of managed s. Take the  as an example of registry user - originally it contained  which is again a map of s. If  has a key to reference some , I'd expect to be able to use the same key for that indicator in other parts of the system. Invocation of indicator does make it two responsibilites, but it also seems somewhat natural, doesn't it?  Having invocation service separated from the registry IMO seems more complicated for the users. Do you see any downsides of this approach?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4954#issuecomment-172257673",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the contrib @C0rWin \n",
    "clean_message": "Thanks for the contrib  ",
    "message_url": "https://github.com/Netflix/eureka/pull/418#issuecomment-74432398",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "How do you do deserialization,  e.g,  abcdefghijk -> ?",
    "clean_message": "How do you do deserialization,  e.g,  abcdefghijk -> ?",
    "message_url": "https://github.com/google/gson/pull/1379#issuecomment-427621316",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks, @linkqu. I see the problem now. A number of the `tables_*.sql` files in Quartz 2.3.0 use a comment prefix other than `--`.\r\n\r\nTo support this, the property needs to be added to `org.springframework.boot.autoconfigure.quartz.QuartzProperties.Jdbc` and then honoured in `org.springframework.boot.autoconfigure.quartz.QuartzDataSourceInitializer`.\r\n\r\nWould you like to update this pull request?",
    "clean_message": "Thanks, . I see the problem now. A number of the  files in Quartz 2.3.0 use a comment prefix other than . To support this, the property needs to be added to  and then honoured in . Would you like to update this pull request?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/13041#issuecomment-386569795",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Our rule of thumb is that we don't change a minor version in a maintenance release and I consider the move from RC1 to RELEASE to be a maintenance release\n",
    "clean_message": "Our rule of thumb is that we don't change a minor version in a maintenance release and I consider the move from RC1 to RELEASE to be a maintenance release",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4496#issuecomment-156862375",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "In order for us to consider it, you have to sign the CLA. Please follow the instructions above.",
    "clean_message": "In order for us to consider it, you have to sign the CLA. Please follow the instructions above.",
    "message_url": "https://github.com/google/guava/pull/3513#issuecomment-548478832",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> This PR seems to undo the work done in #1280. @s50600822 Can you please comment on these changes?\r\n\r\nOne small difference, i just fixed it by removing 'IF NOT EXISTS' syntax. Mysql DDL can't support 'IF NOT EXISTS' syntax, but it works fine for miradb, and the syntax for #1280 is also for miradb.",
    "clean_message": "One small difference, i just fixed it by removing 'IF NOT EXISTS' syntax. Mysql DDL can't support 'IF NOT EXISTS' syntax, but it works fine for miradb, and the syntax for #1280 is also for miradb.",
    "message_url": "https://github.com/Netflix/conductor/pull/1627#issuecomment-613774838",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@eleftherias Thanks for feedback. I haven't really thought about this, it's been a while now :)\r\n\r\nBut looking at the fact that you would prefer returning an empty string, here is how it would look\r\n\r\n```java\r\nif (isContextRelative() && !url.contains(contextPath)) {\r\n     return \"\";\r\n}\r\n```\r\n\r\nWhich would lead to` sendRedirect(\"\")`; Which is bad too IMO.\r\n\r\nAs a security library, I finally think that it simply should fail by throwing an exception. \r\nAnyway, the decision is yours, and I can adapt the PR if still needed.\r\n\r\nOtherwise, feel free to close this issue.",
    "clean_message": "Thanks for feedback. I haven't really thought about this, it's been a while now :) But looking at the fact that you would prefer returning an empty string, here is how it would look Which would lead to; Which is bad too IMO. As a security library, I finally think that it simply should fail by throwing an exception.  Anyway, the decision is yours, and I can adapt the PR if still needed. Otherwise, feel free to close this issue.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/4142#issuecomment-542841132",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "If you're going to fix the Javadocs, you should fix the original source code, not the generated output.\n",
    "clean_message": "If you're going to fix the Javadocs, you should fix the original source code, not the generated output.",
    "message_url": "https://github.com/google/gson/pull/661#issuecomment-114685286",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the feedback. I have reviewed your suggestions.\r\n\r\nThe default values now match those of RabbitTemplate. A test ensures this. I am not sure whether the test is the way you would want it though. Let me know if you want me to refactor it.\r\n\r\nI have removed \"The\" from the descriptions to match the existing style.\r\n\r\nIf you have any further suggestions let me know and I'll be happy to review them.",
    "clean_message": "Thanks for the feedback. I have reviewed your suggestions. The default values now match those of RabbitTemplate. A test ensures this. I am not sure whether the test is the way you would want it though. Let me know if you want me to refactor it. I have removed \"The\" from the descriptions to match the existing style. If you have any further suggestions let me know and I'll be happy to review them.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10978#issuecomment-347111209",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@snicoll @shakuzen I've updated the PR to use the latest 4.9.0 driver, which allows for a simple Customizer bean to enable metrics on the session. I've also added a driver config Customizer bean to siwtch driver metrics from Dropwizard to Micrometer and enable all of the driver metrics.",
    "clean_message": "I've updated the PR to use the latest 4.9.0 driver, which allows for a simple Customizer bean to enable metrics on the session. I've also added a driver config Customizer bean to siwtch driver metrics from Dropwizard to Micrometer and enable all of the driver metrics.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/23008#issuecomment-690349864",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "The changes seem good to me. Good unit test coverage. \n\nPerhaps this should be canaried before release though to ensure both functionality and performance has not impacted existing high-throughput use cases since this changes the guts of a hot code path?\n",
    "clean_message": "The changes seem good to me. Good unit test coverage.  Perhaps this should be canaried before release though to ensure both functionality and performance has not impacted existing high-throughput use cases since this changes the guts of a hot code path?",
    "message_url": "https://github.com/Netflix/Hystrix/pull/881#issuecomment-137175902",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@eliteofindia Please don\u2019t use our repository for testing GitHub\u2019s pull request functionality. It\u2019s a waste of time for all involved.",
    "clean_message": "Please don\u2019t use our repository for testing GitHub\u2019s pull request functionality. It\u2019s a waste of time for all involved.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10624#issuecomment-336276015",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I'm closing this as it appears that it was sent by mistake since there are no files that have been changed.",
    "clean_message": "I'm closing this as it appears that it was sent by mistake since there are no files that have been changed.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/5161#issuecomment-376529968",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "See discussion in #3301\n",
    "clean_message": "See discussion in #3301",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3598#issuecomment-125215620",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "My main concern is that it will be standardized using some other attribute name or mechanism, that we'll have to change it, and that we'll end up annoying a bunch of people who have come to rely on it. So I'd feel much happier if the approach were documented somewhere. You could file a request asking guidance to be added to the DASH-IF guidelines [here](https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues) or [here](https://gitreports.com/issue/Dash-Industry-Forum/DASH-IF-IOP), for example.",
    "clean_message": "My main concern is that it will be standardized using some other attribute name or mechanism, that we'll have to change it, and that we'll end up annoying a bunch of people who have come to rely on it. So I'd feel much happier if the approach were documented somewhere. You could file a request asking guidance to be added to the DASH-IF guidelines here or here, for example.",
    "message_url": "https://github.com/google/ExoPlayer/pull/2904#issuecomment-314411076",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the suggestion but we don't want to do this ad-hoc and adding equals/hashCode on all `@ConfigurationProperties` type can be tricky. ",
    "clean_message": "Thanks for the suggestion but we don't want to do this ad-hoc and adding equals/hashCode on all  type can be tricky. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/31067#issuecomment-1128489627",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@apanicker-nflx @mactaggart @rickfish @mashurex  @aravindanr\r\nI have made a few more changes, can you please have a look?\r\nAs for conductor 3, I'll open a seprate pull request soon.\r\n\r\nAlso, do you have any idea why the integration tests for sqlserver are failing?\r\nThey are working locally and I'm clearly setting the maxPoolSize [here](https://github.com/TwoUnderscorez/conductor/blob/29ac43e541dbd6afc707b6d4562654aece14d016/test-harness/src/test/java/com/netflix/conductor/tests/utils/SqlServerTestRunner.java#L54)",
    "clean_message": "-nflx    I have made a few more changes, can you please have a look? As for conductor 3, I'll open a seprate pull request soon. Also, do you have any idea why the integration tests for sqlserver are failing? They are working locally and I'm clearly setting the maxPoolSize here",
    "message_url": "https://github.com/Netflix/conductor/pull/2075#issuecomment-852882522",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks, @snicoll , for feedback!\r\n\r\nEven if my preference would be do not encourage end-users to use `META-INF/spring.integration.properties` when they build Spring Boot application, I would say during the migration path, when they already have that file, it would be really beneficial to see those properties in the `/actuator/env`.\r\n\r\nSo, yeah, I will add respective `EnvironmentPostProcessor` today to re-map `META-INF/spring.integration.properties` to the appropriate `IntegrationProperties` entries to have a proper merged instance in the end.",
    "clean_message": "Thanks,  , for feedback! Even if my preference would be do not encourage end-users to use  when they build Spring Boot application, I would say during the migration path, when they already have that file, it would be really beneficial to see those properties in the . So, yeah, I will add respective  today to re-map  to the appropriate  entries to have a proper merged instance in the end.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/25377#issuecomment-792826461",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Okay, I have pushed my amended commit and the pull request appears to have updated automatically with my new commit. However, I'm very confused. I made one push, not two. However, there are two commits there. One of them has a comment \"Merge remote-tracking branch 'origin/master'.\" But I did not write that comment or make that commit. And the contents are confusing. Can you just ignore it? I can't seem to make it go away. All you need to worry about is the new \"SEC-2002: Added events to notify of session ID change ...\".\n\nI swear, `svn diff` was way easier... :-(\n",
    "clean_message": "Okay, I have pushed my amended commit and the pull request appears to have updated automatically with my new commit. However, I'm very confused. I made one push, not two. However, there are two commits there. One of them has a comment \"Merge remote-tracking branch 'origin/master'.\" But I did not write that comment or make that commit. And the contents are confusing. Can you just ignore it? I can't seem to make it go away. All you need to worry about is the new \"SEC-2002: Added events to notify of session ID change ...\". I swear,  was way easier... :-(",
    "message_url": "https://github.com/spring-projects/spring-security/pull/30#issuecomment-14089949",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks, @jprinet, but we prefer to apply this sort of one-line version upgrade ourselves. If we've missed an upgrade that you feel is important, please feel free to ping us on Gitter or Slack to give us a nudge.",
    "clean_message": "Thanks, , but we prefer to apply this sort of one-line version upgrade ourselves. If we've missed an upgrade that you feel is important, please feel free to ping us on Gitter or Slack to give us a nudge.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/34180#issuecomment-1430310769",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "closing since MessagePack hasn't supported Jackson 2.9 yet",
    "clean_message": "closing since MessagePack hasn't supported Jackson 2.9 yet",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4573#issuecomment-429557019",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the suggestion, but having reached RC1 it's too late to do this for Boot 2.2. We'd also need to be sure that the rest of the portfolio, such as Spring REST Docs (https://github.com/spring-projects/spring-restdocs/issues/635), is compatible with REST Assured 4. We can consider this again once we've started work on 2.3.",
    "clean_message": "Thanks for the suggestion, but having reached RC1 it's too late to do this for Boot 2.2. We'd also need to be sure that the rest of the portfolio, such as Spring REST Docs (), is compatible with REST Assured 4. We can consider this again once we've started work on 2.3.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/18562#issuecomment-541113920",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "Sounds reasonable, thanks. Would you also:\r\n\r\n- Add your tests for the AssertionError cases\r\n\r\n- include the 2 input ranges in the exception message",
    "clean_message": "Sounds reasonable, thanks. Would you also:   Add your tests for the AssertionError cases   include the 2 input ranges in the exception message  ",
    "message_url": "https://github.com/google/guava/pull/4007#issuecomment-687927433",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@econnelly Hey thanks for pointing that out.\n\nAnother way is by forcing OkHttp to request the full file each time using a network interceptor and removing the `Range` header that ExoPlayer uses. Then you'll get 200 responses instead of 206's, which OkHttp's Cache will handle.\n\nI'll update my other comment for posterity.\n",
    "clean_message": "Hey thanks for pointing that out. Another way is by forcing OkHttp to request the full file each time using a network interceptor and removing the  header that ExoPlayer uses. Then you'll get 200 responses instead of 206's, which OkHttp's Cache will handle. I'll update my other comment for posterity.",
    "message_url": "https://github.com/google/ExoPlayer/pull/735#issuecomment-152415261",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "The idea is that repackager may do other things than messing up with archive layout. In may populate manifest with custom SpringBoot metadata, for example. So you may not want to disable it completely.\n\nMy understanding was that NONE layout is used in unit testing and has no real world application.\n\nAnyway, let's wait for what @dsyer has to say.\n",
    "clean_message": "The idea is that repackager may do other things than messing up with archive layout. In may populate manifest with custom SpringBoot metadata, for example. So you may not want to disable it completely. My understanding was that NONE layout is used in unit testing and has no real world application. Anyway, let's wait for what  has to say.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/2619#issuecomment-78021096",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> Unless Spring Data GemFire in Hopper specifically requires 8.2.0, it should also be upgraded to 8.2.2.\r\n\r\nSDG in Hopper is fixed on 8.2.0.\r\n\r\nGemFire versions do not work the way _Spring_ project versions do, unfortunately.  I.e. GemFire versions do not follow a logical `major.minor.maint` cycle as one might expect.  There are in fact versions such as 8.2.2.1, etc along with additional hot fixes (e.g. 8.2.2.1_01 for specific customers)  Fortunately, those versions are not available in any public repo and I do not support those in SDG.\r\n\r\nAdditionally, a GemFire dot dot release can include interface breaking changes and/or other source and runtime incompatibilities.  The only thing GemFire guarantees between dot or dot dot versions is binary protocol compatibility between peers and client/server, so that a customers cluster and clients continues to function as before with no disruption in communication.",
    "clean_message": "SDG in Hopper is fixed on 8.2.0. GemFire versions do not work the way Spring project versions do, unfortunately.  I.e. GemFire versions do not follow a logical  cycle as one might expect.  There are in fact versions such as 8.2.2.1, etc along with additional hot fixes (e.g. 8.2.2.1_01 for specific customers)  Fortunately, those versions are not available in any public repo and I do not support those in SDG. Additionally, a GemFire dot dot release can include interface breaking changes and/or other source and runtime incompatibilities.  The only thing GemFire guarantees between dot or dot dot versions is binary protocol compatibility between peers and client/server, so that a customers cluster and clients continues to function as before with no disruption in communication.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/8201#issuecomment-277767688",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@wilkinsona They are indeed without the recent improvements as I was testing specifically with 1.5.9.RELEASE and to my shame overlooked these. Thanks for pointing them out! I hope the PR still gets accepted to enhance the cases were we can't early out. \r\n\r\nI generally use JProfiler as a first step to fire-up my JAR for those profilings and take a look in the `Live-Memory->Allocation Hot Spots`. If I can't draw an early picture from that, I additionally use JMC locally with startup flight recordings and take a look into the `Memory->Allocations in New TLAB->Allocations by Class` section. Though JMC is not strictly needed, it generally gives me a better picture of recording something over time (and in this case the heap pressure). \r\n \r\n`java -XX:+UnlockCommercialFeatures -XX:+FlightRecorder -XX:StartFlightRecording=duration=30s,name=startup,settings=profile,filename=startup-boot.jfr -jar path\\to\\my.jar`",
    "clean_message": "They are indeed without the recent improvements as I was testing specifically with 1.5.9.RELEASE and to my shame overlooked these. Thanks for pointing them out! I hope the PR still gets accepted to enhance the cases were we can't early out.  I generally use JProfiler as a first step to fire-up my JAR for those profilings and take a look in the java -XX:+UnlockCommercialFeatures -XX:+FlightRecorder -XX:StartFlightRecording=duration=30s,name=startup,settings=profile,filename=startup-boot.jfr -jar path\\to\\my.jar`",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/11312#issuecomment-350803172",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Did you sign it using your github name? I can't find a record of it in our system. Thanks!\n",
    "clean_message": "Did you sign it using your github name? I can't find a record of it in our system. Thanks!",
    "message_url": "https://github.com/google/ExoPlayer/pull/325#issuecomment-115404072",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I remember why I didn't support `bolt` in `1.4.0`. It is a Neo4j 3.0.0 specific thing and it wasn't available at the time we implemented the feature.\n\n@xenoterracide I am a bit confused. I see no indication in your PR that Spring Boot provides dependency management for the bolt driver. We don't have dependency management for `neo4j-java-driver` which looks suspicious to me. It isn't used anywhere in the codebase, not even in a sample. What did you add to your own project to use it?\n",
    "clean_message": "I remember why I didn't support  in . It is a Neo4j 3.0.0 specific thing and it wasn't available at the time we implemented the feature. I am a bit confused. I see no indication in your PR that Spring Boot provides dependency management for the bolt driver. We don't have dependency management for  which looks suspicious to me. It isn't used anywhere in the codebase, not even in a sample. What did you add to your own project to use it?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/6746#issuecomment-242714384",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@picaron can you send this against the `dev` branch? ",
    "clean_message": "can you send this against the  branch? ",
    "message_url": "https://github.com/Netflix/conductor/pull/309#issuecomment-326752223",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "We're going to need the code as the source of truth so we need to migrate these edits either way. I've made a start [here](https://github.com/philwebb/spring-boot/tree/gh-10870).",
    "clean_message": "We're going to need the code as the source of truth so we need to migrate these edits either way. I've made a start here.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10870#issuecomment-341628054",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Looks good to me\n",
    "clean_message": "Looks good to me",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3977#issuecomment-142206351",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "- For what it's worth it is possible to transmux MP4 to TS at the CDN level, and I think some CDN providers support this. Quite a few major streaming providers have moved to DASH now, and I've yet to hear any negatives. Quite the opposite in fact.\n- The CODECS attribute is optional, and even with it I don't think there's enough information to properly reconstruct the codec specific data.\n- From an ideological point of view I think I'd argue that you should penalize legacy formats (and devices that require them) by preferring to evict them from the CDN, but I acknowledge that this isn't a particularly practical suggestion ;).\n- Since Android doesn't support AAC Main we'll likely \"fix\" this issue by blindly mapping audioObjectType == 1 to AAC LC and hoping for the best. I'll push a change to do this soon.\n",
    "clean_message": " For what it's worth it is possible to transmux MP4 to TS at the CDN level, and I think some CDN providers support this. Quite a few major streaming providers have moved to DASH now, and I've yet to hear any negatives. Quite the opposite in fact. The CODECS attribute is optional, and even with it I don't think there's enough information to properly reconstruct the codec specific data. From an ideological point of view I think I'd argue that you should penalize legacy formats (and devices that require them) by preferring to evict them from the CDN, but I acknowledge that this isn't a particularly practical suggestion ;). Since Android doesn't support AAC Main we'll likely \"fix\" this issue by blindly mapping audioObjectType == 1 to AAC LC and hoping for the best. I'll push a change to do this soon. ",
    "message_url": "https://github.com/google/ExoPlayer/pull/1385#issuecomment-199889773",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "It's better for us if you can add some comments to the pull request/issue, it's sometimes hard to follow the reasoning if we need to look at the code.\n\nI think I get it. If the user specifies an `ejb.naming_strategy` directly, we should back off?\n",
    "clean_message": "It's better for us if you can add some comments to the pull request/issue, it's sometimes hard to follow the reasoning if we need to look at the code. I think I get it. If the user specifies an  directly, we should back off?",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3351#issuecomment-116747363",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thank you for the PR. Actually `@TestPropertySource` takes precedence over `@SpringBootTest#properties`so I've added a separate entry to make that more explicit.\n",
    "clean_message": "Thank you for the PR. Actually  takes precedence over so I've added a separate entry to make that more explicit.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/6870#issuecomment-246994478",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Perhaps we can run though the classpath and directly add the additional JARs to `LaunchedURLClassLoader`. I'm not particularly keen given the current release schedule.\n\n@nebhale How badly do you need a fix for this? Is this specifically for the Cloud Foundry build pack? I wonder if an alternative property might be a better solution. Similar to `-Dloader.path=...` on the `PropertyLauncher`.\n",
    "clean_message": "Perhaps we can run though the classpath and directly add the additional JARs to . I'm not particularly keen given the current release schedule. How badly do you need a fix for this? Is this specifically for the Cloud Foundry build pack? I wonder if an alternative property might be a better solution. Similar to  on the .",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/529#issuecomment-38117758",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@sjohnr I have updated the review, if there is anything I missed or something else you noticed, please feel free to do a polish commit to get this into 5.8.0",
    "clean_message": "I have updated the review, if there is anything I missed or something else you noticed, please feel free to do a polish commit to get this into 5.8.0",
    "message_url": "https://github.com/spring-projects/spring-security/pull/12087#issuecomment-1317930574",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for making this, it looks good to me so I'll go ahead and patch it internally.",
    "clean_message": "Thanks for making this, it looks good to me so I'll go ahead and patch it internally.",
    "message_url": "https://github.com/google/dagger/pull/1741#issuecomment-588374235",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I was wrong in my previous comment. Sorry for bothering you.\n",
    "clean_message": "I was wrong in my previous comment. Sorry for bothering you.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3744#issuecomment-131436273",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for feedback @sbrannen. @snicoll sorry for the delay, comments have been applied.",
    "clean_message": "Thanks for feedback .  sorry for the delay, comments have been applied.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/8048#issuecomment-310888941",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I have modified the commits myself and pushed them to master. I also modified the regular expression slightly to more eagerly terminate. I used your test cases, so left @michaelpigg as the author on them but updated the commit message to conform to the contributor guidelines. Once again thank you for your submission.\n",
    "clean_message": "I have modified the commits myself and pushed them to master. I also modified the regular expression slightly to more eagerly terminate. I used your test cases, so left  as the author on them but updated the commit message to conform to the contributor guidelines. Once again thank you for your submission.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/8#issuecomment-7833412",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks very much, @hotire. This was solved as part of the effort to migrate to Spring Framework 6.0 https://github.com/spring-projects/spring-security/issues/10360.",
    "clean_message": "Thanks very much, . This was solved as part of the effort to migrate to Spring Framework 6.0 .",
    "message_url": "https://github.com/spring-projects/spring-security/pull/8983#issuecomment-949697771",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> Do you mean with this, that if users were using Error Prone they would not see any warnings? Would it be necessary to add `@CheckReturnValue` to the `package-info.java` files of Gson to achieve that (as hinted by the [`@CanIgnoreReturnValue`](https://www.javadoc.io/doc/com.google.errorprone/error_prone_annotations/latest/com/google/errorprone/annotations/CanIgnoreReturnValue.html) documentation)?\r\n\r\nYes. People can enable this checking by compiling with `-XepOpt:CheckReturnValue:Packages=com.google.gson`. We could indeed add `@CheckReturnValue` to the various `package-info.java` files, and we might yet do that, but it could potentially be a bit intrusive. I've updated all of Google's internal source code to add the appropriate `var unused = ...` but I'm not sure I want to impose that on external users.\r\n",
    "clean_message": "Yes. People can enable this checking by compiling with . We could indeed add  to the various  files, and we might yet do that, but it could potentially be a bit intrusive. I've updated all of Google's internal source code to add the appropriate  but I'm not sure I want to impose that on external users.",
    "message_url": "https://github.com/google/gson/pull/2369#issuecomment-1502260593",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Looks like this was opened by mistake. @garebon80 please use your own fork for experiments.",
    "clean_message": "Looks like this was opened by mistake.  please use your own fork for experiments.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/23141#issuecomment-683629127",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks again for the PR!\r\n\r\n>  Do you want me to open another PR to fix this or should I do another commit in this one to fix things?\r\n\r\nAnother PR please. This one is an optimization and what you've described is quite different. ",
    "clean_message": "Thanks again for the PR! Another PR please. This one is an optimization and what you've described is quite different. ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/22330#issuecomment-658269090",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry, \"each method\" was a little imprecise. I should have written \"each method that's relevant\". Assuming that we can identify a relevant method programatically, my hope is that it would be possible to test that there's a corresponding top-level function for that method.",
    "clean_message": "Sorry, \"each method\" was a little imprecise. I should have written \"each method that's relevant\". Assuming that we can identify a relevant method programatically, my hope is that it would be possible to test that there's a corresponding top-level function for that method.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/11039#issuecomment-345216732",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "The `RestTemplateBuilder` is usually a singleton bean in the context, but we wanted to allow users to provide further customization at injection time.\r\n\r\nFor example, you might have something like this:\r\n\r\n```java\r\n@Bean\r\npublic ServiceA serviceA(RestTemplateBuilder builder) {\r\n    return new ServiceA(builder.basicAuthorization(\"sa\", \"sa\"));\r\n}\r\n\r\n@Bean\r\npublic ServiceB serviceB(RestTemplateBuilder builder) {\r\n    return new ServiceB(builder.defaultMessageConverters());\r\n}\r\n```\r\n\r\nIf the builder is mutable then it's possible that `serviceA` is called before `serviceB` and `serviceB` gets unexpected basic authorization configured.\r\n\r\n\r\n\r\n\r\n\r\n ",
    "clean_message": "The  is usually a singleton bean in the context, but we wanted to allow users to provide further customization at injection time. For example, you might have something like this: If the builder is mutable then it's possible that  is called before  and  gets unexpected basic authorization configured.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/14653#issuecomment-426826291",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Actually I did not. Now I did. The facts make sense in my particular context. Thanks for pointing me to that discussion!\n\n I actually tried to migrate some code from an HystrixCommand to an asynchronous callback like code. Therefore, as mentioned, the observable is already matched on a pool. \n",
    "clean_message": "Actually I did not. Now I did. The facts make sense in my particular context. Thanks for pointing me to that discussion! I actually tried to migrate some code from an HystrixCommand to an asynchronous callback like code. Therefore, as mentioned, the observable is already matched on a pool. ",
    "message_url": "https://github.com/Netflix/Hystrix/pull/844#issuecomment-127645646",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thank you and congratulations on your first contribution!",
    "clean_message": "Thank you and congratulations on your first contribution!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/33460#issuecomment-1346253582",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thank you for your contribution @shraiysh! We are so lucky to have community members like you :smile: ",
    "clean_message": "Thank you for your contribution ! We are so lucky to have community members like you :smile: ",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6238#issuecomment-445289052",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks! I agree with the principle. I had a couple of small comments.\r\nAnother approach that would avoid having so many `@SuppressWarnings(\"deprecation\")` annotations would be to have a second, package-private `JsonElement` constructor with a dummy parameter, and use that in the subclasses. But I think `@SuppressWarnings` is probably better.",
    "clean_message": "Thanks! I agree with the principle. I had a couple of small comments. Another approach that would avoid having so many  annotations would be to have a second, package-private  constructor with a dummy parameter, and use that in the subclasses. But I think  is probably better.",
    "message_url": "https://github.com/google/gson/pull/1761#issuecomment-1200499499",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "It's my first commit here. Did I do everything right?",
    "clean_message": "It's my first commit here. Did I do everything right?",
    "message_url": "https://github.com/spring-projects/spring-security/pull/11753#issuecomment-1227577142",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "Thanks for the PR. Merged into 1.3.x in 7ba16e37e812e714425593ea11c66fab3899df92.\n",
    "clean_message": "Thanks for the PR. Merged into 1.3.x in 7ba16e37e812e714425593ea11c66fab3899df92.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/5205#issuecomment-188954444",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@jbertram thank you for your contribution. I've polished it to prevent users using the (now) deprecated host property to get their host/port configuration ignored (which is a smell of you having to add an empty broker-url property [here](https://github.com/spring-projects/spring-boot/pull/24302/commits/b3372414d67820f2fcb455e28cc2ee7028765a5d#diff-548567bbe4e167b990f04940d66c2b533c81191ede75bc3e0caa15eb87e284faR130)). We now rather check if no broker url is set by the user and if a host is set we configure as we previously did. Of course, if a broker url is set, we'll always use that and I've added an extra test to validate that scenario.",
    "clean_message": "thank you for your contribution. I've polished it to prevent users using the (now) deprecated host property to get their host/port configuration ignored (which is a smell of you having to add an empty broker-url property here). We now rather check if no broker url is set by the user and if a host is set we configure as we previously did. Of course, if a broker url is set, we'll always use that and I've added an extra test to validate that scenario.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/24302#issuecomment-749080439",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks! Updates in progress.\n\nI have issues with paint-on captions in general, as it does not make sense with digital transmission, character alignment and fonts any more. As each character was exactly defined how to look like and the character width was uniform, overwriting a character in the middle of the row did not cause any necessary repositioning of any other characters. But today, this is not true. I tested two versions: \n- saving every text and modifying them before repaint: every character position to the right of the overwritten character is constantly changing: the text is not readable.\n- creating and showing a new caption over the first one: as character width is not uniform, the overlap is unpredictable leading to unexpected results. So, at the moment, I just hope no one wants to use paint-on mode any more... \n",
    "clean_message": "Thanks! Updates in progress. I have issues with paint-on captions in general, as it does not make sense with digital transmission, character alignment and fonts any more. As each character was exactly defined how to look like and the character width was uniform, overwriting a character in the middle of the row did not cause any necessary repositioning of any other characters. But today, this is not true. I tested two versions:  - saving every text and modifying them before repaint: every character position to the right of the overwritten character is constantly changing: the text is not readable. - creating and showing a new caption over the first one: as character width is not uniform, the overlap is unpredictable leading to unexpected results. So, at the moment, I just hope no one wants to use paint-on mode any more... ",
    "message_url": "https://github.com/google/ExoPlayer/pull/1312#issuecomment-193375509",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@wonwoo good catch, thank you!",
    "clean_message": "good catch, thank you!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/18187#issuecomment-529474328",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@Sc00bz @larsgrefer Thank you for all your valuable feedback so far.\r\n\r\nWhen you have a moment, I would appreciate it if you can take a look at the updates in this PR and provide any feedback. Thank you.",
    "clean_message": "Thank you for all your valuable feedback so far. When you have a moment, I would appreciate it if you can take a look at the updates in this PR and provide any feedback. Thank you.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/11904#issuecomment-1258749467",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I'm afraid that it can't. `Base64Utils` offers a wrapper around commons-digest or Java 8's `java.util.Base64` class. We want to remain compatible with Java 6 and we don't want to force people to have a `commons-digest` dependency.\n",
    "clean_message": "I'm afraid that it can't.  offers a wrapper around commons-digest or Java 8's  class. We want to remain compatible with Java 6 and we don't want to force people to have a  dependency.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/4189#issuecomment-148296841",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "> If you don't mind, I'd like to incorporate your solution using AprLifeCycleListener in my PR.\r\n\r\nOf course, please do :) FWIW, I think AprLifeCycleListener should be always added, regardless of the status of the new http2 setting.",
    "clean_message": "Of course, please do :) FWIW, I think AprLifeCycleListener should be always added, regardless of the status of the new http2 setting.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/9981#issuecomment-321312610",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Looks like it. I switched the ci build to use Java 8. Can you rebase and try again?",
    "clean_message": "Looks like it. I switched the ci build to use Java 8. Can you rebase and try again?",
    "message_url": "https://github.com/Netflix/conductor/pull/2510#issuecomment-969395673",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "That seems fine.  Ultimately I used this just to add outlining to the text so you can read it no matter what picture is displayed behind.  I'll make the change later.  Thanks!",
    "clean_message": "That seems fine.  Ultimately I used this just to add outlining to the text so you can read it no matter what picture is displayed behind.  I'll make the change later.  Thanks!",
    "message_url": "https://github.com/google/ExoPlayer/pull/2133#issuecomment-264180324",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the PR, @gberche-orange! This is now merged into `master` with ab9a310485b43e7a5cd08e0ffba3cb641cb43991 and 69336fb3ec40e1c62ad1700e15fa0d6e03cb57d4.\r\n\r\nAlso, I polished it the new section with 8b7751f5f400d1663b3a8f60885b1837983906ea to update some of the indentation and standardize the explanations to fit the typical writing style of the reference manual.",
    "clean_message": "Thanks for the PR, -orange! This is now merged into  with ab9a310485b43e7a5cd08e0ffba3cb641cb43991 and 69336fb3ec40e1c62ad1700e15fa0d6e03cb57d4. Also, I polished it the new section with 8b7751f5f400d1663b3a8f60885b1837983906ea to update some of the indentation and standardize the explanations to fit the typical writing style of the reference manual.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/9157#issuecomment-720719553",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the feedback @philwebb. I agree that it should respect the content type encoding and not log non-string responses - I'm happy to update the PR for that.\r\n\r\nI understand your concerns but it would be great to see this functionality in Spring Boot as it's a requirement that many of my colleagues have come up with time and time again. I see it as akin to [enabling wire logging in HttpClient](https://hc.apache.org/httpcomponents-client-ga/logging.html). I'm open to any alternative approaches that would satisfy the same wire debugging use cases.",
    "clean_message": "Thanks for the feedback . I agree that it should respect the content type encoding and not log non-string responses - I'm happy to update the PR for that. I understand your concerns but it would be great to see this functionality in Spring Boot as it's a requirement that many of my colleagues have come up with time and time again. I see it as akin to enabling wire logging in HttpClient. I'm open to any alternative approaches that would satisfy the same wire debugging use cases.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/10831#issuecomment-340713129",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hi @apanicker-nflx,\r\nIndeed what I said in my first comment is not anymore valid. I succeed to expose metrics for Prometheus via micrometer (supported by Spectator) that has a sort of adapter for formatting data in a friendly format supported by Prometheus. \r\n\r\nI tried before using Dropwizard but the metrics exported were not compliant with Prometheus data.\r\n\r\nFurthermore, I followed your suggestion, using Spring boot",
    "clean_message": "Hi -nflx, Indeed what I said in my first comment is not anymore valid. I succeed to expose metrics for Prometheus via micrometer (supported by Spectator) that has a sort of adapter for formatting data in a friendly format supported by Prometheus.  I tried before using Dropwizard but the metrics exported were not compliant with Prometheus data. Furthermore, I followed your suggestion, using Spring boot",
    "message_url": "https://github.com/Netflix/conductor/pull/2027#issuecomment-754819585",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@jexp Hopper RC1 has been released and we're using it. Isn't that enough to submit an updated PR? Please push force on this branch if you can to keep the history.\n",
    "clean_message": "Hopper RC1 has been released and we're using it. Isn't that enough to submit an updated PR? Please push force on this branch if you can to keep the history.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3899#issuecomment-199678679",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "FYI, there appears to be a suitable test stream in https://github.com/google/ExoPlayer/issues/578, which also crashes (native crash in the MP3 decoder) using this patch. I suspect the codec configuration data is being parsed incorrectly from the stream, although I didn't check.\n",
    "clean_message": "FYI, there appears to be a suitable test stream in , which also crashes (native crash in the MP3 decoder) using this patch. I suspect the codec configuration data is being parsed incorrectly from the stream, although I didn't check.",
    "message_url": "https://github.com/google/ExoPlayer/pull/325#issuecomment-115344090",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I understood the difference in thinking with you.\r\n```\r\nIn all three cases it makes sense to make the reloading of the playlist take place later: If there is a pending refresh, it means that we have loaded the playlist recently, and that a reloading will most likely not see anything new.\r\n```\r\nYou think that loadPlaylist from other parts is unnecessary while the tracker is functioning normally. Because there is almost no probability that a difference will occur at the time of reloading.\r\nHowever, I think that as long as there is a possibility that a difference will occur depending on the playlist distribution environment, I should reload it.\r\n\r\nEven if multiple trackers are activated by this correction, they are suppressed and converged in the next routine.\r\n\r\n```\r\nPlease clarify why you think it is necessary to reacquire the playlist immediately.\r\n```\r\nMy answer on the question,\r\n```\r\nRefreshPlaylist is called by the onPlaylistRefreshRequired event, in particular.\r\n```\r\nThat was all it was. As long as you named \"RefreshRequired\" you should have the most priority other than the tracker.\r\n\r\nYour answer to this,\r\n```\r\nMy original aim with the extra condition was to avoid any kind of reloading when a playlist reload is pending.\r\n```\r\nAnd I have not obtained a specific answer.\r\nDo you consider Tracker's behavior to be the highest priority in any case?",
    "clean_message": "I understood the difference in thinking with you. You think that loadPlaylist from other parts is unnecessary while the tracker is functioning normally. Because there is almost no probability that a difference will occur at the time of reloading. However, I think that as long as there is a possibility that a difference will occur depending on the playlist distribution environment, I should reload it. Even if multiple trackers are activated by this correction, they are suppressed and converged in the next routine. My answer on the question, That was all it was. As long as you named \"RefreshRequired\" you should have the most priority other than the tracker. Your answer to this, And I have not obtained a specific answer. Do you consider Tracker's behavior to be the highest priority in any case?",
    "message_url": "https://github.com/google/ExoPlayer/pull/2564#issuecomment-287954021",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@jzheaux  I have updated the PR according to your comments, the remaining point is related to collection for signing algorithm. I keep list because of the order, but If you still think collection is better, let me know, I will do the change",
    "clean_message": "I have updated the PR according to your comments, the remaining point is related to collection for signing algorithm. I keep list because of the order, but If you still think collection is better, let me know, I will do the change",
    "message_url": "https://github.com/spring-projects/spring-security/pull/9039#issuecomment-710396220",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Good catch ... sorry I missed this when I did https://github.com/Netflix/Hystrix/commit/9dec3694386d901087495a39d2ee62eba6f1e363\n\nMerging now ...\n",
    "clean_message": "Good catch ... sorry I missed this when I did  Merging now ...",
    "message_url": "https://github.com/Netflix/Hystrix/pull/73#issuecomment-11960698",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Fixed via https://github.com/google/dagger/pull/2317/commits/fa38278321b1c0274866708ab91a2fc1fec3afb2. Thanks for your contribution! ",
    "clean_message": "Fixed via . Thanks for your contribution! ",
    "message_url": "https://github.com/google/dagger/pull/2036#issuecomment-767944913",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> @aravindanr hi, when do you think you will be able to merge this PR? Thanks\r\n\r\nAs soon as the few minor comments are resolved, it will be merged.",
    "clean_message": "As soon as the few minor comments are resolved, it will be merged.",
    "message_url": "https://github.com/Netflix/conductor/pull/2324#issuecomment-887124379",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This seems like a reasonable request for an environment with a dynamic set of commands.  I haven't encountered that case personally.  I think your point about possible performance degradation is good - calling the `touch()` method on every transition through each command's lifecycle could certainly impact performance.  For that reason, I'd like to work on getting a performance baseline set up with #578 first to actually answer that question.\n\nAlso, if you could give me some context around why a dynamic set of commands are necessary for you, that would help me understand your use case better. \n",
    "clean_message": "This seems like a reasonable request for an environment with a dynamic set of commands.  I haven't encountered that case personally.  I think your point about possible performance degradation is good - calling the  method on every transition through each command's lifecycle could certainly impact performance.  For that reason, I'd like to work on getting a performance baseline set up with #578 first to actually answer that question. Also, if you could give me some context around why a dynamic set of commands are necessary for you, that would help me understand your use case better. ",
    "message_url": "https://github.com/Netflix/Hystrix/pull/360#issuecomment-79116590",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "External jars can also contribute endpoints so we need to find a way for the list to be extended by them.",
    "clean_message": "External jars can also contribute endpoints so we need to find a way for the list to be extended by them.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/18363#issuecomment-535591988",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@philwebb sorry I didn't wait but I see no reason to as using `\\n` is not right IMO. It's not really about what you've described but more about formatting  the data. And when I need that (like carriage  return support, I use `String.format`. Hope that makes sense.",
    "clean_message": "sorry I didn't wait but I see no reason to as using  is not right IMO. It's not really about what you've described but more about formatting  the data. And when I need that (like carriage  return support, I use . Hope that makes sense.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/11674#issuecomment-359698454",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I use this to annotate one plain test (not a `@SpringBootTest`) with `@DataMongoTest` to get: A mongo client and if available, Spring Data Mongo repositories and nothing else. `@DataMongoTest` should also provide an embedded mongo db for those tests.\r\nI am happy to explicitly provide `spring.data.mongodb.port=0` myself because I have to add the dependency myself and assume that I know what am doing. But I want to have `@DataMongoTest` enable it.\r\n\r\nI don't expect Spring Boot to solve that problem of random ports for me at that point.\r\n\r\nSpring Boot does not have to be smart about the port. The user has to take care if he brings in embedded mongo that the port doesn't conflict during `@SpringBootTests`\r\n",
    "clean_message": "I use this to annotate one plain test (not a ) with  to get: A mongo client and if available, Spring Data Mongo repositories and nothing else.  should also provide an embedded mongo db for those tests. I am happy to explicitly provide  myself because I have to add the dependency myself and assume that I know what am doing. But I want to have  enable it. I don't expect Spring Boot to solve that problem of random ports for me at that point. Spring Boot does not have to be smart about the port. The user has to take care if he brings in embedded mongo that the port doesn't conflict during ",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/7600#issuecomment-273861897",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for the PR @XieEDeHeiShou! This is now merged into master.",
    "clean_message": "Thanks for the PR ! This is now merged into master.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/5509#issuecomment-551067798",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "That's fine. I took a look at that and I think it will work for me. Is the filter documented anywhere? I never came across anything.\n",
    "clean_message": "That's fine. I took a look at that and I think it will work for me. Is the filter documented anywhere? I never came across anything.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/4005#issuecomment-239853587",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks @desmond-silveira!",
    "clean_message": "Thanks -silveira!",
    "message_url": "https://github.com/spring-projects/spring-security/pull/11613#issuecomment-1196002040",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks @mwhipple.  I'm going to try to summarize your changes, to make sure I understand what you've done and the implications.  Please correct anything I get wrong.\n\nThere are 4 cases:\n1) No concurrency strategy supplied, HystrixRequestLog or request caching are on (default)\n2) No concurrency strategy supplied, no request functionality needed\n3) Custom concurrency strategy supplied, HystrixRequestLog or request caching is on (default)\n4) Custom concurrency strategy supplied, no request functionality supplied\n\nI've added unit tests in #953 that demonstrate the custom concurrency cases.\n\nIn master without your PR, the situation is as follows:\n1) `HystrixConcurrencyStrategyDefault` gets supplied on the first lookup to resolve `HystrixConcurrencyStrategy`.  If an initialized context is found, it is used for the request log.  If not, then the request log is null for the command.  \n2) `HystrixConcurrencyStrategyDefault` gets supplied on the first lookup to resolve `HystrixConcurrencyStrategy`.  The request log is unconditionally null for the command, since the request log is unwanted.\n3) The custom `HystrixConcurrencyStrategy` is found when accessing it for the first time and cached for the JVM lifetime.  `HystrixRequestContext.initializeContext()` and `shutdown()` must be called in order for command construction to succeed.  Without that, the call to resolve `HystrixRequestLog.getCurrentRequest(concurrencyStrategy)` throws an exception.\n4) The custom `HystrixConcurrencyStrategy` is found when accessing it for the first time and cached for the JVM lifetime. The call to resolve `HystrixRequestLog.getCurrentRequest(concurrencyStrategy)` would throw an exception but it is never made, since the requestLog functionality is off.  The currentRequestLog is null.\n\nAfter your PR:\n1) Same as above\n2) Same as above\n3) Same as 1 above\n4) Same as 2 above\n\nIf I'm interpreting this correctly, this basically drops the distinction between custom and default concurrency strategies.  The only important bit is if the request context has been initialized.  If it has been, then objects that need request-scoped access (like `HystrixRequestLog`) work properly.  Otherwise, they are null.\n\nOn the compatibility side, I think this should never change the result of any method call that was already returning a value. It will now return a null instead of throwing an `IllegalStateException` in cases where the `HystrixRequestContext` is null for 2 cases:\n1) Computing `currentRequestLog` at command-construction time when `HystrixRequestContext` is null and custom concurrency strategy is used\n2) Static access to `HystrixRequestLog.getCurrentRequest()` when `HystrixRequestContext` is null\n\nThe 3 method calls that were throwing exceptions in #953 all return null instead with your change.  \n\nThe downside to this change is that the immediate feedback of the `IllegalStateException` is missing when using a custom concurrency strategy, request log is enabled, and the request context is missing.\n\nThis is also the upside, as it allows forward progress when request log is only enabled by default, and your custom concurrency strategy doesn't care about request context, and you've not initialized it.\n\nOn balance, this seems like a good change and a good opportunity to document all of the above.\n\nAnything I missed, @mwhipple / @amitcse / @ruhkopf / @benjchristensen ?\n",
    "clean_message": "Thanks .  I'm going to try to summarize your changes, to make sure I understand what you've done and the implications.  Please correct anything I get wrong. There are 4 cases: 1) No concurrency strategy supplied, HystrixRequestLog or request caching are on (default) 2) No concurrency strategy supplied, no request functionality needed 3) Custom concurrency strategy supplied, HystrixRequestLog or request caching is on (default) 4) Custom concurrency strategy supplied, no request functionality supplied I've added unit tests in #953 that demonstrate the custom concurrency cases. In master without your PR, the situation is as follows: 1)  gets supplied on the first lookup to resolve .  If an initialized context is found, it is used for the request log.  If not, then the request log is null for the command. 2)  gets supplied on the first lookup to resolve .  The request log is unconditionally null for the command, since the request log is unwanted. 3) The custom  is found when accessing it for the first time and cached for the JVM lifetime.   and  must be called in order for command construction to succeed.  Without that, the call to resolve  throws an exception. 4) The custom  is found when accessing it for the first time and cached for the JVM lifetime. The call to resolve  would throw an exception but it is never made, since the requestLog functionality is off.  The currentRequestLog is null. After your PR: 1) Same as above 2) Same as above 3) Same as 1 above 4) Same as 2 above If I'm interpreting this correctly, this basically drops the distinction between custom and default concurrency strategies.  The only important bit is if the request context has been initialized.  If it has been, then objects that need request-scoped access (like ) work properly.  Otherwise, they are null. On the compatibility side, I think this should never change the result of any method call that was already returning a value. It will now return a null instead of throwing an  in cases where the  is null for 2 cases: 1) Computing  at command-construction time when  is null and custom concurrency strategy is used 2) Static access to  when  is null The 3 method calls that were throwing exceptions in #953 all return null instead with your change.   The downside to this change is that the immediate feedback of the  is missing when using a custom concurrency strategy, request log is enabled, and the request context is missing. This is also the upside, as it allows forward progress when request log is only enabled by default, and your custom concurrency strategy doesn't care about request context, and you've not initialized it. On balance, this seems like a good change and a good opportunity to document all of the above. Anything I missed,  /  /  /  ?",
    "message_url": "https://github.com/Netflix/Hystrix/pull/951#issuecomment-149571011",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks a lot for this decision @bclozel.\r\n\r\nI am going to adapt this PR to take into consideration for 1) and 2).\r\n\r\nWhat about exposing `RestClientBuilder` as a bean when the `RestHighLevelClient` is not present, but the `RestClientBuilder` is. Will you accept a separate PR for 2.6 that will do this?\r\n\r\nI have managed to achieve what I need with 2.5 already, but the way I did it is not the best approach, since I am doing some nasty magic with `ImportSelector`, and I would rather get rid of that nasty magic we have.",
    "clean_message": "Thanks a lot for this decision . I am going to adapt this PR to take into consideration for 1) and 2). What about exposing  as a bean when the  is not present, but the  is. Will you accept a separate PR for 2.6 that will do this? I have managed to achieve what I need with 2.5 already, but the way I did it is not the best approach, since I am doing some nasty magic with , and I would rather get rid of that nasty magic we have.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/28496#issuecomment-965579391",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Hm, no one has complained about this in a while, and we've moved over to bazel, so I'm gonna close this. If it comes up again, I'd be happy to entertain the idea of shading more.",
    "clean_message": "Hm, no one has complained about this in a while, and we've moved over to bazel, so I'm gonna close this. If it comes up again, I'd be happy to entertain the idea of shading more.",
    "message_url": "https://github.com/google/dagger/pull/350#issuecomment-288170755",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@the-fine Unfortunately it doesn't seem possible to do either of the things that I suggested. It seems that `WebPluginLifeCycle` can never be registered programmatically via the Servlet 3.0 API (the way that Spring Boot currently does things).\n\nLooking at `WebPluginLifeCycle` in a little more detail it seems there might be other problems with that class. It appears to be making a hard assumption that WAR packaging is used (often not the case with Boot).\n\nI'm not too familiar with the internals of CRaSH, but perhaps we need an alternative to `CRaSHConnector` that gets the `PluginContext` from a `PluginLifeCycle` Spring Bean rather than the `WebPluginLifeCycle`. Spring Boot by default will auto-configure its own `CrshBootstrapBean` class (an implementation that's tied to the Spring lifecycle).\n\nUnfortunately `CRaSHConnector` is currently quite tied to `WebPluginLifeCycle`. Perhaps the CRaSH team could extract a `getPluginContext` method that you could then override. Otherwise you'd probably need to recreate that entire class.\n",
    "clean_message": "-fine Unfortunately it doesn't seem possible to do either of the things that I suggested. It seems that  can never be registered programmatically via the Servlet 3.0 API (the way that Spring Boot currently does things). Looking at  in a little more detail it seems there might be other problems with that class. It appears to be making a hard assumption that WAR packaging is used (often not the case with Boot). I'm not too familiar with the internals of CRaSH, but perhaps we need an alternative to  that gets the  from a  Spring Bean rather than the . Spring Boot by default will auto-configure its own  class (an implementation that's tied to the Spring lifecycle). Unfortunately  is currently quite tied to . Perhaps the CRaSH team could extract a  method that you could then override. Otherwise you'd probably need to recreate that entire class.",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/6577#issuecomment-238837433",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi @JungleGenius, thanks for your pull request! It looks good for merging, but before:\r\n\r\n#1414 requires support for custom tags (this can already be access via `HlsPlaylist#tags`).\r\n#1847 asks for support for a master playlist attribute (EXTINF is a media playlist tag). Note: Can also be obtained via tags.\r\n#2176 is about emsg, so I suppose it is not strictly related.\r\n\r\nWould you kindly explain the exact usecase for `title`? How exactly does it get used by an app. If possible, It would also be great to explain why `HlsPlaylist#tags` is not enough.\r\n\r\nAgain, thank you very much!",
    "clean_message": "Hi , thanks for your pull request! It looks good for merging, but before: 1414 requires support for custom tags (this can already be access via ). 1847 asks for support for a master playlist attribute (EXTINF is a media playlist tag). Note: Can also be obtained via tags. 2176 is about emsg, so I suppose it is not strictly related. Would you kindly explain the exact usecase for ? How exactly does it get used by an app. If possible, It would also be great to explain why  is not enough. Again, thank you very much!",
    "message_url": "https://github.com/google/ExoPlayer/pull/3853#issuecomment-366206481",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks @ojw28 \n\nThought I would share the snippet we are using for selecting the best stream based on current bitrate estimate.\n\n``` java\n    /**\n     * Return the highest quality stream based on the current bitrate estimate\n     *\n     * @param playlist - Master playlist\n     * @param variants - Playback variants sorted in descending bitrate order\n     * @return The variant index of the best available stream\n     */\n    @Override\n    protected int getDefaultVariantIndex(HlsMasterPlaylist playlist, Variant[] variants,\n      BandwidthMeter bandwidthMeter) {\n        long bitrateEstimate = bandwidthMeter.getBitrateEstimate();\n\n        if (bitrateEstimate == BandwidthMeter.NO_ESTIMATE) {\n            return super.getDefaultVariantIndex(playlist, variants, bandwidthMeter);\n        }\n\n        int defaultVariantIndex = variants.length - 1;\n        for (int i = variants.length - 1; i >= 0; i--) {\n            Format variantFormat = variants[i].format;\n            if (variantFormat.bitrate < bitrateEstimate) {\n                defaultVariantIndex = i;\n            }\n        }\n\n        return  defaultVariantIndex;\n    }\n```\n",
    "clean_message": "Thanks   Thought I would share the snippet we are using for selecting the best stream based on current bitrate estimate.",
    "message_url": "https://github.com/google/ExoPlayer/pull/1513#issuecomment-218544198",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@jer051 Thanks for the updated PR!\r\n\r\nUnfortunately it looks like `setWebClientCustomThenCustomClientIsUsed` fails. Can you look into fixing the test? For your convenience you can find the error below:\r\n\r\n```\r\n./gradlew check\r\n...\r\norg.mockito.exceptions.misusing.UnfinishedVerificationException: \r\nMissing method call for verify(mock) here:\r\n-> at org.springframework.security.oauth2.client.endpoint.WebClientReactiveClientCredentialsTokenResponseClientTests.setWebClientCustomThenCustomClientIsUsed(WebClientReactiveClientCredentialsTokenResponseClientTests.java:144)\r\n\r\nExample of correct verification:\r\n    verify(mock).doSomething()\r\n\r\nAlso, this error might show up because you verify either of: final/private/equals()/hashCode() methods.\r\nThose methods *cannot* be stubbed/verified.\r\nMocking methods declared on non-public parent classes is not supported.\r\n\r\n\tat org.mockito.internal.runners.DefaultInternalRunner$1.withBefores(DefaultInternalRunner.java:39)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:276)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79)\r\n\tat org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85)\r\n\tat org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39)\r\n\tat org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\r\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106)\r\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)\r\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)\r\n\tat org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66)\r\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)\r\n\tat sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\r\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)\r\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)\r\n\tat com.sun.proxy.$Proxy2.processTestClass(Unknown Source)\r\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117)\r\n\tat sun.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\r\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\r\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155)\r\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137)\r\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)\r\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\r\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```",
    "clean_message": "Thanks for the updated PR! Unfortunately it looks like  fails. Can you look into fixing the test? For your convenience you can find the error below:",
    "message_url": "https://github.com/spring-projects/spring-security/pull/6126#issuecomment-441784847",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the PR @akohli96! This is now merged into the main branch via 1cfe84922c9b26d08da4a2003777d1a82f7ce1e9.",
    "clean_message": "Thanks for the PR ! This is now merged into the main branch via 1cfe84922c9b26d08da4a2003777d1a82f7ce1e9.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/10225#issuecomment-906195378",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Good catch, thanks!\n",
    "clean_message": "Good catch, thanks!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/3497#issuecomment-121522776",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@parikshitdutta I just logged #8536, which is the equivalent of the changes you applied in this PR but for the WebFlux stack. Let me know if you're interested and free to take #8536.",
    "clean_message": "I just logged #8536, which is the equivalent of the changes you applied in this PR but for the WebFlux stack. Let me know if you're interested and free to take #8536.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/8392#issuecomment-629440847",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "The message looks more descriptive. Thanks for your attention.\n\n. \n",
    "clean_message": "The message looks more descriptive. Thanks for your attention. . ",
    "message_url": "https://github.com/spring-projects/spring-security/pull/47#issuecomment-39091758",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@krajcsovszkig-ms \r\n\r\n> All 3 are currently mandatory (must be non-empty), but when we are constructing a JWT for later signing (or just to store some overrides for some of the default claims) we won't have the tokenValue, and probably not even any headers.\r\n\r\nThe `Jwt` structure has to have the 3 parts or it's not a `Jwt`. So the existing class `Jwt` is designed to spec. I guess I'm a little confused on why you would create a `Jwt` without a `tokenValue` to simply provides overrides for claims? It sounds like you are thinking the `JwtEncoder` would look like:\r\n\r\n```java\r\nJwt encode(Jwt token) throws JwtException\r\n```\r\n\r\nIf that's what you're thinking then that is where the confusion is coming from. The return value is obvious `Jwt` but the input will NOT be `Jwt`. This is what we need to iron out first before the implementation is started.\r\n\r\nAs far as the way I see it, the `JwtEncoder.encode` would take in client and resource owner constructs and additionally be configured with the target JWS alg based on the client input. Take a look at `OidcIdTokenDecoderFactory` and the configuration it allows for supplying a `JwtDecoder`, eg. `jwtValidatorFactory`, `jwsAlgorithmResolver`...we might need something like `jwtClaimSetConsumer` (that can do overrides)\r\n\r\nI would suggest that you open up a Draft PR so we can decide on the API for `JwtEncoder` and keep the discussion going on there.\r\n\r\n> OK, so then they should be called the same as in the spec, right? (`CLIENT_SECRET_JWT` and `PRIVATE_KEY_JWT`)\r\n\r\nYes\r\n",
    "clean_message": "-ms  The  structure has to have the 3 parts or it's not a . So the existing class  is designed to spec. I guess I'm a little confused on why you would create a  without a  to simply provides overrides for claims? It sounds like you are thinking the  would look like: If that's what you're thinking then that is where the confusion is coming from. The return value is obvious  but the input will NOT be . This is what we need to iron out first before the implementation is started. As far as the way I see it, the  would take in client and resource owner constructs and additionally be configured with the target JWS alg based on the client input. Take a look at  and the configuration it allows for supplying a , eg. , ...we might need something like  (that can do overrides) I would suggest that you open up a Draft PR so we can decide on the API for  and keep the discussion going on there. Yes",
    "message_url": "https://github.com/spring-projects/spring-security/pull/8445#issuecomment-632239225",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the quick feedback!",
    "clean_message": "Thanks for the quick feedback!",
    "message_url": "https://github.com/spring-projects/spring-boot/pull/11320#issuecomment-350971930",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@gaearon: I finally finished with what was asked. I still let the second commit unsquashed, since it takes the decision to avoid using `ReactNoopUpdateQueue` and do its own error message instead. I'm not sure that's the right way to do this so I'll let you decide. If you're ok, I'll squash the two commits together!\n",
    "clean_message": ": I finally finished with what was asked. I still let the second commit unsquashed, since it takes the decision to avoid using  and do its own error message instead. I'm not sure that's the right way to do this so I'll let you decide. If you're ok, I'll squash the two commits together!",
    "message_url": "https://github.com/facebook/react/pull/7127#issuecomment-228809134",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    },
    "discussion_polarity": "positive"
  },
  {
    "raw_message": "Subtracting one from the divisor didn't work because a/(ab-1) != 1/(b-1). Instead have done 1/ ( (ab/a) -1 ). Would easily extend/swap to `correction` which replaces `unbiased` in Torch 2.0",
    "clean_message": "Subtracting one from the divisor didn't work because a/(ab-1) != 1/(b-1). Instead have done 1/ ( (ab/a) -1 ). Would easily extend/swap to  which replaces  in Torch 2.0",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/881#issuecomment-1570649992",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I wasn't aware of #15724. (i miss the typescript, damn ! ^^)\r\n\r\nAnd yes i clearly understand the \"why\" you did this, and why you won't. But to make easier parsing for batch/convert script this will be useful.\r\n\r\n@mrdoob Did you plan to split/remove this file ? Or re-export all import statement like in Materials intermediary exporter file (I think this is the target, no ?) ? \r\n\r\nIn case you go this way i could easily find/replace all ShaderChunk import by their real shader import and keep backward compatibility. Tell me and i will open an other PR for this purpose.",
    "clean_message": "I wasn't aware of #15724. (i miss the typescript, damn ! ^^) And yes i clearly understand the \"why\" you did this, and why you won't. But to make easier parsing for batch/convert script this will be useful. Did you plan to split/remove this file ? Or re-export all import statement like in Materials intermediary exporter file (I think this is the target, no ?) ?  In case you go this way i could easily find/replace all ShaderChunk import by their real shader import and keep backward compatibility. Tell me and i will open an other PR for this purpose.",
    "message_url": "https://github.com/mrdoob/three.js/pull/15887#issuecomment-468957962",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    },
    "discussion_polarity": "positive"
  },
  {
    "raw_message": "This occurred to me today and seems like having a method called `render()` inside the `methods` property will cause this error.",
    "clean_message": "This occurred to me today and seems like having a method called  inside the  property will cause this error.",
    "message_url": "https://github.com/vuejs/vue/pull/5534#issuecomment-357547137",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "IMO:\r\n\r\n(1) No\r\n(2) I don't see a value in publicizing install size for this package. For something like webpack which is bloated beyond reason (10x the size of express according to the badges), sure, because it is a problem they have.  But that is not a problem we have.\r\n(4) Sure, I hardly ever visit the badge board so I don't have a reason not to lol.",
    "clean_message": "IMO: (1) No (2) I don't see a value in publicizing install size for this package. For something like webpack which is bloated beyond reason (10x the size of express according to the badges), sure, because it is a problem they have.  But that is not a problem we have. (4) Sure, I hardly ever visit the badge board so I don't have a reason not to lol.",
    "message_url": "https://github.com/expressjs/express/pull/3710#issuecomment-411882681",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@ThiefMaster would appreciate you reviewing this--you seem to have a knack for finding things I've overlooked.\n",
    "clean_message": "would appreciate you reviewing this--you seem to have a knack for finding things I've overlooked.",
    "message_url": "https://github.com/pallets/flask/pull/1703#issuecomment-174722182",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I think the move here is to always initialize a new object for classes. The object pooling is a micro-optimization that doesn't matter in the grand scheme of things.",
    "clean_message": "I think the move here is to always initialize a new object for classes. The object pooling is a micro-optimization that doesn't matter in the grand scheme of things.",
    "message_url": "https://github.com/facebook/react/pull/25334#issuecomment-1317530742",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> I don't think we need esm modules and dts for the tests though. I am actually thinking if `tsc-compat-cjs` is enough (so that running tests is not super slow).\r\n\r\nMy concern was that node may not run because it may see ES modules even when they aren't used and complain.",
    "clean_message": "My concern was that node may not run because it may see ES modules even when they aren't used and complain.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/8363#issuecomment-1129907504",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "re #10973. `fill` and `copyWithin` are methods that, at this point, have good browser support and are standardized, so this PR adds support for Vue to observe mutating changes from those methods.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n",
    "clean_message": "re #10973.  and  are methods that, at this point, have good browser support and are standardized, so this PR adds support for Vue to observe mutating changes from those methods. <!-- Please make sure to read the Pull Request Guidelines: -- <!-- PULL REQUEST TEMPLATE --<!-- (Update \"[ ]\" to \"[x]\" to check a box) -- What kind of change does this PR introduce? (check at least one)  [ ] Bugfix [x] Feature [ ] Code style update [ ] Refactor [ ] Build-related changes [ ] Other, please describe:  Does this PR introduce a breaking change? (check one)  [ ] Yes [x] No  If yes, please describe the impact and migration path for existing applications: The PR fulfills these requirements:  [x] It's submitted to the  branch for v2.x (or to a previous version branch), not the  branch [x] When resolving a specific issue, it's referenced in the PR's title (e.g. , where \"xxx\" is the issue number) [x] All tests are passing:  [x] New/updated tests are included  If adding a new feature, the PR's description includes: - [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it) Other information:",
    "message_url": "https://github.com/vuejs/vue/pull/11229",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@tiangolo something seems wrong with the CI -- my first submission of this PR had a failing test (and failed code coverage) and it still \"passed all checks\".",
    "clean_message": "something seems wrong with the CI -- my first submission of this PR had a failing test (and failed code coverage) and it still \"passed all checks\".",
    "message_url": "https://github.com/tiangolo/fastapi/pull/748#issuecomment-559602756",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for the feedback! I'm glad this was well received :sweat_smile: \r\n\r\n@sallner I didn't uncap the other extras because those shouldn't really be extras, they are development dependencies, for tests, docs, and local development. I should not have them exposed in the released versions/wheels.\r\n\r\nI plan on removing those extras that shouldn't be public and replace them with something else, probably `requirements.txt` files with pinned dependencies that Dependabot can suggest to update later.",
    "clean_message": "Thanks for the feedback! I'm glad this was well received :sweat_smile:  I didn't uncap the other extras because those shouldn't really be extras, they are development dependencies, for tests, docs, and local development. I should not have them exposed in the released versions/wheels. I plan on removing those extras that shouldn't be public and replace them with something else, probably  files with pinned dependencies that Dependabot can suggest to update later.",
    "message_url": "https://github.com/tiangolo/fastapi/pull/5634#issuecomment-1313692880",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "\r\nIt seems to me that it was necessary to specify the step of creating the hello.py file, because some newbie may be confused, even if the creation of the file is implicit\r\n",
    "clean_message": "It seems to me that it was necessary to specify the step of creating the hello.py file, because some newbie may be confused, even if the creation of the file is implicit",
    "message_url": "https://github.com/pallets/flask/pull/3811",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@jzheaux, I'd like to share 2 things about semantic versioning:\r\n\r\n1. It doesn't prohibit backporting to version 4. (I'm not sure, but from\r\n    your comment seems you imply semantic versioning prohibits it)\r\n   The current release is 4.2.13, the fixed release will be 4.3.0 - all according to the quote you provide. \r\n\r\n2. Semantic versioning doesn't work for Java when we want an old version\r\n    of a library to be used simultaneously with the new version in one application.\r\n    Simply because Java doesn't allow several versions of classes with an equal\r\n    fully-qualified name. (In the same class loader. Using different classloaders,\r\n    as OSGI does, is an overkill unpractical in most real situations, of course. Honestly,\r\n    I haven't used java modules, but the impression they don't solve the problem\r\n    in a convenient way too, unfortunately).\r\n\r\n\r\n    How often we need several version simultaneously? Almost always.\r\n\r\n    First, dependency tree of any moderate size application has some\r\n    libraries present in multiple tree nodes, with different versions.\r\n\r\n    The second (more relevant for spring-security): migration easiness.\r\n    We may want our old REST API endpoints to remain protected by spring-security 4,\r\n    because it's already tested stable code. But for new endpoints, we'd like to use the modern,\r\n    latest version 5.\r\n\r\n    If this is not allowed, then we have a much more difficult \"all or nothing\" situation:\r\n    unless you found resources to migrate and test your existing code, you must continue\r\n    using version 4 for old endpoints, thus bogging down deeper and deeper into the old version,\r\n    which has limited or sometimes no maintenance (in some large system I know some\r\n    components still use spring-security 3).\r\n\r\nIn order to allow several versions of your library in an application, give them different artifact name (spring-security3, spring-security4, spring-security5) and different package names (org.springframework.security3, org.springframework.security4, org.springframework.security5).\r\n\r\ncommons-collections, commons-lang use this approach\r\n\r\nIn short - the principle of immutability applied to versioning, dependency management and backward compatibility. Here immutability of values (APIs) assigned to names (class / artifact names). If version 5 is incompatible with version 4, they should not share fully-qualified class names and artifact names.\r\n",
    "clean_message": ", I'd like to share 2 things about semantic versioning:   It doesn't prohibit backporting to version 4. (I'm not sure, but from     your comment seems you imply semantic versioning prohibits it)    The current release is 4.2.13, the fixed release will be 4.3.0 - all according to the quote you provide.    Semantic versioning doesn't work for Java when we want an old version     of a library to be used simultaneously with the new version in one application.     Simply because Java doesn't allow several versions of classes with an equal     fully-qualified name. (In the same class loader. Using different classloaders,     as OSGI does, is an overkill unpractical in most real situations, of course. Honestly,     I haven't used java modules, but the impression they don't solve the problem     in a convenient way too, unfortunately). How often we need several version simultaneously? Almost always. First, dependency tree of any moderate size application has some libraries present in multiple tree nodes, with different versions. The second (more relevant for spring-security): migration easiness. We may want our old REST API endpoints to remain protected by spring-security 4, because it's already tested stable code. But for new endpoints, we'd like to use the modern, latest version 5. If this is not allowed, then we have a much more difficult \"all or nothing\" situation: unless you found resources to migrate and test your existing code, you must continue using version 4 for old endpoints, thus bogging down deeper and deeper into the old version, which has limited or sometimes no maintenance (in some large system I know some components still use spring-security 3).   In order to allow several versions of your library in an application, give them different artifact name (spring-security3, spring-security4, spring-security5) and different package names (org.springframework.security3, org.springframework.security4, org.springframework.security5). commons-collections, commons-lang use this approach In short - the principle of immutability applied to versioning, dependency management and backward compatibility. Here immutability of values (APIs) assigned to names (class / artifact names). If version 5 is incompatible with version 4, they should not share fully-qualified class names and artifact names.",
    "message_url": "https://github.com/spring-projects/spring-security/pull/7158#issuecomment-519766725",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@jimi-c I would really like to have it in 2.2. reworking the PR now.\n\nThe thing is, our use case (however \"not-ansibly\") involves running potentially dozens of ansible-playbook processes each against a single node, but from the server-side component w/o human interaction. Unfortunately this one-node-per-playbook restriction is imposed by the outer framework we are using Ansible under. That is why being able to save even couple of CPU% is important for me.\n",
    "clean_message": "-c I would really like to have it in 2.2. reworking the PR now. The thing is, our use case (however \"not-ansibly\") involves running potentially dozens of ansible-playbook processes each against a single node, but from the server-side component w/o human interaction. Unfortunately this one-node-per-playbook restriction is imposed by the outer framework we are using Ansible under. That is why being able to save even couple of CPU% is important for me.",
    "message_url": "https://github.com/ansible/ansible/pull/16560#issuecomment-252014197",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    },
    "discussion_polarity": "negative"
  },
  {
    "raw_message": "Having such an artifact feels like more indirection. It would be easier to add the file yourself.\r\n\r\nI am closing this per https://github.com/mockito/mockito/pull/1865#pullrequestreview-347321421 Thank you for opening the PR and discussing this feature, sorry to not make it in!",
    "clean_message": "Having such an artifact feels like more indirection. It would be easier to add the file yourself. I am closing this per  Thank you for opening the PR and discussing this feature, sorry to not make it in!",
    "message_url": "https://github.com/mockito/mockito/pull/1865#issuecomment-581061384",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@posva, actually, I really like `.no-modifiers` because that's what actually is (but we have vue's event modifiers too), maybe you could just do a poll with the members of core team to find out which one is reasonable? ",
    "clean_message": ", actually, I really like  because that's what actually is (but we have vue's event modifiers too), maybe you could just do a poll with the members of core team to find out which one is reasonable? ",
    "message_url": "https://github.com/vuejs/vue/pull/5977#issuecomment-312525822",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": ":+1:\n\nI don't know if this is the way I prefer, but makes sense. Also, it is easy to make `url_for` always return https, if this is what the user want.\n",
    "clean_message": ":+1: I don't know if this is the way I prefer, but makes sense. Also, it is easy to make  always return https, if this is what the user want.",
    "message_url": "https://github.com/pallets/flask/pull/1144#issuecomment-51780295",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "#38448",
    "clean_message": "38448",
    "message_url": "https://github.com/pandas-dev/pandas/pull/38446#issuecomment-744013244",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "## PR Summary\r\n\r\nMEP22 was intended to provide a way to customize user interactions,\r\nin particular with the toolbar via the implementation to \"tools\".  In\r\npractice, it remains currently difficult to add general customizations;\r\nfor example, the color-vision deficiency simulator recently proposed\r\ndoes not fit in the MEP22 framework.  Moreover, there is no way to\r\nregister MEP22 tools to be added to all figures.\r\n\r\nThis patch proposes an alternative approach for toolbar customization:\r\nit adds a rcParam (`figure.hooks`) which is a list of callables\r\n(actually, of \"modulename:functioname\" strings, so that they can\r\nbe specified in the matplotlibrc file) that get called whenever\r\nplt.figure() creates a figure is instantiated; each of the callable gets\r\nthe figure as parameter and can modify it as it sees fit (note that it\r\nis equivalent to pass the figure or the toolbar as parameter, as one\r\ncan reach one from the other; passing the figure was deemed nicer).\r\nThis makes it easy to distribute such customizations as plain python\r\nmodules than can be installed from PyPI.  Also note that figure hooks\r\nare intentionally *not* applied when figures are created without going\r\nthrough `plt.figure` -- when embedding, one can easily explicitly call\r\nthe hooks directly on the figure (this is one reason why passing the\r\nfigure is nicer than passing the toolbar).\r\n\r\nAs an example, the color-vision deficiency simulator is modified to use\r\nthis hook (see docstring of the `user_interfaces/mplcvd.py` example).\r\nThe advantage of this approach is that arbitrary modifications to the\r\ntoolbar become possible (here, adding a menu-in-a-toolbar), but this\r\nnaturally means that each GUI toolkit needs its own code.  Likely we\r\nwill need to provide \"template\" implementations that can be copied\r\nby third-parties.  (There is also some functionality currently only\r\navailable as private API, as mentioned in comments; one such API is\r\n`_icon`, which provides theme-dependent icon recolorization.  These APIs\r\nshould be made public in some form, but that should be doable.)\r\n\r\n(One should check to what extent this approach is generalizable to\r\nthe macos and notebook backends -- customizations to the former could\r\npossibly be implemented via PyObjC(?), and the latter via js injection?)\r\n\r\n## PR Checklist\r\n\r\n<!-- Please mark any checkboxes that do not apply to this PR as [N/A]. -->\r\n**Tests and Styling**\r\n- [ ] Has pytest style unit tests (and `pytest` passes).\r\n- [ ] Is [Flake 8](https://flake8.pycqa.org/en/latest/) compliant (install `flake8-docstrings` and run `flake8 --docstring-convention=all`).\r\n\r\n**Documentation**\r\n- [ ] New features are documented, with examples if plot related.\r\n- [ ] New features have an entry in `doc/users/next_whats_new/` (follow instructions in README.rst there).\r\n- [ ] API changes documented in `doc/api/next_api_changes/` (follow instructions in README.rst there).\r\n- [ ] Documentation is sphinx and numpydoc compliant (the docs should [build](https://matplotlib.org/devel/documenting_mpl.html#building-the-docs) without error).\r\n\r\n<!--\r\nThank you so much for your PR!  To help us review your contribution, please\r\nconsider the following points:\r\n\r\n- A development guide is available at https://matplotlib.org/devdocs/devel/index.html.\r\n\r\n- Help with git and github is available at\r\n  https://matplotlib.org/devel/gitwash/development_workflow.html.\r\n\r\n- Do not create the PR out of main, but out of a separate branch.\r\n\r\n- The PR title should summarize the changes, for example \"Raise ValueError on\r\n  non-numeric input to set_xlim\".  Avoid non-descriptive titles such as\r\n  \"Addresses issue #8576\".\r\n\r\n- The summary should provide at least 1-2 sentences describing the pull request\r\n  in detail (Why is this change required?  What problem does it solve?) and\r\n  link to any relevant issues.\r\n\r\n- If you are contributing fixes to docstrings, please pay attention to\r\n  http://matplotlib.org/devel/documenting_mpl.html#formatting.  In particular,\r\n  note the difference between using single backquotes, double backquotes, and\r\n  asterisks in the markup.\r\n\r\nWe understand that PRs can sometimes be overwhelming, especially as the\r\nreviews start coming in.  Please let us know if the reviews are unclear or\r\nthe recommended next step seems overly demanding, if you would like help in\r\naddressing a reviewer's comments, or if you have been waiting too long to hear\r\nback on your PR.\r\n-->\r\n",
    "clean_message": "PR Summary MEP22 was intended to provide a way to customize user interactions, in particular with the toolbar via the implementation to \"tools\".  In practice, it remains currently difficult to add general customizations; for example, the color-vision deficiency simulator recently proposed does not fit in the MEP22 framework.  Moreover, there is no way to register MEP22 tools to be added to all figures. This patch proposes an alternative approach for toolbar customization: it adds a rcParam () which is a list of callables (actually, of \"modulename:functioname\" strings, so that they can be specified in the matplotlibrc file) that get called whenever plt.figure() creates a figure is instantiated; each of the callable gets the figure as parameter and can modify it as it sees fit (note that it is equivalent to pass the figure or the toolbar as parameter, as one can reach one from the other; passing the figure was deemed nicer). This makes it easy to distribute such customizations as plain python modules than can be installed from PyPI.  Also note that figure hooks are intentionally not applied when figures are created without going through  -- when embedding, one can easily explicitly call the hooks directly on the figure (this is one reason why passing the figure is nicer than passing the toolbar). As an example, the color-vision deficiency simulator is modified to use this hook (see docstring of the  example). The advantage of this approach is that arbitrary modifications to the toolbar become possible (here, adding a menu-in-a-toolbar), but this naturally means that each GUI toolkit needs its own code.  Likely we will need to provide \"template\" implementations that can be copied by third-parties.  (There is also some functionality currently only available as private API, as mentioned in comments; one such API is , which provides theme-dependent icon recolorization.  These APIs should be made public in some form, but that should be doable.) (One should check to what extent this approach is generalizable to the macos and notebook backends -- customizations to the former could possibly be implemented via PyObjC(?), and the latter via js injection?) PR Checklist <!-- Please mark any checkboxes that do not apply to this PR as [N/A]. --Tests and Styling - [ ] Has pytest style unit tests (and  passes). - [ ] Is Flake 8 compliant (install  and run ). Documentation - [ ] New features are documented, with examples if plot related. - [ ] New features have an entry in  (follow instructions in README.rst there). - [ ] API changes documented in  (follow instructions in README.rst there). - [ ] Documentation is sphinx and numpydoc compliant (the docs should build without error). <!-- Thank you so much for your PR!  To help us review your contribution, please consider the following points:   A development guide is available at .   Help with git and github is available at   .   Do not create the PR out of main, but out of a separate branch.   The PR title should summarize the changes, for example \"Raise ValueError on   non-numeric input to set_xlim\".  Avoid non-descriptive titles such as   \"Addresses issue #8576\".   The summary should provide at least 1-2 sentences describing the pull request   in detail (Why is this change required?  What problem does it solve?) and   link to any relevant issues.   If you are contributing fixes to docstrings, please pay attention to   .  In particular,   note the difference between using single backquotes, double backquotes, and   asterisks in the markup.   We understand that PRs can sometimes be overwhelming, especially as the reviews start coming in.  Please let us know if the reviews are unclear or the recommended next step seems overly demanding, if you would like help in addressing a reviewer's comments, or if you have been waiting too long to hear back on your PR. --",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/22316",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "i just don't like how complex it makes the function due to all the type checking. very little people use this as well. why not just stringify it yourself?\n",
    "clean_message": "i just don't like how complex it makes the function due to all the type checking. very little people use this as well. why not just stringify it yourself?",
    "message_url": "https://github.com/expressjs/express/pull/2098#issuecomment-42159190",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `main` branch for v2.x (or to a previous version branch)\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n",
    "clean_message": "<!-- Please make sure to read the Pull Request Guidelines: -- <!-- PULL REQUEST TEMPLATE --<!-- (Update \"[ ]\" to \"[x]\" to check a box) -- What kind of change does this PR introduce? (check at least one)  [x] Bugfix [ ] Feature [ ] Code style update [ ] Refactor [ ] Build-related changes [ ] Other, please describe:  Does this PR introduce a breaking change? (check one)  [ ] Yes [ ] No  If yes, please describe the impact and migration path for existing applications: The PR fulfills these requirements:  [ ] It's submitted to the  branch for v2.x (or to a previous version branch) [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. , where \"xxx\" is the issue number) [ ] All tests are passing:  [ ] New/updated tests are included  If adding a new feature, the PR's description includes: - [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it) Other information:",
    "message_url": "https://github.com/vuejs/vue/pull/12846",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "No need to call `inspect.getmembers(importlib.import_module())` every time `_Device.__getitem__` is called, cache the runtime object instead.\r\nAlso renamed `_Device._buffers` to `_Device._names`.",
    "clean_message": "No need to call  every time  is called, cache the runtime object instead. Also renamed  to .",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/1232",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I should to say the script 'antd-tools run ts-lint' can not run when i run it on windows, so I change it run in mac, anyway i have fix cli fail @yesmeck ",
    "clean_message": "I should to say the script 'antd-tools run ts-lint' can not run when i run it on windows, so I change it run in mac, anyway i have fix cli fail  ",
    "message_url": "https://github.com/ant-design/ant-design/pull/11311#issuecomment-408581041",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@hamogu - I took a stab at doing the rebase, check out `taldcroft/astropy/subclasstable-rebase`.  There were some non-trivial conflicts in `astropy/table/table.py` and `astropy/table/tests/test_item_access.py`, so you should look carefully at the diffs between your version in `subclasstable` and the new rebased version.  Once you are happy you should do something like:\n\n```\ngit branch -m subclasstable subclasstable-orig\ngit branch -m subclasstable-rebase subclasstable\ngit push -f origin subclasstable\n```\n",
    "clean_message": " I took a stab at doing the rebase, check out .  There were some non-trivial conflicts in  and , so you should look carefully at the diffs between your version in  and the new rebased version.  Once you are happy you should do something like: ",
    "message_url": "https://github.com/astropy/astropy/pull/1142#issuecomment-19814574",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "/cc @XhmikosR \n",
    "clean_message": "/cc  ",
    "message_url": "https://github.com/twbs/bootstrap/pull/13801#issuecomment-45828989",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "hey, haven't tried this before, but we could try this?\nhttp://stackoverflow.com/questions/8161617/how-can-i-specify-library-versions-in-setup-py\n\nbasically, you write this in setup.py:\n\n``` python\ninstall_requires=['requests>=2.3.0']\n```\n\nthat way, we _do_ issue warnings when stuff's old _and_ we don't require some random package version upon install. i didn't previously know you could do a `>=`, that's nice.\n\nTHEN, we can also do the same for the `requirements.txt` (for pip) file (i don't have an elegant way to issue warnings based on that file though... it seems like a messy way to do it, unfortunately)\n",
    "clean_message": "hey, haven't tried this before, but we could try this? basically, you write this in setup.py: that way, we do issue warnings when stuff's old and we don't require some random package version upon install. i didn't previously know you could do a requirements.txt` (for pip) file (i don't have an elegant way to issue warnings based on that file though... it seems like a messy way to do it, unfortunately)",
    "message_url": "https://github.com/plotly/plotly.py/pull/65#issuecomment-48265164",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "positive"
  },
  {
    "raw_message": "It appears that you were able to take care of the rebasing? Just a small note that your name appears differently in some of the commits.\n\nCI isn't happy right now, but it is raising a cryptic error. We will have to try a local build to figure out what is wrong.\n",
    "clean_message": "It appears that you were able to take care of the rebasing? Just a small note that your name appears differently in some of the commits. CI isn't happy right now, but it is raising a cryptic error. We will have to try a local build to figure out what is wrong.",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/7033#issuecomment-245791587",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Fixed typos I saw in the Request Context documentation.\r\n\r\n<!--\r\nCommit checklist:\r\n\r\n* add tests that fail without the patch\r\n* ensure all tests pass with ``pytest``\r\n* add documentation to the relevant docstrings or pages\r\n* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings\r\n* add a changelog entry if this patch changes code\r\n\r\nTests, coverage, and docs will be run automatically when you submit the pull\r\nrequest, but running them yourself can save time.\r\n-->\r\n",
    "clean_message": "Fixed typos I saw in the Request Context documentation. <!-- Commit checklist:  add tests that fail without the patch ensure all tests pass with pytest add documentation to the relevant docstrings or pages add versionadded or versionchanged directives to relevant docstrings add a changelog entry if this patch changes code  Tests, coverage, and docs will be run automatically when you submit the pull request, but running them yourself can save time. --",
    "message_url": "https://github.com/pallets/flask/pull/3381",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@aslushnikov could you have a check on this and perhaps initiate a review? Just curious when I can use this or what needs to change?",
    "clean_message": "could you have a check on this and perhaps initiate a review? Just curious when I can use this or what needs to change?",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/2015#issuecomment-371064483",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "All PRs must either fix bugs, improve speed (>20%), refactor on a conceptual level (big line reduction), or add tested functionality.",
    "clean_message": "All PRs must either fix bugs, improve speed (>20%), refactor on a conceptual level (big line reduction), or add tested functionality.",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/1144#issuecomment-1623781448",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks! It'll got out the next time we update the docs.\n",
    "clean_message": "Thanks! It'll got out the next time we update the docs.",
    "message_url": "https://github.com/facebook/react/pull/1951#issuecomment-50434600",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks, I don't think it's strictly necessary and having the value in a variable before returning helps sometimes while debugging, to set a breakpoint before returning. So, for now, I'll pass on this one. Maybe in a future, when I'm doing some benchmarks and trying to optimize the code I'll optimize some places like this, but for now, I think it's fine as it is, so I'll pass on this one. But thanks for your interest! :coffee: ",
    "clean_message": "Thanks, I don't think it's strictly necessary and having the value in a variable before returning helps sometimes while debugging, to set a breakpoint before returning. So, for now, I'll pass on this one. Maybe in a future, when I'm doing some benchmarks and trying to optimize the code I'll optimize some places like this, but for now, I think it's fine as it is, so I'll pass on this one. But thanks for your interest! :coffee: ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/3141#issuecomment-1125396699",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hmmm hitting some pip-related snags:\n- https://github.com/pypa/pip/issues/2903\n- http://stackoverflow.com/questions/25036897/pip-install-unicodedecodeerror\n\nThese all seem to relate to unicode in the **path name** though, and i don't know where that would be occurring?\n",
    "clean_message": "Hmmm hitting some pip-related snags:    These all seem to relate to unicode in the path name though, and i don't know where that would be occurring?",
    "message_url": "https://github.com/plotly/plotly.py/pull/333#issuecomment-147944790",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I was having this error for revision 1069273, then bumped to puppeteer 19.6.2, deployed to Google Cloud Function, and the error went away. Then a little later I did another deployment for an unrelated reason, and the error came back again on a new revision 1083080.\r\n\r\nSo it doesn't seem that 19.6.2 fixes the issue.",
    "clean_message": "I was having this error for revision 1069273, then bumped to puppeteer 19.6.2, deployed to Google Cloud Function, and the error went away. Then a little later I did another deployment for an unrelated reason, and the error came back again on a new revision 1083080. So it doesn't seem that 19.6.2 fixes the issue.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/9568#issuecomment-1409113853",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Give me a few minutes. I'll take a look this morning.",
    "clean_message": "Give me a few minutes. I'll take a look this morning.",
    "message_url": "https://github.com/facebook/react/pull/22649#issuecomment-954759857",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> Cannot be compatible with upstream ts types\r\n\r\nIt's OK since we have list `dots` in our document. And we can override this prop.\r\n",
    "clean_message": "It's OK since we have list  in our document. And we can override this prop.",
    "message_url": "https://github.com/ant-design/ant-design/pull/21156#issuecomment-581769727",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This is ready for your review @samuelcolvin.\r\n\r\nLet me know if you want me to move the function `update_field_forward_refs` from `main.py` to `utils.py`.",
    "clean_message": "This is ready for your review . Let me know if you want me to move the function  from  to .",
    "message_url": "https://github.com/pydantic/pydantic/pull/464#issuecomment-480324525",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Oops, I did working for this quite a while and did not notice another pull request #11605. It seems in progress, so please close this if we do not need this.",
    "clean_message": "Oops, I did working for this quite a while and did not notice another pull request #11605. It seems in progress, so please close this if we do not need this.",
    "message_url": "https://github.com/facebook/react/pull/11620#issuecomment-346231082",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "In C# there's an expectation that these comments parse [XML tags](https://docs.microsoft.com/en-us/dotnet/csharp/codedoc) within them, like `<summary>` - that's actually what inspired or own \"triple slash references\", I'm pretty sure. I'm not sure we want to lead c# devs into thinking we support that whole system... (Nor do I think we actually want to support that).\r\n\r\nOther than that, I don't see much of a reason to bother, since it's not like any other JS tools interpret comments like this? Like, I get that there's probably not much _harm_ done by it (expect potentially confusing future SO questions asking why doc tool X doesn't read \"doc comments\")... But... Eh?",
    "clean_message": "In C# there's an expectation that these comments parse XML tags within them, like `<summary Other than that, I don't see much of a reason to bother, since it's not like any other JS tools interpret comments like this? Like, I get that there's probably not much harm done by it (expect potentially confusing future SO questions asking why doc tool X doesn't read \"doc comments\")... But... Eh?",
    "message_url": "https://github.com/microsoft/TypeScript/pull/39930#issuecomment-670042860",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Sorry, wrong button \ud83d\ude05 @thymikee mind rebasing?",
    "clean_message": "Sorry, wrong button \ud83d\ude05  mind rebasing?",
    "message_url": "https://github.com/jestjs/jest/pull/7585#issuecomment-455877401",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": " > Instead, we maybe should include it in master and publish a beta version of mockito 3?\r\n\r\nThat means stable JUnit5 support will only be available when mockito 3 final is released. I guess this will not happen before Q4 2018. \r\n\r\nAn other option is to release junit5 support as seperate mockito 2 addon artefact which requires java 8, like junit 5 itself. It can be released much earlier. What do you think?\r\n",
    "clean_message": "That means stable JUnit5 support will only be available when mockito 3 final is released. I guess this will not happen before Q4 2018.  An other option is to release junit5 support as seperate mockito 2 addon artefact which requires java 8, like junit 5 itself. It can be released much earlier. What do you think?",
    "message_url": "https://github.com/mockito/mockito/pull/1221#issuecomment-339670044",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@Zac-HD WDYT?",
    "clean_message": "-HD WDYT?",
    "message_url": "https://github.com/pydantic/pydantic/pull/2389#issuecomment-783742811",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Ah... answered just here: https://github.com/matthiasgeiger/jabref/commit/8e3ad9d9804be70cf47f6e20191efcaae2ddfe23#commitcomment-13044544\n",
    "clean_message": "Ah... answered just here: ",
    "message_url": "https://github.com/JabRef/jabref/pull/137#issuecomment-137409878",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "`fbx2three.js` and `obj2three.js` are still using examples files from the `js` directory. This PR ensures that both scripts use modules. Since the ES6 module support in context of node is complicated, the scripts now require the usage of [esm](https://www.npmjs.com/package/esm).\r\n\r\nTested the change with `Samba Dancing.fbx`, `stanford-bunny.fbx` and `emerald.obj`.\r\n\r\nSidenote: I also like to suggest to remove both scripts and refer to the editor instead. The project only provides for two 3D formats such converters which is somewhat inconsistent. Besides, even the current implementation of `fbx2three.js` does not cover all features compared to the browser version and requires some ugly monkey-patching so textures can be handled. Not a proper solution, IMO.",
    "clean_message": "and  are still using examples files from the  directory. This PR ensures that both scripts use modules. Since the ES6 module support in context of node is complicated, the scripts now require the usage of esm. Tested the change with ,  and . Sidenote: I also like to suggest to remove both scripts and refer to the editor instead. The project only provides for two 3D formats such converters which is somewhat inconsistent. Besides, even the current implementation of  does not cover all features compared to the browser version and requires some ugly monkey-patching so textures can be handled. Not a proper solution, IMO.",
    "message_url": "https://github.com/mrdoob/three.js/pull/18728",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Okay, permissons are not copied. Maybe it is enough to check for Unix OS/POSIX support:\nhttps://docs.oracle.com/javase/tutorial/essential/io/fileAttr.html\n",
    "clean_message": "Okay, permissons are not copied. Maybe it is enough to check for Unix OS/POSIX support:",
    "message_url": "https://github.com/JabRef/jabref/pull/2286#issuecomment-261662530",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hmm, it's strange that it would be due to #32856, because it's failing inside `form_blocks` before the location that was changed in that PR. Maybe the `verify_integrity=False` causes it? ",
    "clean_message": "Hmm, it's strange that it would be due to #32856, because it's failing inside  before the location that was changed in that PR. Maybe the  causes it? ",
    "message_url": "https://github.com/pandas-dev/pandas/pull/32825#issuecomment-602179474",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "> @Ethanator Are you still interested in working on this?\r\n\r\nYes. I got distracted but I'm adding tests now to wrap this up.",
    "clean_message": "Yes. I got distracted but I'm adding tests now to wrap this up.",
    "message_url": "https://github.com/pandas-dev/pandas/pull/36350#issuecomment-703909544",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for the contribution @Xewus! :cake: :coffee: \r\n\r\nAnd thanks for the reviews @personage-hub and @Kirilex :bow: :coffee: \r\n\r\nAs I couldn't push to this branch to fix the extra files, I did it in this new PR (https://github.com/tiangolo/fastapi/pull/5970), it even preserves your commits. :nerd_face: ",
    "clean_message": "Thanks for the contribution ! :cake: :coffee:  And thanks for the reviews -hub and  :bow: :coffee:  As I couldn't push to this branch to fix the extra files, I did it in this new PR (), it even preserves your commits. :nerd_face: ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/5665#issuecomment-1420777617",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "# Summary\r\n\r\nGenerates a single tag when the parameter is a string, such that `app.include_router(router, tags=\"test\")` generates tag *test* instead of *t*, *e* and *s*.\r\n\r\nAn alternative may be to reject such parameter: see #4525.\r\n\r\n# Motivation\r\n\r\nI often use a single tag in my routers, which even the documentation states is very common.\r\n\r\nWhen I include a router in my app, I often do the mistake of using a string instead of a list, which generates a very weird result, as seen below: \r\n\r\n```python\r\nfrom fastapi import FastAPI, APIRouter\r\n\r\napp = FastAPI()\r\nrouter = APIRouter()\r\n\r\n@router.get(\"\")\r\ndef test():\r\n    return {\"msg\" : \"Hello, world.\"}\r\n\r\napp.include_router(router, prefix=\"/test\", tags=\"test\")\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/7232812/149621686-3237fac3-42b8-46de-bea9-767bc31d02bb.png)\r\n\r\nThis lead me to try implement a fix for this itch which often annoys me. I don't know how often it happens to other users, but I find it hard to see a use case for the current behavior - hence the PR.\r\n\r\n# Description\r\n\r\nIn this PR, I test if the object is an instance of string, and if such convert it to a list with one element. This results in a single tag, which is the correct behavior in my opinion. See example below for the same code:\r\n\r\n```python\r\nfrom fastapi import FastAPI, APIRouter\r\n\r\napp = FastAPI()\r\nrouter = APIRouter()\r\n\r\n@router.get(\"\")\r\ndef test():\r\n    return {\"msg\" : \"Hello, world.\"}\r\n\r\napp.include_router(router, prefix=\"/test\", tags=\"test\")\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/7232812/149621836-b63c872d-f382-462b-bff4-3c416180f28f.png)\r\n\r\n\r\nI also added tests and updated some single-tag examples.\r\n\r\n# Request for comments\r\n\r\nI'm a first time contributor, so comments are welcome. Specifically:\r\n- is this a desirable improvement?\r\n- could there be unwanted behavior which I'm unaware of?\r\n- should we update documentation to mention that strings are allowed?\r\n- do these tests make sense?\r\n\r\nI would also consider the alternative of raising an exception when the parameter is a string, to force the user to use another iterable such as a list or a tuple.\r\n",
    "clean_message": "Summary Generates a single tag when the parameter is a string, such that  generates tag test instead of t, e and s. An alternative may be to reject such parameter: see #4525. Motivation I often use a single tag in my routers, which even the documentation states is very common. When I include a router in my app, I often do the mistake of using a string instead of a list, which generates a very weird result, as seen below:   This lead me to try implement a fix for this itch which often annoys me. I don't know how often it happens to other users, but I find it hard to see a use case for the current behavior - hence the PR. Description In this PR, I test if the object is an instance of string, and if such convert it to a list with one element. This results in a single tag, which is the correct behavior in my opinion. See example below for the same code:  I also added tests and updated some single-tag examples. Request for comments I'm a first time contributor, so comments are welcome. Specifically: - is this a desirable improvement? - could there be unwanted behavior which I'm unaware of? - should we update documentation to mention that strings are allowed? - do these tests make sense? I would also consider the alternative of raising an exception when the parameter is a string, to force the user to use another iterable such as a list or a tuple.",
    "message_url": "https://github.com/tiangolo/fastapi/pull/4431",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I'm not sure why some tests are failing.\r\n\r\n~~I added a new parameter to the init-function in `src/runtime/internal/Component.ts`.\r\nI updated all references I could find to also use the new parameter. But still some tests (`test\\runtime\\samples\\bitmask-overflow-slot*`) are failing, because the new parameter is not applied. I would need some help to figure out what the problem is.~~\r\n\r\nAnother test that is failing is: `js/samples/collapses-text-around-comments`. I find it is a bad test, because it compares the generated output 1:1. The test will always fail if the code would look slightly different. It does not test any functionality.\r\nAs I can see currently only tests like these fail.\r\n\r\nCan someone please help?",
    "clean_message": "I'm not sure why some tests are failing. ~~I added a new parameter to the init-function in . I updated all references I could find to also use the new parameter. But still some tests () are failing, because the new parameter is not applied. I would need some help to figure out what the problem is.~~ Another test that is failing is: . I find it is a bad test, because it compares the generated output 1:1. The test will always fail if the code would look slightly different. It does not test any functionality. As I can see currently only tests like these fail. Can someone please help?",
    "message_url": "https://github.com/sveltejs/svelte/pull/5639#issuecomment-721555075",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "> As IndexError should be an exception.\n\nAh yes.  I had IndexError and a more exact boto exception being captured previously.  I've since changed it as requested.\n\n> Does the `num_terminated` logic return all the terminated counts total if they are terminated in two stages?\n\nApologies, I'm not sure I understand the question.  How do you mean \"two stages\"?  \n\nThe variable `terminated_instance_ids` is (and was previously) used to track the number of instances where termination was requested.  The variable `num_terminated` is a count used to indicate the number of instances referenced by `terminated_instance_ids` where `state=\"terminated\"`.\n\nAlso note, the logic around `wait` was largely duplicated from the existing logic within `create_instances()`.\n",
    "clean_message": "Ah yes.  I had IndexError and a more exact boto exception being captured previously.  I've since changed it as requested. Apologies, I'm not sure I understand the question.  How do you mean \"two stages\"?   The variable  is (and was previously) used to track the number of instances where termination was requested.  The variable  is a count used to indicate the number of instances referenced by  where . Also note, the logic around  was largely duplicated from the existing logic within .",
    "message_url": "https://github.com/ansible/ansible/pull/4776#issuecomment-27607478",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I found this bug. The property \"options\" is of the same type of its parent, not making sense.\n",
    "clean_message": "I found this bug. The property \"options\" is of the same type of its parent, not making sense.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/3463",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n<!-- Please remember to update CHANGELOG.md at the root of the project if you have not done so. -->\r\n\r\n## Summary\r\n\r\nWe OOM if we run the entire lint run with type info (see https://typescript-eslint.io/docs/linting/typed-linting/monorepos/#important-note-regarding-large--10-multi-package-monorepos), so I've added a script.\r\n\r\nWe have a toooooon of errors, so I just fixed a few of them. Should chip away at this when people have time \ud83d\ude42 \r\n\r\nThis is somewhat annoying as IDE integrations etc won't apply, but better than nothing\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n## Test plan\r\n\r\nAdded CI run\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n",
    "clean_message": "<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -- <!-- Please remember to update CHANGELOG.md at the root of the project if you have not done so. -- Summary We OOM if we run the entire lint run with type info (see ), so I've added a script. We have a toooooon of errors, so I just fixed a few of them. Should chip away at this when people have time \ud83d\ude42  This is somewhat annoying as IDE integrations etc won't apply, but better than nothing <!-- Explain the motivation for making this change. What existing problem does the pull request solve? -- Test plan Added CI run <!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. --",
    "message_url": "https://github.com/jestjs/jest/pull/13368",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for your feedback, @Siedlerchr and @tobiasdiez! Now all identified issues should be fixed.\r\n\r\n- TODO: Add support for multicite commands.\r\n- TODO: Expand integration test.",
    "clean_message": "Thanks for your feedback,  and ! Now all identified issues should be fixed.  TODO: Add support for multicite commands. TODO: Expand integration test. ",
    "message_url": "https://github.com/JabRef/jabref/pull/5011#issuecomment-500299236",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This makes debugging the reason for the error much easier, e.g. in keycloak / OpenID.\r\n\r\nBefore the patch:\r\n400 Client Error: Bad Request for url: <url>\r\n\r\nAfter the patch:\r\n400 Client Error: Bad Request for url: <url>, response body is {\"error\":\"unauthorized_client\",\"error_description\":\"Invalid client secret\"}",
    "clean_message": "This makes debugging the reason for the error much easier, e.g. in keycloak / OpenID. Before the patch: 400 Client Error: Bad Request for url: <url After the patch: 400 Client Error: Bad Request for url: , response body is {\"error\":\"unauthorized_client\",\"error_description\":\"Invalid client secret\"}",
    "message_url": "https://github.com/psf/requests/pull/5225",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Instead of `performSyncWorkOnRoot`.\r\n\r\nThe conceptual model is that the only difference between sync default updates (in React 18) and concurrent default updates (in a future major release) is time slicing. All other behavior should be the same (i.e. the stuff in `finishConcurrentRender`).\r\n\r\nGiven this, I think it makes more sense to model the implementation this way, too. This exposed a quirk in the previous implementation where non-sync work was sometimes mistaken for sync work and flushed too early. In the new implementation, `performSyncWorkOnRoot` is only used for truly synchronous renders (i.e. `SyncLane`), which should make these mistakes less common.\r\n\r\nFixes most of the tests marked with TODOs from #21072.",
    "clean_message": "Instead of . The conceptual model is that the only difference between sync default updates (in React 18) and concurrent default updates (in a future major release) is time slicing. All other behavior should be the same (i.e. the stuff in ). Given this, I think it makes more sense to model the implementation this way, too. This exposed a quirk in the previous implementation where non-sync work was sometimes mistaken for sync work and flushed too early. In the new implementation,  is only used for truly synchronous renders (i.e. ), which should make these mistakes less common. Fixes most of the tests marked with TODOs from #21072.",
    "message_url": "https://github.com/facebook/react/pull/21322",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I can confirm that the problem still persists with \"abstract: LaTeX cleanup\" enabled in version 4.0.0-dev. Every time I enter \\%, it is immediately changed to % and % ends up as % in the bib file which causes LaTeX to fail.",
    "clean_message": "I can confirm that the problem still persists with \"abstract: LaTeX cleanup\" enabled in version 4.0.0-dev. Every time I enter \\%, it is immediately changed to % and % ends up as % in the bib file which causes LaTeX to fail.",
    "message_url": "https://github.com/JabRef/jabref/pull/2375#issuecomment-291977494",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "/ping @arodic\n",
    "clean_message": "/ping ",
    "message_url": "https://github.com/mrdoob/three.js/pull/4387#issuecomment-34433429",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Fix #3674\r\n\r\nIf using globals, check for template_scope for bindings as well.\r\n\r\n### Before submitting the PR, please make sure you do the following\r\n- [ ] It's really useful if your PR relates to an outstanding issue, so please reference it in your PR, or create an explanatory one for discussion. In many cases features are absent for a reason.\r\n- [ ] This message body should clearly illustrate what problems it solves. If there are related issues, remember to reference them.\r\n- [ ] Ideally, include a test that fails without this PR but passes with it. PRs will only be merged once they pass CI. (Remember to `npm run lint`!)\r\n### Tests\r\n-  [ ] Run the tests tests with `npm test` or `yarn test`)\r\n",
    "clean_message": "Fix #3674 If using globals, check for template_scope for bindings as well. Before submitting the PR, please make sure you do the following  [ ] It's really useful if your PR relates to an outstanding issue, so please reference it in your PR, or create an explanatory one for discussion. In many cases features are absent for a reason. [ ] This message body should clearly illustrate what problems it solves. If there are related issues, remember to reference them. [ ] Ideally, include a test that fails without this PR but passes with it. PRs will only be merged once they pass CI. (Remember to !)  Tests  [ ] Run the tests tests with  or ) ",
    "message_url": "https://github.com/sveltejs/svelte/pull/3692",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for finishing the work on this PR @XhmikosR  - looks good - and a big improvement over the default GitHub Pages 404. The footer looks much better - thanks @MartijnCuppens !\r\n\r\nI was thinking it might not be a good idea to include a search as a user might have been looking for a Bootstrap v3 class in which case the search (if it was search for v4 may not show results)... and if it were to combine search results for all versions it could get confusing.",
    "clean_message": "Thanks for finishing the work on this PR   - looks good - and a big improvement over the default GitHub Pages 404. The footer looks much better - thanks  ! I was thinking it might not be a good idea to include a search as a user might have been looking for a Bootstrap v3 class in which case the search (if it was search for v4 may not show results)... and if it were to combine search results for all versions it could get confusing.",
    "message_url": "https://github.com/twbs/bootstrap/pull/28332#issuecomment-468251890",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Related to #8583\r\n\r\n---\r\n\r\nThis is just the start. I'd like to dynamically pull in versions some how, and @gaearon mentioned renaming `examples` to `fixtures`, but it accomplishes most of what we need (I think).\r\n\r\nNext step would be to create a basic template for a fixture.\r\n\r\n![test-page](https://cloud.githubusercontent.com/assets/590904/21265640/6af5275c-c370-11e6-9bc4-196e99b73a4a.gif)\r\n\r\n---\r\n\r\n@Aweary Should we start working from a branch other than master? I can't do that, but I'd be happy to adjust the base of this PR to a `browser-quirks` (or whatever) branch on the main repo.\r\n",
    "clean_message": "Related to #8583  This is just the start. I'd like to dynamically pull in versions some how, and  mentioned renaming  to , but it accomplishes most of what we need (I think). Next step would be to create a basic template for a fixture.   Should we start working from a branch other than master? I can't do that, but I'd be happy to adjust the base of this PR to a  (or whatever) branch on the main repo.",
    "message_url": "https://github.com/facebook/react/pull/8589",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n<!-- Please remember to update CHANGELOG.md in the root of the project if you have not done so. -->\r\n\r\n## Summary\r\n\r\nFixes #3879. I absolutely hate this solution. Maybe we should figure out a plan which allows us to run the test environment outside of the user sandbox? Would allow us to ditch the babel plugin, which is turning into a monster\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n## Test plan\r\n\r\nThe test that was never run will now run, and hopefully pass\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n",
    "clean_message": "<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -- <!-- Please remember to update CHANGELOG.md in the root of the project if you have not done so. -- Summary Fixes #3879. I absolutely hate this solution. Maybe we should figure out a plan which allows us to run the test environment outside of the user sandbox? Would allow us to ditch the babel plugin, which is turning into a monster <!-- Explain the motivation for making this change. What existing problem does the pull request solve? -- Test plan The test that was never run will now run, and hopefully pass <!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. --",
    "message_url": "https://github.com/jestjs/jest/pull/7993",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "There are a few concerns I think we should discuss.\r\n\r\n1. `NodeFor` is public, and therefore deserves to be tested. I'm not too sure as to why it is public though. Suggesting it is not used directly, and therefore not need testing, suggests it should be private.\r\n2. Types influenced by `NodeFor` spans across a large number of api. Picking one or two for the purpose of testing that node type is derived from given selector is at best weak. Covering each and every instance where some selector depicts some type would be superfluous. Wouldn't we rather test `NodeFor` in isolation and take for granted that types built on top of it are correct, given the _on top_ building are trivially simple and/or tested.\r\n3. Implementing tests _along existing tests_ would suffer the limitation of `tsd`\r\n    > The current type testing utility `tsd` is insufficient in asserting a\r\n    > type is strictly of a super type and not one of its sub types.\r\n    > ```ts\r\n    > declare const node: Element;\r\n    > declare const a: HTMLAnchorElement;\r\n    > \r\n    > expectType<Element>(node); // pass\r\n    > expectType<Element>(a); // also pass\r\n    > ```\r\n4. Unless types are the primary artifact of a library or that .d.ts files were hand written, it does not make sense to test .d.ts files, i.e. after compilation. Once types are generated by a project, it is the description of that project's api. Testing that the type of the api meets some expected type is questioning the spec, not the implementation. This does not dismiss the need for type testing. For the sake of organization, we would want to separate tests - including type tests, from the projects that implement them. For this I propose:\r\n    1. Have a dedicated project `puppeteer-test-types` for type testing. This project does not emit any build.\r\n    2. This project uses `expect-type` for type testing. (Or other compile-time type testing utility)\r\n    3. This project is the last but to `puppeteer-test` in the dependency build chain. If `puppeteer-test-types` fails to build (i.e. typecheck), build fails.\r\n    4. Drop use of `tsd`. Partly because of the above limitation. But also to put type testing in the realm of building.",
    "clean_message": "There are a few concerns I think we should discuss.  is public, and therefore deserves to be tested. I'm not too sure as to why it is public though. Suggesting it is not used directly, and therefore not need testing, suggests it should be private. Types influenced by  spans across a large number of api. Picking one or two for the purpose of testing that node type is derived from given selector is at best weak. Covering each and every instance where some selector depicts some type would be superfluous. Wouldn't we rather test  in isolation and take for granted that types built on top of it are correct, given the on top building are trivially simple and/or tested. Implementing tests along existing tests would suffer the limitation of              4. Unless types are the primary artifact of a library or that .d.ts files were hand written, it does not make sense to test .d.ts files, i.e. after compilation. Once types are generated by a project, it is the description of that project's api. Testing that the type of the api meets some expected type is questioning the spec, not the implementation. This does not dismiss the need for type testing. For the sake of organization, we would want to separate tests - including type tests, from the projects that implement them. For this I propose: Have a dedicated project  for type testing. This project does not emit any build. This project uses  for type testing. (Or other compile-time type testing utility) This project is the last but to  in the dependency build chain. If  fails to build (i.e. typecheck), build fails. Drop use of . Partly because of the above limitation. But also to put type testing in the realm of building.   ",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/9253#issuecomment-1318839955",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Please don't close this one, my other PR is just for whitespace! :slightly_smiling_face: ",
    "clean_message": "Please don't close this one, my other PR is just for whitespace! :slightly_smiling_face: ",
    "message_url": "https://github.com/sveltejs/svelte/pull/4736#issuecomment-620818516",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "- [x] closes #39347 \r\n- [x] tests added / passed\r\n- [x] Ensure all linting tests pass, see [here](https://pandas.pydata.org/pandas-docs/dev/development/contributing.html#code-standards) for how to run them\r\n\r\nI fixed all the issues raised by `cpplint`. \r\n\r\nBut one of the changes I've made led to some fails. After inspecting those logs I've identified that when I've replaced `sprintf` with `snprinf` at [objToJSON.c](https://github.com/pandas-dev/pandas/blob/master/pandas/_libs/src/ujson/python/objToJSON.c), line 1399, to fix the issue `Never use sprintf. Use snprintf instead.  [runtime/printf] [5]`, it led to these errors when it tried to build pandas `error: passing argument 2 of \u2018snprintf\u2019 makes integer from pointer without a cast [-Werror=int-conversion]` and `error: passing argument 3 of \u2018snprintf\u2019 makes pointer from integer without a cast [-Werror=int-conversion]`. \r\n\r\nSo to make it work, I reverted `snprinf` to `sprintf` so that function will keep working as it was before, and, in `code_checks.sh`, I added this new filter `-runtime/printf` to the list of filters so `cpplint` will not raise the `Never use sprintf.  Use snprintf instead` error again. I also included this new line of comment:\r\n\r\n```\r\n    # runtime/printf: Warnings about using sprintf instead of snprintf\r\n```",
    "clean_message": " [x] closes #39347  [x] tests added / passed [x] Ensure all linting tests pass, see here for how to run them  I fixed all the issues raised by .  But one of the changes I've made led to some fails. After inspecting those logs I've identified that when I've replaced  with  at objToJSON.c, line 1399, to fix the issue , it led to these errors when it tried to build pandas  and .  So to make it work, I reverted  to  so that function will keep working as it was before, and, in , I added this new filter  to the list of filters so  will not raise the  error again. I also included this new line of comment:",
    "message_url": "https://github.com/pandas-dev/pandas/pull/39352#issuecomment-766904844",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Well, this didn't work... Will try pinning as @bsipocz suggested.\r\n\r\nBut, but, it is already pinned! :confounded: \r\n\r\nhttps://github.com/astropy/astropy/blob/5393f7081eeb41aea9687b9c57703c55293400e0/.circleci/config.yml#L112\r\n\r\nAh, wait, nvm, I confused myself.\r\n\r\nNope. Pinning in intersphinx didn't fix the problem either. And I don't know why Travis CI ran even with `[docs only]` directive, so I cancelled it.",
    "clean_message": "Well, this didn't work... Will try pinning as  suggested. But, but, it is already pinned! :confounded:  Ah, wait, nvm, I confused myself. Nope. Pinning in intersphinx didn't fix the problem either. And I don't know why Travis CI ran even with  directive, so I cancelled it.",
    "message_url": "https://github.com/astropy/astropy/pull/9145#issuecomment-523090269",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "No problem!\r\n\r\nDo I need to fix something so that it auto-merges? The tests seem like they flaked out...",
    "clean_message": "No problem! Do I need to fix something so that it auto-merges? The tests seem like they flaked out...",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/6997#issuecomment-807282456",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": ":+1:\n",
    "clean_message": ":+1:",
    "message_url": "https://github.com/JabRef/jabref/pull/1616#issuecomment-234503379",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "It was discussed in the core IRC meeting today, that this PR should only add the plural (list) variables.\r\n\r\nThe singular forms should be removed.",
    "clean_message": "It was discussed in the core IRC meeting today, that this PR should only add the plural (list) variables. The singular forms should be removed.",
    "message_url": "https://github.com/ansible/ansible/pull/46687#issuecomment-474556512",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Apologies, `acceptParams` is not an exported function I think.",
    "clean_message": "Apologies,  is not an exported function I think.",
    "message_url": "https://github.com/expressjs/express/pull/5119#issuecomment-1422526865",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Avoids cluttering app.locals, and is consistent\r\nwith the assignment of the \"view engine\" settings:\r\n```js\r\napp.set(\"view options\", {\r\n    basedir: \"somedir\"\r\n});\r\napp.set(\"view engine\", \"pug\");\r\n```\r\nThe intent is also stated more clearly in comparison to:\r\n```js\r\napp.locals.basedir = \"somedir\"\r\n```",
    "clean_message": "Avoids cluttering app.locals, and is consistent with the assignment of the \"view engine\" settings: The intent is also stated more clearly in comparison to:",
    "message_url": "https://github.com/expressjs/express/pull/3613",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This is really quite unexciting: #2431 had a tentative +1 from @Lukasa, pending a rebase and retargeting against 3.0.0, but it\u2019s been sat unloved for nearly eight months. \ud83d\ude22 \r\n\r\nThis patch does the required rebase and targets the 3.0.0 branch.",
    "clean_message": "This is really quite unexciting: #2431 had a tentative +1 from , pending a rebase and retargeting against 3.0.0, but it\u2019s been sat unloved for nearly eight months. \ud83d\ude22  This patch does the required rebase and targets the 3.0.0 branch.",
    "message_url": "https://github.com/psf/requests/pull/3745",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "You're right. \r\nI'm trying instead to write a _gather() that mimics torch.gather()'s behavior that uses `arange`, a `compare`, and a `multiply` like you mentioned in issues 858. I'll then express `ArrayFeatureExtractor`, `GatherElements`, and `Gather` using _gather() by reshaping the tensors a little.\r\nI'll close this pr for now, sorry. I'll reopen one when I figured it out.",
    "clean_message": "You're right.  I'm trying instead to write a _gather() that mimics torch.gather()'s behavior that uses , a , and a  like you mentioned in issues 858. I'll then express , , and  using _gather() by reshaping the tensors a little. I'll close this pr for now, sorry. I'll reopen one when I figured it out.",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/947#issuecomment-1583904665",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "As described in #17860, the import code fix for UMD modules has been updated such that it\r\n - uses `import m from \"specifier\";` import under --allowSyntheticDefaultImports\r\n - uses `import m = require(\"specifier\");` syntax where supported\r\n - falls back to `import * as m from \"specifier\";` syntax where necessary\r\n - displays a diagnostic message matching the import that results from applying it\r\n\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nHere's a checklist you might find useful.\r\n[x] There is an associated issue that is labelled\r\n  'Bug' or 'help wanted' or is in the Community milestone\r\n[ ] Code is up-to-date with the `master` branch\r\n[ ] You've successfully run `jake runtests` locally\r\n[x] You've signed the CLA\r\n[ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\nFixes #17860\r\n\r\nI'm not sure how to go about writing unit tests for this.\r\n",
    "clean_message": "As described in #17860, the import code fix for UMD modules has been updated such that it  - uses  import under --allowSyntheticDefaultImports  - uses  syntax where supported  - falls back to  syntax where necessary  - displays a diagnostic message matching the import that results from applying it <!-- Thank you for submitting a pull request! Here's a checklist you might find useful. [x] There is an associated issue that is labelled   'Bug' or 'help wanted' or is in the Community milestone [ ] Code is up-to-date with the  branch [ ] You've successfully run  locally [x] You've signed the CLA [ ] There are new or updated unit tests validating the change Refer to CONTRIBUTING.MD for more details. -- Fixes #17860 I'm not sure how to go about writing unit tests for this.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/19572",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> not worth changing since i hate spammy git diffs\n\nbe careful about that, I heard people who hate spammy git diffs are getting fired from joyent (even those who never worked for them) ;)\n",
    "clean_message": "be careful about that, I heard people who hate spammy git diffs are getting fired from joyent (even those who never worked for them) ;)",
    "message_url": "https://github.com/expressjs/express/pull/1887#issuecomment-31571622",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    },
    "discussion_polarity": "positive"
  },
  {
    "raw_message": "This file is tiny, extremely simple, and should never change. So we're probably fine.\n",
    "clean_message": "This file is tiny, extremely simple, and should never change. So we're probably fine.",
    "message_url": "https://github.com/twbs/bootstrap/pull/13101#issuecomment-38223374",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "This was actually the original scheme I had in mind, but someone (unfortunately, I don't remember who) complained because this means the docs get re-built every time there's a new git commit (because the `release` variable changes).  \n\nHaving said that, I actually prefer it this way (the way this pull request will make it).  So I'm happy with it as long as there isn't someone else strongly objecting.\n",
    "clean_message": "This was actually the original scheme I had in mind, but someone (unfortunately, I don't remember who) complained because this means the docs get re-built every time there's a new git commit (because the  variable changes).   Having said that, I actually prefer it this way (the way this pull request will make it).  So I'm happy with it as long as there isn't someone else strongly objecting.",
    "message_url": "https://github.com/astropy/astropy/pull/66#issuecomment-2751993",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "The parameter `layout` is no longer present in the latest version of the `Figure` constructor and the constrained layout cannot be selected in this way any more. There is instead the `constrained_layout` parameter which can be set to `True` to obtain the same effect.\r\n\r\n## PR Summary\r\n\r\n## PR Checklist\r\n\r\n<!-- Please mark any checkboxes that do not apply to this PR as [N/A]. -->\r\n**Tests and Styling**\r\n- [ ] Has pytest style unit tests (and `pytest` passes).\r\n- [x] Is [Flake 8](https://flake8.pycqa.org/en/latest/) compliant (install `flake8-docstrings` and run `flake8 --docstring-convention=all`).\r\n\r\n**Documentation**\r\n- [N/A] New features are documented, with examples if plot related.\r\n- [N/A] New features have an entry in `doc/users/next_whats_new/` (follow instructions in README.rst there).\r\n- [N/A] API changes documented in `doc/api/next_api_changes/` (follow instructions in README.rst there).\r\n- [x] Documentation is sphinx and numpydoc compliant (the docs should [build](https://matplotlib.org/devel/documenting_mpl.html#building-the-docs) without error).\r\n\r\n<!--\r\nThank you so much for your PR!  To help us review your contribution, please\r\nconsider the following points:\r\n\r\n- A development guide is available at https://matplotlib.org/devdocs/devel/index.html.\r\n\r\n- Help with git and github is available at\r\n  https://matplotlib.org/devel/gitwash/development_workflow.html.\r\n\r\n- Do not create the PR out of main, but out of a separate branch.\r\n\r\n- The PR title should summarize the changes, for example \"Raise ValueError on\r\n  non-numeric input to set_xlim\".  Avoid non-descriptive titles such as\r\n  \"Addresses issue #8576\".\r\n\r\n- The summary should provide at least 1-2 sentences describing the pull request\r\n  in detail (Why is this change required?  What problem does it solve?) and\r\n  link to any relevant issues.\r\n\r\n- If you are contributing fixes to docstrings, please pay attention to\r\n  http://matplotlib.org/devel/documenting_mpl.html#formatting.  In particular,\r\n  note the difference between using single backquotes, double backquotes, and\r\n  asterisks in the markup.\r\n\r\nWe understand that PRs can sometimes be overwhelming, especially as the\r\nreviews start coming in.  Please let us know if the reviews are unclear or\r\nthe recommended next step seems overly demanding, if you would like help in\r\naddressing a reviewer's comments, or if you have been waiting too long to hear\r\nback on your PR.\r\n-->\r\n",
    "clean_message": "The parameter  is no longer present in the latest version of the  constructor and the constrained layout cannot be selected in this way any more. There is instead the  parameter which can be set to  to obtain the same effect. PR Summary PR Checklist <!-- Please mark any checkboxes that do not apply to this PR as [N/A]. --Tests and Styling - [ ] Has pytest style unit tests (and  passes). - [x] Is Flake 8 compliant (install  and run ). Documentation - [N/A] New features are documented, with examples if plot related. - [N/A] New features have an entry in  (follow instructions in README.rst there). - [N/A] API changes documented in  (follow instructions in README.rst there). - [x] Documentation is sphinx and numpydoc compliant (the docs should build without error). <!-- Thank you so much for your PR!  To help us review your contribution, please consider the following points:   A development guide is available at .   Help with git and github is available at   .   Do not create the PR out of main, but out of a separate branch.   The PR title should summarize the changes, for example \"Raise ValueError on   non-numeric input to set_xlim\".  Avoid non-descriptive titles such as   \"Addresses issue #8576\".   The summary should provide at least 1-2 sentences describing the pull request   in detail (Why is this change required?  What problem does it solve?) and   link to any relevant issues.   If you are contributing fixes to docstrings, please pay attention to   .  In particular,   note the difference between using single backquotes, double backquotes, and   asterisks in the markup.   We understand that PRs can sometimes be overwhelming, especially as the reviews start coming in.  Please let us know if the reviews are unclear or the recommended next step seems overly demanding, if you would like help in addressing a reviewer's comments, or if you have been waiting too long to hear back on your PR. --",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/21971",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "oh sorry. I saw that PR but I wasn't sure if you want to test against iojs3\n",
    "clean_message": "oh sorry. I saw that PR but I wasn't sure if you want to test against iojs3",
    "message_url": "https://github.com/expressjs/express/pull/2774#issuecomment-146346395",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Fixes #12198\r\nRe-do of #12268\r\n",
    "clean_message": "Fixes #12198 Re-do of #12268",
    "message_url": "https://github.com/microsoft/TypeScript/pull/13678",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "CC: @mhegazy \n",
    "clean_message": "CC:  ",
    "message_url": "https://github.com/microsoft/TypeScript/pull/9339#issuecomment-228208881",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I've already completed the CLA, I am (was) AdamFreidin on codeplex.\n\nI'll work on a unit test later today.  Assuming you really think it's necessary to track that obviously poor regex-based XML-ish parsing needs a unit test to be incrementally improved.\n",
    "clean_message": "I've already completed the CLA, I am (was) AdamFreidin on codeplex. I'll work on a unit test later today.  Assuming you really think it's necessary to track that obviously poor regex-based XML-ish parsing needs a unit test to be incrementally improved.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/427#issuecomment-51823923",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@gkalpak I spent some time trying to get it to repro on StackBlitz and had no luck yesterday, but you're right, I think this issue is very similar to #22581 (sorry for not finding it).\r\n\r\nFWIW the unit test added in this PR fails before and passes after the fix. I can keep trying on StackBlitz though.",
    "clean_message": "I spent some time trying to get it to repro on StackBlitz and had no luck yesterday, but you're right, I think this issue is very similar to #22581 (sorry for not finding it). FWIW the unit test added in this PR fails before and passes after the fix. I can keep trying on StackBlitz though.",
    "message_url": "https://github.com/angular/angular/pull/27083#issuecomment-439103171",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "## PR Summary\r\n\r\n## PR Checklist\r\n\r\n- [ ] Has Pytest style unit tests\r\n- [ ] Code is [Flake 8](http://flake8.pycqa.org/en/latest/) compliant\r\n- [ ] New features are documented, with examples if plot related\r\n- [ ] Documentation is sphinx and numpydoc compliant\r\n- [ ] Added an entry to doc/users/next_whats_new/ if major new feature (follow instructions in README.rst there)\r\n- [ ] Documented in doc/api/api_changes.rst if API changed in a backward-incompatible way\r\n\r\n<!--\r\nThank you so much for your PR!  To help us review your contribution, please\r\nconsider the following points:\r\n\r\n- A development guide is available at https://matplotlib.org/devdocs/devel/index.html.\r\n\r\n- Help with git and github is available at\r\n  https://matplotlib.org/devel/gitwash/development_workflow.html.\r\n\r\n- Do not create the PR out of master, but out of a separate branch.\r\n\r\n- The PR title should summarize the changes, for example \"Raise ValueError on\r\n  non-numeric input to set_xlim\".  Avoid non-descriptive titles such as\r\n  \"Addresses issue #8576\".\r\n\r\n- The summary should provide at least 1-2 sentences describing the pull request\r\n  in detail (Why is this change required?  What problem does it solve?) and\r\n  link to any relevant issues.\r\n\r\n- If you are contributing fixes to docstrings, please pay attention to\r\n  http://matplotlib.org/devel/documenting_mpl.html#formatting.  In particular,\r\n  note the difference between using single backquotes, double backquotes, and\r\n  asterisks in the markup.\r\n\r\nWe understand that PRs can sometimes be overwhelming, especially as the\r\nreviews start coming in.  Please let us know if the reviews are unclear or\r\nthe recommended next step seems overly demanding, if you would like help in\r\naddressing a reviewer's comments, or if you have been waiting too long to hear\r\nback on your PR.\r\n-->\r\n",
    "clean_message": "PR Summary PR Checklist  [ ] Has Pytest style unit tests [ ] Code is Flake 8 compliant [ ] New features are documented, with examples if plot related [ ] Documentation is sphinx and numpydoc compliant [ ] Added an entry to doc/users/next_whats_new/ if major new feature (follow instructions in README.rst there) [ ] Documented in doc/api/api_changes.rst if API changed in a backward-incompatible way  <!-- Thank you so much for your PR!  To help us review your contribution, please consider the following points:   A development guide is available at .   Help with git and github is available at   .   Do not create the PR out of master, but out of a separate branch.   The PR title should summarize the changes, for example \"Raise ValueError on   non-numeric input to set_xlim\".  Avoid non-descriptive titles such as   \"Addresses issue #8576\".   The summary should provide at least 1-2 sentences describing the pull request   in detail (Why is this change required?  What problem does it solve?) and   link to any relevant issues.   If you are contributing fixes to docstrings, please pay attention to   .  In particular,   note the difference between using single backquotes, double backquotes, and   asterisks in the markup.   We understand that PRs can sometimes be overwhelming, especially as the reviews start coming in.  Please let us know if the reviews are unclear or the recommended next step seems overly demanding, if you would like help in addressing a reviewer's comments, or if you have been waiting too long to hear back on your PR. --",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/15985",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I'll note https://stackoverflow.com/a/54467864 \u2014\u00a0it seems in principle deepcopy might be much faster through rust than through python if we could get the logic to be equivalent.\r\n\r\nHowever, I'm a bit concerned that we'll find ourselves in edge-case-hell if we try to perform arbitrary deepcopying outside python. Maybe it's simpler than I'm thinking, but the nice thing about this approach is that (as far as I can tell) it should work for arbitrary inputs with minimal code.\r\n\r\n(And I don't think python's overhead is likely to be significant for shallow copies.)",
    "clean_message": "I'll note  \u2014\u00a0it seems in principle deepcopy might be much faster through rust than through python if we could get the logic to be equivalent. However, I'm a bit concerned that we'll find ourselves in edge-case-hell if we try to perform arbitrary deepcopying outside python. Maybe it's simpler than I'm thinking, but the nice thing about this approach is that (as far as I can tell) it should work for arbitrary inputs with minimal code. (And I don't think python's overhead is likely to be significant for shallow copies.)",
    "message_url": "https://github.com/pydantic/pydantic/pull/5215#issuecomment-1474559540",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "The fetcher tests are throwing HTTP 401, 403, and 429 errors, which are Unauthorized, Forbidden, and Rate Limit Exceeded. I only made one very minor change to a single importer, and many are throwing errors. Should I ignore the continuous integration tests for fetchers?",
    "clean_message": "The fetcher tests are throwing HTTP 401, 403, and 429 errors, which are Unauthorized, Forbidden, and Rate Limit Exceeded. I only made one very minor change to a single importer, and many are throwing errors. Should I ignore the continuous integration tests for fetchers?",
    "message_url": "https://github.com/JabRef/jabref/pull/5691#issuecomment-565818247",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Is there a way in the examples to more clearly show how multiple locator differes from maxN differed from auto? Like maybe change to a 1-10 range to have more wiggle room?  Or use different scales-dunno,  but I figure this image is at its most useful if readers don't necessarily have to read the code to get what it's trying to show. \n",
    "clean_message": "Is there a way in the examples to more clearly show how multiple locator differes from maxN differed from auto? Like maybe change to a 1-10 range to have more wiggle room?  Or use different scales-dunno,  but I figure this image is at its most useful if readers don't necessarily have to read the code to get what it's trying to show. ",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/7084#issuecomment-246163175",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> Required new `.btn-group-input` class\r\n\r\nThat's likely a deal breaker on this being in v4 as an update to the existing button group. We'd have to deprecate the existing one and provide this as a new component. Breaking changes are a no-go heading into stable v4.0.",
    "clean_message": "That's likely a deal breaker on this being in v4 as an update to the existing button group. We'd have to deprecate the existing one and provide this as a new component. Breaking changes are a no-go heading into stable v4.0.",
    "message_url": "https://github.com/twbs/bootstrap/pull/25185#issuecomment-354948541",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks. With \"unfortunate\" I meant that the same functionality will not be there out-of-the-box for those not being able to jump to 2.x yet. But I do understand the need for rules, and to stick to them :-)\n\nThanks for the feedback !\n",
    "clean_message": "Thanks. With \"unfortunate\" I meant that the same functionality will not be there out-of-the-box for those not being able to jump to 2.x yet. But I do understand the need for rules, and to stick to them :-) Thanks for the feedback !",
    "message_url": "https://github.com/ansible/ansible/pull/14628#issuecomment-192410892",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Will need to extend this again in an upcoming PR, so wanted to make that simpler.",
    "clean_message": "Will need to extend this again in an upcoming PR, so wanted to make that simpler.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/25128",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I wouldn't be comfortable including this in 2.8.1. 2.9.0 definitely, but not 2.8.1\n",
    "clean_message": "I wouldn't be comfortable including this in 2.8.1. 2.9.0 definitely, but not 2.8.1",
    "message_url": "https://github.com/psf/requests/pull/2803#issuecomment-145546814",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Ok, done! I've added a comment to explain why it's not in global scope.",
    "clean_message": "Ok, done! I've added a comment to explain why it's not in global scope.",
    "message_url": "https://github.com/psf/requests/pull/5990#issuecomment-980764551",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I made new PR #19124\r\nThis migration is a thing.",
    "clean_message": "I made new PR #19124 This migration is a thing.",
    "message_url": "https://github.com/mrdoob/three.js/pull/18928#issuecomment-613497112",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "## Summary\r\n\r\nFixes: #11608\r\n\r\n## Test plan\r\n\r\nN/A",
    "clean_message": "Summary Fixes: #11608 Test plan N/A",
    "message_url": "https://github.com/jestjs/jest/pull/11615",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "skip change file check",
    "clean_message": "skip change file check",
    "message_url": "https://github.com/pydantic/pydantic/pull/5157",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Yeah, I agree, we should link from the getting started page - just added that!\n\nI put it under \"tips\" since package management seemed less about React and more about general javascript programming.  Somehow, in my mind, JSX is more like \"tooling **integration**\" and everything else is \"general javascript tips/practices\".  Otherwise, it's a little unclear where to draw the line (gulp?  jest?  nuclide?  microsft visual studio?  typescript?  flow?).  Maybe the pages should be categories (transpilers, package managers, languages / type checkers, etc).  But I'm happy to create some pages under tooling integration if you'd like, just let me know!  My temptation is to merge this now and figure out the tooling integration pages in a separate PR.\n",
    "clean_message": "Yeah, I agree, we should link from the getting started page - just added that! I put it under \"tips\" since package management seemed less about React and more about general javascript programming.  Somehow, in my mind, JSX is more like \"tooling integration\" and everything else is \"general javascript tips/practices\".  Otherwise, it's a little unclear where to draw the line (gulp?  jest?  nuclide?  microsft visual studio?  typescript?  flow?).  Maybe the pages should be categories (transpilers, package managers, languages / type checkers, etc).  But I'm happy to create some pages under tooling integration if you'd like, just let me know!  My temptation is to merge this now and figure out the tooling integration pages in a separate PR.",
    "message_url": "https://github.com/facebook/react/pull/6148#issuecomment-190439723",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "PiperOrigin-RevId: 371026165\nChange-Id: I26ac6372c87246e03c7eb8c94e84c84d86054b36",
    "clean_message": "PiperOrigin-RevId: 371026165 Change-Id: I26ac6372c87246e03c7eb8c94e84c84d86054b36",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/49818",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Demo here:\r\n(top red box uses Verlet with soft & hard sets, bottom is existing)\r\nhttps://svelte.dev/repl?version=3.1.0&gist=d4978c4d519cca6b2d63d033158d30e9",
    "clean_message": "Demo here: (top red box uses Verlet with soft & hard sets, bottom is existing)",
    "message_url": "https://github.com/sveltejs/svelte/pull/2627#issuecomment-488021005",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Shiny new commit with all the logic in the transport adapter.\n\nI added an `add_headers` function to the `HTTPAdapter` because I suspect most future transport adapters will heavily rely on this one. Adding specific headers is useful logic, and this allows the adapter to be easily subclassed and have new headers added: only one function override is needed.\n",
    "clean_message": "Shiny new commit with all the logic in the transport adapter. I added an  function to the  because I suspect most future transport adapters will heavily rely on this one. Adding specific headers is useful logic, and this allows the adapter to be easily subclassed and have new headers added: only one function override is needed.",
    "message_url": "https://github.com/psf/requests/pull/1162#issuecomment-13197854",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n<!-- Please remember to update CHANGELOG.md at the root of the project if you have not done so. -->\r\n\r\n## Summary\r\n\r\nI was bored on my flight home, so went over a random assortment of tests and fixed some type errors.\r\n\r\nIgnore whitespace for this one: https://github.com/facebook/jest/pull/13360/files?w=1\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n## Test plan\r\n\r\nGreen CI\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n",
    "clean_message": "<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -- <!-- Please remember to update CHANGELOG.md at the root of the project if you have not done so. -- Summary I was bored on my flight home, so went over a random assortment of tests and fixed some type errors. Ignore whitespace for this one:  <!-- Explain the motivation for making this change. What existing problem does the pull request solve? -- Test plan Green CI <!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. --",
    "message_url": "https://github.com/jestjs/jest/pull/13360",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@hard-coders \r\nThank you for your review.\r\nI accepted your points and pushed the new commit.",
    "clean_message": "-coders  Thank you for your review. I accepted your points and pushed the new commit.",
    "message_url": "https://github.com/tiangolo/fastapi/pull/3162#issuecomment-832001946",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hi @tiangolo , I have refactored my projects with the orm_mode and the latest updates from both pydantic and fastapi. Enum are still encoded with their values, whatever the Config is...\r\n\r\n~~I think this PR is still relevant~~",
    "clean_message": "Hi  , I have refactored my projects with the orm_mode and the latest updates from both pydantic and fastapi. Enum are still encoded with their values, whatever the Config is... ~~I think this PR is still relevant~~",
    "message_url": "https://github.com/tiangolo/fastapi/pull/204#issuecomment-529149271",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "104.75",
    "clean_message": "104.75",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/812#issuecomment-1575877531",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Oops! Good catch, thanks for your contribution @isaevpd ! :rocket: :lock: :cake: \r\n\r\nAnd thanks @dmontagu as always! :rocket: :tada: :bowing_man: ",
    "clean_message": "Oops! Good catch, thanks for your contribution  ! :rocket: :lock: :cake:  And thanks  as always! :rocket: :tada: :bowing_man: ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/865#issuecomment-575596042",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I\u2019m working on a library that will make this task easy. Even easy for you to do yourself. I have a different priority at the moment but plan to implement Stream-K in a few weeks.\r\n\r\nI have it outperforming MPS at around half of my test cases (notably FP16). If you want to get a head start, I can post some of the raw source code from my repo, and a few tables of perf data.\r\n\r\nI\u2019m not interested in the bounty just trying to prioritize my own interests.",
    "clean_message": "I\u2019m working on a library that will make this task easy. Even easy for you to do yourself. I have a different priority at the moment but plan to implement Stream-K in a few weeks. I have it outperforming MPS at around half of my test cases (notably FP16). If you want to get a head start, I can post some of the raw source code from my repo, and a few tables of perf data. I\u2019m not interested in the bounty just trying to prioritize my own interests.",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/728#issuecomment-1563638074",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "The weights may take a while to load, but let me give it a try",
    "clean_message": "The weights may take a while to load, but let me give it a try",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/604#issuecomment-1445244833",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "- [ ] closes #53077 (Replace xxxx with the GitHub issue number)\r\n- [ ] [Tests added and passed](https://pandas.pydata.org/pandas-docs/dev/development/contributing_codebase.html#writing-tests) if fixing a bug or adding a new feature\r\n- [ ] All [code checks passed](https://pandas.pydata.org/pandas-docs/dev/development/contributing_codebase.html#pre-commit).\r\n- [ ] Added [type annotations](https://pandas.pydata.org/pandas-docs/dev/development/contributing_codebase.html#type-hints) to new arguments/methods/functions.\r\n- [ ] Added an entry in the latest `doc/source/whatsnew/vX.X.X.rst` file if fixing a bug or adding a new feature.\r\n\r\npretty simple, hoping this can be bundled together with the other interchange fixes in 2.0.2\r\n",
    "clean_message": " [ ] closes #53077 (Replace xxxx with the GitHub issue number) [ ] Tests added and passed if fixing a bug or adding a new feature [ ] All code checks passed. [ ] Added type annotations to new arguments/methods/functions. [ ] Added an entry in the latest  file if fixing a bug or adding a new feature.  pretty simple, hoping this can be bundled together with the other interchange fixes in 2.0.2",
    "message_url": "https://github.com/pandas-dev/pandas/pull/53078",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Okay, after some fixes, there are no remaining issues with my app. This is mergable AFAIK :smile: ",
    "clean_message": "Okay, after some fixes, there are no remaining issues with my app. This is mergable AFAIK :smile: ",
    "message_url": "https://github.com/mrdoob/three.js/pull/19010#issuecomment-607047000",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> When I set local_freetype = True in setup.cfg I receive an error message:\n\nSorry, I think that feature isn't yet working on Windows.  @JanSchulz: can you confirm that, or should that be working?\n",
    "clean_message": "Sorry, I think that feature isn't yet working on Windows.  : can you confirm that, or should that be working?",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/5696#issuecomment-166727703",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks  -- I'm the one who opened #1203 .\n",
    "clean_message": "Thanks  -- I'm the one who opened #1203 .",
    "message_url": "https://github.com/psf/requests/pull/1205#issuecomment-14100950",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Release branch for 4.3.0",
    "clean_message": "Release branch for 4.3.0",
    "message_url": "https://github.com/plotly/plotly.py/pull/1894",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> which can be problematic for cases like batch computing\r\n\r\nthanks, thats what i was missing.\r\n\r\nWould any of this Just Work if this were implemented in numba instead of cython?\r\n\r\nI don't have a strong opinion on this per se, but am wary of a) using a cython feature (prange) that we don't currently use and that i don't know i) how well supported it is or ii) if its behavior is e.g. platform-dependent and b) user-facing kwargs that will give us combinatorially more cases to test",
    "clean_message": "thanks, thats what i was missing. Would any of this Just Work if this were implemented in numba instead of cython? I don't have a strong opinion on this per se, but am wary of a) using a cython feature (prange) that we don't currently use and that i don't know i) how well supported it is or ii) if its behavior is e.g. platform-dependent and b) user-facing kwargs that will give us combinatorially more cases to test",
    "message_url": "https://github.com/pandas-dev/pandas/pull/41857#issuecomment-856373762",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "/fyi @takahirox ",
    "clean_message": "/fyi  ",
    "message_url": "https://github.com/mrdoob/three.js/pull/22653#issuecomment-937700037",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "That would probably work. In \u201ctheory\u201d, you shouldn't need to rebuild it.\n\nAnyway, that part is why this issue is a bit of a mess. As is, this PR is imo an improvement on the previous behavior without that part as well.",
    "clean_message": "That would probably work. In \u201ctheory\u201d, you shouldn't need to rebuild it. Anyway, that part is why this issue is a bit of a mess. As is, this PR is imo an improvement on the previous behavior without that part as well.",
    "message_url": "https://github.com/JabRef/jabref/pull/7754#issuecomment-886190033",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I rebased `android-bundle` on `release/2.x`. Sadly you have to rebase again :sob: but it should be good to go now!",
    "clean_message": "I rebased  on . Sadly you have to rebase again :sob: but it should be good to go now!",
    "message_url": "https://github.com/mockito/mockito/pull/938#issuecomment-278338844",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry for the issue, please open a new PR.",
    "clean_message": "Sorry for the issue, please open a new PR.",
    "message_url": "https://github.com/pallets/flask/pull/4296#issuecomment-937796213",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I ended up including your `isValueChanged` check to ensure correct behavior in e2e, sorry for closing it!",
    "clean_message": "I ended up including your  check to ensure correct behavior in e2e, sorry for closing it!",
    "message_url": "https://github.com/vuejs/vue/pull/4402#issuecomment-265854754",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "this is not the way to go, this is rather future hostile.\r\n\r\nLatest DRE does **not** patch Chrome 67+ which landed with native support for both Custom Elements V0, V1, and builtins extend.\r\n\r\nIn forcing DRE 1.7.2 you are basically patching forever even native browsers.\r\n\r\nYou should consider better transpilation via https://github.com/WebReflection/babel-plugin-transform-builtin-classes or use Babel 7 that should fix this for you.",
    "clean_message": "this is not the way to go, this is rather future hostile. Latest DRE does not patch Chrome 67+ which landed with native support for both Custom Elements V0, V1, and builtins extend. In forcing DRE 1.7.2 you are basically patching forever even native browsers. You should consider better transpilation via  or use Babel 7 that should fix this for you.",
    "message_url": "https://github.com/angular/angular/pull/24391#issuecomment-396158286",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@TimvdLippe Actually, there is a way. Since 1.5.0 we generate `@kotlin.jvm.JvmInline` annotation for each inline class. So, I see three possibilities\r\n\r\n1. I pushed the use of `getDeclaredMethod` with known parameter type, as you suggested.\r\n2. We bump Kotlin version to 1.5.0-RC and check for the annotation, or\r\n3. We wait for Kotlin 1.5.0 release and then bump the version and check for the annotation.",
    "clean_message": "Actually, there is a way. Since 1.5.0 we generate  annotation for each inline class. So, I see three possibilities  I pushed the use of  with known parameter type, as you suggested. We bump Kotlin version to 1.5.0-RC and check for the annotation, or We wait for Kotlin 1.5.0 release and then bump the version and check for the annotation. ",
    "message_url": "https://github.com/mockito/mockito/pull/2280#issuecomment-831380054",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Now that I've written this, I'm somewhat skeptical of it: given the way tracebacks are printed and the length of `FunctionUnitBase.to()`, the original exception is a page or two up, so the \"from-ness\" of it could be easily lost on the user. I also wonder under what other cases this message would appear: I'm not sure what other cases to test.\r\n\r\nSuggestions, or should I just drop this?\r\n\r\nEDIT: Fix #8487 ",
    "clean_message": "Now that I've written this, I'm somewhat skeptical of it: given the way tracebacks are printed and the length of , the original exception is a page or two up, so the \"from-ness\" of it could be easily lost on the user. I also wonder under what other cases this message would appear: I'm not sure what other cases to test. Suggestions, or should I just drop this? EDIT: Fix #8487 ",
    "message_url": "https://github.com/astropy/astropy/pull/8519",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@4bic Thanks!",
    "clean_message": "Thanks!",
    "message_url": "https://github.com/pandas-dev/pandas/pull/20077#issuecomment-373381362",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "##### SUMMARY\r\nThis PR is to add support for using `-Tag` parameter of `Invoke-Pester`.\r\nI will add a separate PR to add support for accepting test script parameters.\r\n\r\n<!--- HINT: Include \"Fixes #nnn\" if you are fixing an existing issue -->\r\n\r\n##### ISSUE TYPE\r\n<!--- Pick one below and delete the rest -->\r\n- Feature Pull Request\r\n\r\n##### COMPONENT NAME\r\n[win_pester](https://docs.ansible.com/ansible/latest/modules/win_pester_module.html)\r\n\r\n##### ADDITIONAL INFORMATION\r\nThis allows user to pass tags like below\r\n```\r\n  - name: Execute tests\r\n    win_pester:\r\n      path: c:\\temp\\testscript.tests.ps1\r\n      tags: unittest\r\n```\r\n",
    "clean_message": "SUMMARY This PR is to add support for using  parameter of . I will add a separate PR to add support for accepting test script parameters. <!--- HINT: Include \"Fixes #nnn\" if you are fixing an existing issue -- ISSUE TYPE <!--- Pick one below and delete the rest --- Feature Pull Request COMPONENT NAME win_pester ADDITIONAL INFORMATION This allows user to pass tags like below",
    "message_url": "https://github.com/ansible/ansible/pull/57918",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "\\o/\n",
    "clean_message": "\\o/",
    "message_url": "https://github.com/psf/requests/pull/725#issuecomment-6974930",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Yeah, well. I don't like the outcome of this _update using rebase_ experiment of mine.\n\nSubsequent updates from upstream will be via a _classic_ merge.\n",
    "clean_message": "Yeah, well. I don't like the outcome of this update using rebase experiment of mine. Subsequent updates from upstream will be via a classic merge.",
    "message_url": "https://github.com/twbs/bootstrap/pull/7799#issuecomment-17602437",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "That's pretty cool! Thanks for letting me know!\nOn 26 Sep 2014 17:41, \"Szczepan Faber\" notifications@github.com wrote:\n\n> FYI: your change is already released:\n> https://github.com/mockito/mockito/blob/master/doc/release-notes/official.md\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mockito/mockito/pull/87#issuecomment-56986995.\n",
    "clean_message": "That's pretty cool! Thanks for letting me know! On 26 Sep 2014 17:41, \"Szczepan Faber\"  wrote:",
    "message_url": "https://github.com/mockito/mockito/pull/87#issuecomment-57007554",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "The new method fails because `datetime.timezone` is Python 3 only.  x_x  The only alternative would be to hand-spin a `datetime.tzinfo` subclass, which I feel is an overkill.  x_x",
    "clean_message": "The new method fails because  is Python 3 only.  x_x  The only alternative would be to hand-spin a  subclass, which I feel is an overkill.  x_x",
    "message_url": "https://github.com/pallets/flask/pull/2374#issuecomment-308546858",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "this doesn't work because `x.item()` is a `long`.\n\n``` python\nfrom datetime import datetime, timedelta\ns  = Series(date_range('2012-1-1', periods=3, freq='D'))\ntd = Series([ timedelta(days=i) for i in range(3) ])\ndf = DataFrame(dict(A = s, B = td))\ny = s - s[0]\ny\ny.apply(lambda x: x.item().total_seconds())\n```\n\nalso,\n\n``` python\ny.apply(lambda x: x)\n```\n\nshould return `y`, but it returns a `Series` of `int`s, open a GH issue?\n",
    "clean_message": "this doesn't work because  is a . also, should return , but it returns a  of s, open a GH issue?",
    "message_url": "https://github.com/pandas-dev/pandas/pull/3722#issuecomment-18716670",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@ChristianSchwarz \n\n> Using one event for 2 different cases violates seperation of concerns.\n\nNot necessarily, it might be an _event_ with different state : _success_ or _failure_.\n\n> What I wanted to say is why don't we use 2 SAM interfaces and 2 Event types? This would make the life of event consumer easier, see my comment above.\n\nYes it's not out of question (my suggestion on the factory methods indeed lean in that direction). But at this moment, I fear we are over-engineering this. @TimvdLippe and @LiamClark are the primary users of this, could you show us some concrete code snippets outside (not tests) how you want the listener to be registered or how the code you're working with can/should process the _verifications_.\n\nBasically the design question is wether we want this :\n\n``` java\nMockito.framework().addListener((VerificationFailure) System.out::println);\nMockito.framework().addListener((VerificationSuccess) System.out::println);\n\ninterface Verification { verificationMode, wantedMethod, verificationData }\ninterface VerificationFailure extends Verification { failureCause }\ninterface VerificationFailureListener extends MockitoListener {\n        void on(VerificationFailure arg);\n}\ninterface VerificationSuccess extends Verification { }\ninterface VerificationSuccessListener extends MockitoListener {\n        void on(VerificationSuccess arg);\n}\n```\n\nOr \n\n``` java\nMockito.framework().addListener((Verification) System.out::println);\n\n// could be with sub-interfaces or public classes VerificationFailure and VerificationSuccess\ninterface Verification { verificationMode, wantedMethod, verificationData, failureCause }\ninterface VerificationListener extends MockitoListener {\n        void on(Verification arg);\n}\n```\n",
    "clean_message": "Not necessarily, it might be an event with different state : success or failure. Yes it's not out of question (my suggestion on the factory methods indeed lean in that direction). But at this moment, I fear we are over-engineering this.  and  are the primary users of this, could you show us some concrete code snippets outside (not tests) how you want the listener to be registered or how the code you're working with can/should process the verifications. Basically the design question is wether we want this : Or ",
    "message_url": "https://github.com/mockito/mockito/pull/719#issuecomment-259106078",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks @vetedde for this patch :+1: \r\nI left some comments. please update",
    "clean_message": "Thanks  for this patch :+1:  I left some comments. please update",
    "message_url": "https://github.com/pydantic/pydantic/pull/4461#issuecomment-1234121048",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Fix and test for #537.\n\nPlease first fastforward master into develop and then merge #572, though :-)\n",
    "clean_message": "Fix and test for #537. Please first fastforward master into develop and then merge #572, though :-)",
    "message_url": "https://github.com/psf/requests/pull/577",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@machenjie would you mind signing the CLA and update `website/versioned_docs`?",
    "clean_message": "would you mind signing the CLA and update ?",
    "message_url": "https://github.com/jestjs/jest/pull/8378#issuecomment-623098019",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "i'll just fix it up  - thanks though man\n",
    "clean_message": "i'll just fix it up  - thanks though man",
    "message_url": "https://github.com/twbs/bootstrap/pull/8614#issuecomment-21606097",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Like I sort of feel this speed isn't worth it. I'm fine with NamedTuple for the immutability, but the last PR probably went a bit too far.\r\n\r\nAgain, readability, understandability, modifiability is absolutely number one, not perf and not line count. I'm tempted to rip out all the __slots__ for example to prove this (though they do function as a guard from setting other crap on the class).\r\n\r\nThe last speed PR made a few major conceptual refactors, and that's why I valued it. The removal of this \"MovementOp\" layer of indirection was super valuable and faster. I accepted the other stuff but wasn't thrilled about it.",
    "clean_message": "Like I sort of feel this speed isn't worth it. I'm fine with NamedTuple for the immutability, but the last PR probably went a bit too far. Again, readability, understandability, modifiability is absolutely number one, not perf and not line count. I'm tempted to rip out all the slots for example to prove this (though they do function as a guard from setting other crap on the class). The last speed PR made a few major conceptual refactors, and that's why I valued it. The removal of this \"MovementOp\" layer of indirection was super valuable and faster. I accepted the other stuff but wasn't thrilled about it.",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/1075#issuecomment-1627747497",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Maybe it's best that I wait for your neew PR that deals with the backend \nissue, then I rebase on that and see if that changes anything.\nI might also try @taldcroft check to reset html.py and see if that \npasses. and last I will be in my office again tomorrow where I have a \nAnaconda installed (instead of the system python on my linux laptop) and \nsee if i can reproduce the problem there.\n",
    "clean_message": "Maybe it's best that I wait for your neew PR that deals with the backend  issue, then I rebase on that and see if that changes anything. I might also try  check to reset html.py and see if that  passes. and last I will be in my office again tomorrow where I have a  Anaconda installed (instead of the system python on my linux laptop) and  see if i can reproduce the problem there.",
    "message_url": "https://github.com/astropy/astropy/pull/2812#issuecomment-51187705",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hello,\r\nI've found some minor typos in the documentation, solved with this PR.\r\n\r\nFix typo:\r\nwe we -> we\r\ntypechecking -> type checking \r\ntypecheck  -> type check\r\nreentrancy  -> re-entrance",
    "clean_message": "Hello, I've found some minor typos in the documentation, solved with this PR. Fix typo: we we -typechecking -typecheck  -reentrancy  -> re-entrance",
    "message_url": "https://github.com/facebook/react/pull/22722",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Actually, I looked again at the [XMLHttpRequest 2 specification](http://www.w3.org/TR/XMLHttpRequest/) and apparently there is already default behavior for the Content-Type header when posting data:\n\n> - If _data_ is a Blob, If the object's type attribute is not the empty string let mime type be its value.\n> - If _data_ is a Document, Let mime type be \"application/xml\" or \"text/html\" if Document is an HTML document, followed by \";charset=\", followed by encoding.\n> - If _data_ is a string, Let encoding be UTF-8. Let mime type be \"text/plain;charset=UTF-8\".\n> - If _data_ is a FormData, Let the request entity body be the result of running the multipart/form-data encoding algorithm with data as form data set and with UTF-8 as the explicit character encoding. Let mime type be the concatenation of \"multipart/form-data;\", a U+0020 SPACE character, \"boundary=\", and the multipart/form-data boundary string generated by the multipart/form-data encoding algorithm.\n\nSo it would seem that setting a default Content-Type header to \"application/x-www-form-urlencoded;charset=utf-8\" is divergent from the specification, which defaults to \"text/plain;charset=utf-8\". Therefore I'm going to remove this behavior. I'll think some more if there is a better way to post parameters easily.\n",
    "clean_message": "Actually, I looked again at the XMLHttpRequest 2 specification and apparently there is already default behavior for the Content-Type header when posting data: So it would seem that setting a default Content-Type header to \"application/x-www-form-urlencoded;charset=utf-8\" is divergent from the specification, which defaults to \"text/plain;charset=utf-8\". Therefore I'm going to remove this behavior. I'll think some more if there is a better way to post parameters easily.",
    "message_url": "https://github.com/d3/d3/pull/813#issuecomment-8712228",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": ":dancer: good idea\n",
    "clean_message": ":dancer: good idea",
    "message_url": "https://github.com/plotly/plotly.py/pull/307#issuecomment-144148914",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": ">  I only updated the English docs, btw.\r\n\r\nCan you please copy both pages to the `zh` directory? Otherwise the mismatch might be confusing for the Chinese translators. ",
    "clean_message": "Can you please copy both pages to the  directory? Otherwise the mismatch might be confusing for the Chinese translators. ",
    "message_url": "https://github.com/mrdoob/three.js/pull/17441#issuecomment-531775280",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Updated\r\n\r\n<details>\r\n\r\n```\r\n################################################################################\r\n##################### Docstring (pandas.DataFrame.replace) #####################\r\n################################################################################\r\n\r\nReplace values given in `to_replace` with `value`.\r\n\r\nValues of the DataFrame are replaced with other values dynamically.\r\nThis differs from updating with ``.loc`` or ``.iloc``, which require\r\nyou to specify a location to update with some value.\r\n\r\nParameters\r\n----------\r\nto_replace : str, regex, list, dict, Series, int, float, or None\r\n    How to find the values that will be replaced.\r\n\r\n    * numeric, str or regex:\r\n\r\n        - numeric: numeric values equal to `to_replace` will be\r\n          replaced with `value`\r\n        - str: string exactly matching `to_replace` will be replaced\r\n          with `value`\r\n        - regex: regexs matching `to_replace` will be replaced with\r\n          `value`\r\n\r\n    * list of str, regex, or numeric:\r\n\r\n        - First, if `to_replace` and `value` are both lists, they\r\n          **must** be the same length.\r\n        - Second, if ``regex=True`` then all of the strings in **both**\r\n          lists will be interpreted as regexs otherwise they will match\r\n          directly. This doesn't matter much for `value` since there\r\n          are only a few possible substitution regexes you can use.\r\n        - str, regex and numeric rules apply as above.\r\n\r\n    * dict:\r\n\r\n        - Dicts can be used to specify different replacement values\r\n          for different existing values. For example,\r\n          ``{'a': 'b', 'y': 'z'}`` replaces the value 'a' with 'b' and\r\n          'y' with 'z'. To use a dict in this way the `value`\r\n          parameter should be `None`.\r\n        - For a DataFrame a dict can specify that different values\r\n          should be replaced in different columns. For example,\r\n          ``{'a': 1, 'b': 'z'}`` looks for the value 1 in column 'a'\r\n          and the value 'z' in column 'b' and replaces these values\r\n          with whatever is specified in `value`. The `value` parameter\r\n          should not be ``None`` in this case. You can treat this as a\r\n          special case of passing two lists except that you are\r\n          specifying the column to search in.\r\n        - For a DataFrame nested dictionaries, e.g.,\r\n          ``{'a': {'b': np.nan}}``, are read as follows: look in column\r\n          'a' for the value 'b' and replace it with NaN. The `value`\r\n          parameter should be ``None`` to use a nested dict in this\r\n          way. You can nest regular expressions as well. Note that\r\n          column names (the top-level dictionary keys in a nested\r\n          dictionary) **cannot** be regular expressions.\r\n\r\n    * None:\r\n\r\n        - This means that the `regex` argument must be a string,\r\n          compiled regular expression, or list, dict, ndarray or\r\n          Series of such elements. If `value` is also ``None`` then\r\n          this **must** be a nested dictionary or Series.\r\n\r\n    See the examples section for examples of each of these.\r\nvalue : scalar, dict, list, str, regex, default None\r\n    Value to replace any values matching `to_replace` with.\r\n    For a DataFrame a dict of values can be used to specify which\r\n    value to use for each column (columns not in the dict will not be\r\n    filled). Regular expressions, strings and lists or dicts of such\r\n    objects are also allowed.\r\ninplace : boolean, default False\r\n    If True, in place. Note: this will modify any\r\n    other views on this object (e.g. a column from a DataFrame).\r\n    Returns the caller if this is True.\r\nlimit : int, default None\r\n    Maximum size gap to forward or backward fill.\r\nregex : bool or same types as `to_replace`, default False\r\n    Whether to interpret `to_replace` and/or `value` as regular\r\n    expressions. If this is ``True`` then `to_replace` *must* be a\r\n    string. Alternatively, this could be a regular expression or a\r\n    list, dict, or array of regular expressions in which case\r\n    `to_replace` must be ``None``.\r\nmethod : {'pad', 'ffill', 'bfill', `None`}\r\n    The method to use when for replacement, when `to_replace` is a\r\n    scalar, list or tuple and `value` is ``None``.\r\n\r\n    .. versionchanged:: 0.23.0\r\n        Added to DataFrame.\r\naxis : None\r\n    Deprecated.\r\n\r\nSee Also\r\n--------\r\nDataFrame.fillna : Fill `NaN` values\r\nDataFrame.where : Replace values based on boolean condition\r\nSeries.str.replace : Simple string replacement.\r\n\r\nReturns\r\n-------\r\nDataFrame\r\n    Object after replacement.\r\n\r\nRaises\r\n------\r\nAssertionError\r\n    * If `regex` is not a ``bool`` and `to_replace` is not\r\n      ``None``.\r\nTypeError\r\n    * If `to_replace` is a ``dict`` and `value` is not a ``list``,\r\n      ``dict``, ``ndarray``, or ``Series``\r\n    * If `to_replace` is ``None`` and `regex` is not compilable\r\n      into a regular expression or is a list, dict, ndarray, or\r\n      Series.\r\n    * When replacing multiple ``bool`` or ``datetime64`` objects and\r\n      the arguments to `to_replace` does not match the type of the\r\n      value being replaced\r\nValueError\r\n    * If a ``list`` or an ``ndarray`` is passed to `to_replace` and\r\n      `value` but they are not the same length.\r\n\r\nNotes\r\n-----\r\n* Regex substitution is performed under the hood with ``re.sub``. The\r\n  rules for substitution for ``re.sub`` are the same.\r\n* Regular expressions will only substitute on strings, meaning you\r\n  cannot provide, for example, a regular expression matching floating\r\n  point numbers and expect the columns in your frame that have a\r\n  numeric dtype to be matched. However, if those floating point\r\n  numbers *are* strings, then you can do this.\r\n* This method has *a lot* of options. You are encouraged to experiment\r\n  and play with this method to gain intuition about how it works.\r\n* When dict is used as the `to_replace` value, it is like\r\n  key(s) in the dict are the to_replace part and\r\n  value(s) in the dict are the value parameter.\r\n\r\nExamples\r\n--------\r\n\r\n**Scalar `to_replace` and `value`**\r\n\r\n>>> s = pd.Series([0, 1, 2, 3, 4])\r\n>>> s.replace(0, 5)\r\n0    5\r\n1    1\r\n2    2\r\n3    3\r\n4    4\r\ndtype: int64\r\n\r\n>>> df = pd.DataFrame({'A': [0, 1, 2, 3, 4],\r\n...                    'B': [5, 6, 7, 8, 9],\r\n...                    'C': ['a', 'b', 'c', 'd', 'e']})\r\n>>> df.replace(0, 5)\r\n   A  B  C\r\n0  5  5  a\r\n1  1  6  b\r\n2  2  7  c\r\n3  3  8  d\r\n4  4  9  e\r\n\r\n**List-like `to_replace`**\r\n\r\n>>> df.replace([0, 1, 2, 3], 4)\r\n   A  B  C\r\n0  4  5  a\r\n1  4  6  b\r\n2  4  7  c\r\n3  4  8  d\r\n4  4  9  e\r\n\r\n>>> df.replace([0, 1, 2, 3], [4, 3, 2, 1])\r\n   A  B  C\r\n0  4  5  a\r\n1  3  6  b\r\n2  2  7  c\r\n3  1  8  d\r\n4  4  9  e\r\n\r\n>>> s.replace([1, 2], method='bfill')\r\n0    0\r\n1    3\r\n2    3\r\n3    3\r\n4    4\r\ndtype: int64\r\n\r\n**dict-like `to_replace`**\r\n\r\n>>> df.replace({0: 10, 1: 100})\r\n     A  B  C\r\n0   10  5  a\r\n1  100  6  b\r\n2    2  7  c\r\n3    3  8  d\r\n4    4  9  e\r\n\r\n>>> df.replace({'A': 0, 'B': 5}, 100)\r\n     A    B  C\r\n0  100  100  a\r\n1    1    6  b\r\n2    2    7  c\r\n3    3    8  d\r\n4    4    9  e\r\n\r\n>>> df.replace({'A': {0: 100, 4: 400}})\r\n     A  B  C\r\n0  100  5  a\r\n1    1  6  b\r\n2    2  7  c\r\n3    3  8  d\r\n4  400  9  e\r\n\r\n**Regular expression `to_replace`**\r\n\r\n>>> df = pd.DataFrame({'A': ['bat', 'foo', 'bait'],\r\n...                    'B': ['abc', 'bar', 'xyz']})\r\n>>> df.replace(to_replace=r'^ba.$', value='new', regex=True)\r\n      A    B\r\n0   new  abc\r\n1   foo  new\r\n2  bait  xyz\r\n\r\n>>> df.replace({'A': r'^ba.$'}, {'A': 'new'}, regex=True)\r\n      A    B\r\n0   new  abc\r\n1   foo  bar\r\n2  bait  xyz\r\n\r\n>>> df.replace(regex=r'^ba.$', value='new')\r\n      A    B\r\n0   new  abc\r\n1   foo  new\r\n2  bait  xyz\r\n\r\n>>> df.replace(regex={r'^ba.$':'new', 'foo':'xyz'})\r\n      A    B\r\n0   new  abc\r\n1   xyz  new\r\n2  bait  xyz\r\n\r\n>>> df.replace(regex=[r'^ba.$', 'foo'], value='new')\r\n      A    B\r\n0   new  abc\r\n1   new  new\r\n2  bait  xyz\r\n\r\nNote that when replacing multiple ``bool`` or ``datetime64`` objects,\r\nthe data types in the `to_replace` parameter must match the data\r\ntype of the value being replaced:\r\n\r\n>>> df = pd.DataFrame({'A': [True, False, True],\r\n...                    'B': [False, True, False]})\r\n>>> df.replace({'a string': 'new value', True: False})  # raises\r\nTraceback (most recent call last):\r\n    ...\r\nTypeError: Cannot compare types 'ndarray(dtype=bool)' and 'str'\r\n\r\nThis raises a ``TypeError`` because one of the ``dict`` keys is not of\r\nthe correct type for replacement.\r\n\r\nCompare the behavior of ``s.replace({'a': None})`` and\r\n``s.replace('a', None)`` to understand the pecularities\r\nof the `to_replace` parameter:\r\n\r\n>>> s = pd.Series([10, 'a', 'a', 'b', 'a'])\r\n\r\nWhen one uses a dict as the `to_replace` value, it is like the\r\nvalue(s) in the dict are equal to the `value` parameter.\r\n``s.replace({'a': None})`` is equivalent to\r\n``s.replace(to_replace={'a': None}, value=None, method=None)``:\r\n\r\n>>> s.replace({'a': None})\r\n0      10\r\n1    None\r\n2    None\r\n3       b\r\n4    None\r\ndtype: object\r\n\r\nWhen ``value=None`` and `to_replace` is a scalar, list or\r\ntuple, `replace` uses the method parameter (default 'pad') to do the\r\nreplacement. So this is why the 'a' values are being replaced by 10\r\nin rows 1 and 2 and 'b' in row 4 in this case.\r\nThe command ``s.replace('a', None)`` is actually equivalent to\r\n``s.replace(to_replace='a', value=None, method='pad')``:\r\n\r\n>>> s.replace('a', None)\r\n0    10\r\n1    10\r\n2    10\r\n3     b\r\n4     b\r\ndtype: object\r\n\r\n################################################################################\r\n################################## Validation ##################################\r\n################################################################################\r\n\r\nDocstring for \"pandas.DataFrame.replace\" correct. :)\r\n\r\n```\r\n\ufeff</details>\r\n\r\n![fireshot capture 003 - pandas dataframe replace pandas 0 2_ - file____users_taugspurger_sandbox_](https://user-images.githubusercontent.com/1312546/37471185-29211ea8-2837-11e8-8521-e1a89f7eb375.png)\r\n\r\n\r\n",
    "clean_message": "Updated <details to_replacevalueto_replacevalueto_replacevalueto_replacevalueto_replacevaluevaluevalueNonevaluevaluevalueregexvalueto_replaceto_replaceto_replacevalueto_replaceto_replaceNoneto_replacevalueNaNregexto_replaceto_replacevalueto_replaceregexto_replaceto_replacevalueto_replaceto_replacevalueto_replaceto_replaceto_replaceto_replaceto_replaceto_replacevalueto_replacereplace \ufeff</details ",
    "message_url": "https://github.com/pandas-dev/pandas/pull/20271#issuecomment-373404868",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I already have class like `MyHelper`.\nMy problem is that this is class that can be registered many times, not like the blueprint.\nSo, the problem is the same, I need to be able to write:\n\n``` python\nclass MyHelper(object):\n    def __init__(self, app=None):\n        self.app = app\n        if app is not None:\n            self.init_app(app)\n\n    def init_app(self, app):\n        if not blueprint.is_registered:\n            app.register_blueprint(blueprint)\n\n    @staticmethod\n    def get_swagger_ui(obj):\n        return render_template('something.html', obj=obj)\n```\n\nand then:\n\n``` python\nhelper1 = MyHelper(app)\nhelper2 = MyHelper(app)\n\n@app.route('/somewhere')\ndef my_route():\n    ...\n    helper1.get_swagger_ui(obj)\n```\n\nBy the way, to avoid collision, my blueprint is declared with an url_prefix:\n\n``` python\nblueprint = Blueprint('helper', __name__,\n    template_folder='templates',\n    static_folder='static',\n    url_prefix='/libprefix'\n)\n```\n\nIf you look at the code, there was an attribute meant to implement that: `_got_registered_once`.\nThe problem: it wasn't working and induces me in error.\nThis is why I started this pull-request.\n",
    "clean_message": "I already have class like . My problem is that this is class that can be registered many times, not like the blueprint. So, the problem is the same, I need to be able to write: and then: By the way, to avoid collision, my blueprint is declared with an url_prefix: If you look at the code, there was an attribute meant to implement that: . The problem: it wasn't working and induces me in error. This is why I started this pull-request.",
    "message_url": "https://github.com/pallets/flask/pull/1301#issuecomment-68487533",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": ">  a user dropping something in a viewer\r\n\r\ni think that's the main differentiator. i totally understand how this makes sense in a viewer. but i hope you see that this makes little sense in anything else.\r\n\r\nin a normal application that relies on assets, how is `loader.load(url)` anything different from `fetch(url)` and why does the latter throw while the former is silent. i think we're breaking very basic and widely agreed upon programming principles here. if `loader.ignoreErrors = true` is still a possibility for both this and the texture thing @donmccurdy then i would suggest we revert both and add it. and it would allow both the viewer to plow on and everything else to be reliable through testing and error response.\r\n",
    "clean_message": "i think that's the main differentiator. i totally understand how this makes sense in a viewer. but i hope you see that this makes little sense in anything else. in a normal application that relies on assets, how is  anything different from  and why does the latter throw while the former is silent. i think we're breaking very basic and widely agreed upon programming principles here. if  is still a possibility for both this and the texture thing  then i would suggest we revert both and add it. and it would allow both the viewer to plow on and everything else to be reliable through testing and error response.",
    "message_url": "https://github.com/mrdoob/three.js/pull/25014#issuecomment-1415377623",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@yungezz @zikalino review_need",
    "clean_message": "review_need",
    "message_url": "https://github.com/ansible/ansible/pull/53375#issuecomment-470390358",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I am so sorry I find a issue just now.\r\n```\r\n    const vm = new Vue({\r\n      data: {\r\n        comp: 'comp1',\r\n        list: [\r\n          { id: 0 }\r\n        ]\r\n      },\r\n      components: {\r\n        comp1: {\r\n          template: '<span>comp1</span>'\r\n        },\r\n        comp2: {\r\n          template: '<span>comp2</span>'\r\n        }\r\n      },\r\n      template: `\r\n        <div>\r\n          <div v-for=\"(item, index) in list\" :key=\"index\">\r\n            <component :is='comp' v-once></component>\r\n          </div>\r\n        </div>\r\n      `\r\n    }).$mount()\r\n\r\n    expect(vm.$el.textContent).toBe('comp1')\r\n\r\n    vm.comp = 'comp2'\r\n    waitForUpdate(() => {\r\n      expect(vm.$el.textContent).toBe('comp1')\r\n      vm.list.push({ id: 1 })\r\n    }).then(() => {\r\n      expect(vm.$el.textContent).toBe('comp1comp2')\r\n      vm.list.unshift({ id: 2 })\r\n    }).then(() => {\r\n      expect(vm.$el.textContent).toBe('comp2comp1comp2')\r\n    }).then(done)\r\n```\r\n\r\nin third test, I got `comp1comp2comp2`, but `:key='item.id'` it is ok.  \r\nI am not sure is it a bug, cause `key` is variational.\r\nThanks",
    "clean_message": "I am so sorry I find a issue just now.     <div          <div v-for=\"(item, index) in list\" :key=\"index\"            <component :is='comp' v-once          </div        </div  in third test, I got , but  it is ok. I am not sure is it a bug, cause  is variational. Thanks",
    "message_url": "https://github.com/vuejs/vue/pull/8499#issuecomment-405657862",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> If\r\n\r\n\r\n\r\n> Err, I wouldn't do examples either.\r\n> \r\n> If you want to change code, you need a test for it.\r\n\r\nEven if it's just refactoring? ",
    "clean_message": "Even if it's just refactoring? ",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/412#issuecomment-1307700867",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "It seems to have the same purpose as our `inDom` check, except it uses what appears to be a somewhat inferior approach.\n",
    "clean_message": "It seems to have the same purpose as our  check, except it uses what appears to be a somewhat inferior approach.",
    "message_url": "https://github.com/twbs/bootstrap/pull/14610#issuecomment-55611710",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This PR was merged into the repository by commit 4d8cc709e29096171c4f13138b32ef2ec4e0dd4c.",
    "clean_message": "This PR was merged into the repository by commit 4d8cc709e29096171c4f13138b32ef2ec4e0dd4c.",
    "message_url": "https://github.com/angular/angular/pull/51139#issuecomment-1660894720",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "hell yeah! Nice work, thanks @bookman25 ",
    "clean_message": "hell yeah! Nice work, thanks  ",
    "message_url": "https://github.com/jestjs/jest/pull/2377#issuecomment-268286806",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the contributing! But I see that no CLA was signed so I cannot merge it. Also, in the meantime it became outdated. Perhaps, we should introduce some automation to automatically update versions in examples. I will close this PR. Feel free to re-open if you would like to update it and sign CLA.",
    "clean_message": "Thanks for the contributing! But I see that no CLA was signed so I cannot merge it. Also, in the meantime it became outdated. Perhaps, we should introduce some automation to automatically update versions in examples. I will close this PR. Feel free to re-open if you would like to update it and sign CLA.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/7774#issuecomment-1040222262",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "[The first sentence of the Session docs](http://docs.python-requests.org/en/master/user/advanced/#session-objects) reads:\n\n> The Session object allows you to persist certain parameters across requests.\n\nIs there a reason we need this change? Do we need to improve the Session docs directly?\n",
    "clean_message": "The first sentence of the Session docs reads: Is there a reason we need this change? Do we need to improve the Session docs directly?",
    "message_url": "https://github.com/psf/requests/pull/3539#issuecomment-242725142",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I'll merge too since those failures are very distracting.",
    "clean_message": "I'll merge too since those failures are very distracting.",
    "message_url": "https://github.com/astropy/astropy/pull/9800#issuecomment-567114025",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Looks okay. Could you add a whatsnew note in `v2.1.0.rst`?",
    "clean_message": "Looks okay. Could you add a whatsnew note in ?",
    "message_url": "https://github.com/pandas-dev/pandas/pull/52135#issuecomment-1481408207",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@spicyj What do you personally suggest for implementing outside of React? IMO staggered animation are a desirable feature.\n",
    "clean_message": "What do you personally suggest for implementing outside of React? IMO staggered animation are a desirable feature.",
    "message_url": "https://github.com/facebook/react/pull/756#issuecomment-154493901",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "You could have just edited the title :)",
    "clean_message": "You could have just edited the title :)",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/55244#issuecomment-1081980502",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "negative"
  },
  {
    "raw_message": "I will revert this one once the other revert lands",
    "clean_message": "I will revert this one once the other revert lands",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/8368#issuecomment-1131583414",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "The README used \u201cnpm run build\u201d but the correct build script seems to be \u201cnpm run sapper\u201d.\r\n",
    "clean_message": "The README used \u201cnpm run build\u201d but the correct build script seems to be \u201cnpm run sapper\u201d.",
    "message_url": "https://github.com/sveltejs/svelte/pull/3077",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "That makes some sense. Of course, in principle one can also override the numpy functions using `__array_function__`... But for `Quantity`, we also have `u.isclose`, etc., rather than specific methods.",
    "clean_message": "That makes some sense. Of course, in principle one can also override the numpy functions using ... But for , we also have , etc., rather than specific methods.",
    "message_url": "https://github.com/astropy/astropy/pull/12925#issuecomment-1086723287",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "'layout.jade' obsolete after start new express project. Fix using 'doctype html' instead of 'doctype 5'\n",
    "clean_message": "'layout.jade' obsolete after start new express project. Fix using 'doctype html' instead of 'doctype 5'",
    "message_url": "https://github.com/expressjs/express/pull/1873",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@pllim , I changed the implementation to keep the original `os.rename` strategy and fallback to `shutil.move` if if fails with the error I mentioned in the issue. I included tests for the changes so I am not sure why the code coverage is not catching it. \r\n\r\nI also updated the changelog.",
    "clean_message": ", I changed the implementation to keep the original  strategy and fallback to  if if fails with the error I mentioned in the issue. I included tests for the changes so I am not sure why the code coverage is not catching it.  I also updated the changelog.",
    "message_url": "https://github.com/astropy/astropy/pull/13730#issuecomment-1480413407",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Can we have tests for this, both for `d3.time.day` and `d3.time.days`?\n",
    "clean_message": "Can we have tests for this, both for  and ?",
    "message_url": "https://github.com/d3/d3/pull/1197#issuecomment-17585575",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Sweet!",
    "clean_message": "Sweet!",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/928#issuecomment-1583255967",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "That's what i thought.  In this case, i would say that we should not take this change.  'normal' Enums are mutable values as far as the language is concerned.  If you want enums that cannot change value, then the new 'const enum' feature is likely what you want.\n\nThanks!\n",
    "clean_message": "That's what i thought.  In this case, i would say that we should not take this change.  'normal' Enums are mutable values as far as the language is concerned.  If you want enums that cannot change value, then the new 'const enum' feature is likely what you want. Thanks!",
    "message_url": "https://github.com/microsoft/TypeScript/pull/877#issuecomment-61542292",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Changes made in `tinygrad/`:\n```\n------------------------------------------------------------\nfiles                             insertions       deletions\n------------------------------------------------------------\ntinygrad/codegen/linearizer.py             5               1\n------------------------------------------------------------\nlines added in the tinygrad folder: 4\n```\n",
    "clean_message": "Changes made in :",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/1060#issuecomment-1608748173",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Cloud someone give some attention to this little PR?\r\n\r\n@yyx990803 \r\n@posva \r\n@eddyerburgh \r\n@Justineo \r\n",
    "clean_message": "Cloud someone give some attention to this little PR?",
    "message_url": "https://github.com/vuejs/vue/pull/10865#issuecomment-561089175",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Got it, thanks for the clarification!\r\n\r\nSorry to keep pestering you @sheetalkamat on this PR. I'm confused as to how to adopt the module resolution logic to working in an extensionless form. Do you have any pointers you could share please?\r\n\r\nJust to show where I'm at (and prove good faith in my investigation! \ud83d\ude05 ), I looked through `loadModuleFromFile` -> `tryAddingExtensions` since that's what's used right now. They necessitate returning a `{ path: string, ext: Extension }` and I'm hesitant to make big changes around no longer requiring an extension.",
    "clean_message": "Got it, thanks for the clarification! Sorry to keep pestering you  on this PR. I'm confused as to how to adopt the module resolution logic to working in an extensionless form. Do you have any pointers you could share please? Just to show where I'm at (and prove good faith in my investigation! \ud83d\ude05 ), I looked through  ->  since that's what's used right now. They necessitate returning a  and I'm hesitant to make big changes around no longer requiring an extension.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/43173#issuecomment-814561197",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "sure",
    "clean_message": "sure",
    "message_url": "https://github.com/facebook/react/pull/19928#issuecomment-702213816",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "PR: https://rawcdn.githack.com/Mugen87/three.js/dev75/examples/webgl_animation_skinning_blending.html\r\nr151: https://rawcdn.githack.com/mrdoob/three.js/r151/examples/webgl_animation_skinning_blending.html\r\nr152: https://threejs.org/examples/webgl_animation_skinning_blending",
    "clean_message": "PR:  r151:  r152: ",
    "message_url": "https://github.com/mrdoob/three.js/pull/25986#issuecomment-1534347143",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Update copyright year in license. Looks like it was forgotten in 52098e1e4fc4d9c962e9ecb09dfbbcc6ac80a4d7.\n",
    "clean_message": "Update copyright year in license. Looks like it was forgotten in 52098e1e4fc4d9c962e9ecb09dfbbcc6ac80a4d7.",
    "message_url": "https://github.com/pallets/flask/pull/975",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Noticed this weird side case when I tried to build in a virtualenv with matplotlib but not Sphinx installed\n",
    "clean_message": "Noticed this weird side case when I tried to build in a virtualenv with matplotlib but not Sphinx installed",
    "message_url": "https://github.com/astropy/astropy/pull/1225",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "http://test/OCL:248834900:BASE:248834905:1558155226853:8842a15a",
    "clean_message": "http://test/OCL:248834900:BASE:248834905:1558155226853:8842a15a",
    "message_url": "https://github.com/angular/angular/pull/30548#issuecomment-493648427",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "All right, I am closing this PR for now. Thanks for the investigation nonetheless! Now when we have similar feature requests, we can point to this discussion and explain why we are not going to adopt such a feature for the time being :smile: ",
    "clean_message": "All right, I am closing this PR for now. Thanks for the investigation nonetheless! Now when we have similar feature requests, we can point to this discussion and explain why we are not going to adopt such a feature for the time being :smile: ",
    "message_url": "https://github.com/mockito/mockito/pull/1190#issuecomment-337275490",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Also, just switching branches gives me issues where it thinks I have a pending commit to google/protobuf. \n\nIf I'm on my local master branch and do \"git checkout update_pb_lib\" and it tells me I have a pending commit to google/protobuf (it wants to make it go back to using the old version).\n\nThen I do \"git checkout update_pb_lib -- google/protobuf\" because I want to revert this unwanted commit and use the version I selected in \"update_pb_lib\", but it just ignores it and the pending commit remains active. I assume git is treating it differently from a regular file because it's actually a submodule, but I'm not sure how I'm supposed to switch local branches cleanly with this behavior.\n",
    "clean_message": "Also, just switching branches gives me issues where it thinks I have a pending commit to google/protobuf.  If I'm on my local master branch and do \"git checkout update_pb_lib\" and it tells me I have a pending commit to google/protobuf (it wants to make it go back to using the old version). Then I do \"git checkout update_pb_lib -- google/protobuf\" because I want to revert this unwanted commit and use the version I selected in \"update_pb_lib\", but it just ignores it and the pending commit remains active. I assume git is treating it differently from a regular file because it's actually a submodule, but I'm not sure how I'm supposed to switch local branches cleanly with this behavior.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/1800#issuecomment-206629315",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Sorry, have not had a chance to use Jest again since submitting this. I should hopefully get some time to look into this in the next week or so\n",
    "clean_message": "Sorry, have not had a chance to use Jest again since submitting this. I should hopefully get some time to look into this in the next week or so",
    "message_url": "https://github.com/jestjs/jest/pull/111#issuecomment-58893736",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Hooray! Really happy to see this feature returning. Thanks for the flood of pull requests!\n",
    "clean_message": "Hooray! Really happy to see this feature returning. Thanks for the flood of pull requests!",
    "message_url": "https://github.com/d3/d3/pull/140#issuecomment-1106089",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "NUMA support message on ARM64 system\r\n\r\nWith this patch, on ARM64 system, tested 2 GPUs connected on different sockets.\r\nBoth are functional.\r\n\r\nHardware:\r\nDual socket ARM64 N1 system.\r\n2 GPUs connected on different sockets\r\n\r\nSoftware:\r\nUbuntu 20.04.3 LTS\r\nKernel : 5.4.0-89-generic (Linux devBox 5.4.0-89-generic #100-Ubuntu SMP Fri Sep 24 14:29:20 UTC 2021 aarch64 aarch64 aarch64 GNU/Linux)\r\nCUDA SDK : 11.4 (cuda_11.4.2_470.57.02_linux_sbsa.run)\r\ncuDNN : v8.2 (cudnn-11.4-linux-aarch64sbsa-v8.2.2.26.tgz)\r\nTensorRT: v8.0.1.6 (TensorRT-8.0.1.6.Ubuntu-20.04.aarch64-gnu.cuda-11.3.cudnn8.2.tar.gz)\r\n\r\nGPU: Tesla T4\r\nPCI slot info:\r\n\r\n$lspci | grep -i NVIDIA\r\n0005:01:00.0 3D controller: NVIDIA Corporation TU104GL [Tesla T4] (rev a1)\r\n0009:03:00.0 3D controller: NVIDIA Corporation TU104GL [Tesla T4] (rev a1)\r\n\r\nNUMA Info :\r\n$ cat /sys/devices/pci0005:00/0005:00:01.0/0005:01:00.0/numa_node\r\n0\r\n$ cat /sys/devices/pci0009:00/0009:00:05.0/0009:03:00.0/numa_node\r\n1\r\n\r\nTensorFlow GPU access info:\r\n```\r\nname: \"/device:GPU:0\"\r\ndevice_type: \"GPU\"\r\nmemory_limit: 15558377472\r\nlocality {\r\n  bus_id: 1\r\n  links {\r\n  }\r\n}\r\nincarnation: 11914144743508156396\r\nphysical_device_desc: \"device: 0, name: Tesla T4, pci bus id: 0005:01:00.0, compute capability: 7.5\"\r\nxla_global_id: 416903419\r\n\r\nname: \"/device:GPU:1\"\r\ndevice_type: \"GPU\"\r\nmemory_limit: 15558377472\r\nlocality {\r\n  bus_id: 2\r\n  numa_node: 1\r\n  links {\r\n  }\r\n}\r\nincarnation: 14202384483451516137\r\nphysical_device_desc: \"device: 1, name: Tesla T4, pci bus id: 0009:03:00.0, compute capability: 7.5\"\r\nxla_global_id: 2144165316\r\n```\r\n\r\nScript to get info:\r\n\r\n```\r\nfrom tensorflow.python.client import device_lib\r\n\r\nlocal_device = device_lib.list_local_devices()\r\n\r\nfor x in local_device:\r\n  if x.device_type == 'GPU':\r\n    print(x)\r\n\r\n```",
    "clean_message": "NUMA support message on ARM64 system With this patch, on ARM64 system, tested 2 GPUs connected on different sockets. Both are functional. Hardware: Dual socket ARM64 N1 system. 2 GPUs connected on different sockets Software: Ubuntu 20.04.3 LTS Kernel : 5.4.0-89-generic (Linux devBox 5.4.0-89-generic #100-Ubuntu SMP Fri Sep 24 14:29:20 UTC 2021 aarch64 aarch64 aarch64 GNU/Linux) CUDA SDK : 11.4 (cuda_11.4.2_470.57.02_linux_sbsa.run) cuDNN : v8.2 (cudnn-11.4-linux-aarch64sbsa-v8.2.2.26.tgz) TensorRT: v8.0.1.6 (TensorRT-8.0.1.6.Ubuntu-20.04.aarch64-gnu.cuda-11.3.cudnn8.2.tar.gz) GPU: Tesla T4 PCI slot info: $lspci | grep -i NVIDIA 0005:01:00.0 3D controller: NVIDIA Corporation TU104GL [Tesla T4] (rev a1) 0009:03:00.0 3D controller: NVIDIA Corporation TU104GL [Tesla T4] (rev a1) NUMA Info : $ cat /sys/devices/pci0005:00/0005:00:01.0/0005:01:00.0/numa_node 0 $ cat /sys/devices/pci0009:00/0009:00:05.0/0009:03:00.0/numa_node 1 TensorFlow GPU access info: Script to get info:",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/52624",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@gundalow Not sure, I guess you could do something like I have done in the `type` field, which is not nice, but does cover \"most\" of the cases. \r\nAlso, I have seen there's a new `list_string_types` var, I will update `returned_schema` so it makes use of it instead of `basestring`. \r\n\r\nEdit: \r\nI have rebased the branch on latest devel. ",
    "clean_message": "Not sure, I guess you could do something like I have done in the  field, which is not nice, but does cover \"most\" of the cases.  Also, I have seen there's a new  var, I will update  so it makes use of it instead of .  Edit:  I have rebased the branch on latest devel. ",
    "message_url": "https://github.com/ansible/ansible/pull/23322#issuecomment-294574342",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Under heavy optimization mocks might get garbage collected during the dispatching of a mocked method if the mock instance is not used after this method dispatch. To avoid this, we escape the mock instance during the dispatch to make sure that the GC cannot collect the object.\r\n\r\nFixes #1802.",
    "clean_message": "Under heavy optimization mocks might get garbage collected during the dispatching of a mocked method if the mock instance is not used after this method dispatch. To avoid this, we escape the mock instance during the dispatch to make sure that the GC cannot collect the object. Fixes #1802.",
    "message_url": "https://github.com/mockito/mockito/pull/2034",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Fixes #4649\n",
    "clean_message": "Fixes #4649",
    "message_url": "https://github.com/ansible/ansible/pull/5727",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "#969\n",
    "clean_message": "969",
    "message_url": "https://github.com/psf/requests/pull/895#issuecomment-10771857",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This, or something similar, would be a great addition for our use too.\n\nWe have a few code bases at work that require some hoop jumping to work around system `requests` using system certs[1] and virtualenvs in `tox` runs attempting to use the certs in `certifi`.\n\nI [ended up](https://github.com/ask/python-github2/issues/68#issuecomment-3159947) adding something along the same lines to [github2](https://github.com/ask/python-github2/blob/master/github2/request.py#L41) to work around `httplib2` using bundled certs on some hosts, and it would be nice if I didn't need to worry about it when using `requests` ;)\n1. Debian and Gentoo patch system certs support in to their packages, possibly others too.\n",
    "clean_message": "This, or something similar, would be a great addition for our use too. We have a few code bases at work that require some hoop jumping to work around system  using system certs[1] and virtualenvs in  runs attempting to use the certs in . I ended up adding something along the same lines to github2 to work around  using bundled certs on some hosts, and it would be nice if I didn't need to worry about it when using  ;) 1. Debian and Gentoo patch system certs support in to their packages, possibly others too.",
    "message_url": "https://github.com/psf/requests/pull/552#issuecomment-5232179",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Merged in 6114f66e57db5446a7f7995d801bb59a6e882d04",
    "clean_message": "Merged in 6114f66e57db5446a7f7995d801bb59a6e882d04",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/50416#issuecomment-871630962",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I really don't like the comment hack, experience shows that's in general a terrible idea.\n\nWhat about just putting that stuff into a `foo.dart` file for the `const` expressions, and `foo.ts` for the TypeScript variant?\n",
    "clean_message": "I really don't like the comment hack, experience shows that's in general a terrible idea. What about just putting that stuff into a  file for the  expressions, and  for the TypeScript variant?",
    "message_url": "https://github.com/angular/angular/pull/1524#issuecomment-98179619",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "3.10.0 should be available on Maven Central in a bit.",
    "clean_message": "3.10.0 should be available on Maven Central in a bit.",
    "message_url": "https://github.com/mockito/mockito/pull/2280#issuecomment-839651847",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "LGTM!",
    "clean_message": "LGTM!",
    "message_url": "https://github.com/expressjs/express/pull/4211#issuecomment-596859072",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "LGTM :+1:\n",
    "clean_message": "LGTM :+1:",
    "message_url": "https://github.com/JabRef/jabref/pull/1673#issuecomment-237540363",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "If you do `res.send(new String(\"test\"))` the expected behaviour is: `test`, but you get `\"test\"`, since typeof String is \"object\".\n\nI am working on a PR to fix this,\n",
    "clean_message": "If you do  the expected behaviour is: , but you get , since typeof String is \"object\". I am working on a PR to fix this,",
    "message_url": "https://github.com/expressjs/express/pull/2977",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Don't like \"additionally\" and prefer \"thus\"  ? :)\n",
    "clean_message": "Don't like \"additionally\" and prefer \"thus\"  ? :)",
    "message_url": "https://github.com/ansible/ansible/pull/2415#issuecomment-15035935",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "#462",
    "clean_message": "462",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/464",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@cheshire @chsigg @deven-amd",
    "clean_message": "-amd",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/54771#issuecomment-1055893692",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Re `width` / `height` https://github.com/plotly/python-api/pull/170#issuecomment-68748389\n- Good idea (matplotlib's gridspec allows it). But it would require some work to code it up. It also somewhat breaks my initial philosophy: the width and height of each subplot depend only on the number of row and columns. Col and row span > 1 are nothing more than to subplot merged together.\n- with `{'width': , 'height': }` the width and height of all subplots would have to be recomputed in order to preserve `horizontal_spacing` and `vertical_spacing`.\n\nRe ordering https://github.com/plotly/python-api/pull/170#issuecomment-68749866\n- You're on @theengineear's side on this one. \n- To me, it's a little weird that the first spec item (i.e. `specs[0][0]`) does not correspond to `xaxis1` / `yaxis1`. \n- What about this solution https://github.com/plotly/python-api/pull/170#commitcomment-9148029 ?\n\nRe `None` layout https://github.com/plotly/python-api/pull/170#issuecomment-68750001\n- With `rows == 4`, we allow\n\n```\nspec = [[{}],\n        [None],\n        [{'rowspan': 2}],\n        [None]]\n```\n- With `rows == 3`, we allow \n\n```\nspec = [[{}],\n        [{'rowspan': 2}],\n        [None]]\n```\n- Should we make `None` specs opitonal at the end of rows and columns ?\n",
    "clean_message": "Re  / - Good idea (matplotlib's gridspec allows it). But it would require some work to code it up. It also somewhat breaks my initial philosophy: the width and height of each subplot depend only on the number of row and columns. Col and row span - with  the width and height of all subplots would have to be recomputed in order to preserve  and . Re ordering  - You're on 's side on this one.  - To me, it's a little weird that the first spec item (i.e. ) does not correspond to  / .  - What about this solution  ? Re  layout  - With , we allow   With , we allow    Should we make  specs opitonal at the end of rows and columns ?  ",
    "message_url": "https://github.com/plotly/plotly.py/pull/170#issuecomment-68755737",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "positive"
  },
  {
    "raw_message": "@acozine What are \"Active headings\" ?",
    "clean_message": "What are \"Active headings\" ?",
    "message_url": "https://github.com/ansible/ansible/pull/45588#issuecomment-420851938",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi @fcollonval ,\r\n\r\nWe lock the plotly.js version constraint for `FigureWidget` because the Python library is code generated off of the schema for that specific version.  This is admittedly a bit conservative since the plotly.js project does work hard to keep everything backwards compatible, but there are still cases where it could cause an issue. For example, if Plotly.js fixes a bug that plotly.py had worked around then the release of a new version of plotly.js could break `FigureWidget` mid cycle (though I suppose that is just the nature of bounded dependency resolution)\r\n\r\nIn any case, there are already so many moving parts in getting the JupyterLab installation working that I'd prefer to not add another free variable that can change between releases.\r\n\r\nI am a bit confused about why this warning is issued though. `plotlywidget` states a dependency on plotly.js version `\"1.40.1\"` and `@jupyterlab/plotly-extension@0.17` states a dependency of `\"^1.39.2\"`.  Do you have any idea why this doesn't resolve to 1.40.1?\r\n\r\nAlso, the installation still succeeds and I'm able to use both `FigureWidget` and `iplot` but I'm not sure how to check what version of plotly.js was actually installed.",
    "clean_message": "Hi  , We lock the plotly.js version constraint for  because the Python library is code generated off of the schema for that specific version.  This is admittedly a bit conservative since the plotly.js project does work hard to keep everything backwards compatible, but there are still cases where it could cause an issue. For example, if Plotly.js fixes a bug that plotly.py had worked around then the release of a new version of plotly.js could break  mid cycle (though I suppose that is just the nature of bounded dependency resolution) In any case, there are already so many moving parts in getting the JupyterLab installation working that I'd prefer to not add another free variable that can change between releases. I am a bit confused about why this warning is issued though.  states a dependency on plotly.js version  and  states a dependency of .  Do you have any idea why this doesn't resolve to 1.40.1? Also, the installation still succeeds and I'm able to use both  and  but I'm not sure how to check what version of plotly.js was actually installed.",
    "message_url": "https://github.com/plotly/plotly.py/pull/1178#issuecomment-421332934",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I\u2019m pretty sure you can use custom projections from the command-line, but\nyou need to require them (and npm install them) first. The projection\ndefinition is just JavaScript that gets evaluated and returns the\nprojection object, so anything that can be run in Node should be available\nfor you to use. You can even define the projection definition in a separate\nJavaScript file and require that if escaping it through the command-line is\na pain.\n\nThat said this needs better documentation and the design of the\ncommand-line tools needs work (specifically decoupling into smaller UNIX-y\ntools). It\u2019s on my long list of things to do after I finish D3 4.0.\n",
    "clean_message": "I\u2019m pretty sure you can use custom projections from the command-line, but you need to require them (and npm install them) first. The projection definition is just JavaScript that gets evaluated and returns the projection object, so anything that can be run in Node should be available for you to use. You can even define the projection definition in a separate JavaScript file and require that if escaping it through the command-line is a pain. That said this needs better documentation and the design of the command-line tools needs work (specifically decoupling into smaller UNIX-y tools). It\u2019s on my long list of things to do after I finish D3 4.0.",
    "message_url": "https://github.com/d3/d3/pull/2784#issuecomment-217643977",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "By default, the sphinx build uses intersphinx, which links documentation to other sphinx docs like scipy or numpy. This is good for the actual docs, but causes a sphinx build warning if any of the other sites are offline or the web momentarily hiccups.  In #760 this led to a false sphinx build warning on travis.  So this just turns off intersphinx for the travis doc build to prevent that in the future.\n",
    "clean_message": "By default, the sphinx build uses intersphinx, which links documentation to other sphinx docs like scipy or numpy. This is good for the actual docs, but causes a sphinx build warning if any of the other sites are offline or the web momentarily hiccups.  In #760 this led to a false sphinx build warning on travis.  So this just turns off intersphinx for the travis doc build to prevent that in the future.",
    "message_url": "https://github.com/astropy/astropy/pull/763",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@typescript-bot test this\r\n@typescript-bot user test this inline\r\n@typescript-bot run dt\r\n@typescript-bot perf test faster\r\n@typescript-bot test top100",
    "clean_message": "-bot test this -bot user test this inline -bot run dt -bot perf test faster -bot test top100",
    "message_url": "https://github.com/microsoft/TypeScript/pull/54624#issuecomment-1591955292",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I like Universal. Kinda like iPad/iPhone apps Universal. :+1: \n\n(_Edit: not being sarcastic. Isomorphic is a weird word._)\n",
    "clean_message": "I like Universal. Kinda like iPad/iPhone apps Universal. :+1:  (Edit: not being sarcastic. Isomorphic is a weird word.)",
    "message_url": "https://github.com/facebook/react/pull/4041#issuecomment-109434783",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "## Summary of Changes\r\n1. To prevent version changes of `plotly.js` breaking old html exports, these exports now included a version URL that matches `plotly.py`'s bundled `plotly.js`. This is the default behaviour of `include_plotlyjs='cdn'`.\r\n2. `include_plotlyjs='cdn-latest'` added to preserve original behaviour.\r\n3. Refactored tests and code that rely on the `plotly.js` URL to use a function in `io/_utils.py`\r\n\r\n## Code PR\r\n\r\n- [x] I have read through the [contributing notes](https://github.com/plotly/plotly.py/blob/master/contributing.md) and understand the structure of the package. In particular, if my PR modifies code of `plotly.graph_objects`, my modifications concern the `codegen` files and not generated files.\r\n- [x] I have added tests (if submitting a new feature or correcting a bug) or\r\n  modified existing tests.\r\n- [x] ~~For a new feature, I have added documentation examples in an existing or\r\n  new tutorial notebook (please see the doc checklist as well).~~ Not Applicable\r\n- [x] I have added a CHANGELOG entry if fixing/changing/adding anything substantial.\r\n- [x] For a new feature or a change in behaviour, I have updated the relevant docstrings in the code to describe the feature or behaviour (please see the doc checklist as well).\r\n",
    "clean_message": "Summary of Changes  To prevent version changes of  breaking old html exports, these exports now included a version URL that matches 's bundled . This is the default behaviour of . added to preserve original behaviour. Refactored tests and code that rely on the  URL to use a function in   Code PR  [x] I have read through the contributing notes and understand the structure of the package. In particular, if my PR modifies code of , my modifications concern the  files and not generated files. [x] I have added tests (if submitting a new feature or correcting a bug) or   modified existing tests. [x] ~~For a new feature, I have added documentation examples in an existing or   new tutorial notebook (please see the doc checklist as well).~~ Not Applicable [x] I have added a CHANGELOG entry if fixing/changing/adding anything substantial. [x] For a new feature or a change in behaviour, I have updated the relevant docstrings in the code to describe the feature or behaviour (please see the doc checklist as well). ",
    "message_url": "https://github.com/plotly/plotly.py/pull/2961",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "New Starting",
    "clean_message": "New Starting",
    "message_url": "https://github.com/vuejs/vue/pull/12508#issuecomment-1081239111",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "ok, silly me, it was just a question of adding the new subpackages to the `packages` list in `setup.py`. All green now!",
    "clean_message": "ok, silly me, it was just a question of adding the new subpackages to the  list in . All green now!",
    "message_url": "https://github.com/plotly/plotly.py/pull/2493#issuecomment-633100339",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Corresponding changes for data-sveltekit-replacestate addition within SvelteKit: https://github.com/sveltejs/kit/pull/9019\r\n\r\nAlso related: https://github.com/sveltejs/language-tools/pull/1865\r\n\r\n### Before submitting the PR, please make sure you do the following\r\n- [x] It's really useful if your PR references an issue where it is discussed ahead of time. In many cases, features are absent for a reason. For large changes, please create an RFC: https://github.com/sveltejs/rfcs\r\n- [x] Prefix your PR title with `feat:`, `fix:`, `chore:`, or `docs:`.\r\n- [x] This message body should clearly illustrate what problems it solves.\r\n- [ ] Ideally, include a test that fails without this PR but passes with it.\r\n\r\n### Tests\r\n-  [ ] Run the tests with `npm test` and lint the project with `npm run lint`\r\n",
    "clean_message": "Corresponding changes for data-sveltekit-replacestate addition within SvelteKit:  Also related:  Before submitting the PR, please make sure you do the following  [x] It's really useful if your PR references an issue where it is discussed ahead of time. In many cases, features are absent for a reason. For large changes, please create an RFC:  [x] Prefix your PR title with , , , or . [x] This message body should clearly illustrate what problems it solves. [ ] Ideally, include a test that fails without this PR but passes with it.  Tests  [ ] Run the tests with  and lint the project with  ",
    "message_url": "https://github.com/sveltejs/svelte/pull/8281",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "The servers we provide in our tutorial work fine with, and several are even expecting, the default `contentType` of `application/x-www-form-urlencoded` so I think we're going to leave this as is. Unfortunately we can't support people running the tutorial with a setup different than we expect as there is just too much we would have to test and support. Again, sorry you had that experience - this is exactly why we provide servers you can run.\n",
    "clean_message": "The servers we provide in our tutorial work fine with, and several are even expecting, the default  of  so I think we're going to leave this as is. Unfortunately we can't support people running the tutorial with a setup different than we expect as there is just too much we would have to test and support. Again, sorry you had that experience - this is exactly why we provide servers you can run.",
    "message_url": "https://github.com/facebook/react/pull/7316#issuecomment-236733753",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry - not sure what happened when I was rebasing...getting this sorted.",
    "clean_message": "Sorry - not sure what happened when I was rebasing...getting this sorted.",
    "message_url": "https://github.com/twbs/bootstrap/pull/32942#issuecomment-802411716",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "What is `c.resource`?  It's not a standard part of Flask.  Your example doesn't demonstrate the need for your patch.  Class creation should not have side effects that you might need to bypass.  Use decorators to check for permissions, which is already supported by `View`.  This seems like an incorrect design choice rather than a missing feature on Flask's part.\n",
    "clean_message": "What is ?  It's not a standard part of Flask.  Your example doesn't demonstrate the need for your patch.  Class creation should not have side effects that you might need to bypass.  Use decorators to check for permissions, which is already supported by .  This seems like an incorrect design choice rather than a missing feature on Flask's part.",
    "message_url": "https://github.com/pallets/flask/pull/1634#issuecomment-161177103",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "great thanks, somehow forgot about that.",
    "clean_message": "great thanks, somehow forgot about that.",
    "message_url": "https://github.com/pydantic/pydantic/pull/582#issuecomment-505382976",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This PR addresses https://github.com/tiangolo/fastapi/issues/628.\r\n\r\nFixing the immediate problem only required removing a brittle [runtime type check](https://github.com/tiangolo/fastapi/blob/9c3c9b6e78768374868d690bc05918d58481e880/fastapi/routing.py#L300-L302) of each `model` field in a `responses` arg (passed to [`APIRoute.__init__`](https://github.com/tiangolo/fastapi/blob/9c3c9b6e78768374868d690bc05918d58481e880/fastapi/routing.py#L204)). Putting in a more robust version seemed to lead inexorably to making changes in a few other places.\r\n\r\nThe same type checking effectively happens in parts of the code that accept a `type` and returns a `pydantic.ModelField`. As it turns out, that logic is repeated in a number of places:\r\n- [Processing any `model` fields](https://github.com/tiangolo/fastapi/blob/9c3c9b6e78768374868d690bc05918d58481e880/fastapi/routing.py#L304-L323) in the `responses` arg to `APIRoute.__init__`\r\n- Doing [the same](https://github.com/tiangolo/fastapi/blob/9c3c9b6e78768374868d690bc05918d58481e880/fastapi/routing.py#L246-L264) for the `response_model` arg to `APIRoute.__init__`\r\n- At various places in `fastapi.dependencies.utils`: [here](https://github.com/tiangolo/fastapi/blob/9c3c9b6e78768374868d690bc05918d58481e880/fastapi/dependencies/utils.py#L365-L388), [here](https://github.com/tiangolo/fastapi/blob/9c3c9b6e78768374868d690bc05918d58481e880/fastapi/dependencies/utils.py#L697-L718), [here](https://github.com/tiangolo/fastapi/blob/9c3c9b6e78768374868d690bc05918d58481e880/fastapi/dependencies/utils.py#L757-L767)\r\n\r\nGiven that, it seemed best to factor out that logic into a standalone function, for the sake of [DRYness](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself). That also makes it easier to raise `fastapi`-specific exceptions, with clearer error messages, when invalid types are passed. And it means that the `model` args in `responses` and `model_field` undergo the same type checking.",
    "clean_message": "This PR addresses . Fixing the immediate problem only required removing a brittle runtime type check of each  field in a  arg (passed to ). Putting in a more robust version seemed to lead inexorably to making changes in a few other places. The same type checking effectively happens in parts of the code that accept a  and returns a . As it turns out, that logic is repeated in a number of places: - Processing any  fields in the  arg to  - Doing the same for the  arg to  - At various places in : here, here, here Given that, it seemed best to factor out that logic into a standalone function, for the sake of DRYness. That also makes it easier to raise -specific exceptions, with clearer error messages, when invalid types are passed. And it means that the  args in  and  undergo the same type checking.",
    "message_url": "https://github.com/tiangolo/fastapi/pull/1017",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "> Any idea why we might be pulling in nose, of all things?\r\n\r\nWhat.... Does `hypothesis` use `nose`?",
    "clean_message": "What.... Does  use ?",
    "message_url": "https://github.com/astropy/astropy/pull/9532#issuecomment-551143289",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I want to make some add-ons or wrappers on components e.g\r\nBigButton.svelte\r\n```svelte\r\n<script>\r\nimport Button from './Button.svelte'\r\n</script>\r\n\r\n<Button fz=\"16\" h=\"64\" {...$$props}>\r\n  <slot slot=\"prepend\" name=\"prepend\" />\r\n  <slot />\r\n  <slot slot=\"append\" name=\"append\" />\r\n</Button>\r\n```\r\nBut it doesn't work so I have to wrap slots in useless and interfering divs or spans like this:\r\n```svelte\r\n<Button fz=\"16\" h=\"64\" {...$$props}>\r\n  <span slot=\"prepend\"><slot name=\"prepend\" /></span>\r\n  <slot />\r\n  <span slot=\"append\"><slot name=\"append\" /></span>\r\n</Button>\r\n```\r\n",
    "clean_message": "I want to make some add-ons or wrappers on components e.g BigButton.svelte But it doesn't work so I have to wrap slots in useless and interfering divs or spans like this:",
    "message_url": "https://github.com/sveltejs/svelte/pull/4295#issuecomment-625426558",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Presumably these extensions do something. Disabling them because it makes our API easier to use sounds to me like you are \"fixing\" this problem at the wrong layer.",
    "clean_message": "Presumably these extensions do something. Disabling them because it makes our API easier to use sounds to me like you are \"fixing\" this problem at the wrong layer.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/4704#issuecomment-511244429",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "## Summary\r\n\r\nAt Facebook, in a common situation where you've changed a couple of files in the largest haste map, this PR cuts off 25%~ of the startup time. In other less common situations where you've working on a smaller haste map, the improvement is 60%~.\r\n\r\nThe improvement is gained by:\r\n- Not re-serializing and writing the haste map to disk if it was loaded off of disk and then not changed.\r\n- Not re-creating from scratch the `map` and `mocks` part of the haste map on startup when we know what specific files were changed. Instead, just re-process only the specific changed files.\r\n\r\nI've benchmarked the startup time by:\r\n1. Setting up a single test\r\n2. Running once to prime the cache\r\n3. Changing a test file\r\n4. Running the test again with `--skipFilter` (measuring at this point via `time`)\r\n\r\nI've been a bit conservative and I'm just doing a full re-process when files were deleted (same as current behavior) but I may improve that. It's much less common to delete a file than to edit a file and I wanted to keep the code as simple as possible initially.\r\n\r\nIn cases where Watchman isn't being used or is freshly started, there is no difference.\r\n\r\nI'm always a little suspicious when something relatively simple yields such a large performance improvement, so please help by casting a very critical eye on this PR and all assumptions that I made.\r\n\r\n## Test plan\r\n\r\n- All tests pass.\r\n- Tested manually in multiple situations.\r\n- No change in behavior without watchman.\r\n- Manually verified the cache file is updated appropriately in a variety of situations.",
    "clean_message": "Summary At Facebook, in a common situation where you've changed a couple of files in the largest haste map, this PR cuts off 25%~ of the startup time. In other less common situations where you've working on a smaller haste map, the improvement is 60%~. The improvement is gained by: - Not re-serializing and writing the haste map to disk if it was loaded off of disk and then not changed. - Not re-creating from scratch the  and  part of the haste map on startup when we know what specific files were changed. Instead, just re-process only the specific changed files. I've benchmarked the startup time by: 1. Setting up a single test 2. Running once to prime the cache 3. Changing a test file 4. Running the test again with  (measuring at this point via ) I've been a bit conservative and I'm just doing a full re-process when files were deleted (same as current behavior) but I may improve that. It's much less common to delete a file than to edit a file and I wanted to keep the code as simple as possible initially. In cases where Watchman isn't being used or is freshly started, there is no difference. I'm always a little suspicious when something relatively simple yields such a large performance improvement, so please help by casting a very critical eye on this PR and all assumptions that I made. Test plan  All tests pass. Tested manually in multiple situations. No change in behavior without watchman. Manually verified the cache file is updated appropriately in a variety of situations. ",
    "message_url": "https://github.com/jestjs/jest/pull/8153",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "No worries. Quick question, are you happy for quick little changes like the above? As I read through the documentation, its pretty easy to make small changes to English/grammar. Does that work?\r\n\r\nOr do you prefer larger documentation changes? ",
    "clean_message": "No worries. Quick question, are you happy for quick little changes like the above? As I read through the documentation, its pretty easy to make small changes to English/grammar. Does that work? Or do you prefer larger documentation changes? ",
    "message_url": "https://github.com/ant-design/ant-design/pull/4128#issuecomment-265093918",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": ":+1: \n\nas @DanielRosenwasser noted, this needs to go into branch release-1.4\n",
    "clean_message": ":+1:  as  noted, this needs to go into branch release-1.4",
    "message_url": "https://github.com/microsoft/TypeScript/pull/1433#issuecomment-66521968",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "These tests passed but I had to increase the tolerance on some of them.\r\nParticularly when `unbiased=False` and (`dim=0` or `dim=2`).\r\n```\r\ndef test_std_axis(self):\r\n  helper_test_op([(45, 65, 85)], lambda x: torch.std(x, unbiased=True, dim=0), lambda x: Tensor.std(x, unbiased=True, axis=0), atol=1e-2, rtol=1e-2)\r\n  helper_test_op([(45, 65, 85)], lambda x: torch.std(x, unbiased=False, dim=0), lambda x: Tensor.std(x, unbiased=False, axis=0))\r\n  helper_test_op([(45, 65, 85)], lambda x: torch.std(x, unbiased=True, dim=2), lambda x: Tensor.std(x, unbiased=True, axis=2), atol=1e-2, rtol=1e-2)\r\n  helper_test_op([(45, 65, 85)], lambda x: torch.std(x, unbiased=False, dim=2), lambda x: Tensor.std(x, unbiased=False, axis=2))\r\n  helper_test_op([(45, 65, 85)], lambda x: torch.std(x, unbiased=True, dim=[1,2]), lambda x: Tensor.std(x, unbiased=True, axis=[1,2]))\r\n  helper_test_op([(45, 65, 85)], lambda x: torch.std(x, unbiased=False, dim=[1,2]), lambda x: Tensor.std(x, unbiased=False, axis=[1,2]))\r\n  helper_test_op([(45, 65, 85)], lambda x: torch.std(x, unbiased=True, dim=None), lambda x: Tensor.std(x, unbiased=True, axis=None))\r\n  helper_test_op([(45, 65, 85)], lambda x: torch.std(x, unbiased=False, dim=None), lambda x: Tensor.std(x, unbiased=False, axis=None))\r\n```",
    "clean_message": "These tests passed but I had to increase the tolerance on some of them. Particularly when  and ( or ).",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/767#issuecomment-1540228417",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This PR replaces the previous use of a `.bib` file for the study definition file with a `.yml` (YAML) file.\r\n\r\nAn example study definition in YAML format:\r\n![image](https://user-images.githubusercontent.com/43381984/100387375-391da000-3028-11eb-86d6-9ffd2c87006d.png)\r\n\r\n- [ ] Change in CHANGELOG.md described (if applicable)\r\n- [x] Tests created for changes (if applicable)\r\n- [x] Manually tested changed features in running JabRef (always required)\r\n- [x] Screenshots added in PR description (for UI changes)\r\n- [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or, even better, submitted a pull request to the documentation repository.\r\n",
    "clean_message": "This PR replaces the previous use of a  file for the study definition file with a  (YAML) file. An example study definition in YAML format:   [ ] Change in CHANGELOG.md described (if applicable) [x] Tests created for changes (if applicable) [x] Manually tested changed features in running JabRef (always required) [x] Screenshots added in PR description (for UI changes) [x] Checked documentation: Is the information available and up to date? If not created an issue at < ",
    "message_url": "https://github.com/JabRef/jabref/pull/7126",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Oops forgo to target the `v4_integration` branch, closing and opening a new one.",
    "clean_message": "Oops forgo to target the  branch, closing and opening a new one.",
    "message_url": "https://github.com/plotly/plotly.py/pull/1599#issuecomment-500189784",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "We should also check that all our locators actually adhere to this before documenting it! I've been having a play around with [`hypothesis`](https://hypothesis.readthedocs.io/en/latest/quickstart.html) to test this, and have found that for `MaxNLocator` with `vmin=0, vmax=1`, the smallest tick returned is `0` which is not `< vmin`...",
    "clean_message": "We should also check that all our locators actually adhere to this before documenting it! I've been having a play around with  to test this, and have found that for  with , the smallest tick returned is  which is not ...",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/25173#issuecomment-1422416828",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I do not currently have good Internet access (vacation). Please repush (forced) and see if it works.\n\nThanksfor the effort. This will be merged eventually. \n",
    "clean_message": "I do not currently have good Internet access (vacation). Please repush (forced) and see if it works. Thanksfor the effort. This will be merged eventually. ",
    "message_url": "https://github.com/mockito/mockito/pull/404#issuecomment-218941307",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks @hmeine, without looking into `with_attrs_docs`, I'd be happy to try and support it.\r\n\r\nCould you create an issue on https://github.com/pydantic/pydantic-settings so we don't forget this.",
    "clean_message": "Thanks , without looking into , I'd be happy to try and support it. Could you create an issue on  so we don't forget this.",
    "message_url": "https://github.com/pydantic/pydantic/pull/4492#issuecomment-1252056140",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "We don't really have good coverage enough internally to really know if this is fast/safe in production environments. The best we can do at this point is probably just to release it in a patch. ",
    "clean_message": "We don't really have good coverage enough internally to really know if this is fast/safe in production environments. The best we can do at this point is probably just to release it in a patch. ",
    "message_url": "https://github.com/facebook/react/pull/14182#issuecomment-437529202",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "also  if it's so confusing, that's a sign of bad readability ",
    "clean_message": "also  if it's so confusing, that's a sign of bad readability ",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/201#issuecomment-747601546",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@thymikee I'm not sure, sorry :( Might need to contact AppVeyor support about it.",
    "clean_message": "I'm not sure, sorry :( Might need to contact AppVeyor support about it.",
    "message_url": "https://github.com/jestjs/jest/pull/4753#issuecomment-339132211",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "> > > @VilhelmPrytz I don't think having Python3 syntax in docs is a problem\r\n> > \r\n> > \r\n> > No, I actually agree with you smile But I still think it's worth mentioning somewhere in the docs that the guides work for Python 3 only (to avoid confusion).\r\n> \r\n> I totally agree and initially I was going to open an issue to discuss how to best approach this. But [getting started guide has already been changed to use f-string](https://github.com/pallets/flask/commit/413778afc19ce9f0cb484878d86375729c14faf4) so I thought someone has already made this decision.\r\n\r\nAlright, that's a good point. If the decision already has been made, so be it :smile: ",
    "clean_message": "Alright, that's a good point. If the decision already has been made, so be it :smile: ",
    "message_url": "https://github.com/pallets/flask/pull/3406#issuecomment-549184979",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "The failing tests are unrelated so... Merging! \ud83c\udf86 \ud83c\udf7e ",
    "clean_message": "The failing tests are unrelated so... Merging! \ud83c\udf86 \ud83c\udf7e ",
    "message_url": "https://github.com/astropy/astropy/pull/7326#issuecomment-432383183",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@123aswin123 I have little time right now, so you're most welcome to continue based on #5691. It seems I accidentally deleted my fork (again \ud83e\udd26\u200d\u2642\ufe0f) so I can't continue working on #5691 anyways. Just clone and open a new PR, and mention that it supersedes #5691 so it can be closed.",
    "clean_message": "I have little time right now, so you're most welcome to continue based on #5691. It seems I accidentally deleted my fork (again \ud83e\udd26\u200d\u2642\ufe0f) so I can't continue working on #5691 anyways. Just clone and open a new PR, and mention that it supersedes #5691 so it can be closed.",
    "message_url": "https://github.com/sveltejs/svelte/pull/5773#issuecomment-753540568",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "/preview",
    "clean_message": "/preview",
    "message_url": "https://github.com/pandas-dev/pandas/pull/53209#issuecomment-1546743269",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "You've missed renaming in a few places, also linting is failing.\r\n\r\nIf it's a pain to fix, I'll do it in a couple of days.",
    "clean_message": "You've missed renaming in a few places, also linting is failing. If it's a pain to fix, I'll do it in a couple of days.",
    "message_url": "https://github.com/pydantic/pydantic/pull/352#issuecomment-453479574",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "This needs at least a note in the api_changes explaining the change and how people relying on the old behavior need to update their code.\r\nIn practice I think(?) \"absolute\" paths should still be detected and understood relative to srcdir; this is consistent with how sphinx treats\r\n```\r\n:doc:`/absolute/path`\r\n```",
    "clean_message": "This needs at least a note in the api_changes explaining the change and how people relying on the old behavior need to update their code. In practice I think(?) \"absolute\" paths should still be detected and understood relative to srcdir; this is consistent with how sphinx treats /absolute/path",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/12456#issuecomment-428113979",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This pull request adds the capability to create/delete alias records with the route53 module.  In addition, ELBs created with ec2_elb_lb will now return the hosted zone id which is required when creating an alias record in route53.\n",
    "clean_message": "This pull request adds the capability to create/delete alias records with the route53 module.  In addition, ELBs created with ec2_elb_lb will now return the hosted zone id which is required when creating an alias record in route53.",
    "message_url": "https://github.com/ansible/ansible/pull/8974",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "recieve -> receive",
    "clean_message": "recieve -> receive",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/7219",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@koppor  READ THE TEXT: FOR ADDED AND DELETED! ",
    "clean_message": "READ THE TEXT: FOR ADDED AND DELETED! ",
    "message_url": "https://github.com/JabRef/jabref/pull/9533#issuecomment-1372576728",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> yes this affects just a single categorical column also\r\n\r\nThat doesn't seem to be the case?\r\n\r\nWith this branch, and the example of the whatsnew docs:\r\n\r\n```\r\nIn [14]: df.groupby(['A', 'B']).sum()\r\nOut[14]: \r\n     values\r\nA B        \r\na c       1\r\n  d       2\r\nb c       3\r\n  d       4\r\n\r\nIn [15]: df.groupby('A').sum()\r\nOut[15]: \r\n   values\r\nA        \r\na       3\r\nb       7\r\nz       0               <---------- now unobserved category is included\r\n```\r\n\r\nFurther a general comment (will try to do more detailed review later this week): I am not sure we can just change this. First, it is a API breaking change in several places, eg also pivot_table\\*. And second, I think the current behaviour can actually useful in certain cases and it would be nice to have a way to keep this behaviour. \r\nI know this is very ugly, but it would be worth to have a keyword for this in `groupby` ?\r\n\r\n\\* but I agree we should look into it and try to make this more consistent. As, for example, `pivot` does not seem to include unobserved categories (already currently on master), while `pivot_table` does include them but apparently only for the index and not columns? (try `df.pivot_table('values', 'A', 'B')` with the example of whatsnew). On the other hand, `value_counts` does include them (and I think rightly so), but that also introduces an inconsistency with groupby.",
    "clean_message": "That doesn't seem to be the case? With this branch, and the example of the whatsnew docs: Further a general comment (will try to do more detailed review later this week): I am not sure we can just change this. First, it is a API breaking change in several places, eg also pivot_table*. And second, I think the current behaviour can actually useful in certain cases and it would be nice to have a way to keep this behaviour.  I know this is very ugly, but it would be worth to have a keyword for this in  ? * but I agree we should look into it and try to make this more consistent. As, for example,  does not seem to include unobserved categories (already currently on master), while  does include them but apparently only for the index and not columns? (try  with the example of whatsnew). On the other hand,  does include them (and I think rightly so), but that also introduces an inconsistency with groupby.",
    "message_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-379904559",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "the only thing I dont like about this, is that debugging the locals object within a template, or options within the view system ends up spitting out such huge objects\n",
    "clean_message": "the only thing I dont like about this, is that debugging the locals object within a template, or options within the view system ends up spitting out such huge objects",
    "message_url": "https://github.com/expressjs/express/pull/595#issuecomment-903986",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hey @graingert! Sure thing, go ahead! I just updated the docs that use that tutorial example to account for the changes, but that's done. And thanks a lot!\r\n\r\nBTW, I commented out the pytest ignores to see if they would explode or not.\r\n\r\nAlso, I think the errors are because some recent tests used Pydantic models with `Test` in the name that were added in a recent PR. If you wanna fix those, that's awesome, but otherwise, you can just let me know and I can do it. :nerd_face: ",
    "clean_message": "Hey ! Sure thing, go ahead! I just updated the docs that use that tutorial example to account for the changes, but that's done. And thanks a lot! BTW, I commented out the pytest ignores to see if they would explode or not. Also, I think the errors are because some recent tests used Pydantic models with  in the name that were added in a recent PR. If you wanna fix those, that's awesome, but otherwise, you can just let me know and I can do it. :nerd_face: ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/2790#issuecomment-882770675",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Seems reasonable to me.\n\nOn Fri, Dec 14, 2018 at 4:12 PM jbrockmendel <notifications@github.com>\nwrote:\n\n> There are 5 places in indexes.period where\n> DIFFERENT_FREQ/IncompatibleFrequency are used. Should these dispatch to\n> self._data._check_compatible_with?\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/24285#issuecomment-447494445>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIlPRqRIGP72oPIB-RZP5m4-rH2Uhks5u5CJPgaJpZM4ZUO82>\n> .\n>\n",
    "clean_message": "Seems reasonable to me. On Fri, Dec 14, 2018 at 4:12 PM jbrockmendel <wrote:",
    "message_url": "https://github.com/pandas-dev/pandas/pull/24285#issuecomment-447496426",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hehe :-)  Still need to add the other orientations, and clean up the height computation. I think I should probably add `title` and `subtitle` support too like in the Protovis version.\n",
    "clean_message": "Hehe :-)  Still need to add the other orientations, and clean up the height computation. I think I should probably add  and  support too like in the Protovis version.",
    "message_url": "https://github.com/d3/d3/pull/101#issuecomment-971025",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Weird, something must have gone really wrong when I merged my reformat from 1.0.x.",
    "clean_message": "Weird, something must have gone really wrong when I merged my reformat from 1.0.x.",
    "message_url": "https://github.com/pallets/flask/pull/3281#issuecomment-507339642",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "i still think it's weird behavior to pass dictionary keys _and_ optional functionality in the same call...\n\nhowever, the standard python update _keeps_ these references intact. which makes we want to keep it as is and include a keyword option as you suggest. We don't actually need a default, we can do it like this:\n\n``` python\ndef update(dict1=None, **dict2):\n    immutable=dict2.pop('immutable', False)\n    if immutable:\n        # do this\n    else:\n        # do this\n```\n\nthis seem ok?\n",
    "clean_message": "i still think it's weird behavior to pass dictionary keys and optional functionality in the same call... however, the standard python update keeps these references intact. which makes we want to keep it as is and include a keyword option as you suggest. We don't actually need a default, we can do it like this: this seem ok?",
    "message_url": "https://github.com/plotly/plotly.py/pull/73#issuecomment-49245561",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> Im not sure if the save_for_backwards lambda trickery is worth the one line reduction, as it decreases readability...\r\n\r\n\r\n@skoshx \r\nI respect that -- readability is incredibly subjective; I think what's lost is the variable names, but those could easily be replaced with comments.\r\n\r\nReadability isn't made worse everywhere -- there are a lot of places where the code is doing something like this:\r\n\r\n```\r\nvar = calcVar(params)\r\nctx.save_for_backwards(var)\r\nreturn var\r\n```\r\n\r\nturning that into:\r\n```\r\nreturn ctx.save_for_backwards(calcVar(params))[0]\r\n```\r\n\r\ndoesn't seem to hinder readability, and gets us back two more lines.\r\n\r\nthe trickier ones -- where readability might be overly hindered are the lambdas; I don't think the sum, pow, etc (basic ops) are bad at all, but I'll admit some of the others might be tricky\r\n\r\nIMHO it boils down to a question of 'readable to who?' -- if someone isn't familiar with lambdas this wont be as readable, but IMO -- if someone isn't familiar with lambdas I doubt they're reading a python ML lib.\r\n\r\nWould you mind reviewing the PR and indicating which lines you feel like suffer from this change? I'll see if there's a more readable approach to line reduction in those places or revert them if the consensus is that they're not readable",
    "clean_message": "I respect that -- readability is incredibly subjective; I think what's lost is the variable names, but those could easily be replaced with comments. Readability isn't made worse everywhere -- there are a lot of places where the code is doing something like this: turning that into: doesn't seem to hinder readability, and gets us back two more lines. the trickier ones -- where readability might be overly hindered are the lambdas; I don't think the sum, pow, etc (basic ops) are bad at all, but I'll admit some of the others might be tricky IMHO it boils down to a question of 'readable to who?' -- if someone isn't familiar with lambdas this wont be as readable, but IMO -- if someone isn't familiar with lambdas I doubt they're reading a python ML lib. Would you mind reviewing the PR and indicating which lines you feel like suffer from this change? I'll see if there's a more readable approach to line reduction in those places or revert them if the consensus is that they're not readable",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/212#issuecomment-749136365",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I'm not by any means saying this is best practice. Just that having the hardcoded example accompanying the docs, might lead to less confusion for those reading it. (And a sanity check that what's in the docs works as it should.) \r\n\r\n@untitaker how would you feel about adding a patterns directory under examples?",
    "clean_message": "I'm not by any means saying this is best practice. Just that having the hardcoded example accompanying the docs, might lead to less confusion for those reading it. (And a sanity check that what's in the docs works as it should.)  how would you feel about adding a patterns directory under examples?",
    "message_url": "https://github.com/pallets/flask/pull/2131#issuecomment-269816484",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "OK, I replaced the `beta` parameter with the existing `tension` parameter. For backwards-compatibility, I added a new \"bundle\" interpolator, which is the same as \"basis\", except it uses the tension parameter to straighten the spline. This seems like a reasonable interpretation and avoids adding a new API, which I like.\n",
    "clean_message": "OK, I replaced the  parameter with the existing  parameter. For backwards-compatibility, I added a new \"bundle\" interpolator, which is the same as \"basis\", except it uses the tension parameter to straighten the spline. This seems like a reasonable interpretation and avoids adding a new API, which I like.",
    "message_url": "https://github.com/d3/d3/pull/202#issuecomment-1427341",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hi bot, maybe one of your humans can chime in and see what it would take for this to be added to our badge board?  https://expressjs.github.io/badgeboard/\r\n\r\nWe have taken the approach of not adding to the readme badges, and for now, especially with this less common one, I am not sure we want it on the readme.\r\n\r\nThat being said, any way we can get more contributors to the project would be great.  Can you talk more about who recieves emails and how they are chosen?  Are the self selected for projects or types of projects?  Do they get issues tagged with `good-first-issue`? or just random ones?\r\n\r\nThanks!",
    "clean_message": "Hi bot, maybe one of your humans can chime in and see what it would take for this to be added to our badge board?   We have taken the approach of not adding to the readme badges, and for now, especially with this less common one, I am not sure we want it on the readme. That being said, any way we can get more contributors to the project would be great.  Can you talk more about who recieves emails and how they are chosen?  Are the self selected for projects or types of projects?  Do they get issues tagged with ? or just random ones? Thanks!",
    "message_url": "https://github.com/expressjs/express/pull/3979#issuecomment-498934547",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@arackaf yes that\u2019s the idea \ud83d\udca1 ",
    "clean_message": "yes that\u2019s the idea \ud83d\udca1 ",
    "message_url": "https://github.com/sveltejs/svelte/pull/4522#issuecomment-777023372",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I enabled JS profiling, and fixed the other concerns.",
    "clean_message": "I enabled JS profiling, and fixed the other concerns.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/181#issuecomment-319575804",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "106.41",
    "clean_message": "106.41",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/1054#issuecomment-1608313716",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Sorry, the previous set of commits were a WIP and I ran out of steam before getting d3.xml and d3.text working. Should have left a message about that. On the other hand your comments were very helpful for coming up with an approach.\n\nAll unit tests are passing now and I think the method overloading should be working properly as well.\n",
    "clean_message": "Sorry, the previous set of commits were a WIP and I ran out of steam before getting d3.xml and d3.text working. Should have left a message about that. On the other hand your comments were very helpful for coming up with an approach. All unit tests are passing now and I think the method overloading should be working properly as well.",
    "message_url": "https://github.com/d3/d3/pull/1261#issuecomment-18436860",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "In agreement with @MartijnCuppens\u2014all those variations get added for little use, and then folks will want responsive variations. Gotta call it somewhere unfortunately\u2014thanks though!",
    "clean_message": "In agreement with \u2014all those variations get added for little use, and then folks will want responsive variations. Gotta call it somewhere unfortunately\u2014thanks though!",
    "message_url": "https://github.com/twbs/bootstrap/pull/27708#issuecomment-441437917",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Did it fix it for you @looeee , the link works for me?",
    "clean_message": "Did it fix it for you  , the link works for me?",
    "message_url": "https://github.com/mrdoob/three.js/pull/14275#issuecomment-396465130",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Anyone against this patch?",
    "clean_message": "Anyone against this patch?",
    "message_url": "https://github.com/pallets/flask/pull/2193#issuecomment-283525067",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I'll target 5.0, sure.\n\nThis appears similar to #2809, however this PR's promise detection should be more generally applicable (not all Promises follow the A+ standard and implement a `catch` method). This PR also adds tests.\n\nSo I understand correctly, does rebasing on 5.0 alleviate concerns about breaking any existing uses? Or if it does not, then I'd love to know more about the specifics of those cases to protect against.\n",
    "clean_message": "I'll target 5.0, sure. This appears similar to #2809, however this PR's promise detection should be more generally applicable (not all Promises follow the A+ standard and implement a  method). This PR also adds tests. So I understand correctly, does rebasing on 5.0 alleviate concerns about breaking any existing uses? Or if it does not, then I'd love to know more about the specifics of those cases to protect against.",
    "message_url": "https://github.com/expressjs/express/pull/3053#issuecomment-239648419",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hmm weird, the `moduleFolder` seems to be `undefined`. Maybe the processor is running too early?",
    "clean_message": "Hmm weird, the  seems to be . Maybe the processor is running too early?",
    "message_url": "https://github.com/angular/angular/pull/34237#issuecomment-562326490",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I still have an extensive Mockito API investigation planned to see what our current API surface is. Based on that outcome, we have to decide whether we want to expand our public API in this direction. Therefore this PR is blocked on that process, sorry :cry: ",
    "clean_message": "I still have an extensive Mockito API investigation planned to see what our current API surface is. Based on that outcome, we have to decide whether we want to expand our public API in this direction. Therefore this PR is blocked on that process, sorry :cry: ",
    "message_url": "https://github.com/mockito/mockito/pull/1164#issuecomment-340748036",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "LGTM",
    "clean_message": "LGTM",
    "message_url": "https://github.com/ansible/ansible/pull/26566#issuecomment-314432361",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "So far, these fixes only apply to d3.behavior.drag. There\u2019s a small fix we could make to d3.behavior.zoom. And major changes that we could make to d3.svg.brush if we wanted to support multitouch brushing (not multiple brushes, but just being able to drag handles independently, say). Though I think adding multitouch support to the brush component might be too large of an undertaking for 3.4.4.\n",
    "clean_message": "So far, these fixes only apply to d3.behavior.drag. There\u2019s a small fix we could make to d3.behavior.zoom. And major changes that we could make to d3.svg.brush if we wanted to support multitouch brushing (not multiple brushes, but just being able to drag handles independently, say). Though I think adding multitouch support to the brush component might be too large of an undertaking for 3.4.4.",
    "message_url": "https://github.com/d3/d3/pull/1792#issuecomment-38396132",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Source files that contain directives or components that need an inline\r\ntype constructor or inline template type-check block would always be\r\nconsidered as affected in incremental rebuilds. The inline operations\r\ncause the source file to be updated in the TypeScript program that is\r\ncreated for template type-checking, which becomes the reuse program\r\nin a subsequent incremental rebuild.\r\n\r\nIn an incremental rebuild, the source files from the new user program\r\nare compared to those from the reuse program. The updated source files\r\nare not the same as the original source file from the user program, so\r\nthe incremental engine would mark the file which needed inline\r\noperations as affected. This prevents incremental reuse for these files,\r\ncausing sub-optimal rebuild performance.\r\n\r\nThis commit attaches the original source file for source files that have\r\nbeen updated with inline operations, such that the incremental engine\r\nis able to compare source files using the original source file.\r\n\r\nFixes #42543",
    "clean_message": "Source files that contain directives or components that need an inline type constructor or inline template type-check block would always be considered as affected in incremental rebuilds. The inline operations cause the source file to be updated in the TypeScript program that is created for template type-checking, which becomes the reuse program in a subsequent incremental rebuild. In an incremental rebuild, the source files from the new user program are compared to those from the reuse program. The updated source files are not the same as the original source file from the user program, so the incremental engine would mark the file which needed inline operations as affected. This prevents incremental reuse for these files, causing sub-optimal rebuild performance. This commit attaches the original source file for source files that have been updated with inline operations, such that the incremental engine is able to compare source files using the original source file. Fixes #42543",
    "message_url": "https://github.com/angular/angular/pull/42759",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@dstansby haha, oops! Was just trying to make a simple doc change as my first PR. It does look like gitwash is pretty ignored. Including some PR's from @tacaswell.",
    "clean_message": "haha, oops! Was just trying to make a simple doc change as my first PR. It does look like gitwash is pretty ignored. Including some PR's from .",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/14752#issuecomment-511141602",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "In virtual-dom system of vue 2.0, when we are necessary in order to communicate the parent-child components, need to use the `on`.\n",
    "clean_message": "In virtual-dom system of vue 2.0, when we are necessary in order to communicate the parent-child components, need to use the .",
    "message_url": "https://github.com/vuejs/vue/pull/3168#issuecomment-229296772",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@alixaxel what is your screen resolution/devicePixelRatio? I have a suspicion that this has to do with scale/zoom.",
    "clean_message": "what is your screen resolution/devicePixelRatio? I have a suspicion that this has to do with scale/zoom.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/1125#issuecomment-338747975",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks.  The .gif file is still not getting installed.  You need to add a line for `mpl-data/images/*.gif` to the `package_data` list in `setup.py`. \n",
    "clean_message": "Thanks.  The .gif file is still not getting installed.  You need to add a line for  to the  list in . ",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/897#issuecomment-5901107",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "cc: @rmlarsen\r\nMaybe you can help?",
    "clean_message": "cc:  Maybe you can help?",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/33808#issuecomment-547279987",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I dont know what goes wrong with the 2.7 tests... :(",
    "clean_message": "I dont know what goes wrong with the 2.7 tests... :(",
    "message_url": "https://github.com/plotly/plotly.py/pull/1791#issuecomment-536153297",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Unfortunately, you will no longer be notified if the tokens expire. Sorry for the delay.\r\n\r\nBTW: It was not possible to renew the WebXR Gamepad Support token. Seems this trial is over.",
    "clean_message": "Unfortunately, you will no longer be notified if the tokens expire. Sorry for the delay. BTW: It was not possible to renew the WebXR Gamepad Support token. Seems this trial is over.",
    "message_url": "https://github.com/mrdoob/three.js/pull/15791",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "#237 ",
    "clean_message": "237",
    "message_url": "https://github.com/pydantic/pydantic/pull/238",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "cleaning\r\n\r\n<!--\r\nPlease uncomment this block and take a look at this checklist if your PR is making substantial changes to **documentation**/impacts files in the `doc` directory. Check all that apply to your PR, and leave the rest unchecked to discuss with your reviewer! Not all boxes must be checked for every PR :)\r\n\r\nIf your PR modifies code of the `plotly` package, we have a different checklist\r\nbelow :-).\r\n\r\n### Documentation PR\r\n\r\n- [ ] I've [seen the `doc/README.md` file](https://github.com/plotly/plotly.py/blob/master/doc/README.md)\r\n- [ ] This change runs in the current version of Plotly on PyPI and targets the `doc-prod` branch OR it targets the `master` branch\r\n- [ ] If this PR modifies the first example in a page or adds a new one, it is a `px` example if at all possible\r\n- [ ] Every new/modified example has a descriptive title and motivating sentence or paragraph\r\n- [ ] Every new/modified example is independently runnable\r\n- [ ] Every new/modified example is optimized for short line count\tand focuses on the Plotly/visualization-related aspects of the example rather than the computation required to produce the data being visualized\r\n- [ ] Meaningful/relatable datasets are used for all new examples instead of randomly-generated data where possible\r\n- [ ] The random seed is set if using randomly-generated data in new/modified examples\r\n- [ ] New/modified remote datasets are loaded from https://plotly.github.io/datasets and added to https://github.com/plotly/datasets\r\n- [ ] Large computations are avoided in the new/modified examples in favour of loading remote datasets that represent the output of such computations\r\n- [ ] Imports are `plotly.graph_objects as go` / `plotly.express as px` / `plotly.io as pio`\r\n- [ ] Data frames are always called `df`\r\n- [ ] `fig = <something>` call is high up in each new/modified example (either `px.<something>` or `make_subplots` or `go.Figure`)\r\n- [ ] Liberal use is made of `fig.add_*` and `fig.update_*` rather than `go.Figure(data=..., layout=...)` in every new/modified example\r\n- [ ] Specific adders and updaters like `fig.add_shape` and `fig.update_xaxes` are used instead of big `fig.update_layout` calls in every new/modified example\r\n- [ ] `fig.show()` is at the end of each new/modified example\r\n- [ ] `plotly.plot()` and `plotly.iplot()` are not used in any new/modified example\r\n- [ ] Hex codes for colors are not used in any new/modified example in favour of [these nice ones](https://github.com/plotly/plotly.py/issues/2192)\r\n\r\n## Code PR\r\n\r\n- [ ] I have read through the [contributing notes](https://github.com/plotly/plotly.py/blob/master/contributing.md) and understand the structure of the package. In particular, if my PR modifies code of `plotly.graph_objects`, my modifications concern the `codegen` files and not generated files.\r\n- [ ] I have added tests (if submitting a new feature or correcting a bug) or\r\n  modified existing tests.\r\n- [ ] For a new feature, I have added documentation examples in an existing or\r\n  new tutorial notebook (please see the doc checklist as well).\r\n- [ ] I have added a CHANGELOG entry if fixing/changing/adding anything substantial.\r\n- [ ] For a new feature or a change in behaviour, I have updated the relevant docstrings in the code to describe the feature or behaviour (please see the doc checklist as well).\r\n\r\n-->\r\n",
    "clean_message": "cleaning <!-- Please uncomment this block and take a look at this checklist if your PR is making substantial changes to documentation/impacts files in the  directory. Check all that apply to your PR, and leave the rest unchecked to discuss with your reviewer! Not all boxes must be checked for every PR :) If your PR modifies code of the  package, we have a different checklist below :-). Documentation PR  [ ] I've seen the  file [ ] This change runs in the current version of Plotly on PyPI and targets the  branch OR it targets the  branch [ ] If this PR modifies the first example in a page or adds a new one, it is a  example if at all possible [ ] Every new/modified example has a descriptive title and motivating sentence or paragraph [ ] Every new/modified example is independently runnable [ ] Every new/modified example is optimized for short line count  and focuses on the Plotly/visualization-related aspects of the example rather than the computation required to produce the data being visualized [ ] Meaningful/relatable datasets are used for all new examples instead of randomly-generated data where possible [ ] The random seed is set if using randomly-generated data in new/modified examples [ ] New/modified remote datasets are loaded from  and added to  [ ] Large computations are avoided in the new/modified examples in favour of loading remote datasets that represent the output of such computations [ ] Imports are  /  /  [ ] Data frames are always called  [ ] fig.add_fig.update_go.Figure(data=..., layout=...)fig.add_shapefig.update_xaxesfig.update_layoutfig.show()plotly.plot()plotly.iplot()plotly.graph_objectscodegen` files and not generated files. [ ] I have added tests (if submitting a new feature or correcting a bug) or   modified existing tests. [ ] For a new feature, I have added documentation examples in an existing or   new tutorial notebook (please see the doc checklist as well). [ ] I have added a CHANGELOG entry if fixing/changing/adding anything substantial. [ ] For a new feature or a change in behaviour, I have updated the relevant docstrings in the code to describe the feature or behaviour (please see the doc checklist as well).  --",
    "message_url": "https://github.com/plotly/plotly.py/pull/3062",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n",
    "clean_message": "<!-- Please make sure to read the Pull Request Guidelines: -- <!-- PULL REQUEST TEMPLATE --<!-- (Update \"[ ]\" to \"[x]\" to check a box) -- What kind of change does this PR introduce? (check at least one)  [ ] Bugfix [ ] Feature [ ] Code style update [ ] Refactor [ ] Build-related changes [ ] Other, please describe:  Does this PR introduce a breaking change? (check one)  [ ] Yes [ ] No  If yes, please describe the impact and migration path for existing applications: The PR fulfills these requirements:  [ ] It's submitted to the  branch for v2.x (or to a previous version branch), not the  branch [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. , where \"xxx\" is the issue number) [ ] All tests are passing:  [ ] New/updated tests are included  If adding a new feature, the PR's description includes: - [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it) Other information:",
    "message_url": "https://github.com/vuejs/vue/pull/12533",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the idea.  However a few comments.  \r\n\r\n1) why would this need a special axes, and not just a special artist and/or method on a normal `axes`?  \r\n2) I'm surprised that downsampling at the numpy level would actually be faster than just letting the renderer downsample.  Did you check actual speed performance? \r\n3) your downsampling seems to be assuming the line is a timeseries, where x is monotonic and y the dependent variable.  Matplotlib can't make that assumption, and indeed many people will plot a \"time series\" with the independent variable on the y axis, not to mention plots that are not monotonic in either axes.  \r\n4) even if it were a time series, your method of downsampling is very susceptible to aliasing and will definitely have strange artifacts due to preserving the local extrema.  Downsampling requires a low-pass filter, and you are *not* going to preserve extrema by definition.  \r\n\r\nSo overall, this doesn't not seem general enough to be used by core Matplotlib.  Some level of simplification for Line2D drawing seems possible, if it is not already there.  ",
    "clean_message": "Thanks for the idea.  However a few comments.   1) why would this need a special axes, and not just a special artist and/or method on a normal ? 2) I'm surprised that downsampling at the numpy level would actually be faster than just letting the renderer downsample.  Did you check actual speed performance?  3) your downsampling seems to be assuming the line is a timeseries, where x is monotonic and y the dependent variable.  Matplotlib can't make that assumption, and indeed many people will plot a \"time series\" with the independent variable on the y axis, not to mention plots that are not monotonic in either axes. 4) even if it were a time series, your method of downsampling is very susceptible to aliasing and will definitely have strange artifacts due to preserving the local extrema.  Downsampling requires a low-pass filter, and you are not going to preserve extrema by definition.   So overall, this doesn't not seem general enough to be used by core Matplotlib.  Some level of simplification for Line2D drawing seems possible, if it is not already there.  ",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/19493#issuecomment-776820471",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry, haha :)",
    "clean_message": "Sorry, haha :)",
    "message_url": "https://github.com/jestjs/jest/pull/2335",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "positive"
  },
  {
    "raw_message": "ready_for_review",
    "clean_message": "ready_for_review",
    "message_url": "https://github.com/ansible/ansible/pull/58959#issuecomment-510865020",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@untitaker You mean the API docs? Now is does, it never showed up for `Request` by the way.\n",
    "clean_message": "You mean the API docs? Now is does, it never showed up for  by the way.",
    "message_url": "https://github.com/pallets/flask/pull/1416#issuecomment-92145164",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n<!-- Please remember to update CHANGELOG.md in the root of the project if you have not done so. -->\r\n\r\n## Summary\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\nFix #9809 \r\nAfter clone and run `yarn` repository doesn't contains backers.json.\r\nThis bug has appeared after https://github.com/facebook/jest/commit/4425a1f5255748fc1c68639c05157b6eedf1c595, #9375 and #9377.\r\nFor correction is necessary revert postinstall and remove waste code from circleci.",
    "clean_message": "<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -- <!-- Please remember to update CHANGELOG.md in the root of the project if you have not done so. -- Summary <!-- Explain the motivation for making this change. What existing problem does the pull request solve? --Fix #9809  After clone and run  repository doesn't contains backers.json. This bug has appeared after , #9375 and #9377. For correction is necessary revert postinstall and remove waste code from circleci.",
    "message_url": "https://github.com/jestjs/jest/pull/10191",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Those types should probably be part of the `svelte/compiler` module (which I forgot to add to this PR anyway). Perhaps we add them there, and re-export them from `svelte/types/compiler/preprocess` but also deprecate them, so that in v5 we can safely drop them altogether?",
    "clean_message": "Those types should probably be part of the  module (which I forgot to add to this PR anyway). Perhaps we add them there, and re-export them from  but also deprecate them, so that in v5 we can safely drop them altogether?",
    "message_url": "https://github.com/sveltejs/svelte/pull/8702#issuecomment-1580750440",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hmm, I'm not sure if I want to since it's a strange library and not needed for 95% of tinygrad. Is there a 50 line reimplementation?",
    "clean_message": "Hmm, I'm not sure if I want to since it's a strange library and not needed for 95% of tinygrad. Is there a 50 line reimplementation?",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/754#issuecomment-1535493660",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Oh, you know what? I'm stupid. I'm actually using `http-server`.\r\n\r\nPlease, accept my apologies \ud83d\ude47\u200d\u2642\ufe0f",
    "clean_message": "Oh, you know what? I'm stupid. I'm actually using . Please, accept my apologies \ud83d\ude47\u200d\u2642\ufe0f",
    "message_url": "https://github.com/mrdoob/three.js/pull/20583#issuecomment-796699818",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Pretty simple fix.\r\n\r\n[This list in the docs](https://plotly.com/python/creating-and-updating-figures/#other-update-methods) doesn't render properly. This commit fixes the markdown source, and for one other list just like it.\r\n\r\n### Documentation PR\r\n\r\n- [x] I've [seen the `doc/README.md` file](https://github.com/plotly/plotly.py/blob/master/doc/README.md)\r\n- [x] This change runs in the current version of Plotly on PyPI and targets the `doc-prod` branch OR it targets the `master` branch\r\n- [x] If this PR modifies the first example in a page or adds a new one, it is a `px` example if at all possible\r\n- [x] Every new/modified example has a descriptive title and motivating sentence or paragraph\r\n- [x] Every new/modified example is independently runnable\r\n- [x] Every new/modified example is optimized for short line count\tand focuses on the Plotly/visualization-related aspects of the example rather than the computation required to produce the data being visualized\r\n- [x] Meaningful/relatable datasets are used for all new examples instead of randomly-generated data where possible\r\n- [x] The random seed is set if using randomly-generated data in new/modified examples\r\n- [x] New/modified remote datasets are loaded from https://plotly.github.io/datasets and added to https://github.com/plotly/datasets\r\n- [x] Large computations are avoided in the new/modified examples in favour of loading remote datasets that represent the output of such computations\r\n- [x] Imports are `plotly.graph_objects as go` / `plotly.express as px` / `plotly.io as pio`\r\n- [x] Data frames are always called `df`\r\n- [x] `fig = <something>` call is high up in each new/modified example (either `px.<something>` or `make_subplots` or `go.Figure`)\r\n- [x] Liberal use is made of `fig.add_*` and `fig.update_*` rather than `go.Figure(data=..., layout=...)` in every new/modified example\r\n- [x] Specific adders and updaters like `fig.add_shape` and `fig.update_xaxes` are used instead of big `fig.update_layout` calls in every new/modified example\r\n- [x] `fig.show()` is at the end of each new/modified example\r\n- [x] `plotly.plot()` and `plotly.iplot()` are not used in any new/modified example\r\n- [x] Hex codes for colors are not used in any new/modified example in favour of [these nice ones](https://github.com/plotly/plotly.py/issues/2192)\r\n",
    "clean_message": "Pretty simple fix. This list in the docs doesn't render properly. This commit fixes the markdown source, and for one other list just like it. Documentation PR  [x] I've seen the  file [x] This change runs in the current version of Plotly on PyPI and targets the  branch OR it targets the  branch [x] If this PR modifies the first example in a page or adds a new one, it is a  example if at all possible [x] Every new/modified example has a descriptive title and motivating sentence or paragraph [x] Every new/modified example is independently runnable [x] Every new/modified example is optimized for short line count  and focuses on the Plotly/visualization-related aspects of the example rather than the computation required to produce the data being visualized [x] Meaningful/relatable datasets are used for all new examples instead of randomly-generated data where possible [x] The random seed is set if using randomly-generated data in new/modified examples [x] New/modified remote datasets are loaded from  and added to  [x] Large computations are avoided in the new/modified examples in favour of loading remote datasets that represent the output of such computations [x] Imports are  /  /  [x] Data frames are always called  [x] fig.add_fig.update_go.Figure(data=..., layout=...)fig.add_shapefig.update_xaxesfig.update_layoutfig.show()plotly.plot()plotly.iplot()` are not used in any new/modified example [x] Hex codes for colors are not used in any new/modified example in favour of these nice ones ",
    "message_url": "https://github.com/plotly/plotly.py/pull/2455",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Whats new:\r\n\r\nUpdate BS script tags in template\r\n\r\nReplace jumbotron with utilities\r\n\r\nReplace font-weight-bold with fw-bold\r\n\r\nReplace ml-auto with ms-auto\r\n\r\nReplace float-right with float-end\r\n\r\nReplace data-target with data-bs-target\r\n\r\nReplace data-toggle with data-bs-toggle\r\n\r\nAdd CSS rules for <a>\r\n\r\n- [x] closes #41457 \r\n- [x] Ensure all linting tests pass, see [here](https://pandas.pydata.org/pandas-docs/dev/development/contributing.html#code-standards) for how to run them\r\n- [x] whatsnew entry\r\n",
    "clean_message": "Whats new: Update BS script tags in template Replace jumbotron with utilities Replace font-weight-bold with fw-bold Replace ml-auto with ms-auto Replace float-right with float-end Replace data-target with data-bs-target Replace data-toggle with data-bs-toggle Add CSS rules for <a - [x] closes #41457  - [x] Ensure all linting tests pass, see here for how to run them - [x] whatsnew entry",
    "message_url": "https://github.com/pandas-dev/pandas/pull/41651",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the feedback @aslushnikov. How about this?",
    "clean_message": "Thanks for the feedback . How about this?",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/455#issuecomment-323975466",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "No further comments other than the one I just made. I know it's not even really relevant to the purpose of this PR, but it seemed like a good opportunity to review the developer docs on the whole.\n",
    "clean_message": "No further comments other than the one I just made. I know it's not even really relevant to the purpose of this PR, but it seemed like a good opportunity to review the developer docs on the whole.",
    "message_url": "https://github.com/astropy/astropy/pull/922#issuecomment-16124322",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Closes/related to #872\r\n\r\nThe missing server option has been a drawback when it comes to the swagger UI (e.g. provide prod and test servers) and portability of the openapi.json to services that is based on knowing the servers.\r\n\r\nExample usage:\r\n```python\r\nfrom fastapi import FastAPI\r\nfrom fastapi.openapi.models import Server\r\n\r\nserver1 = Server(url=\"http://example.com\", description=\"optional description\")\r\nserver2 = Server(url=\"http://test.com\")\r\n\r\napp = FastAPI(servers=[server1, server2])\r\n\r\n@app.get(\"/\")\r\nasync def root():\r\n    return {\"message\": \"Hello World\"}\r\n```\r\n\r\nIt would also work to just pass a dictionary, but then the typechecker won't be happy:\r\n```python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI(servers=[{\"url\": \"http://example.com\", \"description\": \"test\"}])\r\n```",
    "clean_message": "Closes/related to #872 The missing server option has been a drawback when it comes to the swagger UI (e.g. provide prod and test servers) and portability of the openapi.json to services that is based on knowing the servers. Example usage: It would also work to just pass a dictionary, but then the typechecker won't be happy:",
    "message_url": "https://github.com/tiangolo/fastapi/pull/1547",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Should this be `AsyncComponent` maybe?",
    "clean_message": "Should this be  maybe?",
    "message_url": "https://github.com/facebook/react/pull/10239#issuecomment-316855162",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: Add store field into types for TypeScript\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n",
    "clean_message": "<!-- Please make sure to read the Pull Request Guidelines: -- <!-- PULL REQUEST TEMPLATE --<!-- (Update \"[ ]\" to \"[x]\" to check a box) -- What kind of change does this PR introduce? (check at least one)  [ ] Bugfix [ ] Feature [ ] Code style update [ ] Refactor [ ] Build-related changes [x] Other, please describe: Add store field into types for TypeScript  Does this PR introduce a breaking change? (check one)  [ ] Yes [x] No  If yes, please describe the impact and migration path for existing applications: The PR fulfills these requirements:  [x] It's submitted to the  branch for v2.x (or to a previous version branch), not the  branch [x] When resolving a specific issue, it's referenced in the PR's title (e.g. , where \"xxx\" is the issue number) [x] All tests are passing:  [x] New/updated tests are included  If adding a new feature, the PR's description includes: - [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it) Other information:",
    "message_url": "https://github.com/vuejs/vue/pull/9302",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "https://conda.binstar.org/plotly\n\nwe support osx-64 and win-64 right now (not yet linux), man i find this process tough. there must be an easier way! but i can't seem to find it...\n\nin order to do a:\n\n`conda install -c https://conda.binstar.org/plotly plotly`\n\nwe need to provide a build for your specific platform ( sad face ), or so i'm lead to believe...\n",
    "clean_message": "we support osx-64 and win-64 right now (not yet linux), man i find this process tough. there must be an easier way! but i can't seem to find it... in order to do a: we need to provide a build for your specific platform ( sad face ), or so i'm lead to believe...",
    "message_url": "https://github.com/plotly/plotly.py/pull/136#issuecomment-62075084",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Add exception handling and going to merge. Thanks @Juanlu001!",
    "clean_message": "Add exception handling and going to merge. Thanks !",
    "message_url": "https://github.com/plotly/plotly.py/pull/1417#issuecomment-459714703",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Updated to match current spec.\r\nhttps://github.com/KhronosGroup/glTF/pull/1223",
    "clean_message": "Updated to match current spec.",
    "message_url": "https://github.com/mrdoob/three.js/pull/13340",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks @mwgamble for this patch :+1: \r\nWe are working on Pydantic V2 and the plan is to don't accept the new features on `1.10.x`.\r\nSo, I think you need to wait for V2. what do you think @samuelcolvin \r\nSorry for that!",
    "clean_message": "Thanks  for this patch :+1:  We are working on Pydantic V2 and the plan is to don't accept the new features on . So, I think you need to wait for V2. what do you think Sorry for that!",
    "message_url": "https://github.com/pydantic/pydantic/pull/4912#issuecomment-1372350225",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "```diff\r\ndiff --git a/lib/matplotlib/tests/test_pickle.py b/lib/matplotlib/tests/test_pickle.py\r\nindex 7da24cee42..5679ab2e8b 100644\r\n--- a/lib/matplotlib/tests/test_pickle.py\r\n+++ b/lib/matplotlib/tests/test_pickle.py\r\n@@ -148,8 +148,10 @@ def test_pickle_load_from_subprocess(fig_test, fig_ref, tmp_path):\r\n\r\n     loaded_fig = pickle.loads(ast.literal_eval(proc.stdout))\r\n     assert loaded_fig.dpi == fig_ref.dpi\r\n+    loaded_fig.set_dpi(150)\r\n+    loaded_fig.set_dpi(100)\r\n     loaded_fig.canvas.draw()\r\n-    assert False\r\n+    # assert False\r\n     fig_test.set_size_inches(loaded_fig.get_size_inches())\r\n     fig_test.figimage(loaded_fig.canvas.renderer.buffer_rgba())\r\n```\r\n\r\n\r\nalso fixes the test (ignore the `assert False`...).\r\n\r\nI suspect that this is telling us that although we have corrected the dpi on the figure, the (doubled) value is also through the restored transforms so the figure is in an inconsistent state.  Setting (and resetting) the DPI restores the consistency. ",
    "clean_message": "also fixes the test (ignore the ...). I suspect that this is telling us that although we have corrected the dpi on the figure, the (doubled) value is also through the restored transforms so the figure is in an inconsistent state.  Setting (and resetting) the DPI restores the consistency. ",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/24597#issuecomment-1595940328",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "\ud83c\udf10 Add Chinese translation for Tutorial - Debugging",
    "clean_message": "\ud83c\udf10 Add Chinese translation for Tutorial - Debugging",
    "message_url": "https://github.com/tiangolo/fastapi/pull/2737",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@jreback gentle ping; lots of PRs are touching this file and it is particularly hard to rebase",
    "clean_message": "gentle ping; lots of PRs are touching this file and it is particularly hard to rebase",
    "message_url": "https://github.com/pandas-dev/pandas/pull/31855#issuecomment-586410814",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "The \"exec stub\" wrapper is also in extra. The bindings code is ugly, it really belongs in a well tested and maintained pyhip library. But yea, I'm fine with it now since it's not default, but will have to do something before the 0.7 release.",
    "clean_message": "The \"exec stub\" wrapper is also in extra. The bindings code is ugly, it really belongs in a well tested and maintained pyhip library. But yea, I'm fine with it now since it's not default, but will have to do something before the 0.7 release.",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/750#issuecomment-1596248247",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "#589 aimed to fix the javadoc rendering, but the assumption was that the javadoc tool of the Sun JDK6 will render javadoc the same way as openjdk6.\n\nUnfortunately this is not the same, the javadoc rendering of openjdk6 is a pre work that avoid the use of table elements, this making the stylesheet incompatible.\n\nThis PR aims to fix that and thus fix #552 \n\nBonus I changed the `2.*` and `2.0` by `2.0.0` in the javadoc, this way we have aligned version numbers\n",
    "clean_message": "589 aimed to fix the javadoc rendering, but the assumption was that the javadoc tool of the Sun JDK6 will render javadoc the same way as openjdk6. Unfortunately this is not the same, the javadoc rendering of openjdk6 is a pre work that avoid the use of table elements, this making the stylesheet incompatible. This PR aims to fix that and thus fix #552  Bonus I changed the  and  by  in the javadoc, this way we have aligned version numbers",
    "message_url": "https://github.com/mockito/mockito/pull/592",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I\u2019m going to punt on a lot of tests because this is just the beginning. Someone else can help with getting this to the finish line. I need to focus on getting the shell in place.",
    "clean_message": "I\u2019m going to punt on a lot of tests because this is just the beginning. Someone else can help with getting this to the finish line. I need to focus on getting the shell in place.",
    "message_url": "https://github.com/facebook/react/pull/20312#issuecomment-731913437",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "### Description\r\n\r\nThis switches the wheel building and publishing machinery from Azure to GitHub Actions, making use of the OpenAstronomy workflow (https://github.com/OpenAstronomy/github-actions-workflows).\r\n\r\nTo start with, I am copying over the configuration as-is, and we can then see if any improvements can be made. Remaining things to do:\r\n\r\n* [ ] <s>Check if we can enable the musllinux wheels</s> - still some issues, will investigate after this PR\r\n* [x] Set up nightly build machinery, which will require changing the URL for development wheels to a different URL (assuming we do this, we should clearly warn people in advance - nothing will break since the old dev wheels will still be available at the old URL but no new dev wheels will be added there)\r\n* [x] Consider whether to drop 32-bit wheels for Linux - I think for now we should actually leave it in this PR so that we can backport it to 5.0.x and 5.1.x and then remove 32-bit Linux support in ``main`` (if we decide to)\r\n* [x] Don't build all the wheels for all PRs - build only a couple for regular PRs, and all on release branches and tags.\r\n* [x] Add back all the regular CI builds (remove the TMP commit)\r\n\r\n<!-- Provide a general description of what your pull request does.\r\nComplete the following sentence and add relevant details as you see fit. -->\r\n\r\n<!-- In addition please ensure that the pull request title is descriptive\r\nand allows maintainers to infer the applicable subpackage(s). -->\r\n\r\n\r\n\r\n### Checklist for package maintainer(s)\r\n<!-- This section is to be filled by package maintainer(s) who will\r\nreview this pull request. -->\r\n\r\nThis checklist is meant to remind the package maintainer(s) who will review this pull request of some common things to look for. This list is not exhaustive.\r\n\r\n- [x] Do the proposed changes actually accomplish desired goals?\r\n- [x] Do the proposed changes follow the [Astropy coding guidelines](https://docs.astropy.org/en/latest/development/codeguide.html)?\r\n- [x] Are tests added/updated as required? If so, do they follow the [Astropy testing guidelines](https://docs.astropy.org/en/latest/development/testguide.html)?\r\n- [x] Are docs added/updated as required? If so, do they follow the [Astropy documentation guidelines](https://docs.astropy.org/en/latest/development/docguide.html#astropy-documentation-rules-and-guidelines)?\r\n- [x] Is rebase and/or squash necessary? If so, please provide the author with appropriate instructions. Also see [\"When to rebase and squash commits\"](https://docs.astropy.org/en/latest/development/when_to_rebase.html).\r\n- [x] Did the CI pass? If no, are the failures related? If you need to run daily and weekly cron jobs as part of the PR, please apply the `Extra CI` label.\r\n- [x] Is a change log needed? If yes, did the change log check pass? If no, add the `no-changelog-entry-needed` label. If this is a manual backport, use the `skip-changelog-checks` label unless special changelog handling is necessary.\r\n- [x] Is this a big PR that makes a \"What's new?\" entry worthwhile and if so, is (1) a \"what's new\" entry included in this PR and (2) the \"whatsnew-needed\" label applied?\r\n- [x] Is a milestone set? Milestone must be set but `astropy-bot` check might be missing; do not let the green checkmark fool you.\r\n- [x] At the time of adding the milestone, if the milestone set requires a backport to release branch(es), apply the appropriate `backport-X.Y.x` label(s) *before* merge.\r\n",
    "clean_message": "Description This switches the wheel building and publishing machinery from Azure to GitHub Actions, making use of the OpenAstronomy workflow (). To start with, I am copying over the configuration as-is, and we can then see if any improvements can be made. Remaining things to do:  [ ] <s* [x] Set up nightly build machinery, which will require changing the URL for development wheels to a different URL (assuming we do this, we should clearly warn people in advance - nothing will break since the old dev wheels will still be available at the old URL but no new dev wheels will be added there) [x] Consider whether to drop 32-bit wheels for Linux - I think for now we should actually leave it in this PR so that we can backport it to 5.0.x and 5.1.x and then remove 32-bit Linux support in main (if we decide to) [x] Don't build all the wheels for all PRs - build only a couple for regular PRs, and all on release branches and tags. [x] Add back all the regular CI builds (remove the TMP commit)  <!-- Provide a general description of what your pull request does. Complete the following sentence and add relevant details as you see fit. -- <!-- In addition please ensure that the pull request title is descriptive and allows maintainers to infer the applicable subpackage(s). -- Checklist for package maintainer(s) <!-- This section is to be filled by package maintainer(s) who will review this pull request. -- This checklist is meant to remind the package maintainer(s) who will review this pull request of some common things to look for. This list is not exhaustive.  [x] Do the proposed changes actually accomplish desired goals? [x] Do the proposed changes follow the Astropy coding guidelines? [x] Are tests added/updated as required? If so, do they follow the Astropy testing guidelines? [x] Are docs added/updated as required? If so, do they follow the Astropy documentation guidelines? [x] Is rebase and/or squash necessary? If so, please provide the author with appropriate instructions. Also see \"When to rebase and squash commits\". [x] Did the CI pass? If no, are the failures related? If you need to run daily and weekly cron jobs as part of the PR, please apply the  label. [x] Is a change log needed? If yes, did the change log check pass? If no, add the  label. If this is a manual backport, use the  label unless special changelog handling is necessary. [x] Is this a big PR that makes a \"What's new?\" entry worthwhile and if so, is (1) a \"what's new\" entry included in this PR and (2) the \"whatsnew-needed\" label applied? [x] Is a milestone set? Milestone must be set but  check might be missing; do not let the green checkmark fool you. [x] At the time of adding the milestone, if the milestone set requires a backport to release branch(es), apply the appropriate  label(s) before merge. ",
    "message_url": "https://github.com/astropy/astropy/pull/13251",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry, I'm not having time to work on this and probably will not be able to do for a while. I'll close the PR to give the chance of other people to work on this. Anyone feel free to fork my repo and continue",
    "clean_message": "Sorry, I'm not having time to work on this and probably will not be able to do for a while. I'll close the PR to give the chance of other people to work on this. Anyone feel free to fork my repo and continue",
    "message_url": "https://github.com/pandas-dev/pandas/pull/35832#issuecomment-753276968",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "This PR updates protobuf-java to 3.9.2, to match C++ version\r\nin tensorflow/workspace.bzl (3.9.2), and to fix the issue raised\r\nin #39381 about Java9+ specific warning messages (related https://github.com/protocolbuffers/protobuf/issues/3781)\r\n\r\nThis PR fixes #39381.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>",
    "clean_message": "This PR updates protobuf-java to 3.9.2, to match C++ version in tensorflow/workspace.bzl (3.9.2), and to fix the issue raised in #39381 about Java9+ specific warning messages (related ) This PR fixes #39381. Signed-off-by: Yong Tang <>",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/39384",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "+1",
    "clean_message": "+1",
    "message_url": "https://github.com/ansible/ansible/pull/23417#issuecomment-292605152",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "fixes #1989 ",
    "clean_message": "fixes #1989 ",
    "message_url": "https://github.com/sveltejs/svelte/pull/1990",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Note that I haven't tested that this actually helps, but it doesn't hurt.",
    "clean_message": "Note that I haven't tested that this actually helps, but it doesn't hurt.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/27508",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 1.6666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "This PR aims to vastly improve our TS types and how we ship them.\r\n\r\nOur previous attempt at shipping TypeScript was unfortunately flawed for\r\nmany reasons when compared to the @types/puppeteer package:\r\n\r\n* It only worked if you needed the default export. If you wanted to\r\n  import a type that Puppeteer uses, you'd have to do `import type X\r\n  from 'puppeteer/lib/...'`. This is not something we want to encourage\r\n  because that means our internal file structure becomes almost public\r\n  API.\r\n* It gave absolutely no help to CommonJS users in JS files because it\r\n  would warn people they needed to do `const pptr =\r\n  require('puppeteer').default, which is not correct.\r\n* I found a bug in the `evaluate` types which mean't you couldn't\r\n  override the types to provide more info, and TS would insist the types\r\n  were all `unknown`.\r\n\r\nThe goal of this PR is to support:\r\n\r\n1. In a `ts` file, `import puppeteer from 'puppeteer'`\r\n1. In a `ts` file, `import type {ElementHandle} from 'puppeteer'`\r\n1. In a `ts` file, referencing a type as `puppeteer.ElementHandle`\r\n1. In a `ts` file, you can get good type inference when running\r\n   `foo.evaluate(x => x.clientHeight)`.\r\n1. In a `js` file using CJS, you can do `const puppeteer =\r\n   require('puppeteer')` and get good type help from VSCode.\r\n\r\nTo test this I created a new empty repository with two test files in,\r\none `.ts` file with this in:\r\nhttps://gist.github.com/jackfranklin/22ba2f390f97c7312cd70025a2096fc8,\r\nand a `js` file with this in:\r\nhttps://gist.github.com/jackfranklin/06bed136fdb22419cb7a8a9a4d4ef32f.\r\n\r\nThese files included enough code to check that the types were behaving\r\nas I expected.\r\n\r\nThe fix for our types was to make use of API Extractor, which we already\r\nuse for our docs, to \"rollup\" all the disparate type files that TS\r\ngenerates into one large `types.d.ts` which contains all the various\r\ntypes that we define, such as:\r\n\r\n```ts\r\nexport declare class ElementHandle {...}\r\n\r\nexport type EvaluateFn ...\r\n```\r\n\r\nIf we then update our `package.json` `types` field to point to that file\r\nin `lib/types.d.ts`, this then allows a developer to write:\r\n\r\n```\r\nimport type {ElementHandle} from 'puppeteer'\r\n```\r\n\r\nAnd get the correct type definitions. However, what the `types.d.ts`\r\nfile doesn't do out of the box is declare the default export, so\r\nimporting Puppeteer's default export to call a method such as `launch`\r\non it will get you an error.\r\n\r\nThat's where the `script/add-default-export-to-types.ts` comes in. It\r\nappends the following to the auto-generated `types.d.ts` file:\r\n\r\n```ts\r\ndeclare const puppeteer: PuppeteerNode;\r\nexport = puppeteer;\r\n```\r\n\r\nThis tells TypeScript what the default export is, and by using the\r\n`export =` syntax, we make sure TS understands both in a TS ESM\r\nenvironment and in a JS CJS environment.\r\n\r\nNow the `build` step, which is run by GitHub Actions when we release,\r\nwill generate the `.d.ts` file and then extend it with the default\r\nexport code.\r\n\r\nTo ensure that I was generating a valid package, I created a new\r\nrepository locally with the two code samples linked in Gists above. I\r\nthen ran:\r\n\r\n```\r\nnpm init -y\r\nnpm install --save-dev typescript\r\nnpx tsc --init\r\n```\r\n\r\nWhich gives me a base to test from. In Puppeteer, I ran `npm pack`,\r\nwhich packs the module into a tar that's almost identical to what would\r\nbe published, so I can be confident that the .d.ts files in there are\r\nwhat would be published.\r\n\r\nI then installed it:\r\n\r\n```\r\nnpm install --save-dev ../../puppeteer/puppeteer-7.0.1-post.tgz\r\n```\r\n\r\nAnd then reloaded VSCode in my dummy project. By deliberately making\r\ntypos and hovering over the code, I could confirm that all the goals\r\nlisted above were met, and this seems like a vast improvement on our\r\ntypes.\r\n",
    "clean_message": "This PR aims to vastly improve our TS types and how we ship them. Our previous attempt at shipping TypeScript was unfortunately flawed for many reasons when compared to the /puppeteer package:  It only worked if you needed the default export. If you wanted to   import a type that Puppeteer uses, you'd have to do . This is not something we want to encourage   because that means our internal file structure becomes almost public   API. It gave absolutely no help to CommonJS users in JS files because it   would warn people they needed to do evaluateunknowntsimport puppeteer from 'puppeteer'tsimport type {ElementHandle} from 'puppeteer'tspuppeteer.ElementHandletsfoo.evaluate(x =1. In a  file using CJS, you can do  and get good type help from VSCode.  To test this I created a new empty repository with two test files in, one  file with this in: , and a  file with this in: . These files included enough code to check that the types were behaving as I expected. The fix for our types was to make use of API Extractor, which we already use for our docs, to \"rollup\" all the disparate type files that TS generates into one large  which contains all the various types that we define, such as: If we then update our   field to point to that file in , this then allows a developer to write: And get the correct type definitions. However, what the  file doesn't do out of the box is declare the default export, so importing Puppeteer's default export to call a method such as  on it will get you an error. That's where the  comes in. It appends the following to the auto-generated  file: This tells TypeScript what the default export is, and by using the  syntax, we make sure TS understands both in a TS ESM environment and in a JS CJS environment. Now the  step, which is run by GitHub Actions when we release, will generate the  file and then extend it with the default export code. To ensure that I was generating a valid package, I created a new repository locally with the two code samples linked in Gists above. I then ran: Which gives me a base to test from. In Puppeteer, I ran , which packs the module into a tar that's almost identical to what would be published, so I can be confident that the .d.ts files in there are what would be published. I then installed it: And then reloaded VSCode in my dummy project. By deliberately making typos and hovering over the code, I could confirm that all the goals listed above were met, and this seems like a vast improvement on our types.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/6837",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Any Mac testers want to verify this at least doesn't make things worse and merge?\n",
    "clean_message": "Any Mac testers want to verify this at least doesn't make things worse and merge?",
    "message_url": "https://github.com/astropy/astropy/pull/843#issuecomment-15484553",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> @parkr: you probably meant to CC me I guess :P\n\nWhoops! Yep. :)\n\n> So any ideas why this is caused?\n\nMan, I wish I knew. I know it's on Listen's end (or wdm's end), and not Jekyll's. If you want to take a stab at debugging this, run `jekyll serve` with the `LISTEN_GEM_DEBUGGING` environment variable set to `1`. It'll print out a bunch of debugging statements about what Listen is doing in the background and might make the issue more clear.\n",
    "clean_message": "Whoops! Yep. :) Man, I wish I knew. I know it's on Listen's end (or wdm's end), and not Jekyll's. If you want to take a stab at debugging this, run  with the  environment variable set to . It'll print out a bunch of debugging statements about what Listen is doing in the background and might make the issue more clear.",
    "message_url": "https://github.com/twbs/bootstrap/pull/14746#issuecomment-58415390",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "While running the coverage tests for my other PR I found this:\r\n\r\n\r\nModule | statements | missing | excluded | coverage\r\n-- | -- | -- | -- | --\r\nfastapi/concurrency.py | 28 | 6 | 4 | 79%\r\n\r\nThis PR should fix up to 100%",
    "clean_message": "While running the coverage tests for my other PR I found this: Module | statements | missing | excluded | coverage -- | -- | -- | -- | -- fastapi/concurrency.py | 28 | 6 | 4 | 79% This PR should fix up to 100%",
    "message_url": "https://github.com/tiangolo/fastapi/pull/2038",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> happy to break up if easier to review.\r\n\r\nwill do that and mark this as draft for now.",
    "clean_message": "will do that and mark this as draft for now.",
    "message_url": "https://github.com/pandas-dev/pandas/pull/41590#issuecomment-845797353",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "WHAT IS GOING ON???!?? hahaha\n",
    "clean_message": "WHAT IS GOING ON???!?? hahaha",
    "message_url": "https://github.com/expressjs/express/pull/1835#issuecomment-29437788",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@mhegazy please merge once you've given a quick sanity check as well",
    "clean_message": "please merge once you've given a quick sanity check as well",
    "message_url": "https://github.com/microsoft/TypeScript/pull/15308#issuecomment-304426039",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n",
    "clean_message": "<!-- Please make sure to read the Pull Request Guidelines: -- <!-- PULL REQUEST TEMPLATE --<!-- (Update \"[ ]\" to \"[x]\" to check a box) -- What kind of change does this PR introduce? (check at least one)  [ ] Bugfix [ ] Feature [ ] Code style update [x] Refactor [ ] Build-related changes [ ] Other, please describe:  Does this PR introduce a breaking change? (check one)  [ ] Yes [x] No  If yes, please describe the impact and migration path for existing applications: The PR fulfills these requirements:  [x] It's submitted to the  branch for v2.x (or to a previous version branch), not the  branch [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. , where \"xxx\" is the issue number) [ ] All tests are passing:  [ ] New/updated tests are included  If adding a new feature, the PR's description includes: - [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it) Other information:",
    "message_url": "https://github.com/vuejs/vue/pull/5607",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": ":+1: ",
    "clean_message": ":+1: ",
    "message_url": "https://github.com/astropy/astropy/pull/7870#issuecomment-433535976",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "In HSL space, grayscale colors can now have undefined hue rather than assuming a\nhue of 0\u00b0; likewise black and white can have undefined saturation rather than\nassuming 0%. In HCL space, black can now have undefined hue and chroma. (For\nnon-black grayscale colors, including white, hue and chroma are implied by the\nD65 standard referent.)\n\nWhen interpolating between colors with undefined hue, saturation or chroma, the\ndefined value is used when available. For example, when interpolating from black\nto blue in HCL space, the intermediate colors are now dark blues (#241178)\nrather than dark purples (#600054).\n\nFixes #833.\n",
    "clean_message": "In HSL space, grayscale colors can now have undefined hue rather than assuming a hue of 0\u00b0; likewise black and white can have undefined saturation rather than assuming 0%. In HCL space, black can now have undefined hue and chroma. (For non-black grayscale colors, including white, hue and chroma are implied by the D65 standard referent.) When interpolating between colors with undefined hue, saturation or chroma, the defined value is used when available. For example, when interpolating from black to blue in HCL space, the intermediate colors are now dark blues (#241178) rather than dark purples (#600054). Fixes #833.",
    "message_url": "https://github.com/d3/d3/pull/1205",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "add ctrl, shift and alt modifiers for v-on\n",
    "clean_message": "add ctrl, shift and alt modifiers for v-on",
    "message_url": "https://github.com/vuejs/vue/pull/4034",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@koppor I've done the manual testing and `checkStyle`, and looked at the PR diff. The only thing left to do is test it in Oracle. The code is simple and it is a hassle for me to work with Docker. I think if we merge it in, it might be easiest for GitHub's CI to tell us if it passes the Oracle tests. I know Oracle's not important, but we are so close! But for that, you have to merge it into the upstream because I can't do it from my fork.",
    "clean_message": "I've done the manual testing and , and looked at the PR diff. The only thing left to do is test it in Oracle. The code is simple and it is a hassle for me to work with Docker. I think if we merge it in, it might be easiest for GitHub's CI to tell us if it passes the Oracle tests. I know Oracle's not important, but we are so close! But for that, you have to merge it into the upstream because I can't do it from my fork.",
    "message_url": "https://github.com/JabRef/jabref/pull/5814#issuecomment-588476545",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "extra/datasets #1155",
    "clean_message": "extra/datasets #1155",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/1161#issuecomment-1625448792",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "In case user pass non-string as a tensor name, the code raises ValueError. One common mistake is to specify tensor object instad of its name. Unfortunately, in this case current implementation fails to produce an error message resulting in misleading errors like shown below. This PR introduce explicit type-checks of input parameters.\r\n\r\n```\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/lite/python/util.py in get_tensors_from_tensor_names(graph, tensor_names)\r\n      114   if invalid_tensors:\r\n      115     raise ValueError(\"Invalid tensors '{}' were found.\".format(\r\n  --> 116         \",\".join(invalid_tensors)))\r\n      117   return tensors\r\n      118\r\n\r\n  TypeError: sequence item 0: expected str instance, Tensor found\r\n```\r\n\r\n\r\n",
    "clean_message": "In case user pass non-string as a tensor name, the code raises ValueError. One common mistake is to specify tensor object instad of its name. Unfortunately, in this case current implementation fails to produce an error message resulting in misleading errors like shown below. This PR introduce explicit type-checks of input parameters.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/32202",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Remember to update the main readme (https://github.com/facebook/jest/blob/master/README.md) as well \ud83d\ude42 This probably conflicts with #10691, so a rebase is needed",
    "clean_message": "Remember to update the main readme () as well \ud83d\ude42 This probably conflicts with #10691, so a rebase is needed",
    "message_url": "https://github.com/jestjs/jest/pull/10705#issuecomment-716520262",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "##### SUMMARY\r\nThe sample value given for the 'mode' parameter is shown without quotes, but the data type is string. If you actually try to use an unquoted numeric string for this value (and don't use leading-0 octal notation...) you're in for a nasty surprise! I added quotation marks to the sample value.\r\n##### ISSUE TYPE\r\n- Docs Pull Request\r\n\r\n+label: docsite_pr\r\n\r\n##### SUMMARY\r\n<!--- Describe the change below, including rationale and design decisions -->\r\n\r\n<!--- HINT: Include \"Fixes #nnn\" if you are fixing an existing issue -->\r\n\r\n##### ISSUE TYPE\r\n<!--- Pick one below and delete the rest -->\r\n- Bugfix Pull Request\r\n- Docs Pull Request\r\n- Feature Pull Request\r\n- Test Pull Request\r\n\r\n##### COMPONENT NAME\r\n<!--- Write the short name of the module, plugin, task or feature below -->\r\n\r\n##### ADDITIONAL INFORMATION\r\n<!--- Include additional information to help people understand the change here -->\r\n<!--- A step-by-step reproduction of the problem is helpful if there is no related issue -->\r\n\r\n<!--- Paste verbatim command output below, e.g. before and after your change -->\r\n```paste below\r\n\r\n```\r\n",
    "clean_message": "SUMMARY The sample value given for the 'mode' parameter is shown without quotes, but the data type is string. If you actually try to use an unquoted numeric string for this value (and don't use leading-0 octal notation...) you're in for a nasty surprise! I added quotation marks to the sample value. ISSUE TYPE  Docs Pull Request  +label: docsite_pr SUMMARY <!--- Describe the change below, including rationale and design decisions -- <!--- HINT: Include \"Fixes #nnn\" if you are fixing an existing issue -- ISSUE TYPE <!--- Pick one below and delete the rest --- Bugfix Pull Request - Docs Pull Request - Feature Pull Request - Test Pull Request COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below -- ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --<!--- A step-by-step reproduction of the problem is helpful if there is no related issue -- <!--- Paste verbatim command output below, e.g. before and after your change --",
    "message_url": "https://github.com/ansible/ansible/pull/78157",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "You can preview ad81207 at https://pr34634-ad81207.ngbuilds.io/.\nYou can preview 2cbe888 at https://pr34634-2cbe888.ngbuilds.io/.",
    "clean_message": "You can preview ad81207 at . You can preview 2cbe888 at .",
    "message_url": "https://github.com/angular/angular/pull/34634#issuecomment-575578947",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "We voted against it at #514. At that time, the test worked locally, too. It seems, we are relying on the tests on Travis only. Can the tests themselves be fixed?\n\n[Simon said](https://github.com/JabRef/jabref/pull/514#issuecomment-164757267):\n\n> I would vote for always reading only with UTF_8 set explicitly instead of relying on the default encoding. \n",
    "clean_message": "We voted against it at #514. At that time, the test worked locally, too. It seems, we are relying on the tests on Travis only. Can the tests themselves be fixed? Simon said:",
    "message_url": "https://github.com/JabRef/jabref/pull/1597#issuecomment-233149075",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Sigh. I have a working implementation, but I'm unhappy with the large code burden it adds.",
    "clean_message": "Sigh. I have a working implementation, but I'm unhappy with the large code burden it adds.",
    "message_url": "https://github.com/astropy/astropy/pull/10655#issuecomment-1146687734",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I've changed my mind again: I think we should instruct people to install redbaron manually and run the script from the repo directly. With proper documentation, I can't see any disadvantages of this approach, given that this is a script that is probably used once and never again.\n\nWith this reasoning, I'd like to close this PR.\n",
    "clean_message": "I've changed my mind again: I think we should instruct people to install redbaron manually and run the script from the repo directly. With proper documentation, I can't see any disadvantages of this approach, given that this is a script that is probably used once and never again. With this reasoning, I'd like to close this PR.",
    "message_url": "https://github.com/pallets/flask/pull/1367#issuecomment-83555033",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "**Please check if the PR fulfills these requirements**\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit-message-format\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n**What kind of change does this PR introduce?** (check one with \"x\")\n\n```\n[x] Bugfix\n[ ] Feature\n[ ] Code style update (formatting, local variables)\n[ ] Refactoring (no functional changes, no api changes)\n[ ] Build related changes\n[ ] CI related changes\n[ ] Other... Please describe:\n```\n\n**What is the current behavior?** (You can also link to an open issue here)\n#9613\n\n**What is the new behavior?**\n\nOn the first received value from an observable, decide to continue or cancel (de)activation. Waiting for completion is not required.\n\n**Does this PR introduce a breaking change?** (check one with \"x\")\n\n```\n[ ] Yes\n[x] No\n```\n\nIf this PR contains a breaking change, please describe the impact and migration path for existing applications: ...\n\n**Other information**:\n\nI believe this isn't a breaking change, even though the behavior is changed (accepting more than one value in the stream), because this wasn't properly documented. Also, I think is much more convenient to not require the observable to complete.\n",
    "clean_message": "Please check if the PR fulfills these requirements - [x] The commit message follows our guidelines:  - [x] Tests for the changes have been added (for bug fixes / features) - [ ] Docs have been added / updated (for bug fixes / features) What kind of change does this PR introduce? (check one with \"x\") What is the current behavior? (You can also link to an open issue here) 9613 What is the new behavior? On the first received value from an observable, decide to continue or cancel (de)activation. Waiting for completion is not required. Does this PR introduce a breaking change? (check one with \"x\") If this PR contains a breaking change, please describe the impact and migration path for existing applications: ... Other information: I believe this isn't a breaking change, even though the behavior is changed (accepting more than one value in the stream), because this wasn't properly documented. Also, I think is much more convenient to not require the observable to complete.",
    "message_url": "https://github.com/angular/angular/pull/10412",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Regretfully, I ran into a case where I needed to mock a six-argument method. One can of course claim that such methods _ought not to exist_, but sadly, this is not always the reality and I think that some pragmatism is useful in tools like Mockito, so here is my attempt at adding support for it.\r\n\r\nOf course, it's possible to use the plain `Answer` interface in this case, but adding a dedicated `Answer6` interface makes it more convenient on the user; `Answer` is a quite raw interface.\r\n\r\n(I'm not sure if this should target the 2.x release or `master` also, but feel free to cherry-pick as needed after review/merge.)",
    "clean_message": "Regretfully, I ran into a case where I needed to mock a six-argument method. One can of course claim that such methods ought not to exist, but sadly, this is not always the reality and I think that some pragmatism is useful in tools like Mockito, so here is my attempt at adding support for it. Of course, it's possible to use the plain  interface in this case, but adding a dedicated  interface makes it more convenient on the user;  is a quite raw interface. (I'm not sure if this should target the 2.x release or  also, but feel free to cherry-pick as needed after review/merge.)",
    "message_url": "https://github.com/mockito/mockito/pull/1670",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I'm not convinced this change pays for itself / is worth the extra dependency. The supported Node.js version is already defined in `engines` as you point out, and our general policy on supported Node.js versions is [well-documented](https://github.com/puppeteer/puppeteer#usage).\r\n\r\nGenerally it's a good idea to provide helpful error messages, but in this case I don't think it's worth introducing a new dependency.\r\n\r\nWDYT?",
    "clean_message": "I'm not convinced this change pays for itself / is worth the extra dependency. The supported Node.js version is already defined in  as you point out, and our general policy on supported Node.js versions is well-documented. Generally it's a good idea to provide helpful error messages, but in this case I don't think it's worth introducing a new dependency. WDYT?",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/5898#issuecomment-631358395",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Many many thanks! \ud83d\ude0a\n",
    "clean_message": "Many many thanks! \ud83d\ude0a",
    "message_url": "https://github.com/mrdoob/three.js/pull/6511#issuecomment-99068929",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Yup, I forgot about those. I'll take care of it later.",
    "clean_message": "Yup, I forgot about those. I'll take care of it later.",
    "message_url": "https://github.com/twbs/bootstrap/pull/28570#issuecomment-481590680",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "##### SUMMARY\r\n\r\n<!--- Describe the change below, including rationale and design decisions -->\r\nupdated an examples which includes how to use reboot module to include a message \r\n\r\n\r\n##### ISSUE TYPE\r\n\r\n<!--- Pick one below and delete the rest -->\r\n\r\n- Docs Pull Request\r\n\r\n\r\n##### COMPONENT NAME\r\n\r\nAnsible built in reboot module \r\n\r\n##### ADDITIONAL INFORMATION\r\n\r\n<!--- Include additional information to help people understand the change here -->\r\n<!--- A step-by-step reproduction of the problem is helpful if there is no related issue -->\r\n\r\n<!--- Paste verbatim command output below, e.g. before and after your change -->\r\n\r\n```paste below\r\n\r\nThis pull request is in regards to how to display a message on servers before rebooting using built in ansible reboot module\r\n```\r\n",
    "clean_message": "SUMMARY <!--- Describe the change below, including rationale and design decisions --updated an examples which includes how to use reboot module to include a message  ISSUE TYPE <!--- Pick one below and delete the rest -- - Docs Pull Request COMPONENT NAME Ansible built in reboot module  ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --<!--- A step-by-step reproduction of the problem is helpful if there is no related issue -- <!--- Paste verbatim command output below, e.g. before and after your change --",
    "message_url": "https://github.com/ansible/ansible/pull/81374",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Suggested as part of #1488.\n",
    "clean_message": "Suggested as part of #1488.",
    "message_url": "https://github.com/psf/requests/pull/1490",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "so, it's a bit difficult for me to test this in a correct way. \non windows, tests are completely skipped. so i can run jest in the jest-haste-map package, but there 8 failing tests on a fresh master branch.\nalso i created a linux mint virtual box, cloned a fresh jest repo, but tests are failing too.\nwith just reading the code, i can not find the problem ('jest-util' is unmocked) :-(\nany ideas to get this running?\n",
    "clean_message": "so, it's a bit difficult for me to test this in a correct way.  on windows, tests are completely skipped. so i can run jest in the jest-haste-map package, but there 8 failing tests on a fresh master branch. also i created a linux mint virtual box, cloned a fresh jest repo, but tests are failing too. with just reading the code, i can not find the problem ('jest-util' is unmocked) :-( any ideas to get this running?",
    "message_url": "https://github.com/jestjs/jest/pull/1109#issuecomment-223605266",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Hi there!\n\nThank you for your advice.\nI close my pull request.\n",
    "clean_message": "Hi there! Thank you for your advice. I close my pull request.",
    "message_url": "https://github.com/pallets/flask/pull/987#issuecomment-36314130",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry, maybe I poorly explained what my original problem was, or used poor choice of words.\r\n\r\nI had already read the quickstart, and was following along with the tutorial, and then hit a chapter that started talking about how to install my webapp. I had no idea why this would be necessary, since in the quickstart all I had to do was set some env vars and do `flask run`. Further, I had no idea that it was even possible to install a package into my venv and have auto-reload automatically work (`pip --editable .`). I just wanted to set some env vars and run `flask run` and have it work. What I was shooting for in the paragraph I added in the PR is: \"don't panic, when your webapp is a package (instead of a top-level hello.py script), you must install it and that's just part of the dev process\". I'm fine with that explanation, and I think the reader will be as well (at least, where they are for now, in chapter 3 of the tut).\r\n\r\nI'm guessing that later, during deployment, when the instructions say something like, \"so, install your webapp package into...\", then the reader will be pleased to know that they already have their webapp set up as a package, and that this is one of the reasons it was useful to set that up in chapter 3 of the tut.\r\n",
    "clean_message": "Sorry, maybe I poorly explained what my original problem was, or used poor choice of words. I had already read the quickstart, and was following along with the tutorial, and then hit a chapter that started talking about how to install my webapp. I had no idea why this would be necessary, since in the quickstart all I had to do was set some env vars and do . Further, I had no idea that it was even possible to install a package into my venv and have auto-reload automatically work (). I just wanted to set some env vars and run  and have it work. What I was shooting for in the paragraph I added in the PR is: \"don't panic, when your webapp is a package (instead of a top-level hello.py script), you must install it and that's just part of the dev process\". I'm fine with that explanation, and I think the reader will be as well (at least, where they are for now, in chapter 3 of the tut). I'm guessing that later, during deployment, when the instructions say something like, \"so, install your webapp package into...\", then the reader will be pleased to know that they already have their webapp set up as a package, and that this is one of the reasons it was useful to set that up in chapter 3 of the tut.",
    "message_url": "https://github.com/pallets/flask/pull/2425#issuecomment-316792000",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Closing since @pkozlowski-opensource thinks that the added complexity does not justify its benefits.",
    "clean_message": "Closing since -opensource thinks that the added complexity does not justify its benefits.",
    "message_url": "https://github.com/angular/angular/pull/32654#issuecomment-531848879",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "please review (and merge if it looks good)",
    "clean_message": "please review (and merge if it looks good)",
    "message_url": "https://github.com/pydantic/pydantic/pull/5304#issuecomment-1492209127",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I also modified the generation of update() code, which is useless when the tag is not dynamic.\r\nIn this case the generated code will correspond to this:\r\n\r\n```\r\n\t\tp: function update(ctx, [dirty]) {\r\n\t\t\tif (svelte_element) svelte_element.p(ctx, dirty);\r\n\t\t},\r\n```\r\n\r\nI also edited an unit test for ajusting the expected result accordingly.",
    "clean_message": "I also modified the generation of update() code, which is useless when the tag is not dynamic. In this case the generated code will correspond to this: I also edited an unit test for ajusting the expected result accordingly.",
    "message_url": "https://github.com/sveltejs/svelte/pull/7949#issuecomment-1279462922",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "We were appending f to NAN and INFINITY constatns, and now we don't!\r\nConstants taken from https://www.gnu.org/software/libc/manual/html_node/Infinity-and-NaN.html\r\n",
    "clean_message": "We were appending f to NAN and INFINITY constatns, and now we don't! Constants taken from ",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/935",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I've seen that the bounty is already locked, but still wanted to post my take on the Bert's pretraining code. \r\n\r\nIf it's not worth including in the repo, feel free to close the PR.\r\n\r\nDetails:\r\n\r\nFor the Bert model, I've modified [models/transformer.py](https://github.com/geohot/tinygrad/blob/ae83e9844c7ed07f04087af7c865df97540be745/models/transformer.py#LL52C10-L52C10) to use prenorm, new_gelu activation and turned on gradient for the embedding layer, the rest is the same.\r\n\r\nDataset prep is a modified version of [nanoGPTs dataset preps](https://github.com/karpathy/nanoGPT/blob/master/data/openwebtext/prepare.py).\r\n\r\nDuring training batches are sampled from the pretokenized train.bin blob and masked. I've ommited the NSP (Next Sentence Prediction) loss as it was shown in later papers to not improve models' quality. \r\n\r\nI've run the code on A10 gpu, achieving ~6s/step with bert_base architecture (12 layers, 12 heads, 786 embed_dim, ffn = 4*embed_dim), context 128 and BS=32. Original Bert was trained for 1,000,000 steps with BS=256.",
    "clean_message": "I've seen that the bounty is already locked, but still wanted to post my take on the Bert's pretraining code.  If it's not worth including in the repo, feel free to close the PR. Details: For the Bert model, I've modified models/transformer.py to use prenorm, new_gelu activation and turned on gradient for the embedding layer, the rest is the same. Dataset prep is a modified version of nanoGPTs dataset preps. During training batches are sampled from the pretokenized train.bin blob and masked. I've ommited the NSP (Next Sentence Prediction) loss as it was shown in later papers to not improve models' quality.  I've run the code on A10 gpu, achieving ~6s/step with bert_base architecture (12 layers, 12 heads, 786 embed_dim, ffn = 4*embed_dim), context 128 and BS=32. Original Bert was trained for 1,000,000 steps with BS=256.",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/892",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "#10",
    "clean_message": "10",
    "message_url": "https://github.com/pydantic/pydantic/pull/208",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> @multiverse-tf Thank you very much for the clarification and for working on it!\r\n\r\n@dev0x13, I'm sorry that the merge could not be achieved this week as the PR enables hybrid model support by default in XNNPACK delegate which requires much more thorough testing internally with other Google products. So to move it forward, we may guard your change with some pre-defined macros. Thanks for your patience, and hope you could understand this. Many thanks again for your contribution!",
    "clean_message": ", I'm sorry that the merge could not be achieved this week as the PR enables hybrid model support by default in XNNPACK delegate which requires much more thorough testing internally with other Google products. So to move it forward, we may guard your change with some pre-defined macros. Thanks for your patience, and hope you could understand this. Many thanks again for your contribution!",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/48751#issuecomment-845666586",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Having this as a config flag sounds reasonable to me. For the reasons discussed in https://github.com/pydantic/pydantic/issues/6768 I don\u2019t think it\u2019s good as a default, but for large apps it seems like a reasonable trade-off.\r\n\r\nShouldn\u2019t we make TypeAdapter lazy as well?",
    "clean_message": "Having this as a config flag sounds reasonable to me. For the reasons discussed in  I don\u2019t think it\u2019s good as a default, but for large apps it seems like a reasonable trade-off. Shouldn\u2019t we make TypeAdapter lazy as well?",
    "message_url": "https://github.com/pydantic/pydantic/pull/6823#issuecomment-1647834201",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Good job! And sorry I didn't have time to do it yesterday :|",
    "clean_message": "Good job! And sorry I didn't have time to do it yesterday :|",
    "message_url": "https://github.com/jestjs/jest/pull/7854#issuecomment-462751815",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This PR adds support for the `onUnmount` method on event responders. This is essential for handling cases where an event component unmounts part way through workflow of an event that has multiple states (Press, Hover etc).\r\n\r\nTo enable this, EventComponent fibers now have commit phase logic that triggers these from the DOM renderer. I also added TODOs with follow up logic to be added next week along with a test to confirm this behaviour works. \r\n\r\nRef #15257",
    "clean_message": "This PR adds support for the  method on event responders. This is essential for handling cases where an event component unmounts part way through workflow of an event that has multiple states (Press, Hover etc). To enable this, EventComponent fibers now have commit phase logic that triggers these from the DOM renderer. I also added TODOs with follow up logic to be added next week along with a test to confirm this behaviour works.  Ref #15257",
    "message_url": "https://github.com/facebook/react/pull/15335",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `main` branch for v2.x (or to a previous version branch)\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n",
    "clean_message": "<!-- Please make sure to read the Pull Request Guidelines: -- <!-- PULL REQUEST TEMPLATE --<!-- (Update \"[ ]\" to \"[x]\" to check a box) -- What kind of change does this PR introduce? (check at least one)  [ ] Bugfix [ ] Feature [ ] Code style update [ ] Refactor [ ] Build-related changes [x] Other, please describe:  Does this PR introduce a breaking change? (check one)  [ ] Yes [x] No  If yes, please describe the impact and migration path for existing applications: The PR fulfills these requirements:  [ ] It's submitted to the  branch for v2.x (or to a previous version branch) [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. , where \"xxx\" is the issue number) [x] All tests are passing:  [ ] New/updated tests are included  If adding a new feature, the PR's description includes: - [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it) Other information:",
    "message_url": "https://github.com/vuejs/vue/pull/12855",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "My mistake; I mistakenly introduced master. I will reopen another PR.",
    "clean_message": "My mistake; I mistakenly introduced master. I will reopen another PR.",
    "message_url": "https://github.com/ant-design/ant-design/pull/10467#issuecomment-388247380",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Hi! We appreciate the time you took to make the pull request, unfortunately this is not a change we desire to accept. Turning off the header provides zero security benefit and removes our advertisement from free software (similar to how your free WordPress site would declare it is WordPress at the bottom of the page, one could say).\n\nPlease feel free to read previous discussions on this in https://github.com/strongloop/express/issues/2821 and https://github.com/strongloop/express/pull/2813\n",
    "clean_message": "Hi! We appreciate the time you took to make the pull request, unfortunately this is not a change we desire to accept. Turning off the header provides zero security benefit and removes our advertisement from free software (similar to how your free WordPress site would declare it is WordPress at the bottom of the page, one could say). Please feel free to read previous discussions on this in  and ",
    "message_url": "https://github.com/expressjs/express/pull/2825#issuecomment-163598098",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "IMHO blindly halving the specified timeout is not a good strategy, specially if the underlying issue is still unknown.\r\n\r\nBesides, there are a few issues with that implementation, from not handling a `None` value to shadowing the imported name",
    "clean_message": "IMHO blindly halving the specified timeout is not a good strategy, specially if the underlying issue is still unknown. Besides, there are a few issues with that implementation, from not handling a  value to shadowing the imported name",
    "message_url": "https://github.com/psf/requests/pull/5774#issuecomment-799531164",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@TimvdLippe \r\n> [...] but the original solution was working out just fine thus far\r\n\r\nThats true for almost every refactoring on this planet ;-). \r\n\r\nExposing implementation details to other classes are a no go even if it looks handy. I've seen more than one product that became unmaintainable after the sum of all technical depts get out of control. Every tiny improvement is a good invest for a healty product.\r\n\r\n\r\n",
    "clean_message": "Thats true for almost every refactoring on this planet ;-).  Exposing implementation details to other classes are a no go even if it looks handy. I've seen more than one product that became unmaintainable after the sum of all technical depts get out of control. Every tiny improvement is a good invest for a healty product.",
    "message_url": "https://github.com/mockito/mockito/pull/965#issuecomment-287800560",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Closing it.",
    "clean_message": "Closing it.",
    "message_url": "https://github.com/sveltejs/svelte/pull/6824#issuecomment-1123904494",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Some of the contents of `common.glsl` are specific to the three.js built-in materials. The remainder are handy, but may not be needed by the user.",
    "clean_message": "Some of the contents of  are specific to the three.js built-in materials. The remainder are handy, but may not be needed by the user.",
    "message_url": "https://github.com/mrdoob/three.js/pull/11986#issuecomment-326828470",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Unlike what I said, travis-ci tells me the tests don't pass... i'll have a closer look.\n",
    "clean_message": "Unlike what I said, travis-ci tells me the tests don't pass... i'll have a closer look.",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/1568#issuecomment-11117057",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "WOW `Current coverage is 91.01%`\n",
    "clean_message": "WOW ",
    "message_url": "https://github.com/jestjs/jest/pull/1530#issuecomment-243852429",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "The argument name in the usage demonstration is wrong as per: https://github.com/plotly/plotly.py/blob/00c18fd0d09a21f7d0f54c383ff5258fe1ff7d28/packages/python/plotly/plotly/express/_chart_types.py#L39\r\n\r\n<!--\r\nPlease uncomment this block and take a look at this checklist if your PR is making substantial changes to **documentation**/impacts files in the `doc` directory. Check all that apply to your PR, and leave the rest unchecked to discuss with your reviewer! Not all boxes must be checked for every PR :)\r\n\r\nIf your PR modifies code of the `plotly` package, we have a different checklist\r\nbelow :-).\r\n\r\n### Documentation PR\r\n\r\n- [ ] I've [seen the `doc/README.md` file](https://github.com/plotly/plotly.py/blob/master/doc/README.md)\r\n- [ ] This change runs in the current version of Plotly on PyPI and targets the `doc-prod` branch OR it targets the `master` branch\r\n- [ ] If this PR modifies the first example in a page or adds a new one, it is a `px` example if at all possible\r\n- [ ] Every new/modified example has a descriptive title and motivating sentence or paragraph\r\n- [ ] Every new/modified example is independently runnable\r\n- [ ] Every new/modified example is optimized for short line count\tand focuses on the Plotly/visualization-related aspects of the example rather than the computation required to produce the data being visualized\r\n- [ ] Meaningful/relatable datasets are used for all new examples instead of randomly-generated data where possible\r\n- [ ] The random seed is set if using randomly-generated data in new/modified examples\r\n- [ ] New/modified remote datasets are loaded from https://plotly.github.io/datasets and added to https://github.com/plotly/datasets\r\n- [ ] Large computations are avoided in the new/modified examples in favour of loading remote datasets that represent the output of such computations\r\n- [ ] Imports are `plotly.graph_objects as go` / `plotly.express as px` / `plotly.io as pio`\r\n- [ ] Data frames are always called `df`\r\n- [ ] `fig = <something>` call is high up in each new/modified example (either `px.<something>` or `make_subplots` or `go.Figure`)\r\n- [ ] Liberal use is made of `fig.add_*` and `fig.update_*` rather than `go.Figure(data=..., layout=...)` in every new/modified example\r\n- [ ] Specific adders and updaters like `fig.add_shape` and `fig.update_xaxes` are used instead of big `fig.update_layout` calls in every new/modified example\r\n- [ ] `fig.show()` is at the end of each new/modified example\r\n- [ ] `plotly.plot()` and `plotly.iplot()` are not used in any new/modified example\r\n- [ ] Hex codes for colors are not used in any new/modified example in favour of [these nice ones](https://github.com/plotly/plotly.py/issues/2192)\r\n\r\n## Code PR\r\n\r\n- [ ] I have read through the [contributing notes](https://github.com/plotly/plotly.py/blob/master/contributing.md) and understand the structure of the package. In particular, if my PR modifies code of `plotly.graph_objects`, my modifications concern the `codegen` files and not generated files.\r\n- [ ] I have added tests (if submitting a new feature or correcting a bug) or\r\n  modified existing tests.\r\n- [ ] For a new feature, I have added documentation examples in an existing or\r\n  new tutorial notebook (please see the doc checklist as well).\r\n- [ ] I have added a CHANGELOG entry if fixing/changing/adding anything substantial.\r\n- [ ] For a new feature or a change in behaviour, I have updated the relevant docstrings in the code to describe the feature or behaviour (please see the doc checklist as well).\r\n\r\n-->\r\n",
    "clean_message": "The argument name in the usage demonstration is wrong as per:  <!-- Please uncomment this block and take a look at this checklist if your PR is making substantial changes to documentation/impacts files in the  directory. Check all that apply to your PR, and leave the rest unchecked to discuss with your reviewer! Not all boxes must be checked for every PR :) If your PR modifies code of the  package, we have a different checklist below :-). Documentation PR  [ ] I've seen the  file [ ] This change runs in the current version of Plotly on PyPI and targets the  branch OR it targets the  branch [ ] If this PR modifies the first example in a page or adds a new one, it is a  example if at all possible [ ] Every new/modified example has a descriptive title and motivating sentence or paragraph [ ] Every new/modified example is independently runnable [ ] Every new/modified example is optimized for short line count  and focuses on the Plotly/visualization-related aspects of the example rather than the computation required to produce the data being visualized [ ] Meaningful/relatable datasets are used for all new examples instead of randomly-generated data where possible [ ] The random seed is set if using randomly-generated data in new/modified examples [ ] New/modified remote datasets are loaded from  and added to  [ ] Large computations are avoided in the new/modified examples in favour of loading remote datasets that represent the output of such computations [ ] Imports are  /  /  [ ] Data frames are always called  [ ] fig.add_fig.update_go.Figure(data=..., layout=...)fig.add_shapefig.update_xaxesfig.update_layoutfig.show()plotly.plot()plotly.iplot()plotly.graph_objectscodegen` files and not generated files. [ ] I have added tests (if submitting a new feature or correcting a bug) or   modified existing tests. [ ] For a new feature, I have added documentation examples in an existing or   new tutorial notebook (please see the doc checklist as well). [ ] I have added a CHANGELOG entry if fixing/changing/adding anything substantial. [ ] For a new feature or a change in behaviour, I have updated the relevant docstrings in the code to describe the feature or behaviour (please see the doc checklist as well).  --",
    "message_url": "https://github.com/plotly/plotly.py/pull/3921",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "+1 It will be very helpful to fix this. For instance, I'm trying to use fastapi with Mongodb, and I'am having trouble with the Decimal128 type for pymongo.bson which is not  natively supported by pydantic, so I would need to provide a custom serialization. The problem seems to be with collection types like sets, lists, etc.  @tiangolo ",
    "clean_message": "+1 It will be very helpful to fix this. For instance, I'm trying to use fastapi with Mongodb, and I'am having trouble with the Decimal128 type for pymongo.bson which is not  natively supported by pydantic, so I would need to provide a custom serialization. The problem seems to be with collection types like sets, lists, etc.   ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/2061#issuecomment-934549607",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "_This affects the time spent in d3.interpolateString while building the interpolator, not time spent on interpolator execution._\n\nFixes  #1826 and #1827.\n\nTwo major changes here:\n 1) Use algorithm with compexity O(n) instead of O(n^2).\n 2) Replace calls to `splice()` with constructing a new array. `splice()` is not guaranteed to be fast and it's compexity could vary between implementations, `push()` is always fast.\n\n**First change** makes the algorithm a lot faster, it was incredibly slow when some of the corresponding numbers in a and b were equal.\n\nThe new algorithm:\n1. Linear pass, using `b`: fill `s` and `q`, no significant changes.\n2. Linear pass, using `a`:\n   - fill `o.x` with interpolators for not matching values\n   - replace `s[o.i]` with strings `o.x` for matching values, removing elements only from `q`.\n3. Linear pass, using the remaning of `q`:\n   - replace `s[o.i]` with strings `o.x` and pop data from `q`.\n4. Linear pass on `s`, coalescing non-null values while accumulating the number of elements removed till the current moment in a counter, for example `rc`. Null values correspond to elements from `q`, for each null value perform a single `q[j++].i -= rc`. This efficiently fixes all references to elements from `s`.\n\n**The second change** makes the algorithm much faster for cases when many small intervals have to be removed or coalesced, but makes the algorithm about 10% slower for the case when no elements have to be removed (keeping the whole array).\n\nThe interpolator complexity and execution time have not increased.\n\n**The test results** are not too precise, I ran each one only a few times.\n\nWorst-case for the old algorithm (0% different numbers between a and b):\n  12000 numbers:  20 ms instead of 300 ms.\n  60000 numbers:  90 ms instead of 13 seconds.\n 300000 numbers: 300 ms instead of 9 minutes.\n1500000 numbers: 1.6 seconds.\n\nAverage-case for the old algorithm (93% different numbers between a and b):\n  12000 numbers:  50 ms instead of   60 ms.\n  60000 numbers: 130 ms instead of 1250 ms.\n 300000 numbers: 520 ms instead of 41 seconds.\n1500000 numbers: 2.8 seconds.\n\nBest-case for the old algorithm (100% different numbers between a and b):\n  12000 numbers:  25 ms instead of 20 ms.\n  60000 numbers: 100 ms instead of 90 ms.\n 300000 numbers: 550 ms instead of 510 ms.\n1500000 numbers: 4.4 s. instead of 4.4 s.\n\n1500000 numbers is a string with 2.1e7 chars, that's 20 MiB in one-byte encoding.\n\n_Chromium 33, x86_64 GNU/Linux, i5-3317U. The results in Firefox are similar._\n",
    "clean_message": "This affects the time spent in d3.interpolateString while building the interpolator, not time spent on interpolator execution. Fixes  #1826 and #1827. Two major changes here:  1) Use algorithm with compexity O(n) instead of O(n^2).  2) Replace calls to  with constructing a new array.  is not guaranteed to be fast and it's compexity could vary between implementations,  is always fast. First change makes the algorithm a lot faster, it was incredibly slow when some of the corresponding numbers in a and b were equal. The new algorithm: 1. Linear pass, using : fill  and , no significant changes. 2. Linear pass, using :    - fill  with interpolators for not matching values    - replace  with strings  for matching values, removing elements only from . 3. Linear pass, using the remaning of :    - replace  with strings  and pop data from . 4. Linear pass on , coalescing non-null values while accumulating the number of elements removed till the current moment in a counter, for example . Null values correspond to elements from , for each null value perform a single . This efficiently fixes all references to elements from . The second change makes the algorithm much faster for cases when many small intervals have to be removed or coalesced, but makes the algorithm about 10% slower for the case when no elements have to be removed (keeping the whole array). The interpolator complexity and execution time have not increased. The test results are not too precise, I ran each one only a few times. Worst-case for the old algorithm (0% different numbers between a and b):   12000 numbers:  20 ms instead of 300 ms.   60000 numbers:  90 ms instead of 13 seconds.  300000 numbers: 300 ms instead of 9 minutes. 1500000 numbers: 1.6 seconds. Average-case for the old algorithm (93% different numbers between a and b):   12000 numbers:  50 ms instead of   60 ms.   60000 numbers: 130 ms instead of 1250 ms.  300000 numbers: 520 ms instead of 41 seconds. 1500000 numbers: 2.8 seconds. Best-case for the old algorithm (100% different numbers between a and b):   12000 numbers:  25 ms instead of 20 ms.   60000 numbers: 100 ms instead of 90 ms.  300000 numbers: 550 ms instead of 510 ms. 1500000 numbers: 4.4 s. instead of 4.4 s. 1500000 numbers is a string with 2.1e7 chars, that's 20 MiB in one-byte encoding. Chromium 33, x86_64 GNU/Linux, i5-3317U. The results in Firefox are similar.",
    "message_url": "https://github.com/d3/d3/pull/1829",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This PR aims to resolve #3602 by replacing all pandas' `df.append()` calls by `pd.concat()` calls in alignment with [the corresponding 1.4.0 Release Notes](https://pandas.pydata.org/docs/whatsnew/v1.4.0.html#deprecated-dataframe-append-and-series-append). Since there should be no functionality affected, no bug fixed, no interface changed or similar whatsoever, we only changed the according calls in `plotly.express` and `plotly.figure_factory`. To make sure we did in fact not change the intermediate results of these calls, we temporarily kept the old calls in, and asserted them equaling our new calls to `pd.concat()`. Locally all tests passed and after successful pipeline runs we removed these assertions and the old calls, to finally get rid of the `FutureWarning`s.\r\n\r\nThis is my first contribution to Plot.ly, so please let me know, if I can improve anything.\r\n\r\nAs of now the `build-doc` job keeps failing although I have the impression, that  this is unrelated to my changes. Please let me know, if I can do anything to fix this.\r\n \r\n## Code PR\r\n\r\n- [x] I have read through the [contributing notes](https://github.com/plotly/plotly.py/blob/master/contributing.md) and understand the structure of the package. In particular, if my PR modifies code of `plotly.graph_objects`, my modifications concern the `codegen` files and not generated files.\r\n- [ ] I have added tests (if submitting a new feature or correcting a bug) or\r\n  modified existing tests.\r\n- [ ] For a new feature, I have added documentation examples in an existing or\r\n  new tutorial notebook (please see the doc checklist as well).\r\n- [ ] I have added a CHANGELOG entry if fixing/changing/adding anything substantial.\r\n- [ ] For a new feature or a change in behaviour, I have updated the relevant docstrings in the code to describe the feature or behaviour (please see the doc checklist as well).\r\n",
    "clean_message": "This PR aims to resolve #3602 by replacing all pandas'  calls by  calls in alignment with the corresponding 1.4.0 Release Notes. Since there should be no functionality affected, no bug fixed, no interface changed or similar whatsoever, we only changed the according calls in  and . To make sure we did in fact not change the intermediate results of these calls, we temporarily kept the old calls in, and asserted them equaling our new calls to . Locally all tests passed and after successful pipeline runs we removed these assertions and the old calls, to finally get rid of the s. This is my first contribution to Plot.ly, so please let me know, if I can improve anything. As of now the  job keeps failing although I have the impression, that  this is unrelated to my changes. Please let me know, if I can do anything to fix this. Code PR  [x] I have read through the contributing notes and understand the structure of the package. In particular, if my PR modifies code of , my modifications concern the  files and not generated files. [ ] I have added tests (if submitting a new feature or correcting a bug) or   modified existing tests. [ ] For a new feature, I have added documentation examples in an existing or   new tutorial notebook (please see the doc checklist as well). [ ] I have added a CHANGELOG entry if fixing/changing/adding anything substantial. [ ] For a new feature or a change in behaviour, I have updated the relevant docstrings in the code to describe the feature or behaviour (please see the doc checklist as well). ",
    "message_url": "https://github.com/plotly/plotly.py/pull/3690",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Huh... The error I thought I would get didn't happen. I guess I'll fix the test failures and see what happens next.",
    "clean_message": "Huh... The error I thought I would get didn't happen. I guess I'll fix the test failures and see what happens next.",
    "message_url": "https://github.com/astropy/astropy/pull/10311#issuecomment-639055263",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Sorry it if it seemed hostile, it wasn't meant as such. Just that I'm dyslexic and long responses take me a long time to parse, as you can see from the volume of issues on pydantic, avoiding such time sinks is helpful.\r\n\r\nI actually skim-read your message above, but missed the part about duplication. That's my fault, but also kind of an example of what I was saying.\r\n\r\nI'll look into this more soon and let you know what I think.",
    "clean_message": "Sorry it if it seemed hostile, it wasn't meant as such. Just that I'm dyslexic and long responses take me a long time to parse, as you can see from the volume of issues on pydantic, avoiding such time sinks is helpful. I actually skim-read your message above, but missed the part about duplication. That's my fault, but also kind of an example of what I was saying. I'll look into this more soon and let you know what I think.",
    "message_url": "https://github.com/pydantic/pydantic/pull/1586#issuecomment-639143940",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "##### SUMMARY\r\n<!--- Describe the change below, including rationale and design decisions -->\r\nFix copy-paste typo which breaks cluster argument of vmware_content_deploy_template\r\n\r\n<!--- HINT: Include \"Fixes #nnn\" if you are fixing an existing issue -->\r\n\r\n##### ISSUE TYPE\r\n<!--- Pick one below and delete the rest -->\r\n- Bugfix Pull Request\r\n\r\n##### COMPONENT NAME\r\n<!--- Write the short name of the module, plugin, task or feature below -->\r\nvmware_content_deploy_template\r\n\r\n##### ADDITIONAL INFORMATION\r\n<!--- Include additional information to help people understand the change here -->\r\n<!--- A step-by-step reproduction of the problem is helpful if there is no related issue -->\r\nIf you try using the cluster argument of vmware_content_deploy_template you will get an error about how it cannot be found because it's looking for a resource pool with that name instead of a cluster.\r\n\r\nThis fixes that problem.",
    "clean_message": "SUMMARY <!--- Describe the change below, including rationale and design decisions --Fix copy-paste typo which breaks cluster argument of vmware_content_deploy_template <!--- HINT: Include \"Fixes #nnn\" if you are fixing an existing issue -- ISSUE TYPE <!--- Pick one below and delete the rest --- Bugfix Pull Request COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --vmware_content_deploy_template ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --<!--- A step-by-step reproduction of the problem is helpful if there is no related issue --If you try using the cluster argument of vmware_content_deploy_template you will get an error about how it cannot be found because it's looking for a resource pool with that name instead of a cluster. This fixes that problem.",
    "message_url": "https://github.com/ansible/ansible/pull/65715",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I can add rest of them as well, #861.",
    "clean_message": "I can add rest of them as well, #861.",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/869#issuecomment-1569054499",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I just was worry that we're opening a whole new can of worms while we're closing one \ud83d\ude05",
    "clean_message": "I just was worry that we're opening a whole new can of worms while we're closing one \ud83d\ude05",
    "message_url": "https://github.com/mrdoob/three.js/pull/16075#issuecomment-477224670",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "These changes look good to me.",
    "clean_message": "These changes look good to me.",
    "message_url": "https://github.com/d3/d3/pull/3114#issuecomment-333476284",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I was able to drop a field (subject = true | false), which helped a bit.  The switch to a constructor doesn\u2019t seem to speed it up (even when allocating next/prev) but the code feels clearer.\n",
    "clean_message": "I was able to drop a field (subject = true | false), which helped a bit.  The switch to a constructor doesn\u2019t seem to speed it up (even when allocating next/prev) but the code feels clearer.",
    "message_url": "https://github.com/d3/d3/pull/1559#issuecomment-25646370",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "> Yes, given that the entire point of type checking is to describe the correct types and catch things before runtime. If they're not able to do that, that's a design issue that needs to be fixed with typing or type checkers.\r\n\r\nIn that case, I would suggest to revert #4579.\r\n\r\n> But with Mapping, it would accept invalid uses, so that doesn't seem \"strictly better\" just \"different for that specific use case\".\r\n\r\nBut in 2.1.2, literally every invalid type was accepted. Yes, being able to reject all invalid types before runtime is ideal, but not at the cost of also rejecting valid types.\r\n\r\nWith `Mapping`, all invalid non-Mapping types are still rejected, and non-dict Mapping types cause a very clearly written runtime error: `The view function did not return a valid response. The return type must be a string, dict, list, tuple with headers or status, Response instance, or WSGI callable, but it was a object.` which cannot be misconstrued.\r\n\r\nSurely that is still a significant improvement over 2.1.2.\r\n\r\nIn 2.1.3, where TypedDicts are not accepted, we would lose the ability to strongly type check our JSON-based API endpoints.",
    "clean_message": "In that case, I would suggest to revert #4579. But in 2.1.2, literally every invalid type was accepted. Yes, being able to reject all invalid types before runtime is ideal, but not at the cost of also rejecting valid types. With , all invalid non-Mapping types are still rejected, and non-dict Mapping types cause a very clearly written runtime error:  which cannot be misconstrued. Surely that is still a significant improvement over 2.1.2. In 2.1.3, where TypedDicts are not accepted, we would lose the ability to strongly type check our JSON-based API endpoints.",
    "message_url": "https://github.com/pallets/flask/pull/4695#issuecomment-1184658464",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@jackfranklin it looks like the tests fail? Did I do something wrong here?",
    "clean_message": "it looks like the tests fail? Did I do something wrong here?",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/6062#issuecomment-647327831",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Apologies on the late reply, it is easy to lose github comments in the stream.\n\nYou would set \"aliases\" in the argument_spec as many modules do, and then the \"if\" statement when it detected those values would set to the others or otherwise key off the possible values.\n\nExample:\n\nhttps://github.com/ansible/ansible/blob/devel/library/packaging/apt#L363\n",
    "clean_message": "Apologies on the late reply, it is easy to lose github comments in the stream. You would set \"aliases\" in the argument_spec as many modules do, and then the \"if\" statement when it detected those values would set to the others or otherwise key off the possible values. Example:",
    "message_url": "https://github.com/ansible/ansible/pull/5982#issuecomment-37761297",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Unfortunately HTTPS cannot be activated on Github when there's a CNAME\n",
    "clean_message": "Unfortunately HTTPS cannot be activated on Github when there's a CNAME",
    "message_url": "https://github.com/mockito/mockito/pull/602#issuecomment-243726680",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Addressed your comments @jreback. I can make another issue between docstring templating between `Timestamp` and `NaT` as many methods share the same docstring (not just `tz_localize`) ",
    "clean_message": "Addressed your comments . I can make another issue between docstring templating between  and  as many methods share the same docstring (not just ) ",
    "message_url": "https://github.com/pandas-dev/pandas/pull/23406#issuecomment-434945248",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I think the error code constants make the code much more readable and show intent more clearly. Especially because new people are reading through the docs I think it's important to make constants the default. Also I'm not sure but I think in the docs the usage of constants and ints is rather inconsistent.",
    "clean_message": "I think the error code constants make the code much more readable and show intent more clearly. Especially because new people are reading through the docs I think it's important to make constants the default. Also I'm not sure but I think in the docs the usage of constants and ints is rather inconsistent.",
    "message_url": "https://github.com/tiangolo/fastapi/pull/5044#issuecomment-1167156288",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This moves us off of typescript@next to the slightly more stable release candidate version.",
    "clean_message": "This moves us off of typescript@next to the slightly more stable release candidate version.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/1078",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "late comment re new-style class, please make a new PR to make that change.  I suspect it uses the old-style classes because it was written before new-style classes existed and never got updated.\n",
    "clean_message": "late comment re new-style class, please make a new PR to make that change.  I suspect it uses the old-style classes because it was written before new-style classes existed and never got updated.",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/3628#issuecomment-59205196",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hmm, nevermind, weird, your change is already up-to-date. Let's try this again:\n\nJenkins, test this please\n",
    "clean_message": "Hmm, nevermind, weird, your change is already up-to-date. Let's try this again: Jenkins, test this please",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/4460#issuecomment-249989443",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks indeed!",
    "clean_message": "Thanks indeed!",
    "message_url": "https://github.com/jestjs/jest/pull/9796#issuecomment-612603571",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "See the also the discussion on the issue: https://github.com/pandas-dev/pandas/issues/27860. Someone will need to understand why the docstring validation sees iteritems and items differently",
    "clean_message": "See the also the discussion on the issue: . Someone will need to understand why the docstring validation sees iteritems and items differently",
    "message_url": "https://github.com/pandas-dev/pandas/pull/27876#issuecomment-520733286",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "thanks",
    "clean_message": "thanks",
    "message_url": "https://github.com/vuejs/vue/pull/7098#issuecomment-346926094",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "You can preview 36dd6bb at https://pr23545-36dd6bb.ngbuilds.io/.",
    "clean_message": "You can preview 36dd6bb at .",
    "message_url": "https://github.com/angular/angular/pull/23545#issuecomment-387232281",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Why is this PR not yet approved?!\r\nAre you owners just stalling or wth?!",
    "clean_message": "Why is this PR not yet approved?! Are you owners just stalling or wth?!",
    "message_url": "https://github.com/angular/angular/pull/25751#issuecomment-662938089",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@benallfree thank you, that's made it super clear and I think I understand the problem now.\r\n\r\nI like the fact we could land such a change without needing to introduce breaking changes to the API. \r\n\r\n@mathiasbynens what do you think about this?",
    "clean_message": "thank you, that's made it super clear and I think I understand the problem now. I like the fact we could land such a change without needing to introduce breaking changes to the API.  what do you think about this?",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/6735#issuecomment-759336801",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This is just for the FB linting. (The directive is not respected by eslint \u2014 only by arc lint.)",
    "clean_message": "This is just for the FB linting. (The directive is not respected by eslint \u2014 only by arc lint.)",
    "message_url": "https://github.com/facebook/react/pull/18126#issuecomment-590920163",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hi @KevOrr \r\nI'm afraid no. But with https://github.com/samuelcolvin/pydantic/pull/2231 it should be easy to add the tag without adding it\r\n\r\n```py\r\nfrom typing import Annotated, Literal, Union\r\n\r\nfrom pydantic import BaseModel, Field, parse_obj_as\r\n\r\n\r\nclass Cat(BaseModel):\r\n    type: Literal['cat'] = Field('cat', exclude=True)\r\n    cat_name: str\r\n\r\n\r\nclass Dog(BaseModel):\r\n    type: Literal['dog'] = Field('dog', exclude=True)\r\n    dog_name: str\r\n\r\n\r\nAnimal = Annotated[Union[Cat, Dog], Field(discriminator='type')]\r\n\r\nassert Cat(cat_name='Titi').dict() == {'cat_name': 'Titi'}\r\nassert parse_obj_as(Animal, {'type': 'cat', 'cat_name': 'Titi'}).dict() == {'cat_name': 'Titi'}\r\n```",
    "clean_message": "Hi I'm afraid no. But with  it should be easy to add the tag without adding it",
    "message_url": "https://github.com/pydantic/pydantic/pull/2336#issuecomment-814797666",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "The prominent use of \"Symmetric logarithmic\" in the tutorial and the call for a \"symmetric\" norm in [#1806](/matplotlib/matplotlib/issues/1806) makes me think that `SymmetricalNorm` might be a more intuitive name than `CenteredNorm`. What do others think? I know we have a couple of votes already.\r\n\r\nOne of the most difficult issues with adding the new norm to the tutorial was where to place it. It seems more commonly applicable than `SymLogNorm` which is appearing very early on and makes the case for symmetrical data in its description. The `TwoSlopeNorm` appears quite late in the tutorial, so I have scrapped the use of `TwoSlopeNorm` from the example and placed it above `SymLogNorm` for now. I am happy to move it.\r\n",
    "clean_message": "The prominent use of \"Symmetric logarithmic\" in the tutorial and the call for a \"symmetric\" norm in #1806 makes me think that  might be a more intuitive name than . What do others think? I know we have a couple of votes already. One of the most difficult issues with adding the new norm to the tutorial was where to place it. It seems more commonly applicable than  which is appearing very early on and makes the case for symmetrical data in its description. The  appears quite late in the tutorial, so I have scrapped the use of  from the example and placed it above  for now. I am happy to move it.",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/17709#issuecomment-658828836",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Weird. It must be broken locale specifications in Mac OS X, then? The thing is, Mac OS X clearly understands the fr_FR locale correctly, because if you go to System Preferences > Languages & Text > Region, check Show all regions, and then select France > France (French) from the drop-down menu (phew!) it will display something sensible:\n\n<img src=\"https://s3.amazonaws.com/files.droplr.com/files_production/acc_69269/MjHJ?AWSAccessKeyId=AKIAJSVQN3Z4K7MT5U2A&Expires=1351645663&Signature=2xAE%2B42PvLf8xDHfPBlJqNrPufM%3D&response-content-disposition=inline%3B%20filename%2A%3DUTF-8%27%27Screen%2BShot%2B2012-10-30%2Bat%2B17.05.44.png\" width=\"245\" height=\"57\">\n",
    "clean_message": "Weird. It must be broken locale specifications in Mac OS X, then? The thing is, Mac OS X clearly understands the fr_FR locale correctly, because if you go to System Preferences  <img src=\"\" width=\"245\" height=\"57\"",
    "message_url": "https://github.com/d3/d3/pull/762#issuecomment-9927911",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I altered border radius mixin for my in house team. We do a lot of sass work and I wanted a single mixin to reference that would also reduce markup in v4-dev it only reduced the bootstrap.css codebase by 27 lines. My team uses it a lot in development so it the code reduction is greater.\n\nI thought I would hand it over to the repository to see if it had any merit.\n\nI removed the dist changes, and am resubmitting a new request... my apologies.\n",
    "clean_message": "I altered border radius mixin for my in house team. We do a lot of sass work and I wanted a single mixin to reference that would also reduce markup in v4-dev it only reduced the bootstrap.css codebase by 27 lines. My team uses it a lot in development so it the code reduction is greater. I thought I would hand it over to the repository to see if it had any merit. I removed the dist changes, and am resubmitting a new request... my apologies.",
    "message_url": "https://github.com/twbs/bootstrap/pull/18980",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@Lightning00Blade actually, I think I still got it wrong and the correct way is to define params via the command builder interface.",
    "clean_message": "actually, I think I still got it wrong and the correct way is to define params via the command builder interface.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/9733#issuecomment-1440110227",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Yes, I got the same relative results after compiling (and recompiling):\r\n```\r\n\u276f git checkout master && make clean build-cython benchmark-pydantic && git checkout use-class-attribute && make clean build-cython benchmark-pydantic\r\nmaster:                 pydantic best=75.329\u03bcs/iter avg=85.574\u03bcs/iter stdev=11.919\u03bcs/iter version=1.4a1\r\nuse-class-attribute:    pydantic best=74.781\u03bcs/iter avg=81.755\u03bcs/iter stdev=8.646\u03bcs/iter version=1.4a1\r\n```",
    "clean_message": "Yes, I got the same relative results after compiling (and recompiling):",
    "message_url": "https://github.com/pydantic/pydantic/pull/1294#issuecomment-595385764",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "OK. Thank you so much.",
    "clean_message": "OK. Thank you so much.",
    "message_url": "https://github.com/vuejs/vue/pull/10245#issuecomment-513752875",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I'm with you on being very cautious about introducing features without user feedback or request. I think that this exactly the approach the core team should have to build a great library.\r\n\r\nThing is that in this situation there are users needing it. For example, I'm frustrated that myself and other engineers at LinkedIn cannot use strict stubbing (most of the tests use TestNG, there are also usages of custom runners).\r\n\r\nAnother use case are existing integrations like [Jukito](https://github.com/ArcBees/Jukito), [Springockito](http://www.springockito.org), etc. Users of those frameworks won't be able to take advantage of strict stubbing.\r\n\r\nIn general, if the team chooses to implement a feature such us strict stubbing, then we should make the usage of the feature easy and flexible. We should not lock in users with JUnit. For example, Mockito has \"@Mock\" annotation and offers flexible way of using that annotation: with JUnit Rule, Runner and without them (initMocks() method).\r\n\r\nAlso keep in mind that the new API is \"@Incubating\" so we could potentially take it away if we don't find it valuable.\r\n\r\nThoughts?",
    "clean_message": "I'm with you on being very cautious about introducing features without user feedback or request. I think that this exactly the approach the core team should have to build a great library. Thing is that in this situation there are users needing it. For example, I'm frustrated that myself and other engineers at LinkedIn cannot use strict stubbing (most of the tests use TestNG, there are also usages of custom runners). Another use case are existing integrations like Jukito, Springockito, etc. Users of those frameworks won't be able to take advantage of strict stubbing. In general, if the team chooses to implement a feature such us strict stubbing, then we should make the usage of the feature easy and flexible. We should not lock in users with JUnit. For example, Mockito has \"\" annotation and offers flexible way of using that annotation: with JUnit Rule, Runner and without them (initMocks() method). Also keep in mind that the new API is \"\" so we could potentially take it away if we don't find it valuable. Thoughts?",
    "message_url": "https://github.com/mockito/mockito/pull/865#issuecomment-271156116",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@G-Rath  hi, Sorry the delay. \r\n\r\nI'm a triager and I've added a question on the pull request which contains instructions for triaging, https://github.com/expressjs/express/pull/4055#issuecomment-582517758. \r\n\r\nI'm not sure yet if I have to do pull requests reviews. \r\nIf yes, then maybe the document can be updated with that information about PR reviews. \r\nIf not, then is good to know right ? :+1: ",
    "clean_message": "-Rath  hi, Sorry the delay.  I'm a triager and I've added a question on the pull request which contains instructions for triaging, .  I'm not sure yet if I have to do pull requests reviews.  If yes, then maybe the document can be updated with that information about PR reviews.  If not, then is good to know right ? :+1: ",
    "message_url": "https://github.com/expressjs/express/pull/4156#issuecomment-582527702",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@sandersn I also just yesterday reviewed [a PR to `styled-components`](https://github.com/styled-components/styled-components/pull/521#discussion_r102071835) where I pointed to this very awaited feature.\r\n\r\nPlease also note from the examples provided by @mkusher and @raveclassic, that people are expecting to use it with generics on a right-hand side. You were against it, weren't you?\r\n",
    "clean_message": "I also just yesterday reviewed a PR to  where I pointed to this very awaited feature. Please also note from the examples provided by  and , that people are expecting to use it with generics on a right-hand side. You were against it, weren't you?",
    "message_url": "https://github.com/microsoft/TypeScript/pull/13470#issuecomment-281385260",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thank you very much for this pull request, but changes to the router need to be made against the https://www.npmjs.com/package/router package.\r\n\r\nOn that note, the changes you are proposing are already part of `router@2.0.0-alpha.1` release, which you can try out with that release of the package mounted in your express instance https://github.com/pillarjs/router/tree/v2.0.0-alpha.1",
    "clean_message": "Thank you very much for this pull request, but changes to the router need to be made against the  package. On that note, the changes you are proposing are already part of  release, which you can try out with that release of the package mounted in your express instance ",
    "message_url": "https://github.com/expressjs/express/pull/4196#issuecomment-590161290",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "## PR Summary\r\nThis PR adds gridlines to the last plot in the stylesheets example and adds an annotation `ax.grid(True)` as well as a divider to clearly distinguish between subplots. This addresses https://github.com/matplotlib/matplotlib/issues/23601\r\n## PR Checklist\r\n\r\n<!-- Please mark any checkboxes that do not apply to this PR as [N/A]. -->\r\n**Tests and Styling**\r\n- [x] Is [Flake 8](https://flake8.pycqa.org/en/latest/) compliant (install `flake8-docstrings` and run `flake8 --docstring-convention=all`).\r\n\r\n<!--\r\nThank you so much for your PR!  To help us review your contribution, please\r\nconsider the following points:\r\n\r\n- A development guide is available at https://matplotlib.org/devdocs/devel/index.html.\r\n\r\n- Help with git and github is available at\r\n  https://matplotlib.org/devel/gitwash/development_workflow.html.\r\n\r\n- Do not create the PR out of main, but out of a separate branch.\r\n\r\n- The PR title should summarize the changes, for example \"Raise ValueError on\r\n  non-numeric input to set_xlim\".  Avoid non-descriptive titles such as\r\n  \"Addresses issue #8576\".\r\n\r\n- The summary should provide at least 1-2 sentences describing the pull request\r\n  in detail (Why is this change required?  What problem does it solve?) and\r\n  link to any relevant issues.\r\n\r\n- If you are contributing fixes to docstrings, please pay attention to\r\n  http://matplotlib.org/devel/documenting_mpl.html#formatting.  In particular,\r\n  note the difference between using single backquotes, double backquotes, and\r\n  asterisks in the markup.\r\n\r\nWe understand that PRs can sometimes be overwhelming, especially as the\r\nreviews start coming in.  Please let us know if the reviews are unclear or\r\nthe recommended next step seems overly demanding, if you would like help in\r\naddressing a reviewer's comments, or if you have been waiting too long to hear\r\nback on your PR.\r\n-->\r\n",
    "clean_message": "PR Summary This PR adds gridlines to the last plot in the stylesheets example and adds an annotation  as well as a divider to clearly distinguish between subplots. This addresses  PR Checklist <!-- Please mark any checkboxes that do not apply to this PR as [N/A]. --Tests and Styling - [x] Is Flake 8 compliant (install  and run ). <!-- Thank you so much for your PR!  To help us review your contribution, please consider the following points:   A development guide is available at .   Help with git and github is available at   .   Do not create the PR out of main, but out of a separate branch.   The PR title should summarize the changes, for example \"Raise ValueError on   non-numeric input to set_xlim\".  Avoid non-descriptive titles such as   \"Addresses issue #8576\".   The summary should provide at least 1-2 sentences describing the pull request   in detail (Why is this change required?  What problem does it solve?) and   link to any relevant issues.   If you are contributing fixes to docstrings, please pay attention to   .  In particular,   note the difference between using single backquotes, double backquotes, and   asterisks in the markup.   We understand that PRs can sometimes be overwhelming, especially as the reviews start coming in.  Please let us know if the reviews are unclear or the recommended next step seems overly demanding, if you would like help in addressing a reviewer's comments, or if you have been waiting too long to hear back on your PR. --",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/24020",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hello @mrgnr \r\n\r\nSorry i can't merge",
    "clean_message": "Hello   Sorry i can't merge",
    "message_url": "https://github.com/ansible/ansible/pull/22792#issuecomment-302345763",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "OK\n",
    "clean_message": "OK",
    "message_url": "https://github.com/mockito/mockito/pull/621#issuecomment-244390923",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "The CL rewrite install.ts to use the @puppeteer/browsers package. It should keep all existing functionality and have no observable changes.",
    "clean_message": "The CL rewrite install.ts to use the /browsers package. It should keep all existing functionality and have no observable changes.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/9898",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "thank you!",
    "clean_message": "thank you!",
    "message_url": "https://github.com/sveltejs/svelte/pull/2860#issuecomment-495992579",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "But this introduces the DoS attack vector the qs is trying to prevebt by having that limit in the first place.",
    "clean_message": "But this introduces the DoS attack vector the qs is trying to prevebt by having that limit in the first place.",
    "message_url": "https://github.com/expressjs/express/pull/3475#issuecomment-342853129",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I did a bit more testing. I don't seem to be able to poke a hole in this: results are exactly the same with or without these settings.",
    "clean_message": "I did a bit more testing. I don't seem to be able to poke a hole in this: results are exactly the same with or without these settings.",
    "message_url": "https://github.com/pydantic/pydantic/pull/5206#issuecomment-1472983772",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "It's poor style - it's not clear for newbies what the \"$\" stands for.\n",
    "clean_message": "It's poor style - it's not clear for newbies what the \"$\" stands for.",
    "message_url": "https://github.com/psf/requests/pull/1994#issuecomment-39640297",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "When building `tflite` with makefile using this command, \r\n```\r\nmake -f tensorflow/contrib/lite/tools/make/Makefile\r\n```\r\nwe observed this error for determining host architecture\r\n```\r\n/bin/sh: 1: [[: not found\r\n```",
    "clean_message": "When building  with makefile using this command,  we observed this error for determining host architecture",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/23335",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I get no error message related to signing from either the dmg or pkg.\r\n\r\nA minor \"nitpick\" is that the pkg displays a warning for it not being notarized (\"... can't be opened because Apple cannot check it for malicious software.\")",
    "clean_message": "I get no error message related to signing from either the dmg or pkg. A minor \"nitpick\" is that the pkg displays a warning for it not being notarized (\"... can't be opened because Apple cannot check it for malicious software.\")",
    "message_url": "https://github.com/JabRef/jabref/pull/6748#issuecomment-671989269",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@jonmmease  it'd be awesome if it's possible to have the best of both worlds :-).\r\n\r\n@nicolaskruchten I tried with conda envs and specific versions of Python, and this branch: py3.6, tab completion works well with `go. TAB`, but with py3.8, it does not work. Is it a linux thing then? To be continued...",
    "clean_message": "it'd be awesome if it's possible to have the best of both worlds :-). I tried with conda envs and specific versions of Python, and this branch: py3.6, tab completion works well with , but with py3.8, it does not work. Is it a linux thing then? To be continued...",
    "message_url": "https://github.com/plotly/plotly.py/pull/2368#issuecomment-614298731",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "<!--\r\nFirst of all, thank you for your contribution! \ud83d\ude04\r\nFor requesting to pull a new feature or bugfix, please send it from a feature/bugfix branch based on the `master` branch.\r\nBefore submitting your pull request, please make sure the checklist below is confirmed.\r\nYour pull requests will be merged after one of the collaborators approve.\r\nThank you!\r\n-->\r\n\r\n[[\u4e2d\u6587\u7248\u6a21\u677f / Chinese template](https://github.com/ant-design/ant-design/blob/master/.github/PULL_REQUEST_TEMPLATE/pr_cn.md?plain=1)]\r\n\r\n### \ud83e\udd14 This is a ...\r\n\r\n- [ ] New feature\r\n- [ ] Bug fix\r\n- [ ] Site / documentation update\r\n- [ ] Demo update\r\n- [x] Component style update\r\n- [ ] TypeScript definition update\r\n- [ ] Bundle size optimization\r\n- [ ] Performance optimization\r\n- [ ] Enhancement feature\r\n- [ ] Internationalization\r\n- [ ] Refactoring\r\n- [ ] Code style optimization\r\n- [ ] Test Case\r\n- [ ] Branch merge\r\n- [ ] Workflow\r\n- [ ] Other (about what?)\r\n\r\n### \ud83d\udd17 Related issue link\r\nfix: [spin\u7684icon\u4f1a\u6bd4\u89c6\u89c9\u4e0a\u7684\u9ad8\u5ea6\u591a6px #42150](https://github.com/ant-design/ant-design/issues/42150#issue-1696969950)\r\n\r\n<!--\r\n1. Put the related issue or discussion links here.\r\n2. close #xxxx or fix #xxxx for instance.\r\n-->\r\n\r\n### \ud83d\udca1 Background and solution\r\n\r\n<!--\r\n1. Describe the problem and the scenario.\r\n2. GIF or snapshot should be provided if includes UI/interactive modification.\r\n3. How to fix the problem, and list the final API implementation and usage sample if that is a new feature.\r\n-->\r\n\r\n### \ud83d\udcdd Changelog\r\n\r\n<!--\r\nDescribe changes from the user side, and list all potential break changes or other risks.\r\n--->\r\n\r\n| Language   | Changelog |\r\n| ---------- | --------- |\r\n| \ud83c\uddfa\ud83c\uddf8 English | fix(style): keep Spin's container height the same as the son element |\r\n| \ud83c\udde8\ud83c\uddf3 Chinese | fix(style): \u4fdd\u6301spin\u5bb9\u5668\u4e0e\u5b50\u5143\u7d20icon\u9ad8\u5ea6\u4e00\u81f4 |\r\n\r\n### \u2611\ufe0f Self-Check before Merge\r\n\r\n\u26a0\ufe0f Please check all items below before requesting a reviewing. \u26a0\ufe0f\r\n\r\n- [x] Doc is updated/provided or not needed\r\n- [x] Demo is updated/provided or not needed\r\n- [x] TypeScript definition is updated/provided or not needed\r\n- [x] Changelog is provided or not needed\r\n\r\n---\r\n\r\n<!--\r\nBelow are template for copilot to generate CR message.\r\nPlease DO NOT modify it.\r\n-->\r\n\r\n### \ud83d\ude80 Summary\r\n\r\n<!--\ncopilot:summary\n-->\n### <samp>\ud83e\udd16 Generated by Copilot at 8c6518d</samp>\n\nImprove the appearance and layout of the `Spin` component by tweaking its style file.\r\n\r\n### \ud83d\udd0d Walkthrough\r\n\r\n<!--\ncopilot:walkthrough\n-->\n### <samp>\ud83e\udd16 Generated by Copilot at 8c6518d</samp>\n\n* Fix the vertical alignment of the spin component by setting the font size of the spin container to zero and restoring the font size of the spin text to the base font size ([link](https://github.com/ant-design/ant-design/pull/42163/files?diff=unified&w=0#diff-e4bc0f0054549f290ce98a8503101c4d5252df86798e4a38fe0e7ce6d98cf4f0R13), [link](https://github.com/ant-design/ant-design/pull/42163/files?diff=unified&w=0#diff-e4bc0f0054549f290ce98a8503101c4d5252df86798e4a38fe0e7ce6d98cf4f0R47)) in `components/spin/style/index.less`\r\n",
    "clean_message": "<!-- First of all, thank you for your contribution! \ud83d\ude04 For requesting to pull a new feature or bugfix, please send it from a feature/bugfix branch based on the  branch. Before submitting your pull request, please make sure the checklist below is confirmed. Your pull requests will be merged after one of the collaborators approve. Thank you! -- [\u4e2d\u6587\u7248\u6a21\u677f / Chinese template] \ud83e\udd14 This is a ...  [ ] New feature [ ] Bug fix [ ] Site / documentation update [ ] Demo update [x] Component style update [ ] TypeScript definition update [ ] Bundle size optimization [ ] Performance optimization [ ] Enhancement feature [ ] Internationalization [ ] Refactoring [ ] Code style optimization [ ] Test Case [ ] Branch merge [ ] Workflow [ ] Other (about what?)  \ud83d\udd17 Related issue link fix: spin\u7684icon\u4f1a\u6bd4\u89c6\u89c9\u4e0a\u7684\u9ad8\u5ea6\u591a6px #42150 <!-- 1. Put the related issue or discussion links here. 2. close #xxxx or fix #xxxx for instance. -- \ud83d\udca1 Background and solution <!-- 1. Describe the problem and the scenario. 2. GIF or snapshot should be provided if includes UI/interactive modification. 3. How to fix the problem, and list the final API implementation and usage sample if that is a new feature. -- \ud83d\udcdd Changelog <!-- Describe changes from the user side, and list all potential break changes or other risks.  | Language   | Changelog | | ---------- | --------- | | \ud83c\uddfa\ud83c\uddf8 English | fix(style): keep Spin's container height the same as the son element | | \ud83c\udde8\ud83c\uddf3 Chinese | fix(style): \u4fdd\u6301spin\u5bb9\u5668\u4e0e\u5b50\u5143\u7d20icon\u9ad8\u5ea6\u4e00\u81f4 | \u2611\ufe0f Self-Check before Merge \u26a0\ufe0f Please check all items below before requesting a reviewing. \u26a0\ufe0f  [x] Doc is updated/provided or not needed [x] Demo is updated/provided or not needed [x] TypeScript definition is updated/provided or not needed [x] Changelog is provided or not needed   <!-- Below are template for copilot to generate CR message. Please DO NOT modify it. -- \ud83d\ude80 Summary <!-- copilot:summary --### <samp Improve the appearance and layout of the  component by tweaking its style file. \ud83d\udd0d Walkthrough <!-- copilot:walkthrough --### <samp * Fix the vertical alignment of the spin component by setting the font size of the spin container to zero and restoring the font size of the spin text to the base font size (link, link) in ",
    "message_url": "https://github.com/ant-design/ant-design/pull/42163",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> I think that having all that in on run will make the code a little easier to read\r\n\r\n@kblok Nah, I like it more the way it is today \ud83e\udd37\u200d\u2642\ufe0f\r\n\r\n> and also little faster.\r\n\r\nIf it hurts your perf somewhere - I'm open to the change. But there should not be any observable perf gains from this change. ",
    "clean_message": "Nah, I like it more the way it is today \ud83e\udd37\u200d\u2642\ufe0f If it hurts your perf somewhere - I'm open to the change. But there should not be any observable perf gains from this change. ",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/4369#issuecomment-491114172",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Replace them with an explicit list of files in tsconfig. I got this list by adding --listFiles to the jake-generated command.\r\n\r\nI did this because I mistakenly added a depedency from compiler/utilities.ts to compiler/factory.ts and couldn't figure out how dependencies were resolved because I forgot about triple-slash references.",
    "clean_message": "Replace them with an explicit list of files in tsconfig. I got this list by adding --listFiles to the jake-generated command. I did this because I mistakenly added a depedency from compiler/utilities.ts to compiler/factory.ts and couldn't figure out how dependencies were resolved because I forgot about triple-slash references.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/21982",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Adding our Organizations. We extensively use tensorflow for all our AI applications.\r\n\r\n(I am also confused why this page is empty)",
    "clean_message": "Adding our Organizations. We extensively use tensorflow for all our AI applications. (I am also confused why this page is empty)",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/42416",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": ":+1: We need to fix #140; this is getting annoying.\n",
    "clean_message": ":+1: We need to fix #140; this is getting annoying.",
    "message_url": "https://github.com/facebook/react/pull/5174#issuecomment-148196627",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Go for it. =)\n",
    "clean_message": "Go for it. =)",
    "message_url": "https://github.com/psf/requests/pull/1119#issuecomment-13362356",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@terryheo \r\nCould you please check this commit for the mutable schema interface?\r\nhttps://github.com/tensorflow/tensorflow/pull/47754/commits/bb088b080a72e790c18e8164ce9fb828b2cec5e4\r\nIt builds the host-side flatc using cmake ExternalProject_Add(). Then, we could use the flatc to generate the mutable schema interface.",
    "clean_message": "Could you please check this commit for the mutable schema interface? It builds the host-side flatc using cmake ExternalProject_Add(). Then, we could use the flatc to generate the mutable schema interface.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/47754#issuecomment-804663307",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Sorry for the delay in responding to this thread.  I have had to explore some of the implications of this change especially with respect to input_signature and TensorSpecs.  I submitted [a change](https://github.com/tensorflow/tensorflow/commit/40006c34f53e2a0b3fe72079dae64168cc2c0d1d) a few days ago that updates tf.function to accept composite tensors (including ragged tensor and sparse tensor), and will follow up with another change to add support for input_signatures.\r\n",
    "clean_message": "Sorry for the delay in responding to this thread.  I have had to explore some of the implications of this change especially with respect to input_signature and TensorSpecs.  I submitted a change a few days ago that updates tf.function to accept composite tensors (including ragged tensor and sparse tensor), and will follow up with another change to add support for input_signatures.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/27488#issuecomment-482851482",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This doesn't actually work and causes weird issues in the coverage graph: https://coveralls.io/github/astropy/astropy\r\n\r\n(Coveralls doesn't merge coverage reports from different CI: https://github.com/lemurheavy/coveralls-public/issues/1073)",
    "clean_message": "This doesn't actually work and causes weird issues in the coverage graph:  (Coveralls doesn't merge coverage reports from different CI: )",
    "message_url": "https://github.com/astropy/astropy/pull/7559",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Probably the same reason why the plist file doesn't get copied. Do we need to specify the resource folder somewhere? ",
    "clean_message": "Probably the same reason why the plist file doesn't get copied. Do we need to specify the resource folder somewhere? ",
    "message_url": "https://github.com/JabRef/jabref/pull/6306#issuecomment-615844053",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "The documentation of `tf.unique` is unclear because it shows the input as an already sorted list. A result for a non-sorted list should be shown to clarify the operation.",
    "clean_message": "The documentation of  is unclear because it shows the input as an already sorted list. A result for a non-sorted list should be shown to clarify the operation.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/33221",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "LGTM! :+1: \n",
    "clean_message": "LGTM! :+1: ",
    "message_url": "https://github.com/JabRef/jabref/pull/1626#issuecomment-235880750",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This spawned from the discussion on #732.  Rather than take a functional argument to `insert`'s `before` argument, a more specialized function seems to make more sense here.\n",
    "clean_message": "This spawned from the discussion on #732.  Rather than take a functional argument to 's  argument, a more specialized function seems to make more sense here.",
    "message_url": "https://github.com/d3/d3/pull/744",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I rebased against master and re-added my changes. Looks like I missed a couple of wonky space changes, in `app.py`. I also changed to a hashing check rather than a iteration check.\n",
    "clean_message": "I rebased against master and re-added my changes. Looks like I missed a couple of wonky space changes, in . I also changed to a hashing check rather than a iteration check.",
    "message_url": "https://github.com/pallets/flask/pull/1568#issuecomment-142237179",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I find being able to emit the 'all' group in an inventory script a handy way to support a kind of \"group_vars/all script\". For that the inventory script just have to emit { \"all\" : { \"vars\": { \"var1\": ...., \"var2\": ... } } }\nSo raising an error for { \"all\": { \"hosts\":  [...] } } would not bother me, but I'd like to keep the \"vars\" entry ;-)\n",
    "clean_message": "I find being able to emit the 'all' group in an inventory script a handy way to support a kind of \"group_vars/all script\". For that the inventory script just have to emit { \"all\" : { \"vars\": { \"var1\": ...., \"var2\": ... } } } So raising an error for { \"all\": { \"hosts\":  [...] } } would not bother me, but I'd like to keep the \"vars\" entry ;-)",
    "message_url": "https://github.com/ansible/ansible/pull/3993#issuecomment-23662579",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I think I still prefer keeping `coverageProvider` option at least for one more release. While I don't think there have been any bugs reported with the v8 coverage, I assume that's because people don't use it. And instead of people upgrading, seeing numbers they don't like (hopefully report it as it might be a bug) and staying on v29, they can still use 30 and just flip a config option.\r\n\r\nThen for Jest 31 remove it.\r\n\r\nThoughts?\r\n\r\n---\r\n\r\nIf we're sure we want to do this (clean break in v30), then I think we should try out some big repositories using Jest and see how the coverage compares manually and try to fix any regressions (if there are any). Moving to something that's faster but worse (i.e. less accurate - I don't care if coverage numbers goes _down_ (or up, for that matter), only accuracy of coverage reported) isn't necessarily a net win in my eyes.",
    "clean_message": "I think I still prefer keeping  option at least for one more release. While I don't think there have been any bugs reported with the v8 coverage, I assume that's because people don't use it. And instead of people upgrading, seeing numbers they don't like (hopefully report it as it might be a bug) and staying on v29, they can still use 30 and just flip a config option. Then for Jest 31 remove it. Thoughts?  If we're sure we want to do this (clean break in v30), then I think we should try out some big repositories using Jest and see how the coverage compares manually and try to fix any regressions (if there are any). Moving to something that's faster but worse (i.e. less accurate - I don't care if coverage numbers goes down (or up, for that matter), only accuracy of coverage reported) isn't necessarily a net win in my eyes.",
    "message_url": "https://github.com/jestjs/jest/pull/13461#issuecomment-1283562373",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "This is a follow-up bug fix to #11090, so I think it doesn't need a changelog entry?",
    "clean_message": "This is a follow-up bug fix to #11090, so I think it doesn't need a changelog entry?",
    "message_url": "https://github.com/astropy/astropy/pull/11101#issuecomment-735277582",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Fixes #27552\r\n\r\n",
    "clean_message": "Fixes #27552",
    "message_url": "https://github.com/microsoft/TypeScript/pull/27653",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@sigmavirus24 All this can be done with standard string operations, but you would have to implement parts of what the re module already has. It would be easy if we could just do a s_auth.lower() on the whole thing and replace what we need, but the case on the rest of the string is important.\n\nThe way I see it there are 2 choices. Either we use the re module, or we add code to do a case insensitive replace in requests itself. Basically its a choice between overhead (which I'm not convinced is much) and code complexity. :)\nPisses me off that web server developers don't read the damn standards before implementing something :angry: . \n\nP.S. Get better soon! :D\n",
    "clean_message": "All this can be done with standard string operations, but you would have to implement parts of what the re module already has. It would be easy if we could just do a s_auth.lower() on the whole thing and replace what we need, but the case on the rest of the string is important. The way I see it there are 2 choices. Either we use the re module, or we add code to do a case insensitive replace in requests itself. Basically its a choice between overhead (which I'm not convinced is much) and code complexity. :) Pisses me off that web server developers don't read the damn standards before implementing something :angry: .  P.S. Get better soon! :D",
    "message_url": "https://github.com/psf/requests/pull/1242#issuecomment-14771977",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": ">> Are there occurrences of `figure > img`, without `.lightbox` (or a `.card`)?\r\n>> If so, how does one decide when to use `.lightbox` and `.card` and when not?\r\n>\r\n> I was going to update the style guide to reflect when to use the `lightbox` and `card` etc.\r\n\r\nWere or are? \ud83d\ude15 \ud83d\ude1b\r\nI definitely agree this should be in the guide \ud83d\udcaf \r\n\r\nMy concern is that we are complicating the conventions one has to follow, which will inevitably result in them not being consistently followed \ud83d\ude1f\r\nI would love if we could simplify things. For example, if `.card` should always be used with `.lightbox`, then we might be able to get rid of the nested `.card` and style the `.lightbox` (or the contained imaged) instead. Or if most `fixure`s will use `.lightbox`, we could make it the default and have another class to \"opt-out\" of the `.lightbox` styling.",
    "clean_message": "Were or are? \ud83d\ude15 \ud83d\ude1b I definitely agree this should be in the guide \ud83d\udcaf  My concern is that we are complicating the conventions one has to follow, which will inevitably result in them not being consistently followed \ud83d\ude1f I would love if we could simplify things. For example, if  should always be used with , then we might be able to get rid of the nested  and style the  (or the contained imaged) instead. Or if most s will use , we could make it the default and have another class to \"opt-out\" of the  styling.",
    "message_url": "https://github.com/angular/angular/pull/33259#issuecomment-544869409",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@mattupstate Agreed, but there are some situations where `X-` headers are acceptable; the most notable example being the pseudo-standard `X-Requested-With` used by `werkzeug` to determine if the originating request originated from an `XMLHttpRequest` from the browser.\n\nI _do_ like your middleware solution idea, but I'd rather not pollute my query strings with metadata that is better represented in a header.\n",
    "clean_message": "Agreed, but there are some situations where  headers are acceptable; the most notable example being the pseudo-standard  used by  to determine if the originating request originated from an  from the browser. I do like your middleware solution idea, but I'd rather not pollute my query strings with metadata that is better represented in a header.",
    "message_url": "https://github.com/pallets/flask/pull/582#issuecomment-8094345",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "These are 2 installers plus one portable version. So in the end 200mb for one installer, which is approximately the same size as install4j",
    "clean_message": "These are 2 installers plus one portable version. So in the end 200mb for one installer, which is approximately the same size as install4j",
    "message_url": "https://github.com/JabRef/jabref/pull/5312#issuecomment-531460517",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "From a positioning PoV, a twinned axes is just like an inset axes whose\r\nposition exactly matches the parent's position.  Doing so removes the\r\nneed for the heuristic in `Figure.subplots_adjust`/`GridSpec.update`\r\nwhere a non-gridspec-managed Axes would track the position of any Axes\r\nwith which it shared either xaxis or yaxis, which was a proxy for\r\ntwinning (per 721b949).  This would cause incorrect behavior in rare\r\ncases such as\r\n```python\r\nfrom pylab import *\r\nax = subplot(221)\r\naxes([.6, .6, .3, .3], sharex=ax)\r\nsubplots_adjust(left=0)\r\n```\r\nwhere the `subplots_adjust` call would make the second axes go on top of\r\nthe first.\r\n\r\n## PR Summary\r\n\r\n## PR Checklist\r\n\r\n<!-- Please mark any checkboxes that do not apply to this PR as [N/A]. -->\r\n\r\n- [ ] Has pytest style unit tests (and `pytest` passes).\r\n- [ ] Is [Flake 8](https://flake8.pycqa.org/en/latest/) compliant (run `flake8` on changed files to check).\r\n- [ ] New features are documented, with examples if plot related.\r\n- [ ] Documentation is sphinx and numpydoc compliant (the docs should [build](https://matplotlib.org/devel/documenting_mpl.html#building-the-docs) without error).\r\n- [ ] Conforms to Matplotlib style conventions (install `flake8-docstrings` and `pydocstyle<4` and run `flake8 --docstring-convention=all`).\r\n- [ ] New features have an entry in `doc/users/next_whats_new/` (follow instructions in README.rst there).\r\n- [ ] API changes documented in `doc/api/next_api_changes/` (follow instructions in README.rst there).\r\n\r\n<!--\r\nThank you so much for your PR!  To help us review your contribution, please\r\nconsider the following points:\r\n\r\n- A development guide is available at https://matplotlib.org/devdocs/devel/index.html.\r\n\r\n- Help with git and github is available at\r\n  https://matplotlib.org/devel/gitwash/development_workflow.html.\r\n\r\n- Do not create the PR out of master, but out of a separate branch.\r\n\r\n- The PR title should summarize the changes, for example \"Raise ValueError on\r\n  non-numeric input to set_xlim\".  Avoid non-descriptive titles such as\r\n  \"Addresses issue #8576\".\r\n\r\n- The summary should provide at least 1-2 sentences describing the pull request\r\n  in detail (Why is this change required?  What problem does it solve?) and\r\n  link to any relevant issues.\r\n\r\n- If you are contributing fixes to docstrings, please pay attention to\r\n  http://matplotlib.org/devel/documenting_mpl.html#formatting.  In particular,\r\n  note the difference between using single backquotes, double backquotes, and\r\n  asterisks in the markup.\r\n\r\nWe understand that PRs can sometimes be overwhelming, especially as the\r\nreviews start coming in.  Please let us know if the reviews are unclear or\r\nthe recommended next step seems overly demanding, if you would like help in\r\naddressing a reviewer's comments, or if you have been waiting too long to hear\r\nback on your PR.\r\n-->\r\n",
    "clean_message": "From a positioning PoV, a twinned axes is just like an inset axes whose position exactly matches the parent's position.  Doing so removes the need for the heuristic in / where a non-gridspec-managed Axes would track the position of any Axes with which it shared either xaxis or yaxis, which was a proxy for twinning (per 721b949).  This would cause incorrect behavior in rare cases such as where the  call would make the second axes go on top of the first. PR Summary PR Checklist <!-- Please mark any checkboxes that do not apply to this PR as [N/A]. -- - [ ] Has pytest style unit tests (and  passes). - [ ] Is Flake 8 compliant (run  on changed files to check). - [ ] New features are documented, with examples if plot related. - [ ] Documentation is sphinx and numpydoc compliant (the docs should build without error). - [ ] Conforms to Matplotlib style conventions (install  and  and run ). - [ ] New features have an entry in  (follow instructions in README.rst there). - [ ] API changes documented in  (follow instructions in README.rst there). <!-- Thank you so much for your PR!  To help us review your contribution, please consider the following points:   A development guide is available at .   Help with git and github is available at   .   Do not create the PR out of master, but out of a separate branch.   The PR title should summarize the changes, for example \"Raise ValueError on   non-numeric input to set_xlim\".  Avoid non-descriptive titles such as   \"Addresses issue #8576\".   The summary should provide at least 1-2 sentences describing the pull request   in detail (Why is this change required?  What problem does it solve?) and   link to any relevant issues.   If you are contributing fixes to docstrings, please pay attention to   .  In particular,   note the difference between using single backquotes, double backquotes, and   asterisks in the markup.   We understand that PRs can sometimes be overwhelming, especially as the reviews start coming in.  Please let us know if the reviews are unclear or the recommended next step seems overly demanding, if you would like help in addressing a reviewer's comments, or if you have been waiting too long to hear back on your PR. --",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/18456",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I could have add this method in the ArgumentMatchers class (which would have been a better solution), but I didn't want to change it because it has not been updated since last year\r\n\r\n```\r\n    public static <T> T vararg(T... value) {\r\n        reportMatcher(new VarargMatcherImpl(value));\r\n        if (value == null)\r\n            return null;\r\n        return (T) Primitives.defaultValue(value.getClass());\r\n    }\r\n```",
    "clean_message": "I could have add this method in the ArgumentMatchers class (which would have been a better solution), but I didn't want to change it because it has not been updated since last year",
    "message_url": "https://github.com/mockito/mockito/pull/1461#issuecomment-409060626",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This isn't a mistake actually.",
    "clean_message": "This isn't a mistake actually.",
    "message_url": "https://github.com/facebook/react/pull/10466#issuecomment-328238128",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Oops, sorry. Yes both StringPiece and Status should be passed by value.",
    "clean_message": "Oops, sorry. Yes both StringPiece and Status should be passed by value.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/37533#issuecomment-598828460",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "\ud83d\udcdd Update docs for testing, fix examples with relative imports.\r\n\r\nShould solve, related to https://github.com/tiangolo/fastapi/issues/3381\r\n",
    "clean_message": "\ud83d\udcdd Update docs for testing, fix examples with relative imports. Should solve, related to ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/5302",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "For networks that have both a v4 and a v6 subnet, the floating IP plugin\ncurrently has two problems:\n- When determining the subnet for the provided `internal_network_name`, it\n  assumes that the first item in the list of subnets is the one you want.\n  Instead, it should pick the first v4 subnet.\n- When multiple fixed IP's exist for a given port (as is the case in a network\n  a v4 and a v6 subnet), neutron needs a hint as to which fixed IP to associate\n  to the floating IP address (the v4 one).\n",
    "clean_message": "For networks that have both a v4 and a v6 subnet, the floating IP plugin currently has two problems: - When determining the subnet for the provided , it   assumes that the first item in the list of subnets is the one you want.   Instead, it should pick the first v4 subnet. - When multiple fixed IP's exist for a given port (as is the case in a network   a v4 and a v6 subnet), neutron needs a hint as to which fixed IP to associate   to the floating IP address (the v4 one).",
    "message_url": "https://github.com/ansible/ansible/pull/7687",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "You can preview 09ea2eb at https://pr32334-09ea2eb.ngbuilds.io/.",
    "clean_message": "You can preview 09ea2eb at .",
    "message_url": "https://github.com/angular/angular/pull/32334#issuecomment-525198628",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!--\r\nThank you for creating a pull request. Before submitting, please note the following:\r\n\r\n* If your pull request implements a new feature, please raise an issue to discuss it before sending code. In many cases features are absent for a reason.\r\n* This message body should clearly illustrate what problems it solves. If there are related issues, remember to reference them.\r\n* Ideally, include a test that fails without this PR but passes with it. PRs will only be merged once they pass CI. (Remember to `npm run lint`!)\r\n-->\r\n\r\nBecause the site probably shouldn't deploy links to `localhost:3000`.",
    "clean_message": "<!-- Thank you for creating a pull request. Before submitting, please note the following:  If your pull request implements a new feature, please raise an issue to discuss it before sending code. In many cases features are absent for a reason. This message body should clearly illustrate what problems it solves. If there are related issues, remember to reference them.  Ideally, include a test that fails without this PR but passes with it. PRs will only be merged once they pass CI. (Remember to !) Because the site probably shouldn't deploy links to . ",
    "message_url": "https://github.com/sveltejs/svelte/pull/2352",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Unfortunately, we still can't update grunt to 1.x.\n\n/CC @cvrebert \n",
    "clean_message": "Unfortunately, we still can't update grunt to 1.x. /CC  ",
    "message_url": "https://github.com/twbs/bootstrap/pull/20199",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "As long as it picks up the installed freetype package to build with, LGTM.",
    "clean_message": "As long as it picks up the installed freetype package to build with, LGTM.",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/18092#issuecomment-666257353",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@davedawkins thanks for this. Sorry it went unreviewed for awhile, but it will need to be rebased now if you're still interested in getting the change in",
    "clean_message": "thanks for this. Sorry it went unreviewed for awhile, but it will need to be rebased now if you're still interested in getting the change in",
    "message_url": "https://github.com/sveltejs/svelte/pull/5945#issuecomment-870723944",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This relies on a globally-installed copy of Vows, rather than using the version of Vows that is required by D3. This is undesirable because it means the user will have to install Vows manually (as `npm install -g vows`) rather than the standard method using package.json (`npm install`). Also, this approach won't work if the user\u2019s globally-installed version of Vows is different from the one D3 depends on.\n\nI'm not familiar with Cygwin, but I'm afraid you'll need to solve this error a different way.\n",
    "clean_message": "This relies on a globally-installed copy of Vows, rather than using the version of Vows that is required by D3. This is undesirable because it means the user will have to install Vows manually (as ) rather than the standard method using package.json (). Also, this approach won't work if the user\u2019s globally-installed version of Vows is different from the one D3 depends on. I'm not familiar with Cygwin, but I'm afraid you'll need to solve this error a different way.",
    "message_url": "https://github.com/d3/d3/pull/1225#issuecomment-17362699",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@samuelcolvin removed, check please.",
    "clean_message": "removed, check please.",
    "message_url": "https://github.com/pydantic/pydantic/pull/836#issuecomment-536516300",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "In my personal actual experience, the `install size` badge might be more useful than `build | passing`, \ud83e\udd2a let me explain:\r\n\r\nI've seen a lot repo with `build | failed` but they are working fine, and a `build | passing` means not too much unless I checked the source to make sure it has a complete test suite, it's time consuming so I don't do this often.\r\n\r\nOn the other hand, `install size` are simpler and clearer. When I first saw a package I would check it's install size, and when I saw a new competitor I would compare it with the famous champions too, like `micro` vs `koa` vs `express`.\r\n\r\nOverall, build status more like for developing, and install size more like user land concern, relatively speaking.\r\n\r\n+1 for (1).",
    "clean_message": "In my personal actual experience, the  badge might be more useful than , \ud83e\udd2a let me explain: I've seen a lot repo with  but they are working fine, and a  means not too much unless I checked the source to make sure it has a complete test suite, it's time consuming so I don't do this often. On the other hand,  are simpler and clearer. When I first saw a package I would check it's install size, and when I saw a new competitor I would compare it with the famous champions too, like  vs  vs . Overall, build status more like for developing, and install size more like user land concern, relatively speaking. +1 for (1).",
    "message_url": "https://github.com/expressjs/express/pull/3710#issuecomment-412127104",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@frankchn I've updated as suggested. ",
    "clean_message": "I've updated as suggested. ",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/17584#issuecomment-373605210",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "## PR Summary\r\n\r\nMore information, less wordy. :smile: ",
    "clean_message": "PR Summary More information, less wordy. :smile: ",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/18990",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "positive"
  },
  {
    "raw_message": "<!-- Thank you for your contribution! -->\r\n<!-- Unless your change is trivial, please create an issue to discuss the change before creating a PR -->\r\n<!-- See https://pydantic-docs.helpmanual.io/contributing/ for help on Contributing -->\r\n## Change Summary\r\n\r\n<!-- Please give a short summary of the changes. -->\r\nWe introduce a new Model config attribute `show_input_data` (`False` by default) which is the case of being set to True enables invalid data output, i.e.:\r\n```\r\n2 validation errors for TestModel\r\nid\r\n  value is not a valid integer (type=type_error.integer)\r\nage\r\n  value is not a valid integer (type=type_error.integer)\r\ninput data\r\n  {'age': 'QQQ', 'id': 'AAA', 'name': 'John'}\r\n```\r\n```\r\n\"\"\"\r\n>>> check_exception()\r\n\"{'age': 'QQQ', 'id': 'AAA', 'name': 'John'}\"\r\n\"\"\"\r\n\r\nfrom pydantic import BaseModel, ValidationError\r\n\r\nimport pytest\r\n\r\n\r\nclass TestModel(BaseModel):\r\n    id: int\r\n    name: str\r\n    age: int\r\n\r\n    class Config:\r\n        show_input_data = True\r\n\r\n\r\ninvalid_data = {\r\n    \"id\": \"AAA\",\r\n    \"name\": \"John\",\r\n    \"age\": \"QQQ\"\r\n}\r\n\r\n\r\ndef check_exception():\r\n    with pytest.raises(ValidationError) as exc_info:\r\n        TestModel(**invalid_data)\r\n    return str(exc_info.value).split(\"input data\")[1].strip()\r\n```\r\n## Related issue number\r\n#1421 \r\n<!-- Are there any issues opened that will be resolved by merging this change? -->\r\n\r\n## Checklist\r\n\r\n* [x] Unit tests for the changes exist\r\n* [x] Tests pass on CI and coverage remains at 100%\r\n* [x] Documentation reflects the changes where applicable\r\n* [ ] `changes/<pull request or issue id>-<github username>.md` file added describing change\r\n  (see [changes/README.md](https://github.com/samuelcolvin/pydantic/blob/master/changes/README.md) for details)\r\n",
    "clean_message": "<!-- Thank you for your contribution! --<!-- Unless your change is trivial, please create an issue to discuss the change before creating a PR --<!-- See  for help on Contributing --## Change Summary <!-- Please give a short summary of the changes. --We introduce a new Model config attribute  ( by default) which is the case of being set to True enables invalid data output, i.e.: Related issue number 1421 <!-- Are there any issues opened that will be resolved by merging this change? -- Checklist  [x] Unit tests for the changes exist [x] Tests pass on CI and coverage remains at 100% [x] Documentation reflects the changes where applicable [ ] `changes/<pull request or issue id  (see changes/README.md for details) ",
    "message_url": "https://github.com/pydantic/pydantic/pull/1436",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Good though, kennethreitz! Please, apply this pull request, it will make world better ;-) \n",
    "clean_message": "Good though, kennethreitz! Please, apply this pull request, it will make world better ;-) ",
    "message_url": "https://github.com/psf/requests/pull/142#issuecomment-1987089",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Please review \r\n@kapunahelewong \r\n@dennispbrown \r\n@firedancer\r\n@jenniferfell\r\n\r\n",
    "clean_message": "Please review ",
    "message_url": "https://github.com/angular/angular/pull/19992#issuecomment-340111576",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I'm with @mdboom that the tab-completion shouldn't do any magic hiding - I've learned the hard way (in some of my own personal code) that this can cause a lot of mysterious confusion.\n\nAs for returning a value and not a quantity, I see @astrofrog's point that this is a bit arbitrary.  But my concern with only turning it on some of the time is that then users will get even more confused because once they start using e.g. `Angle`, they won't be used to it from more generic `Quantity` objects.  \n\nAlso I don't really see why this is any less useful for a generic `Quantity` vs. something specific like `Angle`.  In both cases I sometimes want to \"quickly\" get a value in a particular unit. \n",
    "clean_message": "I'm with  that the tab-completion shouldn't do any magic hiding - I've learned the hard way (in some of my own personal code) that this can cause a lot of mysterious confusion. As for returning a value and not a quantity, I see 's point that this is a bit arbitrary.  But my concern with only turning it on some of the time is that then users will get even more confused because once they start using e.g. , they won't be used to it from more generic  objects.   Also I don't really see why this is any less useful for a generic  vs. something specific like .  In both cases I sometimes want to \"quickly\" get a value in a particular unit. ",
    "message_url": "https://github.com/astropy/astropy/pull/1326#issuecomment-22617663",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I went through all the changes and created a follow-up PR at https://github.com/JabRef/jabref/pull/5578.",
    "clean_message": "I went through all the changes and created a follow-up PR at .",
    "message_url": "https://github.com/JabRef/jabref/pull/5283#issuecomment-551771425",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@epeee Yes indeed. Were you able to get Gradle working on your machine?!",
    "clean_message": "Yes indeed. Were you able to get Gradle working on your machine?!",
    "message_url": "https://github.com/mockito/mockito/pull/1945#issuecomment-645577292",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I see a couple of failures from `yarn test-prod` that I wouldn't expect to be related to this change, eg: \"_should throw with non-object in the initial state property_\" (from the various class-equivalency tests)\r\n```\r\n    Expected value to be (using ===):\r\n      \"span\"\r\n    Received:\r\n      \"SPAN\"\r\n```\r\nThat's a bit odd though b'c you didn't even change [this line](https://github.com/gaearon/react/blob/6e34120074c8018ed8803f7a0a71c8e64d4325d2/packages/react/src/__tests__/ReactCoffeeScriptClass-test.coffee#L162) with the diff.\r\n\r\n**Edit** FWIW, it looks like the `checkClassInstance` method that throws this error is only run in dev, so these tests should probably be DEV-only. Maybe we should change them too? eg\r\n```diff\r\ndiff --git a/packages/react/src/__tests__/ReactES6Class-test.js b/packages/react/src/__tests__/ReactES6Class-test.js\r\nindex 0df8eaa9e..4f4a93e4e 100644\r\n--- a/packages/react/src/__tests__/ReactES6Class-test.js\r\n+++ b/packages/react/src/__tests__/ReactES6Class-test.js\r\n@@ -163,7 +163,7 @@ describe('ReactES6Class', () => {\r\n     expect(renderCount).toBe(1);\r\n   });\r\n \r\n-  it('should throw with non-object in the initial state property', () => {\r\n+  it('should throw (in dev) with non-object in the initial state property', () => {\r\n     [['an array'], 'a string', 1234].forEach(function(state) {\r\n       class Foo extends React.Component {\r\n         constructor() {\r\n@@ -174,9 +174,13 @@ describe('ReactES6Class', () => {\r\n           return <span />;\r\n         }\r\n       }\r\n-      expect(() => test(<Foo />, 'span', '')).toThrowError(\r\n-        'Foo.state: must be set to an object or null',\r\n-      );\r\n+      if (__DEV__) {\r\n+        expect(() => test(<Foo />, 'SPAN', '')).toThrowError(\r\n+          'Foo.state: must be set to an object or null',\r\n+        );\r\n+      } else {\r\n+        () => test(<Foo />, 'SPAN', '');\r\n+      }\r\n     });\r\n   }); \r\n```",
    "clean_message": "I see a couple of failures from  that I wouldn't expect to be related to this change, eg: \"should throw with non-object in the initial state property\" (from the various class-equivalency tests) That's a bit odd though b'c you didn't even change this line with the diff. Edit FWIW, it looks like the  method that throws this error is only run in dev, so these tests should probably be DEV-only. Maybe we should change them too? eg",
    "message_url": "https://github.com/facebook/react/pull/11616#issuecomment-346172406",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "The confidence of one of the predictions is much lower on the CI server. I'm getting over 90% on my machine, and around 58% on the server. I guess it has something to do with the dependencies. But the test is passing now.",
    "clean_message": "The confidence of one of the predictions is much lower on the CI server. I'm getting over 90% on my machine, and around 58% on the server. I guess it has something to do with the dependencies. But the test is passing now.",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/604#issuecomment-1445448246",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I don't think this should be in v5.0.0 project. I see some issues with the tooltip being stuck in shown state.",
    "clean_message": "I don't think this should be in v5.0.0 project. I see some issues with the tooltip being stuck in shown state.",
    "message_url": "https://github.com/twbs/bootstrap/pull/32692#issuecomment-820098320",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "thanks! :)\n\nOn Fri, May 27, 2016 at 5:31 AM, Chelsea notifications@github.com wrote:\n\n> We're manually updating plotly.js for offline mode.\n> Here's some reasoning: #348 (comment)\n> https://github.com/plotly/plotly.py/pull/348#discussion_r44943281\n> \n> @choldgraf https://github.com/choldgraf we'll add a new version today\n> with the updates\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/plotly/plotly.py/pull/484#issuecomment-222134424, or mute\n> the thread\n> https://github.com/notifications/unsubscribe/ABwSHeNHPPQ7a6fDm9ATChMW26QsazO2ks5qFuQvgaJpZM4Invo8\n> .\n",
    "clean_message": "thanks! :) On Fri, May 27, 2016 at 5:31 AM, Chelsea  wrote:",
    "message_url": "https://github.com/plotly/plotly.py/pull/484#issuecomment-222180159",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "## Inheritance schemes:\n- All dictionaries containing data now subclass from Trace. Data means\n  something completely different now. For example:\n\n```\nclass Scatter(Trace):\n...\n```\n- Data now refers to a PlotlyList, which makes more sense.\n## No more mako:\n- using templating from mako was starting to be more trouble than it was\n  worth. We were forced to develop in a _hidden_ file, installing required\n  extra steps, and the documentation was scattered.\n## Added metaclass:\n- meta classes are classes that create classes. Python's usual meta\n  class is `type`, this creates all classes. By subclassing type, you can\n  make python < 3.3 docstrings mutable, hooray!\n- so far, only DictMeta, a class to create PlotlyDict subclasses has\n  been created.\n- IMPORTANT. A lot of headache was saved by _cheating_ a bit and using\n  class names as keys in the INFO dictionary. Therefore, ALL CLASSES\n  SHOULD HAVE A MATCHING (lower case) ENTRY IN `INFO`!!!\n",
    "clean_message": "Inheritance schemes:   All dictionaries containing data now subclass from Trace. Data means   something completely different now. For example:   Data now refers to a PlotlyList, which makes more sense.   No more mako:  using templating from mako was starting to be more trouble than it was   worth. We were forced to develop in a hidden file, installing required   extra steps, and the documentation was scattered.  Added metaclass:  meta classes are classes that create classes. Python's usual meta   class is , this creates all classes. By subclassing type, you can   make python < 3.3 docstrings mutable, hooray! so far, only DictMeta, a class to create PlotlyDict subclasses has   been created. IMPORTANT. A lot of headache was saved by cheating a bit and using   class names as keys in the INFO dictionary. Therefore, ALL CLASSES   SHOULD HAVE A MATCHING (lower case) ENTRY IN !!! ",
    "message_url": "https://github.com/plotly/plotly.py/pull/12",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I don't think there is a reason for the leading underscore in this section of documentation, but if there is, this pull request can be ignored, or used to clarify the documentation. \n",
    "clean_message": "I don't think there is a reason for the leading underscore in this section of documentation, but if there is, this pull request can be ignored, or used to clarify the documentation. ",
    "message_url": "https://github.com/psf/requests/pull/784",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Vertically centered modal example code requires .modal-dialog-centered class with the .modal-dialog class to correspond with the working example.",
    "clean_message": "Vertically centered modal example code requires .modal-dialog-centered class with the .modal-dialog class to correspond with the working example.",
    "message_url": "https://github.com/twbs/bootstrap/pull/25111",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@cgangwar11\r\n\r\nConflicting files\r\npandas/tests/arrays/categorical/test_replace.py",
    "clean_message": "Conflicting files pandas/tests/arrays/categorical/test_replace.py",
    "message_url": "https://github.com/pandas-dev/pandas/pull/36038#issuecomment-690310952",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thank you @waynerv for your contribution! :rocket: :bow: \r\n\r\nAnd thanks @RunningIkkyu for the review/approval! :coffee: :cake: \r\n\r\nI'll just wait for an approval review from someone else before merging.\r\n\r\nMaybe @Dustyposa or @phy25 , if you have the chance, could you review this? :pray: ",
    "clean_message": "Thank you  for your contribution! :rocket: :bow:  And thanks  for the review/approval! :coffee: :cake:  I'll just wait for an approval review from someone else before merging. Maybe  or  , if you have the chance, could you review this? :pray: ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/1197#issuecomment-629623707",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This just makes the accordion into the panel\u2014that's not something we'll accept. And thinking about it more, we should just drop the accordion entirely and focus on extending the collapse functionality. Will look into that.\n",
    "clean_message": "This just makes the accordion into the panel\u2014that's not something we'll accept. And thinking about it more, we should just drop the accordion entirely and focus on extending the collapse functionality. Will look into that.",
    "message_url": "https://github.com/twbs/bootstrap/pull/9359#issuecomment-22480265",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@arundasan91 Yes, I have updated Xcode to 8.\nHere is my environment:\n- Xcode: Version 8.0 (8A218a)\n- iOS: 10.0.1 (14A403)\n\nI can run an application with this change on iOS simulator, and iPhone 6.\n\nAs you said,\nI built and ran successfully without this change on Xcode 7.3 in the past (2 months or so).\nRecently I updated my device's OS from 9 to 10,\nand it requires Xcode 8,\nthen `duplicate symbol` error happens.\n\nI'm not sure this is caused by some source code change in the repository,\nor by Xcode 8.\n",
    "clean_message": "Yes, I have updated Xcode to 8. Here is my environment: - Xcode: Version 8.0 (8A218a) - iOS: 10.0.1 (14A403) I can run an application with this change on iOS simulator, and iPhone 6. As you said, I built and ran successfully without this change on Xcode 7.3 in the past (2 months or so). Recently I updated my device's OS from 9 to 10, and it requires Xcode 8, then  error happens. I'm not sure this is caused by some source code change in the repository, or by Xcode 8.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/4504#issuecomment-249343827",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "PiperOrigin-RevId: 387738023\r\nChange-Id: I83d18d36a7b82ffd2a40b5124a4e5b4c72238f27",
    "clean_message": "PiperOrigin-RevId: 387738023 Change-Id: I83d18d36a7b82ffd2a40b5124a4e5b4c72238f27",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/51270",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n",
    "clean_message": "PR Checklist Please check if your PR fulfills the following requirements:  [x] The commit message follows our guidelines:  [ ] Tests for the changes have been added (for bug fixes / features) [x] Docs have been added / updated (for bug fixes / features)  PR Type What kind of change does this PR introduce? <!-- Please check the one that applies to this PR using \"x\". -- - [ ] Bugfix - [ ] Feature - [ ] Code style update (formatting, local variables) - [ ] Refactoring (no functional changes, no api changes) - [ ] Build related changes - [ ] CI related changes - [x] Documentation content changes - [ ] angular.io application / infrastructure changes - [ ] Other... Please describe: What is the current behavior? <!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -- Issue Number: N/A What is the new behavior? Does this PR introduce a breaking change?  [ ] Yes [x] No  <!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -- Other information",
    "message_url": "https://github.com/angular/angular/pull/32223",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@FrankLoud Can you give some more details about this change? What's the source?",
    "clean_message": "Can you give some more details about this change? What's the source?",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/6540#issuecomment-720354459",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "non-blocking, are we pushing this up to pypi though? i feel like we might want to just allow folks to download from github master for a bit?\n\n:dancers: \n",
    "clean_message": "non-blocking, are we pushing this up to pypi though? i feel like we might want to just allow folks to download from github master for a bit? :dancers: ",
    "message_url": "https://github.com/plotly/plotly.py/pull/236#issuecomment-118120029",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "The original sentence has incorrect grammar. The change corrects the grammar error and expresses the intended meaning better\r\n\r\n<!--\r\nCommit checklist:\r\n\r\n* add tests that fail without the patch\r\n* ensure all tests pass with ``pytest``\r\n* add documentation to the relevant docstrings or pages\r\n* add ``versionadded`` or ``versionchanged`` directives to relevant docstrings\r\n* add a changelog entry if this patch changes code\r\n\r\nTests, coverage, and docs will be run automatically when you submit the pull\r\nrequest, but running them yourself can save time.\r\n-->\r\n",
    "clean_message": "The original sentence has incorrect grammar. The change corrects the grammar error and expresses the intended meaning better <!-- Commit checklist:  add tests that fail without the patch ensure all tests pass with pytest add documentation to the relevant docstrings or pages add versionadded or versionchanged directives to relevant docstrings add a changelog entry if this patch changes code  Tests, coverage, and docs will be run automatically when you submit the pull request, but running them yourself can save time. --",
    "message_url": "https://github.com/pallets/flask/pull/3480",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Kenneth Reitz is still the author, but David Baumgold is now the maintainer; there doesn't seem to be a good way to indicate this. :(\n",
    "clean_message": "Kenneth Reitz is still the author, but David Baumgold is now the maintainer; there doesn't seem to be a good way to indicate this. :(",
    "message_url": "https://github.com/pallets/flask/pull/906",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I REALLY like where this is going. In general, it feels that if someone uses JUnit, lazy verify should be the default, no?\n\nI\u2019m not happy about extra public on Mockito class and the VerificationStrategy. Both APIs seem to be \u2018internal\u2019, not really for regular users. Also, I feel uneasy about adding mutable state MockitoCore object. If we need such state, MockingProgress is the way to go (thread safe to the level sufficient/required in Mockito).\n\nI\u2019m wondering if we should start implementing some kind of listeners to the Mockito frameworks so that it is possible to implement such features easily.\n\n(brainstorming)\n\nMockito.framework().addListener(x);\n\nVerificationListener {\n  verificationStarted\n}\n\nI need this kind of API/listeners, too. However, I\u2019m not sure how well it fits your use case. I\u2019m working on adding automated validation of unused stubs to the JUnit runner and the Mockito JUnit rule. In order to fail the test when it has unusued stubs, I need to a) set a listener that gets notified when stubbing is done / stubbing is used b) run test c) ensure that all stubs were used out.\n\nThoughts?\n\nIf that works better, we can brainstorm & discuss before you cut code. I don\u2019t want to discourage you by my endless grumbling about how things should be implemented \ud83d\ude03\n\nTHANKS for pushing for this feature. I think it\u2019s cool.\n",
    "clean_message": "I REALLY like where this is going. In general, it feels that if someone uses JUnit, lazy verify should be the default, no? I\u2019m not happy about extra public on Mockito class and the VerificationStrategy. Both APIs seem to be \u2018internal\u2019, not really for regular users. Also, I feel uneasy about adding mutable state MockitoCore object. If we need such state, MockingProgress is the way to go (thread safe to the level sufficient/required in Mockito). I\u2019m wondering if we should start implementing some kind of listeners to the Mockito frameworks so that it is possible to implement such features easily. (brainstorming) Mockito.framework().addListener(x); VerificationListener {   verificationStarted } I need this kind of API/listeners, too. However, I\u2019m not sure how well it fits your use case. I\u2019m working on adding automated validation of unused stubs to the JUnit runner and the Mockito JUnit rule. In order to fail the test when it has unusued stubs, I need to a) set a listener that gets notified when stubbing is done / stubbing is used b) run test c) ensure that all stubs were used out. Thoughts? If that works better, we can brainstorm & discuss before you cut code. I don\u2019t want to discourage you by my endless grumbling about how things should be implemented \ud83d\ude03 THANKS for pushing for this feature. I think it\u2019s cool.",
    "message_url": "https://github.com/mockito/mockito/pull/389#issuecomment-216265210",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "positive"
  },
  {
    "raw_message": "@seanpmorgan Ahh those use NVIDIA's nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04.  That explains why they do not use the same process.  I would guess (CONFIRMED, see next comment) nvidia already moved those to 7.6.2; but I am feeling good and will give a look this morning and report back.  The good is they are likely updated faster than our offiical dockers, the bad is they may not always be aligned; which may be ok 95% of the time.  The 1% or 5% is the fun.  ",
    "clean_message": "Ahh those use NVIDIA's nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04.  That explains why they do not use the same process.  I would guess (CONFIRMED, see next comment) nvidia already moved those to 7.6.2; but I am feeling good and will give a look this morning and report back.  The good is they are likely updated faster than our offiical dockers, the bad is they may not always be aligned; which may be ok 95% of the time.  The 1% or 5% is the fun.  ",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/31674#issuecomment-522056845",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@zertrin did you open a new issue for this discussion? ",
    "clean_message": "did you open a new issue for this discussion? ",
    "message_url": "https://github.com/pandas-dev/pandas/pull/15931#issuecomment-344101246",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "It is the same error as in #26800 (when trying to customize LESS variables):\r\n```\r\n@table-sticky-zindex: @zindex-table-fixed + 1;\r\n^\r\nOperation on an invalid type\r\n```",
    "clean_message": "It is the same error as in #26800 (when trying to customize LESS variables):",
    "message_url": "https://github.com/ant-design/ant-design/pull/31874#issuecomment-903840298",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "http://pandas.pydata.org/pandas-docs/dev/io.html#storer-format\n\nif you can thing of a better name that storer let me know)\n\nyou don't need knowledge of the internals just reading the docs for various formats that u can store\n\nlmk if this is still unclear\n",
    "clean_message": "if you can thing of a better name that storer let me know) you don't need knowledge of the internals just reading the docs for various formats that u can store lmk if this is still unclear",
    "message_url": "https://github.com/pandas-dev/pandas/pull/4645#issuecomment-23275580",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@github y u no squash button\n",
    "clean_message": "y u no squash button",
    "message_url": "https://github.com/expressjs/express/pull/1615#issuecomment-24031047",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "The codesandbox with your solution raises `Cannot read property 'indexOf' of undefined\"` which is probably rooted in `getKeyFilter` where checks the existence of `key` in `$event`, i.e., `if(!$event.type.indexOf('key') ... return null`. In your code, `$event` is set as `{ event: $event, var1, var2 }` that does not include the `key`.\r\nAlthough it does not resolve the issue, to get rid of the error, you may add `key, keyCode, target` to the object. Please see [codesandbox](https://codesandbox.io/s/peaceful-rgb-fs56z)",
    "clean_message": "The codesandbox with your solution raises  which is probably rooted in  where checks the existence of  in , i.e., . In your code,  is set as  that does not include the . Although it does not resolve the issue, to get rid of the error, you may add  to the object. Please see codesandbox",
    "message_url": "https://github.com/vuejs/vue/pull/11746#issuecomment-720017666",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Previous attempts at fixing the time related tests failed. Indeed the previous attempts are not bullet proof when the CI can run schedule some threads slower than _expected_.\r\n\r\nA proper harness should be implemented, but in the meantime, I implemented the retry rule as proposed in #731 to gain back stability on the build.",
    "clean_message": "Previous attempts at fixing the time related tests failed. Indeed the previous attempts are not bullet proof when the CI can run schedule some threads slower than expected. A proper harness should be implemented, but in the meantime, I implemented the retry rule as proposed in #731 to gain back stability on the build.",
    "message_url": "https://github.com/mockito/mockito/pull/771",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This is a similar pull request to \r\n\r\nhttps://github.com/tensorflow/tensorflow/pull/14737\r\n\r\nbut for r1.4 branch, not master.\r\n\r\nWhen using tensorflow as a submodule in bazel, importing bazel rules from tensorflow.bzl is not working.\r\nThe main reason is that some of the dependencies are hard coded instead of using str(Label(...)) and this makes bazel to generate dependencies like\r\n\r\n//tensorflow\r\n\r\ninstead of\r\n\r\n@org_tensorflow//tensorflow.\r\n\r\nMost of bzl files under tensorflow use Label mechanism to allow supermodule to import tensorflow bazel rules like tf_cc_test, etc, but there were two files that did not use the Label mechanism and these two files block supermodule to import tensorflow bazel rules. This change updates those files to unblock bazel rule importing.",
    "clean_message": "This is a similar pull request to  but for r1.4 branch, not master. When using tensorflow as a submodule in bazel, importing bazel rules from tensorflow.bzl is not working. The main reason is that some of the dependencies are hard coded instead of using str(Label(...)) and this makes bazel to generate dependencies like //tensorflow instead of //tensorflow. Most of bzl files under tensorflow use Label mechanism to allow supermodule to import tensorflow bazel rules like tf_cc_test, etc, but there were two files that did not use the Label mechanism and these two files block supermodule to import tensorflow bazel rules. This change updates those files to unblock bazel rule importing.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/14738",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@cpojer Sorry for the late reply, I went on a vacation last week :)\r\n\r\nThis isn't directly related to Google's adoption of a new test runner (I don't work there anymore so I'm a bit out of the loop). I got started on this project as a means of making the `Angular CLI` run under bazel more or less without any special customization. The Angular CLI is capable of running jest when using the `@nrwl/jest` package that my company I work for maintains. And in addition to that, I just like jest and want it to be the defacto test runner for running JS tests under bazel.\r\n\r\n@cpojer One question. I'm willing to augment `watchmen` to have the same behavior if need be (it doesn't affect the bazel use case, but if its a requirement for getting the PR merged I could be persuaded to make a PR). So my question to you is, is that a hard requirement for getting this logic merged? Could it be made to be follow up work after merging this PR?",
    "clean_message": "Sorry for the late reply, I went on a vacation last week :) This isn't directly related to Google's adoption of a new test runner (I don't work there anymore so I'm a bit out of the loop). I got started on this project as a means of making the  run under bazel more or less without any special customization. The Angular CLI is capable of running jest when using the  package that my company I work for maintains. And in addition to that, I just like jest and want it to be the defacto test runner for running JS tests under bazel. One question. I'm willing to augment  to have the same behavior if need be (it doesn't affect the bazel use case, but if its a requirement for getting the PR merged I could be persuaded to make a PR). So my question to you is, is that a hard requirement for getting this logic merged? Could it be made to be follow up work after merging this PR?",
    "message_url": "https://github.com/jestjs/jest/pull/9351#issuecomment-573765142",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "TEST\n",
    "clean_message": "TEST",
    "message_url": "https://github.com/pallets/flask/pull/1566",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Yeah, so how we approach this is basically dependent on whether we think it's acceptable for `to_native_string()` to go in `encode_params`. I personally think that's the best place for it, because it allows us to avoid duplicating the large amount of knowledge `encode_params` has about how this variable is structured. However, IIRC @sigmavirus24 originally objected to that idea so I'd like to hear from him.\n",
    "clean_message": "Yeah, so how we approach this is basically dependent on whether we think it's acceptable for  to go in . I personally think that's the best place for it, because it allows us to avoid duplicating the large amount of knowledge  has about how this variable is structured. However, IIRC  originally objected to that idea so I'd like to hear from him.",
    "message_url": "https://github.com/psf/requests/pull/2919#issuecomment-162443738",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "`material.color` (or `material.specular` for highly-specular materials) should be specified in linear space. Without handling this correctly, the rendered color will be incorrect.\r\n\r\nScene light colors should be specified in linear space, too.\r\n\r\n",
    "clean_message": "(or  for highly-specular materials) should be specified in linear space. Without handling this correctly, the rendered color will be incorrect. Scene light colors should be specified in linear space, too.",
    "message_url": "https://github.com/mrdoob/three.js/pull/20287#issuecomment-688466262",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks @awiddersheim! :sparkles: :cake: :sparkles: \n",
    "clean_message": "Thanks ! :sparkles: :cake: :sparkles: ",
    "message_url": "https://github.com/psf/requests/pull/2615#issuecomment-105537790",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@Rohanhacker You misunderstand the `validRange`, `validRange` is different from `disabledDate`, `validRange` limits which dates the user can navigate.",
    "clean_message": "You misunderstand the ,  is different from ,  limits which dates the user can navigate.",
    "message_url": "https://github.com/ant-design/ant-design/pull/9246#issuecomment-363345696",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "\u2728 Add support for Pydantic v2",
    "clean_message": "\u2728 Add support for Pydantic v2",
    "message_url": "https://github.com/tiangolo/fastapi/pull/9816",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I guess I tend to be pretty conservative about what to call a bug if it is going in a bugfix release. Basically the question is whether it is credible that some user out there is taking advantage of this existing behavior and their code will break after installing a bugfix release. I take that contract very seriously. It seems very unlikely that anyone is using that, but it is tough to prove otherwise.\r\n\r\nUsually to me for an API change like this to get put into a bug fix, I would say it is OK if the original behavior was so wrong that nobody could be relying on that behavior. Here that is not unambiguously the case, but I agree it is in the grey zone.",
    "clean_message": "I guess I tend to be pretty conservative about what to call a bug if it is going in a bugfix release. Basically the question is whether it is credible that some user out there is taking advantage of this existing behavior and their code will break after installing a bugfix release. I take that contract very seriously. It seems very unlikely that anyone is using that, but it is tough to prove otherwise. Usually to me for an API change like this to get put into a bug fix, I would say it is OK if the original behavior was so wrong that nobody could be relying on that behavior. Here that is not unambiguously the case, but I agree it is in the grey zone.",
    "message_url": "https://github.com/astropy/astropy/pull/10890#issuecomment-712505838",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "oops",
    "clean_message": "oops",
    "message_url": "https://github.com/ant-design/ant-design/pull/7971#issuecomment-338539280",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This should be there. <track kind=\"captions\"> To avoid the following error A11y: Media elements must have a <track kind=\"captions\"> (111:1)\r\n\r\n### Before submitting the PR, please make sure you do the following\r\n- [x] It's really useful if your PR references an issue where it is discussed ahead of time. In many cases, features are absent for a reason. For large changes, please create an RFC: https://github.com/sveltejs/rfcs\r\n- [x] This message body should clearly illustrate what problems it solves.\r\n- [x] Ideally, include a test that fails without this PR but passes with it.\r\n\r\n### Tests\r\n-  [ ] Run the tests with `npm test` and lint the project with `npm run lint`\r\n",
    "clean_message": "This should be there. <track kind=\"captions\" Before submitting the PR, please make sure you do the following  [x] It's really useful if your PR references an issue where it is discussed ahead of time. In many cases, features are absent for a reason. For large changes, please create an RFC:  [x] This message body should clearly illustrate what problems it solves. [x] Ideally, include a test that fails without this PR but passes with it.  Tests  [ ] Run the tests with  and lint the project with  ",
    "message_url": "https://github.com/sveltejs/svelte/pull/5522",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "That's awesome, thanks @palmerj3!\r\n\r\nWe've had reports of slowdown on large suites for 23 vs previous, this might be part of the issue (#5085 landed in 23 (thanks changelog!))?",
    "clean_message": "That's awesome, thanks ! We've had reports of slowdown on large suites for 23 vs previous, this might be part of the issue (#5085 landed in 23 (thanks changelog!))?",
    "message_url": "https://github.com/jestjs/jest/pull/6906#issuecomment-416962957",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "We have a use case where we run TensorFlowOnSpark from Apache Livy. When we set HADOOP_USER_NAME then we get an impersonation error saying that User_A cannot impersonate User_A, which is correct since we don't give permissions to User_A to impersonate other users, hence not itself.\r\n\r\nNevertheless, when I set HADOOP_USER_NAME Tensorflow does access HDFS as that user, so I suppose there is no need for a patch.",
    "clean_message": "We have a use case where we run TensorFlowOnSpark from Apache Livy. When we set HADOOP_USER_NAME then we get an impersonation error saying that User_A cannot impersonate User_A, which is correct since we don't give permissions to User_A to impersonate other users, hence not itself. Nevertheless, when I set HADOOP_USER_NAME Tensorflow does access HDFS as that user, so I suppose there is no need for a patch.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/13654#issuecomment-336828473",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Personally, I'm not a fan of this yet. This will be easier to achieve when we have CSS variables available, otherwise this will be a PITA to maintain.\r\n\r\nWe can't also just add a dark mode to our docs and don't support it in our components. It will just look too weird to have light components (like modals or dropdowns) in a dark documentation.\r\n\r\nAn other aspect is color contrast, we already struggle to get the color contrast on point without the dark mode, checking two modes won't make that easier.",
    "clean_message": "Personally, I'm not a fan of this yet. This will be easier to achieve when we have CSS variables available, otherwise this will be a PITA to maintain. We can't also just add a dark mode to our docs and don't support it in our components. It will just look too weird to have light components (like modals or dropdowns) in a dark documentation. An other aspect is color contrast, we already struggle to get the color contrast on point without the dark mode, checking two modes won't make that easier.",
    "message_url": "https://github.com/twbs/bootstrap/pull/28449#issuecomment-573882463",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "It was merged almost a year ago: https://github.com/pandas-dev/pandas/pull/35393 milestoned 1.1, released Jul 28, 2020.    They are currently on 1.2.4.  I would *guess* that if someone updates Matplotlib they would also update pandas?  Worse that happens is someone gets a deprecation warning for a while if they use a new Matplotlib and an old pandas.  ",
    "clean_message": "It was merged almost a year ago:  milestoned 1.1, released Jul 28, 2020.    They are currently on 1.2.4.  I would guess that if someone updates Matplotlib they would also update pandas?  Worse that happens is someone gets a deprecation warning for a while if they use a new Matplotlib and an old pandas.  ",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/19483#issuecomment-830990474",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@datapythonista Yes please. Let's get this PR done. What relevant function that we can add at `See Also` section? Any hint? `s.to_markdown()`?",
    "clean_message": "Yes please. Let's get this PR done. What relevant function that we can add at  section? Any hint? ?",
    "message_url": "https://github.com/pandas-dev/pandas/pull/31995#issuecomment-586574532",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "negative"
  },
  {
    "raw_message": "Backport PR #15556: Fix test suite compat with ghostscript 9.50.",
    "clean_message": "Backport PR #15556: Fix test suite compat with ghostscript 9.50.",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/16208",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Not sorting the indices is fine. This looks good to me. Thanks, @meffmadd!",
    "clean_message": "Not sorting the indices is fine. This looks good to me. Thanks, !",
    "message_url": "https://github.com/plotly/plotly.py/pull/2771#issuecomment-730433232",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Anyone who wants something fancier should use modules.\n- fixes annoyance with not being able to set 'name' property on locals\n\nThis is for 4.0 and is a breaking API change.\n",
    "clean_message": "Anyone who wants something fancier should use modules. - fixes annoyance with not being able to set 'name' property on locals This is for 4.0 and is a breaking API change.",
    "message_url": "https://github.com/expressjs/express/pull/1908",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Fixes #33325",
    "clean_message": "Fixes #33325",
    "message_url": "https://github.com/microsoft/TypeScript/pull/45765",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> Exampes checked in to the library repository need to actually function with the target Node.js version of the library (\r\n> \r\n> https://github.com/expressjs/express/blob/28db2c2c5cf992c897d1fbbc6b119ee02fe32ab1/package.json#L83\r\n> \r\n> ). You will find the CI will fail with these changes due to this.\r\n\r\nJust removed the arrow function.",
    "clean_message": "Just removed the arrow function.",
    "message_url": "https://github.com/expressjs/express/pull/4621#issuecomment-866971128",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I believe `rand_date` is the way it is to specifically catch badly (i.e. non-ISO) formatted dates and raise a `ValidationError`.\r\n\r\nAlso, https://github.com/samuelcolvin/pydantic/pull/1525/files#diff-6d758509aa91a59278e79ec61a427c99R55-R58 states that you cannot use PositiveInt because of coercion, but then end up coercing the value anyways? https://github.com/samuelcolvin/pydantic/pull/1525/files#diff-6d758509aa91a59278e79ec61a427c99R14-R22",
    "clean_message": "I believe  is the way it is to specifically catch badly (i.e. non-ISO) formatted dates and raise a . Also,  states that you cannot use PositiveInt because of coercion, but then end up coercing the value anyways? ",
    "message_url": "https://github.com/pydantic/pydantic/pull/1525#issuecomment-630278228",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@rbuckton Do you know if this handler is still needed? I suspect it isn't, but I'm trying to think as to whether or not this is needed for Windows or something.",
    "clean_message": "Do you know if this handler is still needed? I suspect it isn't, but I'm trying to think as to whether or not this is needed for Windows or something.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/54114#issuecomment-1533658419",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks in advance! No hurry. Happy holidays!",
    "clean_message": "Thanks in advance! No hurry. Happy holidays!",
    "message_url": "https://github.com/JabRef/jabref/pull/7191#issuecomment-750436058",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Adding an error message to an assertion that I have experienced on two separate occasions, that all custom exceptions must inherit from the builtin Exception class.\r\n\r\nThis PR will throw the new message to those who decide to create exceptions that aren't subclasses of Exception, e.g. BaseException",
    "clean_message": "Adding an error message to an assertion that I have experienced on two separate occasions, that all custom exceptions must inherit from the builtin Exception class. This PR will throw the new message to those who decide to create exceptions that aren't subclasses of Exception, e.g. BaseException",
    "message_url": "https://github.com/pallets/flask/pull/3574",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Mostly for my sanity. It's hard to keep track of what is enabled where if it's not enforced.\r\n",
    "clean_message": "Mostly for my sanity. It's hard to keep track of what is enabled where if it's not enforced.",
    "message_url": "https://github.com/facebook/react/pull/24047",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "`model_validate` is not meant to be used as an instance method, and should never modify the input object.\r\n\r\nIt seems this is just meant to address the case where you do an invalid `model_construct` as brought up in https://github.com/pydantic/pydantic/issues/6901, but:\r\n* Using `model_construct` to create improperly-initialized models is not how it's meant to be used, and is not a workflow we want to accommodate\r\n* As a rule, passing an input to `model_validate`/`validate_python` shouldn't modify that input\r\n* This adds some overhead to `model_validate`/`validate_python` for _everyone_ to avoid issues caused by invalid `model_construct`; and given how performant we've made validation through the use of rust, I suspect this overhead is significant for some cases (such as `TypeAdapter(int)`, for example).\r\n\r\nAs a result, I think this PR is not likely to be merged.",
    "clean_message": "is not meant to be used as an instance method, and should never modify the input object. It seems this is just meant to address the case where you do an invalid  as brought up in , but: * Using  to create improperly-initialized models is not how it's meant to be used, and is not a workflow we want to accommodate * As a rule, passing an input to / shouldn't modify that input * This adds some overhead to / for everyone to avoid issues caused by invalid ; and given how performant we've made validation through the use of rust, I suspect this overhead is significant for some cases (such as , for example). As a result, I think this PR is not likely to be merged.",
    "message_url": "https://github.com/pydantic/pydantic/pull/6902#issuecomment-1653766332",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the PR!\n\nWe just released [new docs mostly written from scratch](https://facebook.github.io/react/). However this means that all old localized content is gone, as new one needs to be written.\n\nWe will track this effort in https://github.com/facebook/react/issues/8063. The goal is to make it easier for people to review localizations so you wouldn't have to wait for the core team, and your PRs would be reviewed much faster.\n\nSorry, and thank you for your work!\n",
    "clean_message": "Thanks for the PR! We just released new docs mostly written from scratch. However this means that all old localized content is gone, as new one needs to be written. We will track this effort in . The goal is to make it easier for people to review localizations so you wouldn't have to wait for the core team, and your PRs would be reviewed much faster. Sorry, and thank you for your work!",
    "message_url": "https://github.com/facebook/react/pull/7235#issuecomment-255591775",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I don't think it is appropriate to create \"official\" support forums without previous notice. Also, i don't think many people are using Facebook for open source projects or even _anything_ development related.\n",
    "clean_message": "I don't think it is appropriate to create \"official\" support forums without previous notice. Also, i don't think many people are using Facebook for open source projects or even anything development related.",
    "message_url": "https://github.com/pallets/flask/pull/638#issuecomment-10761042",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@pushkine adopting TypeScript more widely is great! do you think we could break up this PR into multiple smaller PRs? E.g. upgrading dependencies seems like it could be fairly separable",
    "clean_message": "adopting TypeScript more widely is great! do you think we could break up this PR into multiple smaller PRs? E.g. upgrading dependencies seems like it could be fairly separable",
    "message_url": "https://github.com/sveltejs/svelte/pull/4886#issuecomment-633315619",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "As of the last time I checked, no. I'll try again though and edit this comment with the results.\n\nClearly I was wrong. :)\n",
    "clean_message": "As of the last time I checked, no. I'll try again though and edit this comment with the results. Clearly I was wrong. :)",
    "message_url": "https://github.com/psf/requests/pull/1476#issuecomment-21314676",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks for the interest! I'm actually not sure about this. I don't think that \"valid\" fully conveys the message here, I feel it makes it look like the code is valid or not, but it's not about having the code valid, but the fact that Pydantic has support for it. I would think the word \"supported\" could work better, but it is also used in the same sentence afterwards.\r\n\r\nWhat do you think?",
    "clean_message": "Thanks for the interest! I'm actually not sure about this. I don't think that \"valid\" fully conveys the message here, I feel it makes it look like the code is valid or not, but it's not about having the code valid, but the fact that Pydantic has support for it. I would think the word \"supported\" could work better, but it is also used in the same sentence afterwards. What do you think?",
    "message_url": "https://github.com/tiangolo/fastapi/pull/3698#issuecomment-1226394943",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "If nobody has a better way to implement this, should we call it good? Tests are passing. \ud83d\ude42 ",
    "clean_message": "If nobody has a better way to implement this, should we call it good? Tests are passing. \ud83d\ude42 ",
    "message_url": "https://github.com/sveltejs/svelte/pull/5963#issuecomment-786881910",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Fixes the type we return in `getIteratedTypeOfIterable` for `for..await..of`. and `yield*` when the expression is an `Iterable<Promise<T>>`.\r\n\r\nFixes #24570\r\n\r\n",
    "clean_message": "Fixes the type we return in  for . and  when the expression is an `Iterable<Promise<T Fixes #24570",
    "message_url": "https://github.com/microsoft/TypeScript/pull/27247",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Improves error message for when a `waitForSelector` call uses the hidden: true option.\r\n\r\nRather than just saying\r\n\r\n```\r\nwaiting for selector \"div\" failed: timeout\r\n```\r\n\r\nit will say\r\n\r\n```\r\nwaiting for selector \"div\" to be hidden failed: timeout\r\n```\r\n\r\n(when appropriate).\r\n\r\nAddresses #2854, replaces PR #2909\r\n",
    "clean_message": "Improves error message for when a  call uses the hidden: true option. Rather than just saying it will say (when appropriate). Addresses #2854, replaces PR #2909",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/2911",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Signed-off-by: Trishna Guha <trishnaguha17@gmail.com>\r\n\r\n##### SUMMARY\r\n<!--- Describe the change, including rationale and design decisions -->\r\nfixes https://github.com/ansible/ansible/issues/37494\r\n<!---\r\nIf you are fixing an existing issue, please include \"Fixes #nnn\" in your\r\ncommit message and your description; but you should still explain what\r\nthe change does.\r\n-->\r\n\r\n##### ISSUE TYPE\r\n<!--- Pick one below and delete the rest: -->\r\n - Bugfix Pull Request\r\n\r\n##### COMPONENT NAME\r\n<!--- Name of the module, plugin, module or task -->\r\nmodules/network/nxos/nxos_bgp_af.py\r\n##### ANSIBLE VERSION\r\n<!--- Paste verbatim output from \"ansible --version\" between quotes below -->\r\n```\r\ndevel, 2.5\r\n```",
    "clean_message": "Signed-off-by: Trishna Guha < SUMMARY <!--- Describe the change, including rationale and design decisions --fixes  <!--- If you are fixing an existing issue, please include \"Fixes #nnn\" in your commit message and your description; but you should still explain what the change does. -- ISSUE TYPE <!--- Pick one below and delete the rest: -- - Bugfix Pull Request COMPONENT NAME <!--- Name of the module, plugin, module or task --modules/network/nxos/nxos_bgp_af.py ANSIBLE VERSION <!--- Paste verbatim output from \"ansible --version\" between quotes below --",
    "message_url": "https://github.com/ansible/ansible/pull/37610",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "fixes#9703",
    "clean_message": "fixes#9703",
    "message_url": "https://github.com/facebook/react/pull/9734",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi @gregmagolan, could you please rebase this PR, so we rerun all tests against the latest master? Since it's a pretty major upgrade, I just want to make sure master is still green. Thank you.",
    "clean_message": "Hi , could you please rebase this PR, so we rerun all tests against the latest master? Since it's a pretty major upgrade, I just want to make sure master is still green. Thank you.",
    "message_url": "https://github.com/angular/angular/pull/34877#issuecomment-577452981",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "\u2026 total. This is confusing.\n\nAssuming only two test suites have no-runtime errors here is the output:\n\nPreviously: 77 tests failed, 8 test suites failed, 9 tests passed (86 total in 2 test suites, run time 3.33s)\nNew: 77 tests failed, 8 test suites failed, 9 tests passed (86 total in 15 test suites, run time 3.33s)\n",
    "clean_message": "\u2026 total. This is confusing. Assuming only two test suites have no-runtime errors here is the output: Previously: 77 tests failed, 8 test suites failed, 9 tests passed (86 total in 2 test suites, run time 3.33s) New: 77 tests failed, 8 test suites failed, 9 tests passed (86 total in 15 test suites, run time 3.33s)",
    "message_url": "https://github.com/jestjs/jest/pull/618",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Small update: fetch now supports abort https://developers.google.com/web/updates/2017/09/abortable-fetch\r\n\r\nNeed to make sure that polyfill (especially that is bundles with c-r-a) supports it. ",
    "clean_message": "Small update: fetch now supports abort  Need to make sure that polyfill (especially that is bundles with c-r-a) supports it. ",
    "message_url": "https://github.com/facebook/react/pull/8883#issuecomment-333205511",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I'm not actively participating in the translation efforts any longer but I would encourage you to create a separate pull request with a new translation.",
    "clean_message": "I'm not actively participating in the translation efforts any longer but I would encourage you to create a separate pull request with a new translation.",
    "message_url": "https://github.com/tiangolo/fastapi/pull/1585#issuecomment-1026634647",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "See issue 4142. Currently show() does not exit after all windows have been closed. The relevant code was in src/_macosx.m, but was inadvertently lost in pull request 4006. This bug fix checks the number of windows remaining after closing one window, and calls [NSApp stop: self] if there are no more windows.\nOne open question is how Python show respond to keyboard interrupts (ctrl-c) while show() is running. Currently ctrl-c does nothing (other than printing ctrl-c to the screen). I guess it would make sense for ctrl-c to cause show() to exit.\n",
    "clean_message": "See issue 4142. Currently show() does not exit after all windows have been closed. The relevant code was in src/_macosx.m, but was inadvertently lost in pull request 4006. This bug fix checks the number of windows remaining after closing one window, and calls [NSApp stop: self] if there are no more windows. One open question is how Python show respond to keyboard interrupts (ctrl-c) while show() is running. Currently ctrl-c does nothing (other than printing ctrl-c to the screen). I guess it would make sense for ctrl-c to cause show() to exit.",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/4144",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I'm not sure what the exact training time will be, its taking me about 1 hour 30 for the eval step, but that's for a BS of 1, the BS can def be bumped up on a 7900xtx. Lets say about 10x off, I think the big thing will be multigpu.\r\n\r\nIs it fine if I lock the multigpu bounty and just do it on a tinybox? cuz my system doesn't have multiple gpus. tho it should probably be doable with like the torch backend on cpu and a gpu, i don't see why not. Do you have a specific communication protocol allreduce should use? NCCL? or just some python multiprocessing stuff?",
    "clean_message": "I'm not sure what the exact training time will be, its taking me about 1 hour 30 for the eval step, but that's for a BS of 1, the BS can def be bumped up on a 7900xtx. Lets say about 10x off, I think the big thing will be multigpu. Is it fine if I lock the multigpu bounty and just do it on a tinybox? cuz my system doesn't have multiple gpus. tho it should probably be doable with like the torch backend on cpu and a gpu, i don't see why not. Do you have a specific communication protocol allreduce should use? NCCL? or just some python multiprocessing stuff?",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/874#issuecomment-1583296731",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> But I think the main difference is the use of post_processing here vs calling _cython_agg_general in yours. What do you think about the additional argument?\r\n\r\nbc it is only passed from _idxmin_idxmax, could we avoid having the argument at all and just do the post-processing there?",
    "clean_message": "bc it is only passed from _idxmin_idxmax, could we avoid having the argument at all and just do the post-processing there?",
    "message_url": "https://github.com/pandas-dev/pandas/pull/54234#issuecomment-1648504107",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I'd merge the colorizer (if it's clear from code it's just a colorizer), I think the formatting is fine from what I've seen. The risk is that it misprints the ptx and that bug wastes hours of someone's time.",
    "clean_message": "I'd merge the colorizer (if it's clear from code it's just a colorizer), I think the formatting is fine from what I've seen. The risk is that it misprints the ptx and that bug wastes hours of someone's time.",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/1128#issuecomment-1620874730",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Implementation of commit should not be just a copy. Usually it compares candidate with running and deploys the differences. This is important, as you don't want to have any service interruption or breakage in stats collection in services or protocols untouched.\n\nSaying this, implementation of edit-config against running might be different dependent on the protocol stack used. There are implementations which process the edit-config request as single transactions - while others might do more imperative/ordered style config.\n\nUnclear, if this really matters to playbook authors. Clearly you would always prefer transactions against no transactions - but it will always depend a bit on the actual implementation and users should be aware about it. Potentially this is one of the bad takes in the NETCONF RFC, as they provide some flexibility which leads to different behavior on different boxes.\n\n/wiso\n\n\n-------- Urspr\u00fcngliche Nachricht --------\nVon: Leandro Lisboa Penz <notifications@github.com>\nDatum:03.04.2017 23:25 (GMT+01:00)\nAn: ansible/ansible <ansible@noreply.github.com>\nCc: \"Wisotzky, Sven (Nokia - DE/Stuttgart)\" <sven.wisotzky@nokia.com>, Mention <mention@noreply.github.com>\nBetreff: Re: [ansible/ansible] Update netconf_config.py to include option for datastore and improve error handling (#23199)\n\n\nI've tested this with https://github.com/lpenz/ansible-testing-netconf, which uses openyuma, and it's ok.\nCode is looking good too.\n\nI'm just wondering if we shouldn't document a little better the fact that the selected datastore simply selects the mechanism used to activate the configuration. I mean, if you select datastore=candidate, the module sends the configuration to the candidate datastore and then commits it, which will have the effect of copying the candidate over the running datastore.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://github.com/ansible/ansible/pull/23199#issuecomment-291278813>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AJ7bBW5Fq8S6zZS0OfZyfGUjMtBd65DKks5rsWPjgaJpZM4MwjUr>.\n",
    "clean_message": "Implementation of commit should not be just a copy. Usually it compares candidate with running and deploys the differences. This is important, as you don't want to have any service interruption or breakage in stats collection in services or protocols untouched. Saying this, implementation of edit-config against running might be different dependent on the protocol stack used. There are implementations which process the edit-config request as single transactions - while others might do more imperative/ordered style config. Unclear, if this really matters to playbook authors. Clearly you would always prefer transactions against no transactions - but it will always depend a bit on the actual implementation and users should be aware about it. Potentially this is one of the bad takes in the NETCONF RFC, as they provide some flexibility which leads to different behavior on different boxes. /wiso -------- Urspr\u00fcngliche Nachricht -------- Von: Leandro Lisboa Penz <Datum:03.04.2017 23:25 (GMT+01:00) An: ansible/ansible <Cc: \"Wisotzky, Sven (Nokia - DE/Stuttgart)\" <Betreff: Re: [ansible/ansible] Update netconf_config.py to include option for datastore and improve error handling (#23199) I've tested this with , which uses openyuma, and it's ok. Code is looking good too. I'm just wondering if we shouldn't document a little better the fact that the selected datastore simply selects the mechanism used to activate the configuration. I mean, if you select datastore=candidate, the module sends the configuration to the candidate datastore and then commits it, which will have the effect of copying the candidate over the running datastore. \u2014 You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub<",
    "message_url": "https://github.com/ansible/ansible/pull/23199#issuecomment-291416710",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi! \r\nI'm so excited to see webpackbar is being used for ant-design build system! There were minor inconsistencies by one of the 3.x patches that caused an error reported in nuxt/webpackbar#30 (Related commit 5204b45e01e91026c8cc63dba343b1c67ca8f7a0) (Sorry for that \ud83d\ude4f) After that I tried to personally investigate some inconsistencies and finally with `3.1.2` not only problem resolved, but webpackbar is much stable with concurrent logs!\r\n\r\n**IMPORTANT:** As antd-tools is a dep of this repository and also uses webpackbar, ant-design/antd-tools#81 should be better applied and published first.\r\n\r\n![kapture 2018-11-10 at 2 59 50](https://user-images.githubusercontent.com/5158436/48293628-50b37b80-e495-11e8-98ee-a026fd842fbe.gif)\r\n\r\n\r\n* [ ] Make sure that you propose PR to right branch: bugfix for `master`, feature for branch `feature`.\r\n* [ ] Make sure that you follow antd's [code convention](https://github.com/ant-design/ant-design/wiki/Code-convention-for-antd).\r\n* [ ] Run `npm run lint` and fix those errors before submitting in order to keep consistent code style.\r\n* [ ] Rebase before creating a PR to keep commit history clear.\r\n* [ ] Add some descriptions and refer relative issues for you PR.\r\n\r\nExtra checklist:\r\n\r\n**if** *isBugFix* **:**\r\n\r\n  * [ ] Make sure that you add at least one unit test for the bug which you had fixed.\r\n\r\n**elif** *isNewFeature* **:**\r\n\r\n  * [ ] Update API docs for the component.\r\n  * [ ] Update/Add demo to demonstrate new feature.\r\n  * [ ] Update TypeScript definition for the component.\r\n  * [ ] Add unit tests for the feature.\r\n",
    "clean_message": "Hi!  I'm so excited to see webpackbar is being used for ant-design build system! There were minor inconsistencies by one of the 3.x patches that caused an error reported in nuxt/webpackbar#30 (Related commit 5204b45e01e91026c8cc63dba343b1c67ca8f7a0) (Sorry for that \ud83d\ude4f) After that I tried to personally investigate some inconsistencies and finally with  not only problem resolved, but webpackbar is much stable with concurrent logs! IMPORTANT: As antd-tools is a dep of this repository and also uses webpackbar, ant-design/antd-tools#81 should be better applied and published first.   [ ] Make sure that you propose PR to right branch: bugfix for , feature for branch . [ ] Make sure that you follow antd's code convention. [ ] Run  and fix those errors before submitting in order to keep consistent code style. [ ] Rebase before creating a PR to keep commit history clear. [ ] Add some descriptions and refer relative issues for you PR.  Extra checklist: if isBugFix :  [ ] Make sure that you add at least one unit test for the bug which you had fixed.  elif isNewFeature :  [ ] Update API docs for the component. [ ] Update/Add demo to demonstrate new feature. [ ] Update TypeScript definition for the component. [ ] Add unit tests for the feature. ",
    "message_url": "https://github.com/ant-design/ant-design/pull/13067",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 2.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Related issue: -\r\n\r\n**Description**\r\n\r\nThis PR ensures `DRACOExporter` does not support `Geometry` anymore. If users want to use the exporter with `Geometry`, they have to perform the conversion to `BufferGeometry` by themselves.",
    "clean_message": "Related issue: - Description This PR ensures  does not support  anymore. If users want to use the exporter with , they have to perform the conversion to  by themselves.",
    "message_url": "https://github.com/mrdoob/three.js/pull/21008",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "``` js\nif (option == 'show' || option == 'hide') { ... }\n```\n\nequivalent\n\n``` js\nif (/^(show|hide)$/.test(option)) { ... }\n```\n",
    "clean_message": "equivalent",
    "message_url": "https://github.com/twbs/bootstrap/pull/15807#issuecomment-74569710",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks so much, I'll try to cherry-pick this only the 1.9 branch to update docs later.",
    "clean_message": "Thanks so much, I'll try to cherry-pick this only the 1.9 branch to update docs later.",
    "message_url": "https://github.com/pydantic/pydantic/pull/4398#issuecomment-1220313854",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Damn, sticky fingers today. Closed the issue. \n",
    "clean_message": "Damn, sticky fingers today. Closed the issue. ",
    "message_url": "https://github.com/mrdoob/three.js/pull/4772#issuecomment-42295598",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "> I think most programmers would expect this and that the traceback is a regression.\r\n\r\nWould most programmers expect this? I'm not sure that I would.\r\n\r\nI think the reality here is that we have discovered that a concern originally raised in #3607 was correct: our defense against `response.raw` being `None` was there not so much because we needed it but because downstream libraries were patching our objects in such a way that `response.raw` was `None`.\r\n\r\nFrom my perspective then, there are two sensible choices. Number one is to change this patch such that we tolerate the *actual problem*: namely, that `response.raw` is `None`. Number two is to decide that we simply don't support `response.raw` being `None`, and the error is exactly correct.\r\n\r\nI think I'm leaning towards number one, if only because we've handled this kind of problem in the past (admittedly with an overbroad `except` block).",
    "clean_message": "Would most programmers expect this? I'm not sure that I would. I think the reality here is that we have discovered that a concern originally raised in #3607 was correct: our defense against  being  was there not so much because we needed it but because downstream libraries were patching our objects in such a way that  was . From my perspective then, there are two sensible choices. Number one is to change this patch such that we tolerate the actual problem: namely, that  is . Number two is to decide that we simply don't support  being , and the error is exactly correct. I think I'm leaning towards number one, if only because we've handled this kind of problem in the past (admittedly with an overbroad  block).",
    "message_url": "https://github.com/psf/requests/pull/3718#issuecomment-262712522",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Just a small cleanup that uses some newer language features to delete ~10 lines of code form `types.ts`.",
    "clean_message": "Just a small cleanup that uses some newer language features to delete ~10 lines of code form .",
    "message_url": "https://github.com/microsoft/TypeScript/pull/30654",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "LGTM :+1: \n",
    "clean_message": "LGTM :+1: ",
    "message_url": "https://github.com/JabRef/jabref/pull/576#issuecomment-167079588",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "You can preview 3776aa5 at https://pr25255-3776aa5.ngbuilds.io/.",
    "clean_message": "You can preview 3776aa5 at .",
    "message_url": "https://github.com/angular/angular/pull/25255#issuecomment-411892699",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "#4102",
    "clean_message": "4102",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/4117",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "awesome, thank you very much.",
    "clean_message": "awesome, thank you very much.",
    "message_url": "https://github.com/pydantic/pydantic/pull/518#issuecomment-493668831",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "##### SUMMARY\r\n\r\nFortinet is adding Ansible support for FortiOS and FortiGate products. This module follows the same structure, guidelines and ideas given in previous approved module for a parallel feature of FortiGate (webfiltering): https://github.com/ansible/ansible/pull/37196 \r\nIn this case we are providing a different functionality: \"Firewall IPv6  EH (extension header) filter\".\r\n\r\nPlease note that this will be part of other modules to come for FortiGate, including different functionalities: system, wireless-controller, firewall, webfilter, ips, web-proxy, wanopt, application, dlp spamfilter, log, vpn, certificate, user, dnsfilter, antivirus, report, waf, authentication, switch controller, endpoint-control and router. We plan to follow the same style, structure and usage as in the previous module in order to make it easier to comply with Ansible guidelines.\r\n\r\n##### ISSUE TYPE\r\n\r\n- New Module Pull Request\r\n\r\n##### COMPONENT NAME\r\n\r\nfortios_firewall_ipv6_eh_filter\r\n\r\n##### ANSIBLE VERSION\r\n```\r\nansible 2.8.0.dev0 (new_module ddbbe5dfa5) last updated 2018/09/24 14:54:57 (GMT +200)\r\n  config file = /etc/ansible/ansible.cfg\r\n  configured module search path = [u'/home/magonzalez/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\r\n  ansible python module location = /home/magonzalez/ansible/lib/ansible\r\n  executable location = /home/magonzalez/ansible/bin/ansible\r\n  python version = 2.7.15rc1 (default, Apr 15 2018, 21:51:34) [GCC 7.3.0]\r\n```",
    "clean_message": "SUMMARY Fortinet is adding Ansible support for FortiOS and FortiGate products. This module follows the same structure, guidelines and ideas given in previous approved module for a parallel feature of FortiGate (webfiltering): In this case we are providing a different functionality: \"Firewall IPv6  EH (extension header) filter\". Please note that this will be part of other modules to come for FortiGate, including different functionalities: system, wireless-controller, firewall, webfilter, ips, web-proxy, wanopt, application, dlp spamfilter, log, vpn, certificate, user, dnsfilter, antivirus, report, waf, authentication, switch controller, endpoint-control and router. We plan to follow the same style, structure and usage as in the previous module in order to make it easier to comply with Ansible guidelines. ISSUE TYPE  New Module Pull Request  COMPONENT NAME fortios_firewall_ipv6_eh_filter ANSIBLE VERSION",
    "message_url": "https://github.com/ansible/ansible/pull/51954",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "The issue is that if we still need the context in user space, what do we gain by adding it in the reconciler? Other than slightly more overhead.\r\n\r\nWhat you could do is make this a prod context too and use it to swap to RCTVirtualText automatically in the renderer instead of in the wrapper. It's a bit unfortunate because we have to add conditionals that gets tested for every kind of view, not just text.",
    "clean_message": "The issue is that if we still need the context in user space, what do we gain by adding it in the reconciler? Other than slightly more overhead. What you could do is make this a prod context too and use it to swap to RCTVirtualText automatically in the renderer instead of in the wrapper. It's a bit unfortunate because we have to add conditionals that gets tested for every kind of view, not just text.",
    "message_url": "https://github.com/facebook/react/pull/12766#issuecomment-387483678",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "The failing test seems unrelated to the changes I made.",
    "clean_message": "The failing test seems unrelated to the changes I made.",
    "message_url": "https://github.com/plotly/plotly.py/pull/1863#issuecomment-549194509",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "This is a comment that describes the purpose of a class.\r\n\r\n----\r\n\r\n- [ ] Change in CHANGELOG.md described\r\n- [ ] Tests created for changes\r\n- [ ] Manually tested changed features in running JabRef\r\n- [ ] Screenshots added in PR description (for bigger UI changes)\r\n- [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message)\r\n- [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)\r\n",
    "clean_message": "This is a comment that describes the purpose of a class.   [ ] Change in CHANGELOG.md described [ ] Tests created for changes [ ] Manually tested changed features in running JabRef [ ] Screenshots added in PR description (for bigger UI changes) [ ] Ensured that the git commit message is a good one [ ] Check documentation status (Issue created for outdated help page at help.jabref.org?) ",
    "message_url": "https://github.com/JabRef/jabref/pull/4282",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I am always interested in learning new things. Currently I'm not up to date with this PR. Is this meant to update this PR or address issues in the [Rework](https://github.com/JabRef/jabref/projects/2)?\r\nBut it eventually would be a slow process. What about the JavaFX Team from @JabRef/stupro  ? :smile: ",
    "clean_message": "I am always interested in learning new things. Currently I'm not up to date with this PR. Is this meant to update this PR or address issues in the Rework? But it eventually would be a slow process. What about the JavaFX Team from /stupro  ? :smile: ",
    "message_url": "https://github.com/JabRef/jabref/pull/2157#issuecomment-429619020",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Woohoo! \r\nJenkins, test this please.",
    "clean_message": "Woohoo!  Jenkins, test this please.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/8783#issuecomment-295794426",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "fix(Launcher): PUPPETEER_CHROMIUM_REVISION not used when launching chromium #2490\r\n\r\nCheck for PUPPETEER_CHROMIUM_REVISION when launching the browser, can be used during installation",
    "clean_message": "fix(Launcher): PUPPETEER_CHROMIUM_REVISION not used when launching chromium #2490 Check for PUPPETEER_CHROMIUM_REVISION when launching the browser, can be used during installation",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/2491",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@Rich-Harris \r\n> Come to think of it, I wonder if we should separate out element directives from component directives:\r\n\r\n+1!",
    "clean_message": "-Harris  +1!",
    "message_url": "https://github.com/sveltejs/svelte/pull/2925#issuecomment-499499505",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `main` branch for v2.x (or to a previous version branch)\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n",
    "clean_message": "<!-- Please make sure to read the Pull Request Guidelines: -- <!-- PULL REQUEST TEMPLATE --<!-- (Update \"[ ]\" to \"[x]\" to check a box) -- What kind of change does this PR introduce? (check at least one)  [ ] Bugfix [ ] Feature [ ] Code style update [x] Refactor [ ] Build-related changes [ ] Other, please describe:  Does this PR introduce a breaking change? (check one)  [ ] Yes [x] No  If yes, please describe the impact and migration path for existing applications: The PR fulfills these requirements:  [ ] It's submitted to the  branch for v2.x (or to a previous version branch) [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. , where \"xxx\" is the issue number) [x] All tests are passing:  [ ] New/updated tests are included  If adding a new feature, the PR's description includes: - [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it) Other information:",
    "message_url": "https://github.com/vuejs/vue/pull/12869",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I'm getting some weird behavior now (working off the latest master). calling `iplot` now doesn't do anything...it looks to output something, but no plot is ever shown. It looks like something along these lines was changed recently...is anybody else experiencing this? @Kully @theengineear \n",
    "clean_message": "I'm getting some weird behavior now (working off the latest master). calling  now doesn't do anything...it looks to output something, but no plot is ever shown. It looks like something along these lines was changed recently...is anybody else experiencing this?   ",
    "message_url": "https://github.com/plotly/plotly.py/pull/482#issuecomment-221705606",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "for services that require Authorization in the header, all redirect calls to a different domain would result in a 403-Forbidden.  Authorization should be preserved just as Authentication is.\n",
    "clean_message": "for services that require Authorization in the header, all redirect calls to a different domain would result in a 403-Forbidden.  Authorization should be preserved just as Authentication is.",
    "message_url": "https://github.com/psf/requests/pull/2692",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "It was not introduced by this PR, but the behaviour when there is a very large number of cols/rows is weird. For example\r\n```\r\npx.scatter(gapminder, x=\"pop\", y=\"lifeExp\", facet_row=\"country\")\r\n```\r\nor \r\n```\r\npx.scatter(gapminder, x=\"pop\", y=\"lifeExp\", facet_col=\"country\", facet_col_wrap=8)\r\n```\r\ngive errors like\r\n```\r\n~/code/plotly.py/packages/python/plotly/_plotly_utils/basevalidators.py in raise_invalid_val(self, v, inds)\r\n    281                 typ=type_str(v),\r\n    282                 v=repr(v),\r\n--> 283                 valid_clr_desc=self.description(),\r\n    284             )\r\n    285         )\r\n\r\nValueError: \r\n    Invalid value of type 'builtins.float' received for the 'domain[1]' property of layout.yaxis\r\n        Received value: -0.010555555555555565\r\n\r\n    The 'domain[1]' property is a number and may be specified as:\r\n      - An int or float in the interval [0, 1]\r\n```\r\nwhich is not very helpful as an error message. Should we either introduce a limit in the number of cols/rows, or try to catch this and output a better message?",
    "clean_message": "It was not introduced by this PR, but the behaviour when there is a very large number of cols/rows is weird. For example or  give errors like which is not very helpful as an error message. Should we either introduce a limit in the number of cols/rows, or try to catch this and output a better message?",
    "message_url": "https://github.com/plotly/plotly.py/pull/1838#issuecomment-544774882",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "This is a really old one and all callers have since been codemodded away anyway because of problems.\r\n\r\nThis file is not really as rigorously maintained as the official Flow types but has a few more specifics. However, the inconsistency causes problems when you try to pass files typed using the built-in Flow typing for React and mix it with these.\r\n\r\nWe just happen to get away with it because we compile out the types. If we didn't we would hit those problems by even using these in our renderers. We should only use the official types externally.\r\n\r\nIdeally we should tighten up the external types and then just use those internally too.",
    "clean_message": "This is a really old one and all callers have since been codemodded away anyway because of problems. This file is not really as rigorously maintained as the official Flow types but has a few more specifics. However, the inconsistency causes problems when you try to pass files typed using the built-in Flow typing for React and mix it with these. We just happen to get away with it because we compile out the types. If we didn't we would hit those problems by even using these in our renderers. We should only use the official types externally. Ideally we should tighten up the external types and then just use those internally too.",
    "message_url": "https://github.com/facebook/react/pull/18366",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "/ping @wwwtyro \n",
    "clean_message": "/ping  ",
    "message_url": "https://github.com/mrdoob/three.js/pull/5042#issuecomment-63884780",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "# Remove AUTHORS file\r\n\r\n## Reason\r\n  \r\n- AUTHORS file is hard to maintain\r\n- Github/Git is single source of truth\r\n- some authors did not want to be listed by name -> Github profile is maintained by them or NOT if they do not want to\r\n- AUTHORS list also includes 12345 and duplicate names that look odd (and that was the reason why we had mailmap and such to avoid it)\r\n  \r\n## Solutions\r\n\r\n- link to https://github.com/JabRef/jabref/graphs/contributors\r\n- autogenerate file entirely as AUTHORS and ignore duplicates etc\r\n- use something like https://github.com/mgechev/github-contributors-list to generate file\r\n  \r\n## Decision\r\n\r\n- Change info dialog to link to contributors\r\n- global RM search for AUTHORS (.gitattributes)\r\n- RM .mailmap\r\n- disable fullscreen and resize\r\n\r\n\r\n<!-- \r\nDescribe the changes you have made here: what, why, ... \r\nLink issues that are fixed, e.g. \"Fixes #333\".\r\nIf you fixed a koppor issue, link it, e.g. \"Fixes https://github.com/koppor/jabref/issues/47\".\r\nThe title of the PR must not reference an issue, because GitHub does not support autolinking there.\r\n-->\r\n\r\n![image](https://user-images.githubusercontent.com/2141507/104109148-37075c00-52cb-11eb-9844-0101dce5900b.png)\r\n\r\n\r\n<!-- \r\n- Go through the list below. If a task has been completed, mark it done by using `[x]`.\r\n- Please don't remove any items, just leave them unchecked if they are not applicable.\r\n-->\r\n\r\n- [ ] Change in CHANGELOG.md described (if applicable)\r\n- [ ] Tests created for changes (if applicable)\r\n- [ ] Manually tested changed features in running JabRef (always required)\r\n- [x] Screenshots added in PR description (for UI changes)\r\n- [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or, even better, submitted a pull request to the documentation repository.\r\n",
    "clean_message": "Remove AUTHORS file Reason  AUTHORS file is hard to maintain Github/Git is single source of truth some authors did not want to be listed by name -- AUTHORS list also includes 12345 and duplicate names that look odd (and that was the reason why we had mailmap and such to avoid it)  Solutions  link to  autogenerate file entirely as AUTHORS and ignore duplicates etc use something like  to generate file  Decision  Change info dialog to link to contributors global RM search for AUTHORS (.gitattributes) RM .mailmap disable fullscreen and resize  <!--  Describe the changes you have made here: what, why, ...  Link issues that are fixed, e.g. \"Fixes #333\". If you fixed a koppor issue, link it, e.g. \"Fixes \". The title of the PR must not reference an issue, because GitHub does not support autolinking there. --  <!--  - Go through the list below. If a task has been completed, mark it done by using . - Please don't remove any items, just leave them unchecked if they are not applicable. -- - [ ] Change in CHANGELOG.md described (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [x] Screenshots added in PR description (for UI changes) - [ ] Checked documentation: Is the information available and up to date? If not created an issue at <",
    "message_url": "https://github.com/JabRef/jabref/pull/7319",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Cancel my last. Fixed by changing\r\n\r\n```js\r\nupdate_promise = Promise.resolve().then(flush);\r\n```\r\n\r\nto\r\n\r\n```js\r\nupdate_promise = Promise.resolve();\r\nupdate_promise.then(flush);\r\n```",
    "clean_message": "Cancel my last. Fixed by changing to",
    "message_url": "https://github.com/sveltejs/svelte/pull/2030#issuecomment-459098663",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Travis CI jobs were failing inconsistently, \n\nThe gradle forked process that executed tests was killed by the travis VM, hence the build failed with the following log without much clue, but the exit status code `137`. \n\n```\n* What went wrong:\nExecution failed for task ':test'.\n> Process 'Gradle Test Executor 1' finished with non-zero exit value 137\n```\n\n_On the JVM it is the same as bash or zsh, when a program is \"closed\" with a signal, the exit code is `128` + the signal code._ There `137 = 128 + 9`, in other words the process ha received the `SIGKILL` signal. Other project have experienced that since a month (e.g. https://github.com/travis-ci/travis-ci/issues/5582).\n\n**Indeed removing the container mode made the build run correctly.**\n\nI took the time to tweak a bit more the build\n- by leveraging the travis caches for gradle downloads\n- by using the compressed oops for the 64bit JVMs (it should help only a little bit)\n- by upgrading to gradle 2.11\n- by reactivating code coverage\n",
    "clean_message": "Travis CI jobs were failing inconsistently,  The gradle forked process that executed tests was killed by the travis VM, hence the build failed with the following log without much clue, but the exit status code .  On the JVM it is the same as bash or zsh, when a program is \"closed\" with a signal, the exit code is  + the signal code. There , in other words the process ha received the  signal. Other project have experienced that since a month (e.g. ). Indeed removing the container mode made the build run correctly. I took the time to tweak a bit more the build - by leveraging the travis caches for gradle downloads - by using the compressed oops for the 64bit JVMs (it should help only a little bit) - by upgrading to gradle 2.11 - by reactivating code coverage",
    "message_url": "https://github.com/mockito/mockito/pull/369",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I think it makes sense to be able to specify these for the pie chart layout so that one does not need to apply these to the arc.\n\nAfter all, someone using the pie layout most likely does not want to manipulate the individual arc lengths.\n\nThis change also adds default values so that if an inner radius is not set the arc.centroid function does not return NaNs. As cool as donut charts are, I'm sure there are people who may not specify the inner radius and wonder why they can't have labels (as I ran into while learning).\n",
    "clean_message": "I think it makes sense to be able to specify these for the pie chart layout so that one does not need to apply these to the arc. After all, someone using the pie layout most likely does not want to manipulate the individual arc lengths. This change also adds default values so that if an inner radius is not set the arc.centroid function does not return NaNs. As cool as donut charts are, I'm sure there are people who may not specify the inner radius and wonder why they can't have labels (as I ran into while learning).",
    "message_url": "https://github.com/d3/d3/pull/290",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "> It just looks like a dead import\n\n\ud83d\udc4d, will clean dead imports out and rm this PR.\n\nThanks, \n-David",
    "clean_message": "\ud83d\udc4d, will clean dead imports out and rm this PR. Thanks,  -David",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/388#issuecomment-1254188605",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "According to\r\nhttps://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/getConte\r\nxt, it only returns `null if the context identifier is not supported`\r\n(i.e. not \u201c2d\u201d | \"webgl\" | \"experimental-webgl\u201d, when new non-standard\r\nrenderers are omitted).\r\n\r\nIt used to be that way, but was changed part of this (huge) commit, 1c9df8446a1112d7a9c002293d0040068f706416\r\nI cannot find the originating commit in the PR: https://github.com/Microsoft/TypeScript/pull/9697 but it must be somewhere (my git skills are average).\r\n\r\nThis fix might make some people happy: this error generates tons of\r\nuseless and annoying non-null `!` type casts when working with canvases.\r\n\r\n- [ ] There is an associated issue that is labelled\r\n  'Bug' or 'Accepting PRs' or is in the Community milestone\r\n- [x] Code is up-to-date with the `master` branch\r\n- [x] You've successfully run `jake runtests` locally\r\n- [x] You've signed the CLA\r\n- [ ] There are new or updated unit tests validating the change\r\n",
    "clean_message": "According to xt, it only returns  (i.e. not \u201c2d\u201d | \"webgl\" | \"experimental-webgl\u201d, when new non-standard renderers are omitted). It used to be that way, but was changed part of this (huge) commit, 1c9df8446a1112d7a9c002293d0040068f706416 I cannot find the originating commit in the PR:  but it must be somewhere (my git skills are average). This fix might make some people happy: this error generates tons of useless and annoying non-null  type casts when working with canvases.  [ ] There is an associated issue that is labelled   'Bug' or 'Accepting PRs' or is in the Community milestone [x] Code is up-to-date with the  branch [x] You've successfully run  locally [x] You've signed the CLA [ ] There are new or updated unit tests validating the change ",
    "message_url": "https://github.com/microsoft/TypeScript/pull/15498",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Giving permissions away is always something that can create concerns, I know.\nThis is why, in more recent PRs, I've added another paragraph to the instructions:\n\n> In case you're not comfortable with autopublish.meteor.com maintaining access rights to your repos, please head to [GitHub Application Settings](https://github.com/settings/applications) and revoke permissions for _Meteor Autopublish_.\n\nThe only thing that _autopublish.meteor.com_ does is creating a new webhook on the repository (for which write permissions are required...) and this is once for all.\n\n@mbostock the other solution might be manually creating the webhook, but I would have to add some code to _autopublish.meteor.com_ to pick up the first test payload as a new _registration_ (I'll be happy to do it...)\n\nIf you still have concerns and you don't mind doing it, running `meteor publish` after the build would be enough (I guess your meteor.com user was already added to the package maintainers).\n\nAmong the three I'd prefer the second one to get the webhook, but feel free to go for the third (or the first one ;-) ): I'm open to every solution.\n\nWhat do you think @paralin?\n\nThanks for the positive feed-back @mbostock !\n",
    "clean_message": "Giving permissions away is always something that can create concerns, I know. This is why, in more recent PRs, I've added another paragraph to the instructions: The only thing that autopublish.meteor.com does is creating a new webhook on the repository (for which write permissions are required...) and this is once for all. the other solution might be manually creating the webhook, but I would have to add some code to autopublish.meteor.com to pick up the first test payload as a new registration (I'll be happy to do it...) If you still have concerns and you don't mind doing it, running  after the build would be enough (I guess your meteor.com user was already added to the package maintainers). Among the three I'd prefer the second one to get the webhook, but feel free to go for the third (or the first one ;-) ): I'm open to every solution. What do you think ? Thanks for the positive feed-back  !",
    "message_url": "https://github.com/d3/d3/pull/2130#issuecomment-73400187",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> I think maybe it should offer a \"link\" to jump to the appropriate Provider.\r\n\r\nYep, I was thinking this as well. Happy to abandon this one in favor of a \"jump to provider\" feature combined with #18255\r\n\r\n> Although at that point you might as well just edit the appropriate state?\r\n\r\nYou mean like\r\n\r\n```jsx\r\nfunction App() {\r\n  const [state] = React.useState({ color: 2 }); // <--- edit this hook instead?\r\n  return <Context.Provider value={value} />\r\n}\r\n```\r\nIt's not always obvious where the value of a provider comes from. Could be a memo or useState or useReducer hook. I think editing the value directly is more straight forward.",
    "clean_message": "Yep, I was thinking this as well. Happy to abandon this one in favor of a \"jump to provider\" feature combined with #18255 You mean like It's not always obvious where the value of a provider comes from. Could be a memo or useState or useReducer hook. I think editing the value directly is more straight forward.",
    "message_url": "https://github.com/facebook/react/pull/18257#issuecomment-607440370",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Done.\n",
    "clean_message": "Done.",
    "message_url": "https://github.com/twbs/bootstrap/pull/12554#issuecomment-34107043",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "sorry for the delay. the express docs have moved from the gh-pages branch to https://github.com/visionmedia/expressjs.com\n",
    "clean_message": "sorry for the delay. the express docs have moved from the gh-pages branch to ",
    "message_url": "https://github.com/expressjs/express/pull/994#issuecomment-24009813",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@chriddyp sounds good. \nI'm especially agree/am concerned with this point:  \"I do think it's confusing to try to remember which Capital Letter chart types require you to call get_trace and which ones \"you can just plot\".\"\n",
    "clean_message": "sounds good.  I'm especially agree/am concerned with this point:  \"I do think it's confusing to try to remember which Capital Letter chart types require you to call get_trace and which ones \"you can just plot\".\"",
    "message_url": "https://github.com/plotly/plotly.py/pull/222#issuecomment-112456130",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This is a shot in the dark, but can you try removing the font caches in `~/.matplotlib/fontList.cache` and `~/.matplotlib/fontList.py3k.cache`?\n",
    "clean_message": "This is a shot in the dark, but can you try removing the font caches in  and ?",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/940#issuecomment-6289368",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "OK.\n",
    "clean_message": "OK.",
    "message_url": "https://github.com/d3/d3/pull/1632#issuecomment-28716307",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "'power cycled' to restart CI and then realized circle does not build the merged version anyway....",
    "clean_message": "'power cycled' to restart CI and then realized circle does not build the merged version anyway....",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/10431#issuecomment-365652705",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "We need CUDA in CI, otherwise these PRs are really hard to merge. There's a $200 bounty for doing it.\r\n\r\nCheck out https://github.com/gpuocelot/gpuocelot",
    "clean_message": "We need CUDA in CI, otherwise these PRs are really hard to merge. There's a $200 bounty for doing it. Check out ",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/888#issuecomment-1575624273",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Currently, it is possible to manually set a scale value outside a zoom behavior's scaleExtent.\n\n``` js\nvar zoom = d3.behavior.zoom();\nzoom.scaleExtent();\n > [0, Infinity]\nzoom.scale(-1);\nzoom.scale();\n> -1\nzoom.scaleExtent();\n> [0, Infinity]\n```\n\nThis seems broken to me. If you disagree, fine, close the PR. There's already a clipping function `scaleTo` so we just call that.\n",
    "clean_message": "Currently, it is possible to manually set a scale value outside a zoom behavior's scaleExtent. This seems broken to me. If you disagree, fine, close the PR. There's already a clipping function  so we just call that.",
    "message_url": "https://github.com/d3/d3/pull/2128",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "This does raise a point about this leading to some user confusion, though.  @mdboom, can you update this PR to add a little bit to the `nddata` documentation that gives an example of this, and tries to clarify this point so other users don't make the (very reasonable) assumption @kbarbary did?\n",
    "clean_message": "This does raise a point about this leading to some user confusion, though.  , can you update this PR to add a little bit to the  documentation that gives an example of this, and tries to clarify this point so other users don't make the (very reasonable) assumption  did?",
    "message_url": "https://github.com/astropy/astropy/pull/266#issuecomment-6214196",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Running `CUDA=1 python3 examples/llama.py --timing --prompt \"Hello.\" --temperature=0 --tinyfake --count 1` gave errors:\r\n```\r\nkernel.cu(5): error: no suitable constructor exists to convert from \"float\" to \"float4\"\r\n    float4 acc0_0 = 0.0f;\r\n```\r\nand\r\n```\r\nAttributeError: 'RawCUDABuffer' object has no attribute '_cl'\r\n```\r\nI know you don't like extra lines, but these two changes fixed the issues.",
    "clean_message": "Running  gave errors: and I know you don't like extra lines, but these two changes fixed the issues.",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/749",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@petebacondarwin, PTAL.",
    "clean_message": ", PTAL.",
    "message_url": "https://github.com/angular/angular/pull/16844#issuecomment-302160733",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "`core.dtypes.common.is_period` is confusingly named and never used.  This PR gets rid of it.\r\n\r\nThe deprecated numpy API that causes zillions of warnings includes `ndarray.data`, so this replaces the old usage with the encouraged usage.\r\n\r\nA bunch of `tslibs.util` isn't actually used in tslibs.util, so the relevant functions are moved up to `_libs.util`.\r\n\r\nDocstrings for most of what's left in tslibs.util.\r\n\r\nSimplify util._checknull by removing an unnecessary try/except.",
    "clean_message": "is confusingly named and never used.  This PR gets rid of it. The deprecated numpy API that causes zillions of warnings includes , so this replaces the old usage with the encouraged usage. A bunch of  isn't actually used in tslibs.util, so the relevant functions are moved up to . Docstrings for most of what's left in tslibs.util. Simplify util._checknull by removing an unnecessary try/except.",
    "message_url": "https://github.com/pandas-dev/pandas/pull/22071",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Greetings, @OverkillGuy. I find current issue very useful and groundlessly freezed almost merged.\r\nAfter a glance view I have a few comments (I'm nobody at this community, so just ignore, if you find them useless):\r\n- Screenshot contains tiny lines on upper and right borders.\r\n- \"A look at the Header\" section fully copies code from previous one, but really uses only 5 lines of it.\r\n- In \"API Key in Cookies\" and \"API Key in Query\" where did `oauth_header` come from? As I see, you have copied it from [test file](https://github.com/tiangolo/fastapi/blob/46b903f70b586ae0019185e6793c6a400e6bb90c/tests/test_security_api_key_cookie.py#L15), but I don't get why it is named the same there either.\r\n- Throughout, `User` class takes API key and uses it as a username. I think, it's not the variable name you want to use for a secret.\r\n- The last lines talk about `auto_error` being `False`, but such parameter does not even exist here. Move to the previous `auto_error` description in A \"look at the Header\".\r\n- `\"randomized-string-1234\"` makes no sense. May be make external function `can_make_reques_with_key(key) -> bool` always returning `True`\r\n",
    "clean_message": "Greetings, . I find current issue very useful and groundlessly freezed almost merged. After a glance view I have a few comments (I'm nobody at this community, so just ignore, if you find them useless): - Screenshot contains tiny lines on upper and right borders. - \"A look at the Header\" section fully copies code from previous one, but really uses only 5 lines of it. - In \"API Key in Cookies\" and \"API Key in Query\" where did  come from? As I see, you have copied it from test file, but I don't get why it is named the same there either. - Throughout,  class takes API key and uses it as a username. I think, it's not the variable name you want to use for a secret. - The last lines talk about  being , but such parameter does not even exist here. Move to the previous  description in A \"look at the Header\". -  makes no sense. May be make external function `can_make_reques_with_key(key) -",
    "message_url": "https://github.com/tiangolo/fastapi/pull/4818#issuecomment-1321089199",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Yes. I commented in the wrong place. I greatly dislike the reliance on False-y values for tests. That should have been on #2813 \n",
    "clean_message": "Yes. I commented in the wrong place. I greatly dislike the reliance on False-y values for tests. That should have been on #2813 ",
    "message_url": "https://github.com/psf/requests/pull/2814#issuecomment-146568857",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hello,\n\n**This bug fixes #2666, a html file reproducing the bug within it's context can be found [here](https://github.com/GuillaumeLeclerc/vue-seo/blob/master/examples/hreflang.html)** \n\nSince it's only one line I don't think a test is required but I'll explain why the bug occurs and why the PR fixes this.\n\nAs stated [here](https://github.com/vuejs/vue/blob/be7339b38ad5083fd0d0baaa2eb9f508b5f9ce23/src/directives/internal/component.js#L55), the compilation is cached so for all components except the first one the attributes are not removed. Users might want to use the ':is' version. In this case it's not removed from the DOM and visible.\n\nThis PR fixes the bug in my codebase.\n\nThank you !\n",
    "clean_message": "Hello, This bug fixes #2666, a html file reproducing the bug within it's context can be found here  Since it's only one line I don't think a test is required but I'll explain why the bug occurs and why the PR fixes this. As stated here, the compilation is cached so for all components except the first one the attributes are not removed. Users might want to use the ':is' version. In this case it's not removed from the DOM and visible. This PR fixes the bug in my codebase. Thank you !",
    "message_url": "https://github.com/vuejs/vue/pull/2672",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "sorry",
    "clean_message": "sorry",
    "message_url": "https://github.com/sveltejs/svelte/pull/4456#issuecomment-590645478",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "There is some issue with eslint on travis, I'll figure it out. @pugnascotia thanks for working on this, it'll take me a bit longer to get to this PR as there are currently 20+ open requests and I'm still catching up with work at FB after my vacation.",
    "clean_message": "There is some issue with eslint on travis, I'll figure it out.  thanks for working on this, it'll take me a bit longer to get to this PR as there are currently 20+ open requests and I'm still catching up with work at FB after my vacation.",
    "message_url": "https://github.com/jestjs/jest/pull/2359#issuecomment-270866116",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "### Before submitting the PR, please make sure you do the following\r\n- [x] It's really useful if your PR references an issue where it is discussed ahead of time. In many cases, features are absent for a reason. For large changes, please create an RFC: https://github.com/sveltejs/rfcs\r\n- [x] Prefix your PR title with `feat:`, `fix:`, `chore:`, or `docs:`.\r\n- [x] This message body should clearly illustrate what problems it solves.\r\n- [ ] Ideally, include a test that fails without this PR but passes with it.\r\n\r\n### Tests\r\n-  [x] Run the tests with `npm test` and lint the project with `npm run lint`\r\n\r\ncloses: #8533\r\n\r\n\r\ntransition slide will become not smooth with min-height and min-width.\r\nhttps://svelte.dev/repl/b2fc23f665c341cbbe99d964b0c6e696?version=3.57.0\r\n\r\nI think we can add ```min-height: 0``` or ```min-width: 0``` to resolve this problem.\r\n",
    "clean_message": "Before submitting the PR, please make sure you do the following  [x] It's really useful if your PR references an issue where it is discussed ahead of time. In many cases, features are absent for a reason. For large changes, please create an RFC:  [x] Prefix your PR title with , , , or . [x] This message body should clearly illustrate what problems it solves. [ ] Ideally, include a test that fails without this PR but passes with it.  Tests  [x] Run the tests with  and lint the project with   closes: #8533 transition slide will become not smooth with min-height and min-width. I think we can add  or  to resolve this problem.",
    "message_url": "https://github.com/sveltejs/svelte/pull/8550",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": ":+1: (for reals)\n",
    "clean_message": ":+1: (for reals)",
    "message_url": "https://github.com/twbs/bootstrap/pull/15088#issuecomment-62654945",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Added two more fixes related to hovering and delay time:\n\n1) Prevent tooltips from being triggered if their triggering element is disabled. The issue was that mouseleave and mouseeneter events aren't fired for disabled elements (for instance, buttons,) so disabling a button while a tooltip is showing would make the tooltip stay stuck on the page.\n\n2) Quickly mousing back and forth over a tooltip trigger element when using delay could cause the tooltip to be displayed multiple times (quickly flash.) Explicitly clearing timers inside enter()/leave() prevents this from happening.\n",
    "clean_message": "Added two more fixes related to hovering and delay time: 1) Prevent tooltips from being triggered if their triggering element is disabled. The issue was that mouseleave and mouseeneter events aren't fired for disabled elements (for instance, buttons,) so disabling a button while a tooltip is showing would make the tooltip stay stuck on the page. 2) Quickly mousing back and forth over a tooltip trigger element when using delay could cause the tooltip to be displayed multiple times (quickly flash.) Explicitly clearing timers inside enter()/leave() prevents this from happening.",
    "message_url": "https://github.com/twbs/bootstrap/pull/2570#issuecomment-4526698",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "> is it really worth the extra effort to stop people from fiddling with this?\r\n\r\nIt's more that ``@property`` prevents whole-sale replacement, but not in-place modification of arrays. For something that's meant to be immutable, it's a failing. Currently this really applies to ``m_nu``, but I'm envisioning when cosmologies can be array-valued and all the parameters will be similarly susceptible.\r\n\r\n> is it then OK to just change an input argument? It feels like an unwarranted side effect.... Or should a copy be made?\r\n\r\nA good point about changing input arguments. A copy should probably be made. OTOH for large arrays that can be wasteful. A kwarg ``copy`` might be warranted. But that's probably better tackled in a later PR when it's more relevant.\r\nI'll copy the parameter before setting the writeable flag.\r\n",
    "clean_message": "It's more that  prevents whole-sale replacement, but not in-place modification of arrays. For something that's meant to be immutable, it's a failing. Currently this really applies to m_nu, but I'm envisioning when cosmologies can be array-valued and all the parameters will be similarly susceptible. A good point about changing input arguments. A copy should probably be made. OTOH for large arrays that can be wasteful. A kwarg copy might be warranted. But that's probably better tackled in a later PR when it's more relevant. I'll copy the parameter before setting the writeable flag.",
    "message_url": "https://github.com/astropy/astropy/pull/12749#issuecomment-1017111965",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Upon wish of @lenhard, nothing more to say here\r\n",
    "clean_message": "Upon wish of , nothing more to say here",
    "message_url": "https://github.com/JabRef/jabref/pull/3006",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Good :) We should have a github badge for that. I hope it makes it through the commit and export well, I'll be OOO for a couple of days but I believe it should not have issues.",
    "clean_message": "Good :) We should have a github badge for that. I hope it makes it through the commit and export well, I'll be OOO for a couple of days but I believe it should not have issues.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/56926#issuecomment-1203339510",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "When explicitly asking for the config (using `--showConfig`) we shouldn't honor `--useStderr`, because in that case, you _expect_ the main output to _be_ your configuration. And, `--useStderr` was introduced to avoid corrupting JSON coming out as a response; and there is no need for that when requesting the config, because the config _is_ JSON.\r\n\r\n",
    "clean_message": "When explicitly asking for the config (using ) we shouldn't honor , because in that case, you expect the main output to be your configuration. And,  was introduced to avoid corrupting JSON coming out as a response; and there is no need for that when requesting the config, because the config is JSON.",
    "message_url": "https://github.com/jestjs/jest/pull/6447",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": ":+1: :cake:\n",
    "clean_message": ":+1: :cake:",
    "message_url": "https://github.com/psf/requests/pull/1585#issuecomment-24262263",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Given that 2.8 is current stable I don't think we need this anymore\r\n@paulRbr The size of the backlog gets in the way of spotting simplier PRs like this sometimes, appologies for not getting to this sooner.",
    "clean_message": "Given that 2.8 is current stable I don't think we need this anymore  The size of the backlog gets in the way of spotting simplier PRs like this sometimes, appologies for not getting to this sooner.",
    "message_url": "https://github.com/ansible/ansible/pull/34943#issuecomment-527532476",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Form what I've checked it looks good. Let me some more time to see if there's some weird thing as well ;)\n\nThanks for this work, it muck simpler than to rewrite an `isDefault` check.\n\nFor reader's reference : https://code.google.com/p/mockito/issues/detail?id=456#c6\n",
    "clean_message": "Form what I've checked it looks good. Let me some more time to see if there's some weird thing as well ;) Thanks for this work, it muck simpler than to rewrite an  check. For reader's reference : ",
    "message_url": "https://github.com/mockito/mockito/pull/39#issuecomment-37980543",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "will merge after the CI runs",
    "clean_message": "will merge after the CI runs",
    "message_url": "https://github.com/plotly/plotly.py/pull/2591#issuecomment-650151177",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "+1 \n",
    "clean_message": "+1 ",
    "message_url": "https://github.com/astropy/astropy/pull/1007#issuecomment-17108843",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Use button instead of non-interactive element (div).\r\n(Removes a Svelte a11y warning.)\r\n\r\n### Before submitting the PR, please make sure you do the following\r\n- [x] It's really useful if your PR references an issue where it is discussed ahead of time. In many cases, features are absent for a reason. For large changes, please create an RFC: https://github.com/sveltejs/rfcs\r\n- [x] Prefix your PR title with `feat:`, `fix:`, `chore:`, or `docs:`.\r\n- [x] This message body should clearly illustrate what problems it solves.\r\n- [ ] Ideally, include a test that fails without this PR but passes with it.\r\n\r\n### Tests\r\n-  [ ] Run the tests with `npm test` and lint the project with `npm run lint`\r\n",
    "clean_message": "Use button instead of non-interactive element (div). (Removes a Svelte a11y warning.) Before submitting the PR, please make sure you do the following  [x] It's really useful if your PR references an issue where it is discussed ahead of time. In many cases, features are absent for a reason. For large changes, please create an RFC:  [x] Prefix your PR title with , , , or . [x] This message body should clearly illustrate what problems it solves. [ ] Ideally, include a test that fails without this PR but passes with it.  Tests  [ ] Run the tests with  and lint the project with  ",
    "message_url": "https://github.com/sveltejs/svelte/pull/8308",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry for the delay on responding to this. We need to keep these aliases for now, because there are certain third-party users of the C++ `Dataset` API that will break if we remove them. Since there's no ETA on when that will cease to be the case, I'm going to close this PR for now.",
    "clean_message": "Sorry for the delay on responding to this. We need to keep these aliases for now, because there are certain third-party users of the C++  API that will break if we remove them. Since there's no ETA on when that will cease to be the case, I'm going to close this PR for now.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/23149#issuecomment-444993332",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Yeah... It's fine to add the jade examples... But don't remove working ejs examples :)\n\nKind regards,\nJarrad Seers\n\nOn 9/10/2012, at 8:02 PM, sakateka notifications@github.com wrote:\n\n> I agree\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n",
    "clean_message": "Yeah... It's fine to add the jade examples... But don't remove working ejs examples :) Kind regards, Jarrad Seers On 9/10/2012, at 8:02 PM, sakateka  wrote:",
    "message_url": "https://github.com/expressjs/express/pull/1356#issuecomment-9251041",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "**Summary**\r\n\r\nAs reported in https://github.com/facebook/jest/issues/3997, Jest mocks currently do not have the same arity as their underlying functions. This PR attempts to fix that.\r\n\r\n**Test plan**\r\n\r\nRun unit tests locally.\r\nTest in a local project using tests provided in issue https://github.com/facebook/jest/issues/3997\r\nWrite unit test in jest-mock to ensure arity is set properly",
    "clean_message": "Summary As reported in , Jest mocks currently do not have the same arity as their underlying functions. This PR attempts to fix that. Test plan Run unit tests locally. Test in a local project using tests provided in issue  Write unit test in jest-mock to ensure arity is set properly",
    "message_url": "https://github.com/jestjs/jest/pull/4170",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Same question for URLs and passwords. I'm on latest stable Chrome on OSX.",
    "clean_message": "Same question for URLs and passwords. I'm on latest stable Chrome on OSX.",
    "message_url": "https://github.com/facebook/react/pull/9584#issuecomment-298633159",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "The snapshot should be updated, and this is exactly what has been fixed in source-map 0.5.14.\r\n\r\nLet's take this snapshot for an example\r\nhttps://github.com/facebook/jest/blob/bbfef531f436a08698e2c4b289659d48265142c6/e2e/__tests__/__snapshots__/customMatcherStackTrace.test.ts.snap#L22-L47\r\nIt is produced by\r\nhttps://github.com/facebook/jest/blob/bbfef531f436a08698e2c4b289659d48265142c6/e2e/custom-matcher-stack-trace/__tests__/sync.test.js#L41-L54\r\n\r\nIn the code above, the error is thrown _in_ the function `baz`, according to the [stack trace format](https://v8.dev/docs/stack-trace-api#appendix%3A-stack-trace-format), it should print on the first line the name of the function _called_, which is `baz`, instead of `Error`.\r\n\r\nsource-map v0.5.16 fixed this bug and one can see the snapshot difference on the CI log.\r\n```diff\r\n    - Snapshot  - 6\r\n    + Received  + 6\r\n\r\n    @@ -14,11 +14,11 @@\r\n               |             ^\r\n            46 |     };\r\n            47 | \r\n            48 |     // This expecation fails due to an error we throw (intentionally)\r\n\r\n    -       at Error (__tests__/sync.test.js:45:13)\r\n    -       at baz (__tests__/sync.test.js:43:23)\r\n    -       at bar (__tests__/sync.test.js:42:23)\r\n    -       at foo (__tests__/sync.test.js:52:7)\r\n    -       at Object.callback (__tests__/sync.test.js:11:18)\r\n    -       at Object.toCustomMatch (__tests__/sync.test.js:53:8)\r\n    +       at baz (__tests__/sync.test.js:45:13)\r\n    +       at bar (__tests__/sync.test.js:43:23)\r\n    +       at foo (__tests__/sync.test.js:42:23)\r\n    +       at callback (__tests__/sync.test.js:52:7)\r\n    +       at Object.toCustomMatch (__tests__/sync.test.js:11:18)\r\n    +       at Object.<anonymous> (__tests__/sync.test.js:53:8)\r\n```\r\n\r\nYou can also verify the correctness by running the following JavaScript program copy pasted from `__tests__/sync.test.js`\r\n```js\r\nconst foo = () => bar(); \r\nconst bar = () => baz(); \r\nconst baz = () => { \r\n  throw Error('qux'); \r\n};\r\n\r\nfoo();\r\n```\r\n\r\nIt will print the following stack trace.\r\n```\r\n/Users/jh/code/babel/test.js:4\r\n     throw Error('qux');\r\n     ^\r\n\r\nError: qux\r\n    at baz (/Users/jh/code/babel/test.js:4:12)\r\n    at bar (/Users/jh/code/babel/test.js:2:22)\r\n    at foo (/Users/jh/code/babel/test.js:1:19)\r\n    at Object.<anonymous> (/Users/jh/code/babel/test.js:7:1)\r\n    at Module._compile (internal/modules/cjs/loader.js:956:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:973:10)\r\n    at Module.load (internal/modules/cjs/loader.js:812:32)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:724:14)\r\n    at Function.Module.runMain (internal/modules/cjs/loader.js:1025:10)\r\n    at internal/main/run_main_module.js:17:11\r\n```",
    "clean_message": "The snapshot should be updated, and this is exactly what has been fixed in source-map 0.5.14. Let's take this snapshot for an example It is produced by In the code above, the error is thrown in the function , according to the stack trace format, it should print on the first line the name of the function called, which is , instead of . source-map v0.5.16 fixed this bug and one can see the snapshot difference on the CI log. You can also verify the correctness by running the following JavaScript program copy pasted from  It will print the following stack trace.",
    "message_url": "https://github.com/jestjs/jest/pull/9147#issuecomment-551300686",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "https://github.com/sveltejs/svelte/pull/5847 warn that module variables are not reactive when used in a reactive statement\r\n\r\n```svelte\r\n<script context=\"module\">\r\n   let PI = 3.14;\r\n</script>\r\n<script>\r\n  $: twoPi = 2 * PI;\r\n</script>\r\n```\r\n\r\nhowever this is a valid use case, which should not have warnings:\r\n\r\n```svelte\r\n<script context=\"module\">\r\n   let PI = 3.14;\r\n</script>\r\n<script>\r\n  let r;\r\n  $: area = PI * r * r;\r\n</script>\r\n```\r\n\r\n### Before submitting the PR, please make sure you do the following\r\n- ~~[ ] It's really useful if your PR references an issue where it is discussed ahead of time. In many cases, features are absent for a reason. For large changes, please create an RFC: https://github.com/sveltejs/rfcs~~\r\n- [x] Prefix your PR title with `[feat]`, `[fix]`, `[chore]`, or `[docs]`.\r\n- [x] This message body should clearly illustrate what problems it solves.\r\n- [x] Ideally, include a test that fails without this PR but passes with it.\r\n\r\n### Tests\r\n-  [x] Run the tests with `npm test` and lint the project with `npm run lint`\r\n",
    "clean_message": "warn that module variables are not reactive when used in a reactive statement however this is a valid use case, which should not have warnings: Before submitting the PR, please make sure you do the following  ~~[ ] It's really useful if your PR references an issue where it is discussed ahead of time. In many cases, features are absent for a reason. For large changes, please create an RFC:  [x] Prefix your PR title with , , , or . [x] This message body should clearly illustrate what problems it solves. [x] Ideally, include a test that fails without this PR but passes with it.  Tests  [x] Run the tests with  and lint the project with  ",
    "message_url": "https://github.com/sveltejs/svelte/pull/6510",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "For posterity, the following changes were squashed into 6de612e7767c4114d65cb06fc6606436e3081dc3 due to a temporary export problem:\r\n\r\n141201358\tForce fix documentation causing open source blocks.\r\n141198275\tAvoid making horrible docstrings when KeywordRequired() is used\r\n141196439\tTensorFlow: Update generated OSS Python Op docs.\r\n141195963\tMoved cuda_libdevice_path.cc to make the functionality available accross all platforms\r\n141194861\tChange head_test size from small to medium.\r\n141189800\tTensorFlow: Update generated OSS Python Op docs.\r\n141188581\tPart 2c of renaming SparseTensor.shape -> SparseTensor.dense_shape\r\n141188238\t[XLA:CPU] Mac portability fixes.\r\n141187979\tPart 2d of renaming SparseTensor.shape -> SparseTensor.dense_shape\r\n141187865\tadd name arguments to tf.split and standardize names between tf.split and\r\n141187490\tPart 2d of renaming SparseTensor.shape -> SparseTensor.dense_shape\r\n141186655\tFixed name collision in saver test.\r\n141186135\tPart 2b of renaming SparseTensor.shape -> SparseTensor.dense_shape\r\n141185169\tTensorFlow: Update generated OSS Python Op docs.\r\n141180811\tTensorFlow: Update generated OSS Python Op docs.\r\n141176394\tTensorFlow: Update generated OSS Python Op docs.\r\n141174390\tRemove resources from the public API for now.\r\n141172667\tTensorFlow: Update generated OSS Python Op docs.\r\n141170685\tPart 2c of renaming SparseTensor.shape -> SparseTensor.dense_shape\r\n141169934\tTensorFlow: Update generated OSS Python Op docs.\r\n141167099\tTensorFlow: Update generated OSS Python Op docs.\r\n141163858\tTensorFlow: Update generated OSS Python Op docs.\r\n141161010\tTensorFlow: Update generated OSS Python Op docs.\r\n141158743\tTensorFlow: Update generated OSS Python Op docs.\r\n141155653\tTensorFlow: Update generated OSS Python Op docs.\r\n141152716\tTensorFlow: Update generated OSS Python Op docs.\r\n141152197\tClarify wording in RNN tutorial.\r\n141149578\tTensorFlow: Update generated OSS Python Op docs.\r\n141147227\tTensorFlow: Update generated OSS Python Op docs.\r\n141145195\tTensorFlow: Update generated OSS Python Op docs.\r\n141142798\tTensorFlow: Update generated OSS Python Op docs.\r\n141140181\tTensorFlow: Update generated OSS Python Op docs.\r\n141139340\tPart 2c of renaming SparseTensor.shape -> SparseTensor.dense_shape\r\n141137926\tTensorFlow: Update generated OSS Python Op docs.\r\n141135381\tTensorFlow: Update generated OSS Python Op docs.\r\n141132823\tTensorFlow: Update generated OSS Python Op docs.\r\n141129991\tTensorFlow: Update generated OSS Python Op docs.\r\n141127103\tTensorFlow: Update generated OSS Python Op docs.",
    "clean_message": "For posterity, the following changes were squashed into 6de612e7767c4114d65cb06fc6606436e3081dc3 due to a temporary export problem: 141201358   Force fix documentation causing open source blocks. 141198275   Avoid making horrible docstrings when KeywordRequired() is used 141196439   TensorFlow: Update generated OSS Python Op docs. 141195963   Moved cuda_libdevice_path.cc to make the functionality available accross all platforms 141194861   Change head_test size from small to medium. 141189800   TensorFlow: Update generated OSS Python Op docs. 141188581   Part 2c of renaming SparseTensor.shape -141188238   [XLA:CPU] Mac portability fixes. 141187979   Part 2d of renaming SparseTensor.shape -141187865   add name arguments to tf.split and standardize names between tf.split and 141187490   Part 2d of renaming SparseTensor.shape -141186655   Fixed name collision in saver test. 141186135   Part 2b of renaming SparseTensor.shape -141185169   TensorFlow: Update generated OSS Python Op docs. 141180811   TensorFlow: Update generated OSS Python Op docs. 141176394   TensorFlow: Update generated OSS Python Op docs. 141174390   Remove resources from the public API for now. 141172667   TensorFlow: Update generated OSS Python Op docs. 141170685   Part 2c of renaming SparseTensor.shape -141169934   TensorFlow: Update generated OSS Python Op docs. 141167099   TensorFlow: Update generated OSS Python Op docs. 141163858   TensorFlow: Update generated OSS Python Op docs. 141161010   TensorFlow: Update generated OSS Python Op docs. 141158743   TensorFlow: Update generated OSS Python Op docs. 141155653   TensorFlow: Update generated OSS Python Op docs. 141152716   TensorFlow: Update generated OSS Python Op docs. 141152197   Clarify wording in RNN tutorial. 141149578   TensorFlow: Update generated OSS Python Op docs. 141147227   TensorFlow: Update generated OSS Python Op docs. 141145195   TensorFlow: Update generated OSS Python Op docs. 141142798   TensorFlow: Update generated OSS Python Op docs. 141140181   TensorFlow: Update generated OSS Python Op docs. 141139340   Part 2c of renaming SparseTensor.shape -141137926   TensorFlow: Update generated OSS Python Op docs. 141135381   TensorFlow: Update generated OSS Python Op docs. 141132823   TensorFlow: Update generated OSS Python Op docs. 141129991   TensorFlow: Update generated OSS Python Op docs. 141127103   TensorFlow: Update generated OSS Python Op docs.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/6137#issuecomment-265350345",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "<!--\r\nFirst of all, thank you for your contribution! \ud83d\ude04\r\n\r\nNew feature please send pull request to feature branch, and rest to master branch.\r\nPull request will be merged after one of collaborators approve.\r\nPlease makes sure that these form are filled before submitting your pull request, thank you!\r\n-->\r\n\r\n[[\u4e2d\u6587\u7248\u6a21\u677f / Chinese template](https://github.com/ant-design/ant-design/blob/master/.github/PULL_REQUEST_TEMPLATE/pr_cn.md)]\r\n\r\n### \ud83e\udd14 This is a ...\r\n\r\n- [ ] New feature\r\n- [ ] Bug fix\r\n- [ ] Site / documentation update\r\n- [ ] Demo update\r\n- [ ] Component style update\r\n- [ ] TypeScript definition update\r\n- [ ] Bundle size optimization\r\n- [ ] Perfermance optimization\r\n- [ ] Refactoring\r\n- [ ] Code style optimization\r\n- [ ] Test Case\r\n- [x] Branch merge\r\n- [ ] Other (about what?)\r\n\n\n-----\n[View rendered CHANGELOG.en-US.md](https://github.com/ant-design/ant-design/blob/master/CHANGELOG.en-US.md)\n[View rendered CHANGELOG.zh-CN.md](https://github.com/ant-design/ant-design/blob/master/CHANGELOG.zh-CN.md)\n[View rendered components/auto-complete/index.en-US.md](https://github.com/ant-design/ant-design/blob/master/components/auto-complete/index.en-US.md)\n[View rendered components/auto-complete/index.zh-CN.md](https://github.com/ant-design/ant-design/blob/master/components/auto-complete/index.zh-CN.md)\n[View rendered components/breadcrumb/index.en-US.md](https://github.com/ant-design/ant-design/blob/master/components/breadcrumb/index.en-US.md)\n[View rendered components/breadcrumb/index.zh-CN.md](https://github.com/ant-design/ant-design/blob/master/components/breadcrumb/index.zh-CN.md)\n[View rendered components/button/index.en-US.md](https://github.com/ant-design/ant-design/blob/master/components/button/index.en-US.md)\n[View rendered components/cascader/index.en-US.md](https://github.com/ant-design/ant-design/blob/master/components/cascader/index.en-US.md)\n[View rendered components/cascader/index.zh-CN.md](https://github.com/ant-design/ant-design/blob/master/components/cascader/index.zh-CN.md)\n[View rendered components/checkbox/index.en-US.md](https://github.com/ant-design/ant-design/blob/master/components/checkbox/index.en-US.md)\n[View rendered components/checkbox/index.zh-CN.md](https://github.com/ant-design/ant-design/blob/master/components/checkbox/index.zh-CN.md)\n[View rendered components/date-picker/index.en-US.md](https://github.com/ant-design/ant-design/blob/master/components/date-picker/index.en-US.md)\n[View rendered components/date-picker/index.zh-CN.md](https://github.com/ant-design/ant-design/blob/master/components/date-picker/index.zh-CN.md)\n[View rendered components/divider/index.en-US.md](https://github.com/ant-design/ant-design/blob/master/components/divider/index.en-US.md)\n[View rendered components/dropdown/index.en-US.md](https://github.com/ant-design/ant-design/blob/master/components/dropdown/index.en-US.md)\n[View rendered components/dropdown/index.zh-CN.md](https://github.com/ant-design/ant-design/blob/master/components/dropdown/index.zh-CN.md)\n[View rendered components/form/index.en-US.md](https://github.com/ant-design/ant-design/blob/master/components/form/index.en-US.md)\n[View rendered components/form/index.zh-CN.md](https://github.com/ant-design/ant-design/blob/master/components/form/index.zh-CN.md)\n[View rendered components/grid/index.en-US.md](https://github.com/ant-design/ant-design/blob/master/components/grid/index.en-US.md)\n[View rendered components/grid/index.zh-CN.md](https://github.com/ant-design/ant-design/blob/master/components/grid/index.zh-CN.md)\n[View rendered components/icon/index.en-US.md](https://github.com/ant-design/ant-design/blob/master/components/icon/index.en-US.md)\n[View rendered components/layout/index.en-US.md](https://github.com/ant-design/ant-design/blob/master/components/layout/index.en-US.md)\n[View rendered components/layout/index.zh-CN.md](https://github.com/ant-design/ant-design/blob/master/components/layout/index.zh-CN.md)\n[View rendered components/menu/index.en-US.md](https://github.com/ant-design/ant-design/blob/master/components/menu/index.en-US.md)\n[View rendered components/menu/index.zh-CN.md](https://github.com/ant-design/ant-design/blob/master/components/menu/index.zh-CN.md)",
    "clean_message": "<!-- First of all, thank you for your contribution! \ud83d\ude04 New feature please send pull request to feature branch, and rest to master branch. Pull request will be merged after one of collaborators approve. Please makes sure that these form are filled before submitting your pull request, thank you! -- [\u4e2d\u6587\u7248\u6a21\u677f / Chinese template] \ud83e\udd14 This is a ...  [ ] New feature [ ] Bug fix [ ] Site / documentation update [ ] Demo update [ ] Component style update [ ] TypeScript definition update [ ] Bundle size optimization [ ] Perfermance optimization [ ] Refactoring [ ] Code style optimization [ ] Test Case [x] Branch merge [ ] Other (about what?)   View rendered CHANGELOG.en-US.md View rendered CHANGELOG.zh-CN.md View rendered components/auto-complete/index.en-US.md View rendered components/auto-complete/index.zh-CN.md View rendered components/breadcrumb/index.en-US.md View rendered components/breadcrumb/index.zh-CN.md View rendered components/button/index.en-US.md View rendered components/cascader/index.en-US.md View rendered components/cascader/index.zh-CN.md View rendered components/checkbox/index.en-US.md View rendered components/checkbox/index.zh-CN.md View rendered components/date-picker/index.en-US.md View rendered components/date-picker/index.zh-CN.md View rendered components/divider/index.en-US.md View rendered components/dropdown/index.en-US.md View rendered components/dropdown/index.zh-CN.md View rendered components/form/index.en-US.md View rendered components/form/index.zh-CN.md View rendered components/grid/index.en-US.md View rendered components/grid/index.zh-CN.md View rendered components/icon/index.en-US.md View rendered components/layout/index.en-US.md View rendered components/layout/index.zh-CN.md View rendered components/menu/index.en-US.md View rendered components/menu/index.zh-CN.md",
    "message_url": "https://github.com/ant-design/ant-design/pull/25320",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Cool, thanks @Kingdageek! :coffee: ",
    "clean_message": "Cool, thanks ! :coffee: ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/5785#issuecomment-1374510515",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hi!\r\n\r\nI believe that **not** enforcing the usage of the 'new' keyword when creating a vue-instance would be a tiny but good improvement for the code. All the tests are passing except for the one that goes against the purpose of of the code change, therefore i had to delete it.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n",
    "clean_message": "Hi! I believe that not enforcing the usage of the 'new' keyword when creating a vue-instance would be a tiny but good improvement for the code. All the tests are passing except for the one that goes against the purpose of of the code change, therefore i had to delete it. <!-- Please make sure to read the Pull Request Guidelines: -- <!-- PULL REQUEST TEMPLATE --<!-- (Update \"[ ]\" to \"[x]\" to check a box) -- What kind of change does this PR introduce? (check at least one)  [ ] Bugfix [ ] Feature [x] Code style update [ ] Refactor [ ] Build-related changes [ ] Other, please describe:  Does this PR introduce a breaking change? (check one)  [ ] Yes [x] No  If yes, please describe the impact and migration path for existing applications: The PR fulfills these requirements:  [x] It's submitted to the  branch for v2.x (or to a previous version branch), not the  branch [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. , where \"xxx\" is the issue number) [ ] All tests are passing:  [ ] New/updated tests are included  If adding a new feature, the PR's description includes: - [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it) Other information:",
    "message_url": "https://github.com/vuejs/vue/pull/10419",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Removes deprecated properties and use new rules instead.\n\nPlease check this change 100% before closing or merge, as I maybe missed something.\n\nI removed `\"disallowEmptyBlocks\": true` because it disallows `function () {}` \u2014 a fallback for functions. I can revert that change if you don't like it. :P\n",
    "clean_message": "Removes deprecated properties and use new rules instead. Please check this change 100% before closing or merge, as I maybe missed something. I removed  because it disallows  \u2014 a fallback for functions. I can revert that change if you don't like it. :P",
    "message_url": "https://github.com/twbs/bootstrap/pull/12968",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@typescript-bot perf test this (this almost certainly has a cost)\r\n@typescript-bot user test this\r\n@typescript-bot run dt\r\n\r\n\r\n@typescript-bot pack this",
    "clean_message": "-bot perf test this (this almost certainly has a cost) -bot user test this -bot run dt -bot pack this",
    "message_url": "https://github.com/microsoft/TypeScript/pull/40232#issuecomment-679465831",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I got fooled by `/jest/` :smile: . Might make a good Jest feature request? cc @cpojer\n",
    "clean_message": "I got fooled by  :smile: . Might make a good Jest feature request? cc ",
    "message_url": "https://github.com/facebook/react/pull/6383#issuecomment-203640602",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@gaearon this is one of the blockers for Jest 26. Thoughts on how to move forward?\r\n\r\nOne solution is to not touch the parts that use an old version of Jest, which is probably the easiest",
    "clean_message": "this is one of the blockers for Jest 26. Thoughts on how to move forward? One solution is to not touch the parts that use an old version of Jest, which is probably the easiest",
    "message_url": "https://github.com/facebook/react/pull/18815#issuecomment-667711165",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I'll happily fix those too. In my opinion, misleading docs are worse than no docs. Those methods have been subject to criticism for years at this point and are targetted for correction in 3.0. May as well correct their documentation until 3.0 is out.",
    "clean_message": "I'll happily fix those too. In my opinion, misleading docs are worse than no docs. Those methods have been subject to criticism for years at this point and are targetted for correction in 3.0. May as well correct their documentation until 3.0 is out.",
    "message_url": "https://github.com/psf/requests/pull/3877#issuecomment-280328324",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Sorry, I completely missed this PR and had no idea about this \ud83d\ude1e \r\nI independently found it today and am working on https://github.com/facebook/react/pull/12842.\r\n\r\n@aweary If you see something like this next time please ping me directly :-). This is an extremely bad issue and we shouldn\u2019t have missed it.",
    "clean_message": "Sorry, I completely missed this PR and had no idea about this \ud83d\ude1e  I independently found it today and am working on . If you see something like this next time please ping me directly :-). This is an extremely bad issue and we shouldn\u2019t have missed it.",
    "message_url": "https://github.com/facebook/react/pull/12764#issuecomment-389907534",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I actually don't know if it really applies to FITS or \"big data\" in any way because JSON (like ASCII) is quite inefficient compared to binary formats (FITS, HDF5, or even `numpy.safe`).\n\nYou just have to check what it does do numpy arrays: `array.tolist()`!\n\nIt would certainly be handy to have some more support in JSON-encoders and decoders but the really nice step forward would be to use something like HDF5 instead. But that's very subjective and I have to admit I don't even know what this `JSONCustomEncoder` is for and where it is used, the `utils.misc` was always a mystery to me. \ud83d\ude04\n",
    "clean_message": "I actually don't know if it really applies to FITS or \"big data\" in any way because JSON (like ASCII) is quite inefficient compared to binary formats (FITS, HDF5, or even ). You just have to check what it does do numpy arrays: ! It would certainly be handy to have some more support in JSON-encoders and decoders but the really nice step forward would be to use something like HDF5 instead. But that's very subjective and I have to admit I don't even know what this  is for and where it is used, the  was always a mystery to me. \ud83d\ude04",
    "message_url": "https://github.com/astropy/astropy/pull/5471#issuecomment-260662430",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "all understood.",
    "clean_message": "all understood.",
    "message_url": "https://github.com/mrdoob/three.js/pull/14827#issuecomment-418186110",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "## Change Summary\r\n\r\nThis PR allows to provide a value for model field which has a default factory, when the provided value matches the value generated by the factory.\r\n\r\n## Checklist\r\n\r\n* [x] Unit tests for the changes exist\r\n* [x] Tests pass on CI and coverage remains at 100%\r\n* [x] Documentation reflects the changes where applicable\r\n* [x] `changes/<pull request or issue id>-<github username>.md` file added describing change\r\n  (see [changes/README.md](https://github.com/samuelcolvin/pydantic/blob/master/changes/README.md) for details)\r\n* [x] My PR is ready to review, **please add a comment including the phrase \"please review\" to assign reviewers**\r\n",
    "clean_message": "Change Summary This PR allows to provide a value for model field which has a default factory, when the provided value matches the value generated by the factory. Checklist  [x] Unit tests for the changes exist [x] Tests pass on CI and coverage remains at 100% [x] Documentation reflects the changes where applicable [x] `changes/<pull request or issue id  (see changes/README.md for details) [x] My PR is ready to review, please add a comment including the phrase \"please review\" to assign reviewers ",
    "message_url": "https://github.com/pydantic/pydantic/pull/2965",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry for the commit spam!\r\nI wanted the ContextVar to be useful enough to replace getenv.\r\n\r\nYou can now do:\r\n```python\r\nwith Context(TEST=1):\r\n    TEST = ContextVar(\"TEST\", 0)\r\n    assert TEST.value == 1 # will be true\r\n```",
    "clean_message": "Sorry for the commit spam! I wanted the ContextVar to be useful enough to replace getenv. You can now do:",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/844#issuecomment-1567349742",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Um yes it appears that @raphw manually merged this into master.\n",
    "clean_message": "Um yes it appears that  manually merged this into master.",
    "message_url": "https://github.com/mockito/mockito/pull/437#issuecomment-227003428",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: Security Vulnerability\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n",
    "clean_message": "<!-- Please make sure to read the Pull Request Guidelines: -- <!-- PULL REQUEST TEMPLATE --<!-- (Update \"[ ]\" to \"[x]\" to check a box) -- What kind of change does this PR introduce? (check at least one)  [ ] Bugfix [ ] Feature [ ] Code style update [ ] Refactor [ ] Build-related changes [x] Other, please describe: Security Vulnerability  Does this PR introduce a breaking change? (check one)  [ ] Yes [x] No  If yes, please describe the impact and migration path for existing applications: The PR fulfills these requirements:  [x] It's submitted to the  branch for v2.x (or to a previous version branch), not the  branch [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. , where \"xxx\" is the issue number) [x] All tests are passing:  [ ] New/updated tests are included  If adding a new feature, the PR's description includes: - [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it) Other information:",
    "message_url": "https://github.com/vuejs/vue/pull/10911",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Yep, no problem.",
    "clean_message": "Yep, no problem.",
    "message_url": "https://github.com/pydantic/pydantic/pull/437#issuecomment-477657392",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "##### SUMMARY\r\n<!--- Describe the change, including rationale and design decisions -->\r\nAdding functionality from playbooks to add/delete/execute CLI or TCL scripts on a FortiManager (FMGR) to run against any number of devices managed by the FMGR.\r\n\r\n<!---\r\nIf you are fixing an existing issue, please include \"Fixes #nnn\" in your\r\ncommit message and your description; but you should still explain what\r\nthe change does.\r\n-->\r\n\r\n##### ISSUE TYPE\r\n<!--- Pick one below and delete the rest: -->\r\n - New Module Pull Request\r\n\r\n\r\n##### COMPONENT NAME\r\n<!--- Name of the module, plugin, module or task -->\r\nfmgr_script.py\r\nfortimanager.py\r\n\r\n##### ANSIBLE VERSION\r\n<!--- Paste verbatim output from \"ansible --version\" between quotes below -->\r\n```\r\nansible 2.4.2.0\r\n  config file = /etc/ansible/ansible.cfg\r\n  configured module search path = [u'/home/cse/PycharmProjects/ansible/lib/ansible/modules']\r\n  ansible python module location = /usr/lib/python2.7/dist-packages/ansible\r\n  executable location = /usr/bin/ansible\r\n  python version = 2.7.12 (default, Nov 20 2017, 18:23:56) [GCC 5.4.0 20160609]```\r\n\r\n\r\n##### ADDITIONAL INFORMATION\r\n<!---\r\nInclude additional information to help people understand the change here.\r\nFor bugs that don't have a linked bug report, a step-by-step reproduction\r\nof the problem is helpful.\r\n  -->\r\nFully developed in-house by Fortinet based on other modules by Fortinet (fortios_config.py) but for a different product.\r\n\r\n<!--- Paste verbatim command output below, e.g. before and after your change -->\r\n```\r\n\r\n```\r\n",
    "clean_message": "SUMMARY <!--- Describe the change, including rationale and design decisions --Adding functionality from playbooks to add/delete/execute CLI or TCL scripts on a FortiManager (FMGR) to run against any number of devices managed by the FMGR. <!--- If you are fixing an existing issue, please include \"Fixes #nnn\" in your commit message and your description; but you should still explain what the change does. -- ISSUE TYPE <!--- Pick one below and delete the rest: -- - New Module Pull Request COMPONENT NAME <!--- Name of the module, plugin, module or task --fmgr_script.py fortimanager.py ANSIBLE VERSION <!--- Paste verbatim output from \"ansible --version\" between quotes below -- ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful.   --Fully developed in-house by Fortinet based on other modules by Fortinet (fortios_config.py) but for a different product. <!--- Paste verbatim command output below, e.g. before and after your change --",
    "message_url": "https://github.com/ansible/ansible/pull/34518",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I see this PR is closed, not sure if there was something else needed here, but I imagine it's no longer needed in some way. Anyway, thanks for the effort! \ud83c\udf70 \r\n\r\n> Sorry for the long delay! \ud83d\ude48  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order.",
    "clean_message": "I see this PR is closed, not sure if there was something else needed here, but I imagine it's no longer needed in some way. Anyway, thanks for the effort! \ud83c\udf70   Sorry for the long delay! \ud83d\ude48  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order. ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/2850#issuecomment-1310203806",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@kennethreitz: You shouldn't really assume PYTHONPATH=`pwd` anyway (since different flavors of python won't like running the same bytecode) - so if you want to create the subdir, either inject path to `ls -d build/lib-*/` depending on python version or more commonly let the user decide by setting PYTHONPATH. I guess one could say that the latter is already in play (disregarding moving tests) :-)\n",
    "clean_message": ": You shouldn't really assume PYTHONPATH= anyway (since different flavors of python won't like running the same bytecode) - so if you want to create the subdir, either inject path to  depending on python version or more commonly let the user decide by setting PYTHONPATH. I guess one could say that the latter is already in play (disregarding moving tests) :-)",
    "message_url": "https://github.com/psf/requests/pull/136#issuecomment-1954926",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "> > Seeing #5502, @Siedlerchr is our linux tester. tada\r\n> \r\n> You wish. Nope, I have only a slow Ubuntu VM (running on my hdd cause my ssd is too small) for testing stuff.\r\n\r\n:smile: \r\n\r\nI tested on a live image with no jabref version, with the version in the ubuntu repo and reinstalling the deb.\r\nThe install seems to never fail and copies the proper json file.\r\n@Siedlerchr if you want to test it to be sure, then you're free to merge",
    "clean_message": ":smile:  I tested on a live image with no jabref version, with the version in the ubuntu repo and reinstalling the deb. The install seems to never fail and copies the proper json file.  if you want to test it to be sure, then you're free to merge",
    "message_url": "https://github.com/JabRef/jabref/pull/5503#issuecomment-546736751",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Sorry to come in late here (I opened issue #5105 that this is a fix for).\r\n\r\n@tanhauhau I think this is not ready to be merged as it only handles one basic path in the lifecycle of an `<img>`.\r\n\r\n> Do we care that this does not set the bound variable back to false when the img element reloads for some reason? Here's an example REPL that changes the src attribute every few seconds. It polls the complete attribute so you can see it change back to false while the new image is loading.\r\n\r\nIndeed, we need this to be able to sense `complete` becoming `false` again upon another `src` beginning to be loaded into the `<img>`. I think specifically this happens as soon as you set the `src` on the `<img>`, but it may also require that the `<img>` be mounted in the DOM at the time and with `display` value other than `none` \u2013 needs confirming. I also don't know whether all occurrences of setting the `src` attribute would result in a load action, or whether there are cases such as, given an existing `<img src=\"//img.png\" />`, assigning `img.src = \"/img.png\";` might simply no-op, for example.\r\n\r\nMy intention in opening the original issue was that this two-way binding could be used to make it easier to build re-usable carousel components. Imagine a Netflix-style app, where there is a single carousel (consisting of a sequence of `<img>` elements) that gets reused when you move up/down to go from, say, the \"Featured\" section, to the \"Watch again\" section. As one moves between sections, the `src` attribute would be updated on each `<img>` element and their `complete` states would update accordingly.\r\n\r\nWhat this makes possible: My plan for this two-way binding was that when any image were not in `complete` state, we could show some kind of placeholder, rather than viewers having to watch an incomplete image load in bit-by-bit. So when moving from category to category, the whole carousel would be placeholders briefly, and one-by-one, the images would load in and we'd be able to declaratively remove the placeholders as each image loads.\r\n\r\nThe implementation as-is has a dead-end lifecycle and needs to cover the whole lifecycle of an `<img>` to be useful in practice, given that Svelte will of course reuse an existing `<img>` element if the only change is an attribute change.\r\n\r\nIn terms of the whole lifecycle: Bear in mind the possibility of the \"error\" event during load as well, in case it makes a difference, e.g. allows you to remove the \"load\" listener until the next `src` attribute update comes in.",
    "clean_message": "Sorry to come in late here (I opened issue #5105 that this is a fix for). I think this is not ready to be merged as it only handles one basic path in the lifecycle of an completefalsesrc<img My intention in opening the original issue was that this two-way binding could be used to make it easier to build re-usable carousel components. Imagine a Netflix-style app, where there is a single carousel (consisting of a sequence of complete<img In terms of the whole lifecycle: Bear in mind the possibility of the \"error\" event during load as well, in case it makes a difference, e.g. allows you to remove the \"load\" listener until the next  attribute update comes in.",
    "message_url": "https://github.com/sveltejs/svelte/pull/5115#issuecomment-887638221",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "While trying to patch a version of TypeScript 3.1, it was fairly tough to build because the dev-time Node dependency wasn't explicitly listed anywhere. I don't want to have to deal with that again. By adding this field, we can let a version switched like Volta know that it needs to run on Node 14. The only tradeoff is that it can fall out of date if not everyone in the team is using it.\r\n",
    "clean_message": "While trying to patch a version of TypeScript 3.1, it was fairly tough to build because the dev-time Node dependency wasn't explicitly listed anywhere. I don't want to have to deal with that again. By adding this field, we can let a version switched like Volta know that it needs to run on Node 14. The only tradeoff is that it can fall out of date if not everyone in the team is using it.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/42746",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "OK, I corrected my comment to prevent confusion. Can it look up/down -- or only horizontally?\r\n\r\nAlso, FYI, macs do not have a middle mouse button.",
    "clean_message": "OK, I corrected my comment to prevent confusion. Can it look up/down -- or only horizontally? Also, FYI, macs do not have a middle mouse button.",
    "message_url": "https://github.com/mrdoob/three.js/pull/22294#issuecomment-895426337",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "okay, I think this is ready, please review.",
    "clean_message": "okay, I think this is ready, please review.",
    "message_url": "https://github.com/pydantic/pydantic/pull/4473#issuecomment-1238356811",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@tparisi - right on.  It can be a little confusing, but I do think this brings us more in line with the spec.  We would love to get your opinion on it when you're back from your conference.  PR #4607 is ready for your perusal when you're free.  Let us know if you would like to chat about it.\n",
    "clean_message": " right on.  It can be a little confusing, but I do think this brings us more in line with the spec.  We would love to get your opinion on it when you're back from your conference.  PR #4607 is ready for your perusal when you're free.  Let us know if you would like to chat about it. ",
    "message_url": "https://github.com/mrdoob/three.js/pull/4607#issuecomment-44028474",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "To resolve PR #49187 , by providing logging messages for  deprecated 'experimental_run_v2'  in Tf 1.x\r\n\r\n",
    "clean_message": "To resolve PR #49187 , by providing logging messages for  deprecated 'experimental_run_v2'  in Tf 1.x",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/49219",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Closes #2141 and closes #2140 \r\n\r\nMaking it possible to specify multiple rows and columns when using `add_shape`, `add_layout_image` or `add_annotation`. \r\nThis pull request is to share the work, so a lot is missing still.\r\n\r\n## Code PR\r\n\r\n- [x] I have read through the [contributing notes](https://github.com/plotly/plotly.py/blob/master/contributing.md) and understand the structure of the package. In particular, if my PR modifies code of `plotly.graph_objects`, my modifications concern the `codegen` files and not generated files.\r\n- [ ] I have added tests (if submitting a new feature or correcting a bug) or\r\n  modified existing tests.\r\n- [ ] For a new feature, I have added documentation examples in an existing or\r\n  new tutorial notebook (please see the doc checklist as well).\r\n- [ ] I have added a CHANGELOG entry if fixing/changing/adding anything substantial.\r\n",
    "clean_message": "Closes #2141 and closes #2140  Making it possible to specify multiple rows and columns when using ,  or .  This pull request is to share the work, so a lot is missing still. Code PR  [x] I have read through the contributing notes and understand the structure of the package. In particular, if my PR modifies code of , my modifications concern the  files and not generated files. [ ] I have added tests (if submitting a new feature or correcting a bug) or   modified existing tests. [ ] For a new feature, I have added documentation examples in an existing or   new tutorial notebook (please see the doc checklist as well). [ ] I have added a CHANGELOG entry if fixing/changing/adding anything substantial. ",
    "message_url": "https://github.com/plotly/plotly.py/pull/2558",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "what a weird thing about this demo, it uses two blur shaders (h/v) each of them has a bunch of texture reads. normally this is slow on my old laptop, but this on is very fast. I wish I could understand why.",
    "clean_message": "what a weird thing about this demo, it uses two blur shaders (h/v) each of them has a bunch of texture reads. normally this is slow on my old laptop, but this on is very fast. I wish I could understand why.",
    "message_url": "https://github.com/mrdoob/three.js/pull/18787#issuecomment-594272028",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "- Adds var `@pagination-font-family` to theme `<Pagination />` component.\r\n______________\r\n* [x] Changes for `master`\r\n* [x] Make sure that you follow antd's [code convention](https://github.com/ant-design/ant-design/wiki/Code-convention-for-antd).\r\n* [x] Run `npm run lint` and fix those errors before submitting in order to keep consistent code style.\r\n* [x] Rebase before creating a PR to keep commit history clear.\r\n* [x] Add some descriptions and refer relative issues for you PR.\r\n",
    "clean_message": " Adds var  to theme masternpm run lint` and fix those errors before submitting in order to keep consistent code style. [x] Rebase before creating a PR to keep commit history clear. [x] Add some descriptions and refer relative issues for you PR. ",
    "message_url": "https://github.com/ant-design/ant-design/pull/9351",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "That's why we need automated testing! :angel: ",
    "clean_message": "That's why we need automated testing! :angel: ",
    "message_url": "https://github.com/mrdoob/three.js/pull/11703#issuecomment-313515139",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "You could also create a discussion point at https://github.com/plk/biblatex ",
    "clean_message": "You could also create a discussion point at  ",
    "message_url": "https://github.com/JabRef/jabref/pull/2364#issuecomment-266296065",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Also enables the object-concise-method transform for --harmony\n\ncloses #1438\n\nTested with `pbpaste | bin/jsx --harmony` (with this on clipboard):\n\n``` js\nvar foo = {\n  bar(x) {\n    return x;\n  }\n};\n```\n",
    "clean_message": "Also enables the object-concise-method transform for --harmony closes #1438 Tested with  (with this on clipboard):",
    "message_url": "https://github.com/facebook/react/pull/1441",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Sorry, this is not going to happen at the time. There are multiple duplicate PRs, see #1567, #1751 \n",
    "clean_message": "Sorry, this is not going to happen at the time. There are multiple duplicate PRs, see #1567, #1751 ",
    "message_url": "https://github.com/pallets/flask/pull/1839#issuecomment-222748959",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Was the bridge package created? ",
    "clean_message": "Was the bridge package created? ",
    "message_url": "https://github.com/jestjs/jest/pull/4557#issuecomment-343772245",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Just chiming in here that I'd love to see this kind of thing in mainline D3.  I would use the version of d3 shown in this PR, but unfortunately it's too old for me now.  ;)\n",
    "clean_message": "Just chiming in here that I'd love to see this kind of thing in mainline D3.  I would use the version of d3 shown in this PR, but unfortunately it's too old for me now.  ;)",
    "message_url": "https://github.com/d3/d3/pull/1299#issuecomment-41338973",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "In general, I like having control over the behavior. With the current API you get a default behavior (H=0\u00ba, S=0) by specifying RGB colors, or you can control the behavior by specifying HSL colors. If we change the interpolator to inherit hue and saturation from the other color as appropriate, then we also remove control because the interpolator cannot distinguish between when H or S is undefined (coming from an RGB color) and when H or S is zero.\n\nI suppose we could change d3.hsl so that `h` and `s` are undefined when you converted from black RGB. But I suspect that might break other things.\n",
    "clean_message": "In general, I like having control over the behavior. With the current API you get a default behavior (H=0\u00ba, S=0) by specifying RGB colors, or you can control the behavior by specifying HSL colors. If we change the interpolator to inherit hue and saturation from the other color as appropriate, then we also remove control because the interpolator cannot distinguish between when H or S is undefined (coming from an RGB color) and when H or S is zero. I suppose we could change d3.hsl so that  and  are undefined when you converted from black RGB. But I suspect that might break other things.",
    "message_url": "https://github.com/d3/d3/pull/833#issuecomment-9234961",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "please review",
    "clean_message": "please review",
    "message_url": "https://github.com/pydantic/pydantic/pull/5862#issuecomment-1562328079",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "closes #7511\n\nThough having duplicated column names in a dataframe is never a good idea, it may happen, and that shouldn't confuse groupby() with a meaningless message. Currently\n\n``` python\n>>> obj=pd.DataFrame(columns=[\"A\",\"B\",\"A\", \"C\"], data=[range(4), range(2,6), range(0, 8, 2)])\n>>> obj.groupby(\"A\").mean()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"pandas/core/generic.py\", line 2846, in groupby\n    sort=sort, group_keys=group_keys, squeeze=squeeze)\n  File \"pandas/core/groupby.py\", line 1173, in groupby\n    return klass(obj, by, **kwds)\n  File \"pandas/core/groupby.py\", line 390, in __init__\n    level=level, sort=sort)\n  File \"pandas/core/groupby.py\", line 2086, in _get_grouper\n    ping = Grouping(group_axis, gpr, obj=obj, name=name, level=level, sort=sort)\n  File \"pandas/core/groupby.py\", line 1925, in __init__\n    self.grouper = self.index.map(self.grouper)\n  File \"pandas/core/index.py\", line 1524, in map\n    return self._arrmap(self.values, mapper)\n  File \"generated.pyx\", line 2203, in pandas.algos.arrmap_int64 (pandas/algos.c:72274)\nTypeError: 'DataFrame' object is not callable\n```\n\nThis patch fixes that.\n\n``` python\n>>> obj.groupby(\"A\").mean()\n     B  C\nA A      \n0 2  1  3\n  4  2  6\n2 4  3  5\n```\n\nThanks.\n",
    "clean_message": "closes #7511 Though having duplicated column names in a dataframe is never a good idea, it may happen, and that shouldn't confuse groupby() with a meaningless message. Currently This patch fixes that. Thanks.",
    "message_url": "https://github.com/pandas-dev/pandas/pull/8210",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Can you please provide a table of the browsers you tested, test cases, and the behavior before and after this change?\n",
    "clean_message": "Can you please provide a table of the browsers you tested, test cases, and the behavior before and after this change?",
    "message_url": "https://github.com/facebook/react/pull/7750#issuecomment-252719684",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@Nathanaela is correct, and I apologize for not realizing this sooner. The current implementation of the pack layout is operating as intended, in that the leaf nodes are comparable but the internal nodes are not. I misspoke in the documentation when I described the intended behavior. If you want to compare across levels of the hierarchy, a treemap is probably the better choice (though padding introduces the same distortion).\n\nIt would be possible to have children of the same depth comparable, rather than designing for leaf nodes to be comparable. But this would need to be a configurable option, as it necessarily prevents accurate comparison of leaf nodes. \n",
    "clean_message": "is correct, and I apologize for not realizing this sooner. The current implementation of the pack layout is operating as intended, in that the leaf nodes are comparable but the internal nodes are not. I misspoke in the documentation when I described the intended behavior. If you want to compare across levels of the hierarchy, a treemap is probably the better choice (though padding introduces the same distortion). It would be possible to have children of the same depth comparable, rather than designing for leaf nodes to be comparable. But this would need to be a configurable option, as it necessarily prevents accurate comparison of leaf nodes. ",
    "message_url": "https://github.com/d3/d3/pull/634#issuecomment-5745529",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Reverts tinygrad/tinygrad#1227\r\n\r\nThis change always make size 1 tensor a constant, which breaks #1273. Passing a size 1 tensor in JIT as input does not work because JIT only updates buffers.\r\n\r\nI recommend reverting this now and find a better way to spec constant tensors.",
    "clean_message": "Reverts tinygrad/tinygrad#1227 This change always make size 1 tensor a constant, which breaks #1273. Passing a size 1 tensor in JIT as input does not work because JIT only updates buffers. I recommend reverting this now and find a better way to spec constant tensors.",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/1274",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!-- describe the changes you have made here: what, why, ... \r\n     Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).\r\n     The title of the PR must not reference an issue, because GitHub does not support autolinking there. -->\r\n\r\n1. Add the following compiler arguments for the `JabRef.main` module:\r\n```\r\n--patch-module test=fastparse_2.12-1.0.0.jar --patch-module test2=fastparse-utils_2.12-1.0.0.jar --patch-module test3=sourcecode_2.12-0.1.4.jar --add-exports javafx.controls/com.sun.javafx.scene.control=org.jabref --add-exports org.controlsfx.controls/impl.org.controlsfx.skin=org.jabref --add-exports javafx.graphics/com.sun.javafx.scene=org.controlsfx.controls --add-exports javafx.graphics/com.sun.javafx.scene.traversal=org.controlsfx.controls --add-exports javafx.graphics/com.sun.javafx.css=org.controlsfx.controls --add-exports javafx.controls/com.sun.javafx.scene.control.behavior=org.controlsfx.controls --add-exports javafx.controls/com.sun.javafx.scene.control=org.controlsfx.controls --add-exports javafx.controls/com.sun.javafx.scene.control.inputmap=org.controlsfx.controls --add-exports javafx.base/com.sun.javafx.event=org.controlsfx.controls --add-exports javafx.base/com.sun.javafx.collections=org.controlsfx.controls --add-exports javafx.base/com.sun.javafx.runtime=org.controlsfx.controls --add-exports javafx.web/com.sun.webkit=org.controlsfx.controls --add-exports javafx.graphics/com.sun.javafx.css=org.controlsfx.controls --patch-module org.jabref=build\\resources\\main\r\n```\r\n2. Switch to Java 11 jdk\r\n3. Select \"Intellj IDEA\" in Settings > Build Tools > Gradle > \"Build and run using\" and \"Run tests using\"\r\n4. Use the provided run configuration.\r\n\r\nOnly problem is that I had to disable the error prone plugin. However, I would say that it is more important to have a simple compilation than this code checker.\r\n\r\n----\r\n\r\n- [ ] Change in CHANGELOG.md described\r\n- [ ] Tests created for changes\r\n- [ ] Manually tested changed features in running JabRef\r\n- [ ] Screenshots added in PR description (for bigger UI changes)\r\n- [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message)\r\n- [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)\r\n",
    "clean_message": "<!-- describe the changes you have made here: what, why, ...       Link issues by using the following pattern: #333 or koppor#49.      The title of the PR must not reference an issue, because GitHub does not support autolinking there. -- 1. Add the following compiler arguments for the  module:  Switch to Java 11 jdk Select \"Intellj IDEA\" in Settings 4. Use the provided run configuration.  Only problem is that I had to disable the error prone plugin. However, I would say that it is more important to have a simple compilation than this code checker.   [ ] Change in CHANGELOG.md described [ ] Tests created for changes [ ] Manually tested changed features in running JabRef [ ] Screenshots added in PR description (for bigger UI changes) [ ] Ensured that the git commit message is a good one [ ] Check documentation status (Issue created for outdated help page at help.jabref.org?) ",
    "message_url": "https://github.com/JabRef/jabref/pull/5249",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Don't apologize, these patches are awesome! Keep them coming :) ",
    "clean_message": "Don't apologize, these patches are awesome! Keep them coming :) ",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/7292#issuecomment-849638346",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I tested it with Chrome on Linux and the behavior occurs.  I tried my Macbook trackpad and it does not occur, but that's because it's a touch device.  As a test I plugged a (non-Apple) mouse into the Macbook and I also see the behavior.\n\nI hear what you're saying about the inconsistent behavior.  I hadn't considered touch devices.  A better solution might be something along the lines of getting the hypotenuse (sqrt(deltaY^2 + deltaX^2)) of the 2D delta.  I guess the question is, what should a 100% horizontal scroll do?  If I scroll exactly horizontally should it zoom?\n",
    "clean_message": "I tested it with Chrome on Linux and the behavior occurs.  I tried my Macbook trackpad and it does not occur, but that's because it's a touch device.  As a test I plugged a (non-Apple) mouse into the Macbook and I also see the behavior. I hear what you're saying about the inconsistent behavior.  I hadn't considered touch devices.  A better solution might be something along the lines of getting the hypotenuse (sqrt(deltaY^2 + deltaX^2)) of the 2D delta.  I guess the question is, what should a 100% horizontal scroll do?  If I scroll exactly horizontally should it zoom?",
    "message_url": "https://github.com/d3/d3/pull/1938#issuecomment-48825029",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for this! However, I'm not concerned about the linter errors here because any moderately intelligent static analysis tool could tell you that they're not a concern. So I don't think this patch provides any particular value to the project. Sorry!",
    "clean_message": "Thanks for this! However, I'm not concerned about the linter errors here because any moderately intelligent static analysis tool could tell you that they're not a concern. So I don't think this patch provides any particular value to the project. Sorry!",
    "message_url": "https://github.com/psf/requests/pull/4194#issuecomment-316386669",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@niallor Thanks for the contribution.",
    "clean_message": "Thanks for the contribution.",
    "message_url": "https://github.com/ansible/ansible/pull/38891#issuecomment-383537866",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks. Applied.\n",
    "clean_message": "Thanks. Applied.",
    "message_url": "https://github.com/pallets/flask/pull/215#issuecomment-1021401",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Ah I didn't know about that. I added it now.",
    "clean_message": "Ah I didn't know about that. I added it now.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/6200#issuecomment-657089080",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Regarding request 3, what is the right place to follow the roadmap? ",
    "clean_message": "Regarding request 3, what is the right place to follow the roadmap? ",
    "message_url": "https://github.com/psf/requests/pull/5711#issuecomment-753511461",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "AFAIK, there is no way to make it compatible, which is the purpose of targeting 5.0, since it's a major version, it is not expected to be perfectly compatible and it's the chance we have to make changes that will break existing servers :)\n",
    "clean_message": "AFAIK, there is no way to make it compatible, which is the purpose of targeting 5.0, since it's a major version, it is not expected to be perfectly compatible and it's the chance we have to make changes that will break existing servers :)",
    "message_url": "https://github.com/expressjs/express/pull/3053#issuecomment-239648580",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Mostly unrelated to this PR other than the note added to the changelog, but I'm :-1: on the requirement for Jinja2, on the basis that these templates are simple enough that they could be generated without it.  But I don't have the time to submit a change to that effect right now, so if I'm the only complaintant don't worry about it for now, I guess?  Unless someone else would like to make the change...\n",
    "clean_message": "Mostly unrelated to this PR other than the note added to the changelog, but I'm :-1: on the requirement for Jinja2, on the basis that these templates are simple enough that they could be generated without it.  But I don't have the time to submit a change to that effect right now, so if I'm the only complaintant don't worry about it for now, I guess?  Unless someone else would like to make the change...",
    "message_url": "https://github.com/astropy/astropy/pull/3166#issuecomment-67248098",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "\r\nadded code syntax to some of the keywords",
    "clean_message": "added code syntax to some of the keywords",
    "message_url": "https://github.com/angular/angular/pull/12956",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Congrats! E-mail me with how you'd like to be paid.",
    "clean_message": "Congrats! E-mail me with how you'd like to be paid.",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/777#issuecomment-1572582862",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!-- Thank you for your contribution! -->\r\n<!-- Unless your change is trivial, please create an issue to discuss the change before creating a PR -->\r\n<!-- See https://pydantic-docs.helpmanual.io/contributing/ for help on Contributing -->\r\n\r\n## Change Summary\r\n\r\nThis PR adds support for configuring the `pydantic-mypy` plugin in `pyproject.toml`, as well as the previous `mypy.ini` config file, enabling full compatibility with `mypy>0.900`. \r\n\r\nConfiguration behavior should be consistent with prior behavior from `mypy.ini`, with enumerated slots populated from the `pydantic-mypy` configuration section, and with non-boolean options resulting in a `ValueError`.\r\n\r\nNote that this increases the pinned `mypy` version in the testing suite to 0.901, and includes some formatting changes for compatibility to the test cases. However, the plugin behavior is the same in earlier versions of `mypy`.\r\n\r\n## Related issue number\r\n\r\nResolves https://github.com/samuelcolvin/pydantic/issues/2895\r\n\r\n## Checklist\r\n\r\n* [x] Unit tests for the changes exist\r\n* [x] Tests pass on CI and coverage remains at 100%\r\n* [x] Documentation reflects the changes where applicable\r\n* [x] `changes/<pull request or issue id>-<github username>.md` file added describing change\r\n  (see [changes/README.md](https://github.com/samuelcolvin/pydantic/blob/master/changes/README.md) for details)\r\n* [x] My PR is ready to review, **please add a comment including the phrase \"please review\" to assign reviewers**\r\n",
    "clean_message": "<!-- Thank you for your contribution! --<!-- Unless your change is trivial, please create an issue to discuss the change before creating a PR --<!-- See  for help on Contributing -- Change Summary This PR adds support for configuring the  plugin in , as well as the previous  config file, enabling full compatibility with mypy.inipydantic-mypyValueErrormypymypychanges/<pull request or issue id  (see changes/README.md for details) * [x] My PR is ready to review, please add a comment including the phrase \"please review\" to assign reviewers",
    "message_url": "https://github.com/pydantic/pydantic/pull/2908",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> When I try to compile with XLA disabled, I get the error\r\n> \r\n> ```\r\n> Traceback (most recent call last):\r\n>   File \"/home/reedwm/venvs/mkl_source_noxla/lib/python3.6/site-packages/tensorflow_core/python/client/session.py\", line 1367, in _do_call\r\n>     return fn(*args)\r\n>   File \"/home/reedwm/venvs/mkl_source_noxla/lib/python3.6/site-packages/tensorflow_core/python/client/session.py\", line 1350, in _run_fn\r\n>     self._extend_graph()\r\n>   File \"/home/reedwm/venvs/mkl_source_noxla/lib/python3.6/site-packages/tensorflow_core/python/client/session.py\", line 1390, in _extend_graph\r\n>     tf_session.ExtendSession(self._session)\r\n> tensorflow.python.framework.errors_impl.InvalidArgumentError: No OpKernel was registered to support Op 'Conv3D' used by {{node Conv3D}} with these attrs: [dilations=[1, 1, 1, 1, 1], padding=\"SAME\", T=DT_BFLOAT16, data_format=\"NDHWC\", strides=[1, 1, 1, 1, 1]]\r\n> Registered devices: [CPU]\r\n> Registered kernels:\r\n>   device='CPU'; T in [DT_DOUBLE]\r\n>   device='CPU'; T in [DT_FLOAT]\r\n>   device='CPU'; T in [DT_HALF]\r\n> \r\n> \t [[Conv3D]]\r\n> ```\r\n> \r\n> In this case, it seems the Conv3D op is not properly being converted to the MKL version.\r\n\r\nPushed a commit that should fix the problem. The issue is that Conv3D and its gradient ops do not have BFLOAT16 kernel registered for Eigen CPU backend. So when the graph passes execute, the placer pass (?) throws an error when it sees Conv3D doesn't have a kernel registered in BFLOAT16 type. The placer runs even before AutoBFloat16Converter runs, and that leads to the problem. \r\n\r\nCurrent mitigation is to register NoOp kernel for all of these operators in BFLOAT16 type that are not supported by Eigen CPU backend.",
    "clean_message": "Pushed a commit that should fix the problem. The issue is that Conv3D and its gradient ops do not have BFLOAT16 kernel registered for Eigen CPU backend. So when the graph passes execute, the placer pass (?) throws an error when it sees Conv3D doesn't have a kernel registered in BFLOAT16 type. The placer runs even before AutoBFloat16Converter runs, and that leads to the problem.  Current mitigation is to register NoOp kernel for all of these operators in BFLOAT16 type that are not supported by Eigen CPU backend.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/34504#issuecomment-581729426",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Ah, yes, I meant to do `linestyle='none', marker='.'` -- could you do that instead? Or, do:\n\n`.scatter(..., marker='.', color='k')`\n\n(I hate that default blue)\n",
    "clean_message": "Ah, yes, I meant to do  -- could you do that instead? Or, do: (I hate that default blue)",
    "message_url": "https://github.com/astropy/astropy/pull/5210#issuecomment-236285686",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@Kludex Take a look at this commit/comment: https://github.com/tiangolo/fastapi/pull/2235/commits/b18d1cbc72f35e9acfb9d40569dce3c71e03457f.\r\n\r\nThe question is how to communicate that a required value was not received for a field with multiple aliases.\r\n\r\nSorry, my initial question was very vague \ud83d\ude2c  ",
    "clean_message": "Take a look at this commit/comment: . The question is how to communicate that a required value was not received for a field with multiple aliases. Sorry, my initial question was very vague \ud83d\ude2c  ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/2235#issuecomment-723346865",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "py.test integration (even though it probably could have been done via tox too)\n",
    "clean_message": "py.test integration (even though it probably could have been done via tox too)",
    "message_url": "https://github.com/pallets/flask/pull/1702#issuecomment-174636549",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "String values for representation now accepted.\n\n```\n>>> sc = SkyCoord(rho=1, phi=1*u.deg, z=1, frame='icrs', representation='cylindrical')\n>>> sc\n<SkyCoord (ICRS): rho=1.0 , phi=1.0 deg, z=1.0 >\n>>> sc.representation = 'spherical'\n>>> sc\n<SkyCoord (ICRS): ra=1.0 deg, dec=45.0 deg, distance=1.41421356237 >\n>>> sc.representation = 'cartesian'\n>>> sc\n<SkyCoord (ICRS): x=0.999847695156 , y=0.0174524064373 , z=1.0 >\n\n>>> ICRS(rho=1*u.one, phi=1*u.deg, z=1*u.one, representation='cylindrical')\n<SkyCoord (ICRS): rho=1.0 , phi=1.0 deg, z=1.0 >\n>>> ICRS(rho=1*u.one, phi=1*u.deg, z=1*u.one, representation='cylindrl')\nTraceback (most recent call last):\n  File \"<ipython-input-3-63770ba22a7f>\", line 1, in <module>\n    ICRS(rho=1*u.one, phi=1*u.deg, z=1*u.one, representation='cylindrl')\n  File \"astropy/coordinates/baseframe.py\", line 213, in __new__\n    representation = _get_repr_cls(kwargs.get('representation') or cls._representation)\n  File \"astropy/coordinates/baseframe.py\", line 41, in _get_repr_cls\n    .format(value, list(REPRESENTATION_CLASSES)))\nValueError: representation is 'cylindrl' but must be a BaseRepresentation class  or one of the string aliases ['spherical', 'cartesian', 'physicsspherical', 'unitspherical', 'cylindrical']\n\n```\n",
    "clean_message": "String values for representation now accepted.",
    "message_url": "https://github.com/astropy/astropy/pull/2586#issuecomment-45333041",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@gunan PTAL",
    "clean_message": "PTAL",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/15012",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@FrancescAlted well there have been some flakiness with some gbq tests; I turned them off for now. We *should* have all green. \r\n\r\nFYI we just have the fail fast to make the results appear quicker. We have LOTS of configurations to test. So allowed failures are really NOT allowed :>\r\n\r\n",
    "clean_message": "well there have been some flakiness with some gbq tests; I turned them off for now. We should have all green.  FYI we just have the fail fast to make the results appear quicker. We have LOTS of configurations to test. So allowed failures are really NOT allowed :",
    "message_url": "https://github.com/pandas-dev/pandas/pull/15383#issuecomment-280012686",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "We are porting our MLIR-based dynamic shape compiler to tf community (From OP def, Patttern, to Optimization pass, etc).\r\n\r\nThere will be 3 PRs to process memory allocation for dynamic shape. 1) Mark shape calculation Ops by Op attribute and insert D2H and H2D Op in mhlo dialect; 2) Add device type info to memref's address space in lmhlo dialect; 3) Convert for device alloc/dealloc with memref's address space.\r\n\r\nThis PR mainly is to add device type info to memref's address space in lmhlo dialect.\r\n\r\nRelated discussion is [here](https://llvm.discourse.group/t/placement-representation-in-tensor-world-buffer-world/3502/6).",
    "clean_message": "We are porting our MLIR-based dynamic shape compiler to tf community (From OP def, Patttern, to Optimization pass, etc). There will be 3 PRs to process memory allocation for dynamic shape. 1) Mark shape calculation Ops by Op attribute and insert D2H and H2D Op in mhlo dialect; 2) Add device type info to memref's address space in lmhlo dialect; 3) Convert for device alloc/dealloc with memref's address space. This PR mainly is to add device type info to memref's address space in lmhlo dialect. Related discussion is here.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/50365",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Fix #5591 \r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] No\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included",
    "clean_message": "Fix #5591  What kind of change does this PR introduce? (check at least one)  [x] Bugfix  Does this PR introduce a breaking change? (check one)  [x] No  The PR fulfills these requirements:  [x] It's submitted to the  branch for v2.x (or to a previous version branch), not the  branch [x] When resolving a specific issue, it's referenced in the PR's title (e.g. , where \"xxx\" is the issue number) [x] All tests are passing:  [x] New/updated tests are included ",
    "message_url": "https://github.com/vuejs/vue/pull/5597",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> For context, how are you running Puppeteer without V8?\r\n\r\n@maddhruv Yeah, I'm not sure either where `captureStackTrace` is missing. I'll close this for now; if this is still relevant, please come back to us.\r\n\r\n",
    "clean_message": "Yeah, I'm not sure either where  is missing. I'll close this for now; if this is still relevant, please come back to us.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/3410#issuecomment-433158417",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry about that, i did not realise that i was pushing over here.\n",
    "clean_message": "Sorry about that, i did not realise that i was pushing over here.",
    "message_url": "https://github.com/pallets/flask/pull/1630#issuecomment-160000526",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@mhevery can you take an other look now. The PR is ready.\n",
    "clean_message": "can you take an other look now. The PR is ready.",
    "message_url": "https://github.com/angular/angular/pull/361#issuecomment-69314436",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "thanks!\n",
    "clean_message": "thanks!",
    "message_url": "https://github.com/jestjs/jest/pull/823#issuecomment-199909846",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I _believe_ the bug in the CI was not caused by changes in this PR.\r\n\r\nThis PR fixed a simple but real bug. I managed to fix it in another way for my client, so I only did this PR if it can improve pandas, especially in those edges cases that can be really annoying. \r\n\r\nI added a test, a whatsnew entry and answered your comments. \r\nCould you please manage to merge it ? \r\n\r\nOtherwise keep it close, it's too much an investment for such a minor improvment.\r\n\r\n",
    "clean_message": "I believe the bug in the CI was not caused by changes in this PR. This PR fixed a simple but real bug. I managed to fix it in another way for my client, so I only did this PR if it can improve pandas, especially in those edges cases that can be really annoying.  I added a test, a whatsnew entry and answered your comments.  Could you please manage to merge it ?  Otherwise keep it close, it's too much an investment for such a minor improvment.",
    "message_url": "https://github.com/pandas-dev/pandas/pull/21947#issuecomment-435698511",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the example! I'd prefer to keep the existing example as-is, mostly because I want the example to be as simple as possible (to use as a starting point). This would make a good example for the wiki.\n\nThough, I'd prefer if you implemented a center constraint (\u00e0 la Polymaps) rather than the stricter visible-area constraint. If you zoom all the way out in your implementation, and then zoom in on a point in Antarctica (for example), then you get temporarily weird zooming due some zoom levels being constrained, but other zoom levels not being constrained. The center constraint has the nice property that it the map's currently-visible center is valid at any zoom level, so it never swims while zooming.\n\nIf you want to reopen this with a new example file, say, mercator-zoom-constrained.html, and implement the center constraint\u2026 then I would be happy to pull this in!\n",
    "clean_message": "Thanks for the example! I'd prefer to keep the existing example as-is, mostly because I want the example to be as simple as possible (to use as a starting point). This would make a good example for the wiki. Though, I'd prefer if you implemented a center constraint (\u00e0 la Polymaps) rather than the stricter visible-area constraint. If you zoom all the way out in your implementation, and then zoom in on a point in Antarctica (for example), then you get temporarily weird zooming due some zoom levels being constrained, but other zoom levels not being constrained. The center constraint has the nice property that it the map's currently-visible center is valid at any zoom level, so it never swims while zooming. If you want to reopen this with a new example file, say, mercator-zoom-constrained.html, and implement the center constraint\u2026 then I would be happy to pull this in!",
    "message_url": "https://github.com/d3/d3/pull/504#issuecomment-3969347",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n",
    "clean_message": "PR Checklist Please check if your PR fulfills the following requirements:  [ ] The commit message follows our guidelines:  [ ] Tests for the changes have been added (for bug fixes / features) [x] Docs have been added / updated (for bug fixes / features)  PR Type What kind of change does this PR introduce? <!-- Please check the one that applies to this PR using \"x\". -- - [ ] Bugfix - [ ] Feature - [ ] Code style update (formatting, local variables) - [ ] Refactoring (no functional changes, no api changes) - [ ] Build related changes - [ ] CI related changes - [x] Documentation content changes - [ ] angular.io application / infrastructure changes - [ ] Other... Please describe: What is the current behavior? <!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -- Issue Number: N/A What is the new behavior? Does this PR introduce a breaking change?  [ ] Yes [x] No  <!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -- Other information",
    "message_url": "https://github.com/angular/angular/pull/33993",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Let me chat with folks.",
    "clean_message": "Let me chat with folks.",
    "message_url": "https://github.com/angular/angular/pull/42285#issuecomment-847417996",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "#7148 \n",
    "clean_message": "7148",
    "message_url": "https://github.com/mrdoob/three.js/pull/7147#issuecomment-139515811",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Fixes https://github.com/sveltejs/svelte/issues/6492",
    "clean_message": "Fixes ",
    "message_url": "https://github.com/sveltejs/svelte/pull/6549",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@vjeux Thanks! All nits should have been resolved except for the error, that convention is used for other errors (in those files at least), so I'll hold off on that for moment unless you want me to correct all of them.\n",
    "clean_message": "Thanks! All nits should have been resolved except for the error, that convention is used for other errors (in those files at least), so I'll hold off on that for moment unless you want me to correct all of them.",
    "message_url": "https://github.com/facebook/react/pull/760#issuecomment-31406241",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I haven't looked at the original issue in depth, but you got me curious on how to use `partition` properly... played with it and looks like something like this would properly handle the double fallback from `app.run` to `SERVER_NAME` to the built-in default. And it does it separately for both host and port values so you can specify one or the other or both:\r\n\r\n    _host = '127.0.0.1'\r\n    _port = 5000\r\n    server_name = self.config.get(\"SERVER_NAME\")\r\n    if server_name:\r\n        _sn_host, _, _sn_port = server_name.partition(':')\r\n    host = host or _sn_host or _host\r\n    port = int(port or _sn_port or _port)\r\n\r\n@r0fls Feel free to use as much or as little of this as you want. I just really liked the clean/linear way your original implementation walked through the configs, so I'd hate to see your solution get too cluttered up... \r\n",
    "clean_message": "I haven't looked at the original issue in depth, but you got me curious on how to use  properly... played with it and looks like something like this would properly handle the double fallback from  to  to the built-in default. And it does it separately for both host and port values so you can specify one or the other or both: _host = '127.0.0.1' _port = 5000 server_name = self.config.get(\"SERVER_NAME\") if server_name:     _sn_host, _, _sn_port = server_name.partition(':') host = host or _sn_host or _host port = int(port or _sn_port or _port)  Feel free to use as much or as little of this as you want. I just really liked the clean/linear way your original implementation walked through the configs, so I'd hate to see your solution get too cluttered up... ",
    "message_url": "https://github.com/pallets/flask/pull/2152#issuecomment-272986076",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "negative"
  },
  {
    "raw_message": "Hello @nikolasburk I'm sorry I let this languish. Let's get these examples on expressjs.com . Looking over this and the other PR, I think it makes the most sense to just land https://github.com/expressjs/expressjs.com/pull/1226 . My reasoning is that (1) the README here is not meant to be a list of all the examples, but just an index for the examples directory and (2) maintaining third-party links in a repository not tried to release versions of a software (i.e. is evergreen) is going to be easier in the long run. We would also need to add our standard third-party disclaimer above the links as well.\r\n\r\nIf you don't see anything wrong with my thoughts, please let me know and we can convert https://github.com/expressjs/expressjs.com/pull/1226 our of draft state and get it landed here in the next few days.",
    "clean_message": "Hello  I'm sorry I let this languish. Let's get these examples on expressjs.com . Looking over this and the other PR, I think it makes the most sense to just land  . My reasoning is that (1) the README here is not meant to be a list of all the examples, but just an index for the examples directory and (2) maintaining third-party links in a repository not tried to release versions of a software (i.e. is evergreen) is going to be easier in the long run. We would also need to add our standard third-party disclaimer above the links as well. If you don't see anything wrong with my thoughts, please let me know and we can convert  our of draft state and get it landed here in the next few days.",
    "message_url": "https://github.com/expressjs/express/pull/4461#issuecomment-932342789",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n",
    "clean_message": "<!-- Please make sure to read the Pull Request Guidelines: -- <!-- PULL REQUEST TEMPLATE --<!-- (Update \"[ ]\" to \"[x]\" to check a box) -- What kind of change does this PR introduce? (check at least one)  [x] Bugfix [ ] Feature [ ] Code style update [ ] Refactor [ ] Build-related changes [ ] Other, please describe:  Does this PR introduce a breaking change? (check one)  [ ] Yes [x] No  If yes, please describe the impact and migration path for existing applications: The PR fulfills these requirements:  [ ] It's submitted to the  branch for v2.x (or to a previous version branch), not the  branch [x] When resolving a specific issue, it's referenced in the PR's title (e.g. , where \"xxx\" is the issue number) [x] All tests are passing:  [x] New/updated tests are included  If adding a new feature, the PR's description includes: - [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it) Other information:",
    "message_url": "https://github.com/vuejs/vue/pull/12779",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks @koppor for reviewing. https://github.com/JabRef/jabref/commit/4fc8551cbe2b32e708eeeea20d86b51115b459cb is needed because it refactors the BibtexParser to confirm to the new `Parser` interface. But https://github.com/JabRef/jabref/commit/443f50fc4e05a56986f9c0dff6790a23f24f9a5e is not really needed (I tried to implement the `doPostCleanup` method via `CleanupWorker` but it turned out to be to messy and unneeded).\n\nWill incorporate your feedback.\n",
    "clean_message": "Thanks  for reviewing.  is needed because it refactors the BibtexParser to confirm to the new  interface. But  is not really needed (I tried to implement the  method via  but it turned out to be to messy and unneeded). Will incorporate your feedback.",
    "message_url": "https://github.com/JabRef/jabref/pull/1929#issuecomment-246264002",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "http://test/OCL:230818332:BASE:230818351:1548378384444:28a48373",
    "clean_message": "http://test/OCL:230818332:BASE:230818351:1548378384444:28a48373",
    "message_url": "https://github.com/angular/angular/pull/28239#issuecomment-457417876",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks so much @sobolevn.",
    "clean_message": "Thanks so much .",
    "message_url": "https://github.com/pydantic/pydantic/pull/3294#issuecomment-1209125136",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@Mugen87 is that for performance reasons? Seems a shame to limit this to B&W if we can do full color and videos. \r\n\r\n",
    "clean_message": "is that for performance reasons? Seems a shame to limit this to B&W if we can do full color and videos. ",
    "message_url": "https://github.com/mrdoob/three.js/pull/13057#issuecomment-355955679",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Please remove build files from this PR.",
    "clean_message": "Please remove build files from this PR.",
    "message_url": "https://github.com/mrdoob/three.js/pull/24195#issuecomment-1147967263",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "\"bare\" maybe? A bare event seems to make sense meaning nothing additional",
    "clean_message": "\"bare\" maybe? A bare event seems to make sense meaning nothing additional",
    "message_url": "https://github.com/vuejs/vue/pull/5977#issuecomment-312340737",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks @samuelcolvin !",
    "clean_message": "Thanks  !",
    "message_url": "https://github.com/pydantic/pydantic/pull/3099#issuecomment-1205323784",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I think you mentioned that you had looked at the tests for round-tripping. Can you add that test to this PR? It's always good to test a new feature or a bug fix when it's implemented.\n\nAlso, can you add an entry under \"bug fixes\" in the CHANGES.rst file?\n",
    "clean_message": "I think you mentioned that you had looked at the tests for round-tripping. Can you add that test to this PR? It's always good to test a new feature or a bug fix when it's implemented. Also, can you add an entry under \"bug fixes\" in the CHANGES.rst file?",
    "message_url": "https://github.com/astropy/astropy/pull/5237#issuecomment-239527439",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Changes are noted in https://github.com/kennethreitz/requests/pull/2646. Merging. :sparkles: :cake: :sparkles: \n",
    "clean_message": "Changes are noted in . Merging. :sparkles: :cake: :sparkles: ",
    "message_url": "https://github.com/psf/requests/pull/2631#issuecomment-113907710",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I think the docs is fine as is, the fact that it it bit me today was absolutely my personal fault, thanks for the dicsussion and the comparison!",
    "clean_message": "I think the docs is fine as is, the fact that it it bit me today was absolutely my personal fault, thanks for the dicsussion and the comparison!",
    "message_url": "https://github.com/pallets/flask/pull/2796#issuecomment-391145802",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Nice keep them coming! And thanks for catching the documentation error",
    "clean_message": "Nice keep them coming! And thanks for catching the documentation error",
    "message_url": "https://github.com/pandas-dev/pandas/pull/47151#issuecomment-1140095514",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n",
    "clean_message": "<!-- Please make sure to read the Pull Request Guidelines: -- <!-- PULL REQUEST TEMPLATE --<!-- (Update \"[ ]\" to \"[x]\" to check a box) -- What kind of change does this PR introduce? (check at least one)  [ ] Bugfix [ ] Feature [ ] Code style update [x] Refactor [ ] Build-related changes [ ] Other, please describe:  Does this PR introduce a breaking change? (check one)  [ ] Yes [x] No  If yes, please describe the impact and migration path for existing applications: The PR fulfills these requirements:  [x] It's submitted to the  branch for v2.x (or to a previous version branch), not the  branch [x] When resolving a specific issue, it's referenced in the PR's title (e.g. , where \"xxx\" is the issue number) [x] All tests are passing:  [x] New/updated tests are included  If adding a new feature, the PR's description includes: - [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it) Other information:",
    "message_url": "https://github.com/vuejs/vue/pull/8077",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "After running cmake on Linux with:\r\n```\r\ntensorflow/tools/ci_build/ci_build.sh CMAKE tensorflow/tools/ci_build/builds/cmake.sh\r\n```\r\n\r\nthe following file is left:\r\n```\r\nubuntu@ubuntu:~/tensorflow$ git status\r\nOn branch master\r\nYour branch is up-to-date with 'origin/master'.\r\nUntracked files:\r\n  (use \"git add <file>...\" to include in what will be committed)\r\n\r\n        api_init_files_list.txt\r\n\r\nnothing added to commit but untracked files present (use \"git add\" to track)\r\nubuntu@ubuntu:~/tensorflow$\r\n```\r\n\r\nThis fix updates the .gitignore file so that cmake generated files\r\nis not added with git inadvertently.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>",
    "clean_message": "After running cmake on Linux with: the following file is left: This fix updates the .gitignore file so that cmake generated files is not added with git inadvertently. Signed-off-by: Yong Tang <>",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/18760",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@mdo Abso-fucking-lutely. \u270c\ufe0f\u2764\ufe0f",
    "clean_message": "Abso-fucking-lutely. \u270c\ufe0f\u2764\ufe0f",
    "message_url": "https://github.com/twbs/bootstrap/pull/34244#issuecomment-861031334",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "shitted",
    "clean_message": "shitted",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/27#issuecomment-718850418",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "With this recursive approach you should be able to put all the Labeled nodes in the fxml files back into the hboxes.\r\nI think you can also make the new method `scanImputControls` static.\r\n\r\nIf you like to look a bit around in the JabRef sources, you could also think of moving this recursive search init stuff into a background task, if the preferences dialog takes too long to load now, and grey the search box out as long as the preferences are indexed (probably not much more than a fracture of a second). But maybe this too much for this PR. The most important thing is now that the issue has been fixed.",
    "clean_message": "With this recursive approach you should be able to put all the Labeled nodes in the fxml files back into the hboxes. I think you can also make the new method  static. If you like to look a bit around in the JabRef sources, you could also think of moving this recursive search init stuff into a background task, if the preferences dialog takes too long to load now, and grey the search box out as long as the preferences are indexed (probably not much more than a fracture of a second). But maybe this too much for this PR. The most important thing is now that the issue has been fixed.",
    "message_url": "https://github.com/JabRef/jabref/pull/6946#issuecomment-699551559",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "- [x] closes #49352 \r\n- [x] [Tests added and passed](https://pandas.pydata.org/pandas-docs/dev/development/contributing_codebase.html#writing-tests) if fixing a bug or adding a new feature\r\n- [x] All [code checks passed](https://pandas.pydata.org/pandas-docs/dev/development/contributing_codebase.html#pre-commit).\r\n- [x] Added [type annotations](https://pandas.pydata.org/pandas-docs/dev/development/contributing_codebase.html#type-hints) to new arguments/methods/functions.\r\n- [x] Added an entry in the latest `doc/source/whatsnew/vX.X.X.rst` file if fixing a bug or adding a new feature.\r\n",
    "clean_message": " [x] closes #49352  [x] Tests added and passed if fixing a bug or adding a new feature [x] All code checks passed. [x] Added type annotations to new arguments/methods/functions. [x] Added an entry in the latest  file if fixing a bug or adding a new feature. ",
    "message_url": "https://github.com/pandas-dev/pandas/pull/49534",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Does this actually work? Isn't PEP8 not happy with 2 spaces?",
    "clean_message": "Does this actually work? Isn't PEP8 not happy with 2 spaces?",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/186#issuecomment-743850918",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Right, but also no return statement returns `undefined`, so how can you know that the function you called really returned a result? It's return value wasn't defined as something. Perhaps you accidentally though that an async function was actually sync?\n\nIn general, JSON does always ignores `undefined`, it doesn't turn it to `null`. Consider\n\n``` js\nconsole.log(JSON.stringify({ a: 'apple', b: undefined }))\n```\n\nJust the whole \"make `undefined` turn into `null` in this weird specific case\" has a bell smell to me, especially since it seems so out of line with how `undefined` vs `null` actually function within the JavaScript language.\n",
    "clean_message": "Right, but also no return statement returns , so how can you know that the function you called really returned a result? It's return value wasn't defined as something. Perhaps you accidentally though that an async function was actually sync? In general, JSON does always ignores , it doesn't turn it to . Consider Just the whole \"make  turn into  in this weird specific case\" has a bell smell to me, especially since it seems so out of line with how  vs  actually function within the JavaScript language.",
    "message_url": "https://github.com/expressjs/express/pull/2410#issuecomment-60332747",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "<!--\r\nThank you for submitting a pull request!\r\n\r\nHere's a checklist you might find useful.\r\n* [ ] There is an associated issue that is labeled\r\n  'Bug' or 'help wanted' or is in the Community milestone\r\n* [ ] Code is up-to-date with the `master` branch\r\n* [ ] You've successfully run `jake runtests` locally\r\n* [ ] You've signed the CLA\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\nFixes #27716\r\n\r\n\r\nThis PR has a small side effect in autocomplete logic (which is visible in `tests/cases/fourslash/` changes):\r\n```ts\r\nconst a: number[] | string[];\r\na.length // pr:  (property) Array<T>.length: number\r\n         // now: (property) length: number\r\n```\r\n\r\nI think it's ok and in fact is a better behavior. Because it is more consistent with situation with no intersection types. But I may have missed some cons.\r\n```ts\r\nconst a: number[];\r\na.length // autocomplete Array<number>.length: number\r\n```",
    "clean_message": "<!-- Thank you for submitting a pull request! Here's a checklist you might find useful. * [ ] There is an associated issue that is labeled   'Bug' or 'help wanted' or is in the Community milestone * [ ] Code is up-to-date with the  branch * [ ] You've successfully run  locally * [ ] You've signed the CLA * [ ] There are new or updated unit tests validating the change Refer to CONTRIBUTING.MD for more details. -- Fixes #27716 This PR has a small side effect in autocomplete logic (which is visible in  changes): I think it's ok and in fact is a better behavior. Because it is more consistent with situation with no intersection types. But I may have missed some cons.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/27865",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks, and yup, that should be it.\n",
    "clean_message": "Thanks, and yup, that should be it.",
    "message_url": "https://github.com/twbs/bootstrap/pull/9137#issuecomment-22223825",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hmm, didn't check all of the tests beforehand, will investigate.",
    "clean_message": "Hmm, didn't check all of the tests beforehand, will investigate.",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/906#issuecomment-1573991868",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\n\r\nRef: https://github.com/vuejs/vue/blob/dev/src/core/util/next-tick.js#L92\r\n\r\n`this` in `Vue.nextTick` should always be the context. ",
    "clean_message": "What kind of change does this PR introduce? (check at least one)  [x] Bugfix [ ] Feature [ ] Code style update [ ] Refactor [ ] Build-related changes [ ] Other, please describe:  Does this PR introduce a breaking change? (check one)  [ ] Yes [x] No  If yes, please describe the impact and migration path for existing applications: The PR fulfills these requirements:  [x] It's submitted to the  branch for v2.x (or to a previous version branch), not the  branch [x] When resolving a specific issue, it's referenced in the PR's title (e.g. , where \"xxx\" is the issue number) [ ] All tests are passing:  [x] New/updated tests are included  If adding a new feature, the PR's description includes: - [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it) Other information: Ref:  in  should always be the context. ",
    "message_url": "https://github.com/vuejs/vue/pull/9541",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This PR was merged into the repository by commit d11f5d70d3904ed24de3e156c0e3992d3f705529.",
    "clean_message": "This PR was merged into the repository by commit d11f5d70d3904ed24de3e156c0e3992d3f705529.",
    "message_url": "https://github.com/angular/angular/pull/49663#issuecomment-1495240543",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> Added simple test, is this ok?\n\nLovely test. :+1: \n",
    "clean_message": "Lovely test. :+1: ",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/2417#issuecomment-24577547",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Also I suspect we'll eventually want to support a way to specify _explicitly_ what the name of a model/dataclass/enum/typeddict/etc. should be, and error if there is a conflict (though we don't support that today). I think it will make sense for that to be introduced if/when we replace use of `GenerateJsonSchema.generate_definitions` with a higher-level api (perhaps a classmethod of TypeAdapter, or similar). Given that, I don't think it's worth adding much complexity. (Again, open to an alternative implementation though if it is simple and better.)",
    "clean_message": "Also I suspect we'll eventually want to support a way to specify explicitly what the name of a model/dataclass/enum/typeddict/etc. should be, and error if there is a conflict (though we don't support that today). I think it will make sense for that to be introduced if/when we replace use of  with a higher-level api (perhaps a classmethod of TypeAdapter, or similar). Given that, I don't think it's worth adding much complexity. (Again, open to an alternative implementation though if it is simple and better.)",
    "message_url": "https://github.com/pydantic/pydantic/pull/6566#issuecomment-1629660937",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> can we run a slow build on those platforms?\r\n\r\nI can follow up by removing `not slow` from these builds",
    "clean_message": "I can follow up by removing  from these builds",
    "message_url": "https://github.com/pandas-dev/pandas/pull/46003#issuecomment-1043824816",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thank you sir :)\n",
    "clean_message": "Thank you sir :)",
    "message_url": "https://github.com/psf/requests/pull/736#issuecomment-7297876",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Well, more precisely, it isn\u2019t that topojson.presimplify is introducing artifacts, it\u2019s that this enables dynamic simplification in the client using your simplify transform (which is presumably based on my [dynamic simplification example](https://bl.ocks.org/mbostock/6245977)):\n\n``` js\nvar simplify = d3.geo.transform({\n  point: function(x, y, z) {\n    if (!z || z >= settings.area) {\n      this.stream.point(x, y);\n    }\n  }\n});\n```\n\nSo I assume what\u2019s happening is that the dynamic simplification is introducing degenerate polygons, some of which are interpreted having the wrong winding order.\n",
    "clean_message": "Well, more precisely, it isn\u2019t that topojson.presimplify is introducing artifacts, it\u2019s that this enables dynamic simplification in the client using your simplify transform (which is presumably based on my dynamic simplification example): So I assume what\u2019s happening is that the dynamic simplification is introducing degenerate polygons, some of which are interpreted having the wrong winding order.",
    "message_url": "https://github.com/d3/d3/pull/2784#issuecomment-217037668",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "> > can you add an **init**.py (we traditionally do this for the test dirs)\r\n> \r\n> Now that you mentioned it three times I suppose it's time :-) Done.\r\n\r\nthanks!",
    "clean_message": "thanks!",
    "message_url": "https://github.com/pandas-dev/pandas/pull/26986#issuecomment-504486455",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Oh sorry, maybe I made a mistake. What I did was to take the values present in the grid.less file:\n\n```\n// Responsive: Tablets and up\n@media screen and (min-width: 768px) {\n ...\n  }\n...\n\n// Responsive: Desktops and up\n@media screen and (min-width: 992px) {\n...\n}\n\n// Responsive: Large desktops and up\n@media screen and (min-width: 1200px) {\n...\n}\n```\n",
    "clean_message": "Oh sorry, maybe I made a mistake. What I did was to take the values present in the grid.less file:",
    "message_url": "https://github.com/twbs/bootstrap/pull/7707#issuecomment-17121142",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Superseded.",
    "clean_message": "Superseded.",
    "message_url": "https://github.com/pandas-dev/pandas/pull/46538#issuecomment-1169073541",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "An alternative would be to use `reportUnusedDisableDirectives` in eslint 6.3.0, which doesn't fail the build. But I think it's better this way.",
    "clean_message": "An alternative would be to use  in eslint 6.3.0, which doesn't fail the build. But I think it's better this way.",
    "message_url": "https://github.com/twbs/bootstrap/pull/29350",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Testing of a few more methods in OOBibStyle.\n",
    "clean_message": "Testing of a few more methods in OOBibStyle.",
    "message_url": "https://github.com/JabRef/jabref/pull/907",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Too much of a hit to speed right now, but will be fixed and 100s of lines will be deleted :)",
    "clean_message": "Too much of a hit to speed right now, but will be fixed and 100s of lines will be deleted :)",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/589",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "Hello \ud83d\udc4b,\r\n\r\nThis is a PR to translate `docs/benchmarks.md` to French, as told in the issue #1972.\r\n\r\nSorry for the typo in the commit message.\r\n\r\nSee the formatted document [here](https://github.com/ClemSau/fastapi/blob/master/docs/fr/docs/benchmarks.md)\r\n\r\nThanks for those who take the time to validate it.\r\n",
    "clean_message": "Hello \ud83d\udc4b, This is a PR to translate  to French, as told in the issue #1972. Sorry for the typo in the commit message. See the formatted document here Thanks for those who take the time to validate it.",
    "message_url": "https://github.com/tiangolo/fastapi/pull/2155",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This would likely be a solution to #4233 and #6127",
    "clean_message": "This would likely be a solution to #4233 and #6127",
    "message_url": "https://github.com/sveltejs/svelte/pull/5963#issuecomment-878027790",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Unfortunately this change is not backwards compatible, because the issue you describe is actually an intended feature. Can you instead add a new flag specifically to control the automatic 304s?\n",
    "clean_message": "Unfortunately this change is not backwards compatible, because the issue you describe is actually an intended feature. Can you instead add a new flag specifically to control the automatic 304s?",
    "message_url": "https://github.com/expressjs/express/pull/2772#issuecomment-144844253",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@asimshankar I take your point, I don't know the performance implications of doing this on Tensors for example. I will fall back to thinking that this technique should be applied for Graph or Session though, having said that if consistency is king then I can close this PR.",
    "clean_message": "I take your point, I don't know the performance implications of doing this on Tensors for example. I will fall back to thinking that this technique should be applied for Graph or Session though, having said that if consistency is king then I can close this PR.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/18796#issuecomment-390552385",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "\r\n##### SUMMARY\r\nFixes #31931\r\n\r\nStraightforward- simply masking out the StackPolicy param.\r\n\r\n##### ISSUE TYPE\r\n - Bugfix Pull Request\r\n\r\n##### COMPONENT NAME\r\n`cloudformation`\r\n\r\n##### ANSIBLE VERSION\r\ndevel\r\n\r\n##### ADDITIONAL INFORMATION\r\n.",
    "clean_message": "SUMMARY Fixes #31931 Straightforward- simply masking out the StackPolicy param. ISSUE TYPE  Bugfix Pull Request  COMPONENT NAME ANSIBLE VERSION devel ADDITIONAL INFORMATION .",
    "message_url": "https://github.com/ansible/ansible/pull/31940",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Will deal with the unit test error tomorrow. Hold on.",
    "clean_message": "Will deal with the unit test error tomorrow. Hold on.",
    "message_url": "https://github.com/vuejs/vue/pull/4739#issuecomment-273491817",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I've rebased and squashed it down to 1 commit. I also sent around a message to matplotlib-devel trying to start a conversation about the general idea of stacked-ness. Please reply there if you interested in the more general issues of how to approach this problem.\n",
    "clean_message": "I've rebased and squashed it down to 1 commit. I also sent around a message to matplotlib-devel trying to start a conversation about the general idea of stacked-ness. Please reply there if you interested in the more general issues of how to approach this problem.",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/847#issuecomment-7683540",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "So if we do order added then we'd have to do something else when we find the adapter @kennethreitz that would be akin to what @Lukasa's last pull request did. So the benefit of ordering would make no difference.\n\nThis just ensures that any adapters you have with freakishly long prefixes are matched first and returned.\n",
    "clean_message": "So if we do order added then we'd have to do something else when we find the adapter  that would be akin to what 's last pull request did. So the benefit of ordering would make no difference. This just ensures that any adapters you have with freakishly long prefixes are matched first and returned.",
    "message_url": "https://github.com/psf/requests/pull/1327#issuecomment-17026182",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "No problem and thanks for the review comments!\r\n\r\nIt appears the CircleCI \"Details\" links require you to authenticate with your GitHub account, even though you just want to see the build logs. This is rather cumbersome, especially since CircleCI requests quite a lot permissions<sup>1</sup>. Is this something you can control and potentially turn off?\r\n\r\n---\r\n\r\n1: Requested permissions:\r\n- \"This application will be able to read and write all public repository data.\"\r\n- \"This application will be able to read your organization, team membership, and private project boards.\"",
    "clean_message": "No problem and thanks for the review comments! It appears the CircleCI \"Details\" links require you to authenticate with your GitHub account, even though you just want to see the build logs. This is rather cumbersome, especially since CircleCI requests quite a lot permissions<sup 1: Requested permissions: - \"This application will be able to read and write all public repository data.\" - \"This application will be able to read your organization, team membership, and private project boards.\"",
    "message_url": "https://github.com/angular/angular/pull/39718#issuecomment-730628144",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "@adriangb I think you were the one that made this test xfail before. I'm thinking it got updated but just not .. fully updated, and it seems to be behaving as desired now, so I figured I'd just fix it up and drop the xfail. But if I'm missing something and this is actually misbehaving, we can leave it alone.",
    "clean_message": "I think you were the one that made this test xfail before. I'm thinking it got updated but just not .. fully updated, and it seems to be behaving as desired now, so I figured I'd just fix it up and drop the xfail. But if I'm missing something and this is actually misbehaving, we can leave it alone.",
    "message_url": "https://github.com/pydantic/pydantic/pull/6938",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Is there some way I could help to move this PR further along?",
    "clean_message": "Is there some way I could help to move this PR further along?",
    "message_url": "https://github.com/sveltejs/svelte/pull/4909#issuecomment-641815463",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "UNACCEPTABLE\n",
    "clean_message": "UNACCEPTABLE",
    "message_url": "https://github.com/psf/requests/pull/1009#issuecomment-11435476",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I don't know that `{foo ? 'bar' : 'baz'}` would really apply here though because there are more complex expressions with `else if` blocks, etc.",
    "clean_message": "I don't know that  would really apply here though because there are more complex expressions with  blocks, etc.",
    "message_url": "https://github.com/sveltejs/svelte/pull/7070#issuecomment-1012649899",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@flarnie \r\n\r\n> Which of the 16 alpha releases are you using?\r\n\r\nI am using alpha-12.0.I don't specify concrete version,I just use `npm install react@next`,and then the version is alpha-12.0(IIRC one or two weeks ago it is 11.0).\r\n\r\n> Or are you using a build directly from the react master branch?\r\n\r\nNo,only when I learn fiber in the [fiber-debugger](https://github.com/facebook/react/tree/master/fixtures/fiber-debugger) directory I will do that.\r\n\r\n@gaearon \r\n\r\n>  Generally alphas may contain unactionable warnings etc. We don't recommend anyone to use React alphas outside of React Native.\r\n\r\nYea,don't worry,please trust that I am not blaming or complaining anyone or anything.I just want to experience fiber and some new features in advance.",
    "clean_message": "I am using alpha-12.0.I don't specify concrete version,I just use ,and then the version is alpha-12.0(IIRC one or two weeks ago it is 11.0). No,only when I learn fiber in the fiber-debugger directory I will do that. Yea,don't worry,please trust that I am not blaming or complaining anyone or anything.I just want to experience fiber and some new features in advance.",
    "message_url": "https://github.com/facebook/react/pull/9780#issuecomment-304487869",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "+1 `@dougwilson` \n\n> It also gives a good way to know if this is a good starting point, because we'll have a better understanding of the current policy to iterate towards the Node.js policy.\n",
    "clean_message": "+1  ",
    "message_url": "https://github.com/expressjs/express/pull/2918#issuecomment-190452301",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the tips. Function <em>d3_scale_linearTickFormat</em> now parses the format specifier and I put most of the precision computation in a helper function which won't be called in the default case. Format types \"r\" and \"p\" are correctly handled now, I think (added a couple more unit tests). \n",
    "clean_message": "Thanks for the tips. Function <em",
    "message_url": "https://github.com/d3/d3/pull/1574#issuecomment-26471485",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Fixes #11766 ",
    "clean_message": "Fixes #11766 ",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/11767",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n<!-- Please remember to update CHANGELOG.md in the root of the project if you have not done so. -->\r\n\r\n## Summary\r\nAs the troubleshooting docs state, tests must be defined synchronously. This PR aims to prevent a class of errors where describe is used with an async function by printing a dedicated error message instead of \"Your test suite must contain at least one test)\", which usually appears if something is awaited before the `it` calls.\r\n\r\nWould have saved [these](https://github.com/facebook/jest/issues/7623) [people](https://github.com/facebook/jest/issues/1619#issuecomment-448565542).\r\nUnfortunately does not protect against [this one](https://github.com/facebook/jest/issues/7588) though, and we'd need static analysis to save people from top-level awaits.\r\n\r\nThis could be considered breaking, especially if someone can think of a legitimate use case for returning a Promise (or anything at all) from `describe`. Or it could be considered non-breaking because returning a Promise (or anything at all) from `describe` was never supported. Hopefully FB doesn't do it \ud83d\ude05 \r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n## Test plan\r\n\r\nNew e2e test green with and without `JEST_CIRCUS=1`.\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n",
    "clean_message": "<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -- <!-- Please remember to update CHANGELOG.md in the root of the project if you have not done so. -- Summary As the troubleshooting docs state, tests must be defined synchronously. This PR aims to prevent a class of errors where describe is used with an async function by printing a dedicated error message instead of \"Your test suite must contain at least one test)\", which usually appears if something is awaited before the  calls. Would have saved these people. Unfortunately does not protect against this one though, and we'd need static analysis to save people from top-level awaits. This could be considered breaking, especially if someone can think of a legitimate use case for returning a Promise (or anything at all) from . Or it could be considered non-breaking because returning a Promise (or anything at all) from  was never supported. Hopefully FB doesn't do it \ud83d\ude05  <!-- Explain the motivation for making this change. What existing problem does the pull request solve? -- Test plan New e2e test green with and without . <!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. --",
    "message_url": "https://github.com/jestjs/jest/pull/7852",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "i also remember that we were not buffering `stderr` in reporters, because if something goes terribly wrong, writes to `stderr` and blows up we wouldn't get any error printed ",
    "clean_message": "i also remember that we were not buffering  in reporters, because if something goes terribly wrong, writes to  and blows up we wouldn't get any error printed ",
    "message_url": "https://github.com/jestjs/jest/pull/6583#issuecomment-402903070",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "> @Kully not working to remove these tests as the streaming functionality is still place for current users and on-prem users.\r\n\r\nMy mistake. I remember now you telling me you were fixing the tests.\r\n\r\nI can get you a screenshot/a code snippet when I see it next time.",
    "clean_message": "My mistake. I remember now you telling me you were fixing the tests. I can get you a screenshot/a code snippet when I see it next time.",
    "message_url": "https://github.com/plotly/plotly.py/pull/967#issuecomment-372363146",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Sorry I didn't see this until now.  For future reference, best way to talk to core committers about modules is to use #ansible-devel on irc to get their attention.  (This includes just getting attention for reviewing a PR, not just for asking questions).\r\n\r\nAddressing some of the questions raised here for people who might want to work on something like this later:\r\n* yum_utils installing code has to stay.  This is the strategy for package management modules in general (although there's open quesitons about it such as whether the module should have a parameter to allow the user to enable/disable the behaviour).\r\n* docstrings should be in standard sphinx format.  (For instance, field lists for arguments)\r\n* Until we start working on Ansible-2.4, Ansible modules need to be compatible with python-2.4.  Modules also need to be compatible with python-3.5+.  If changes to a module aren't candidates for backporting to Ansible-2.3x and earlier, they can target Python-2.6+ as their Python2 minimum version.\r\n* Only use multiline stirngs for things that should be docstrings and that are used by the program.  Use real comments for code comments.\r\n* We can't get rid of list for backwards compatibility.\r\n* yes please, to having PRs in smaller chunks.  Changes targeted at specific chunks are much easier to review than large ones.  Especially when the starting point is complex and coded in some non-standard fashions.\r\n\r\nOnce again, apologies.",
    "clean_message": "Sorry I didn't see this until now.  For future reference, best way to talk to core committers about modules is to use #ansible-devel on irc to get their attention.  (This includes just getting attention for reviewing a PR, not just for asking questions). Addressing some of the questions raised here for people who might want to work on something like this later: * yum_utils installing code has to stay.  This is the strategy for package management modules in general (although there's open quesitons about it such as whether the module should have a parameter to allow the user to enable/disable the behaviour). * docstrings should be in standard sphinx format.  (For instance, field lists for arguments) * Until we start working on Ansible-2.4, Ansible modules need to be compatible with python-2.4.  Modules also need to be compatible with python-3.5+.  If changes to a module aren't candidates for backporting to Ansible-2.3x and earlier, they can target Python-2.6+ as their Python2 minimum version. * Only use multiline stirngs for things that should be docstrings and that are used by the program.  Use real comments for code comments. * We can't get rid of list for backwards compatibility. * yes please, to having PRs in smaller chunks.  Changes targeted at specific chunks are much easier to review than large ones.  Especially when the starting point is complex and coded in some non-standard fashions. Once again, apologies.",
    "message_url": "https://github.com/ansible/ansible/pull/22200#issuecomment-291915948",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Hi, I forgot about this sometime during having covid. Thanks for reminding me about this.\r\n\r\n@tiangolo I have a few questions:\r\n\r\nAssumptions (please correct me if I'm wrong):\r\n* A response can either be a native Pydantic model object(`PMO`), OR a `dict`, OR a manual `Response` type.\r\n* We have no control over a manual `Response` type.\r\n* I'm assuming that `dict` responses will want to be validated and turned into a `PMO` before serialised by default. There is cases where the user wants to say \"trust me\" and turn off validation, and we should allow this with a global setting.\r\n\r\nQuestions:\r\n* Can we assume that a native `PMO` is already validated? (You have to jump through serious loops to build an unvalidated `PMO`, and if you do that, one can argue that it's your perogative to ensure that things are correct). If so, can we safely skip the validation on `PMO`'s by default?\r\n* Why did you replace the JSON encoder with your own one, instead of using the provided one from Pydantic: https://pydantic-docs.helpmanual.io/usage/exporting_models/#modeljson ? It already seems to handle all the common data type conversions correctly? Based on quick tests, it appears to be faster too.\r\n\r\n\r\nDepending on the answer you provide, I can complete this PR. It would be lovely to have a faster response type for the cleaner code by default.\r\n\r\nRight now returning a `PMO` (which is the cleanest in code) will result in the slowest response type.\r\n`dict`'s are slightly faster, and `Response` is the fastest.\r\n\r\nI would like making `PMO` perform better by default, skip validation and re-building of `PMO`, so we can just go to serialisation directly?\r\n\r\nI would like to make the default `JSONResponse` use the provided `PMO.json()` if available so we can honour custom encoders on it.\r\n\r\nI would like to make the `ORJSONResponse` allow skipping the datatype conversion by default, as it seems to handle all the common cases as well.\r\n\r\nBUT, I would like to limit breakage. So what would be safe behaviour be for `PMO` and `dict` response types?\r\n",
    "clean_message": "Hi, I forgot about this sometime during having covid. Thanks for reminding me about this. I have a few questions: Assumptions (please correct me if I'm wrong): * A response can either be a native Pydantic model object(), OR a , OR a manual  type. * We have no control over a manual  type. * I'm assuming that  responses will want to be validated and turned into a  before serialised by default. There is cases where the user wants to say \"trust me\" and turn off validation, and we should allow this with a global setting. Questions: * Can we assume that a native  is already validated? (You have to jump through serious loops to build an unvalidated , and if you do that, one can argue that it's your perogative to ensure that things are correct). If so, can we safely skip the validation on 's by default? * Why did you replace the JSON encoder with your own one, instead of using the provided one from Pydantic:  ? It already seems to handle all the common data type conversions correctly? Based on quick tests, it appears to be faster too. Depending on the answer you provide, I can complete this PR. It would be lovely to have a faster response type for the cleaner code by default. Right now returning a  (which is the cleanest in code) will result in the slowest response type. 's are slightly faster, and  is the fastest. I would like making  perform better by default, skip validation and re-building of , so we can just go to serialisation directly? I would like to make the default  use the provided  if available so we can honour custom encoders on it. I would like to make the  allow skipping the datatype conversion by default, as it seems to handle all the common cases as well. BUT, I would like to limit breakage. So what would be safe behaviour be for  and  response types?",
    "message_url": "https://github.com/tiangolo/fastapi/pull/1434#issuecomment-663969182",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "##### SUMMARY\r\n<!--- Describe the change below, including rationale and design decisions -->\r\nBackport of #70847 for Ansible 2.10\r\n(cherry picked from commit 7f0c84ea15)\r\n<!--- HINT: Include \"Fixes #nnn\" if you are fixing an existing issue -->\r\n\r\n##### ISSUE TYPE\r\n<!--- Pick one below and delete the rest -->\r\n- Docs Pull Request\r\n\r\n##### COMPONENT NAME\r\n<!--- Write the short name of the module, plugin, task or feature below -->\r\n`docs/docsite/rst/dev_guide/debugging.rst`",
    "clean_message": "SUMMARY <!--- Describe the change below, including rationale and design decisions --Backport of #70847 for Ansible 2.10 (cherry picked from commit 7f0c84ea15) <!--- HINT: Include \"Fixes #nnn\" if you are fixing an existing issue -- ISSUE TYPE <!--- Pick one below and delete the rest --- Docs Pull Request COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --",
    "message_url": "https://github.com/ansible/ansible/pull/70972",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #53290. I think The original fix for #52543 isn't in the correct order. In TypeScript 5.0 it became `import { foo } from \"\\/foo\";` instead of `import { foo } from \"$lib/foo\"`;\r\n",
    "clean_message": "<!-- Thank you for submitting a pull request! Please verify that: * [ ] There is an associated issue in the  milestone (required) * [ ] Code is up-to-date with the  branch * [ ] You've successfully run  locally * [ ] There are new or updated unit tests validating the change Refer to CONTRIBUTING.MD for more details. ** Please don't send typo fixes! ** Please don't send a PR solely for the purpose of fixing a typo, unless that typo truly hurts understanding of the text. Each PR represents work for the maintainers, and that work should provide commensurate value. If you're interested in sending a PR, the issue tracker has many issues marked . Fixes #53290. I think The original fix for #52543 isn't in the correct order. In TypeScript 5.0 it became  instead of ;",
    "message_url": "https://github.com/microsoft/TypeScript/pull/53407",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks !",
    "clean_message": "Thanks !",
    "message_url": "https://github.com/angular/angular/pull/13368#issuecomment-268384797",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Figured it'd be useful to have an example for the screenshot issues around.\r\n\r\nChromium issue: https://crbug.com/770769\r\n\r\nThis is a workaround that creates a few screenshots. It doesn't stitch them together though folks have had success using [sharp](https://github.com/lovell/sharp) for that.  \r\n\r\n(Apologies for using a private API ;)\r\n\r\nFixes #929, #926, #933, #359 \r\n\r\n----------\r\n\r\n2020 update: https://github.com/morteza-fsh/puppeteer-full-page-screenshot handles this and also the [vw/vh bug](https://github.com/puppeteer/puppeteer/issues/703). seems pretty good.\r\n",
    "clean_message": "Figured it'd be useful to have an example for the screenshot issues around. Chromium issue:  This is a workaround that creates a few screenshots. It doesn't stitch them together though folks have had success using sharp for that.   (Apologies for using a private API ;) Fixes #929, #926, #933, #359   2020 update:  handles this and also the vw/vh bug. seems pretty good.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/937",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "LGTM. :+1: \n",
    "clean_message": "LGTM. :+1: ",
    "message_url": "https://github.com/psf/requests/pull/2393#issuecomment-70508600",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@wbaek Thanks -- can you add a test that uses higher rank gradients to test that what you are doing is correct?\r\n\r\n@tillahoffmann, let me know if you want to review this in more detail since you are the main author of this code now :)",
    "clean_message": "Thanks -- can you add a test that uses higher rank gradients to test that what you are doing is correct? , let me know if you want to review this in more detail since you are the main author of this code now :)",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/15308#issuecomment-354002281",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hi guys, there are still projects on Vue 2, can someone merge this, please? It really became a problem with new versions of Google Lighthouse.",
    "clean_message": "Hi guys, there are still projects on Vue 2, can someone merge this, please? It really became a problem with new versions of Google Lighthouse.",
    "message_url": "https://github.com/vuejs/vue/pull/10794#issuecomment-890070396",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Still not working :(",
    "clean_message": "Still not working :(",
    "message_url": "https://github.com/angular/angular/pull/18540#issuecomment-320366213",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Good point, probably not helpful _remove_ info from the docs. Rewritten (approximately) as suggested.\n",
    "clean_message": "Good point, probably not helpful remove info from the docs. Rewritten (approximately) as suggested.",
    "message_url": "https://github.com/pallets/flask/pull/1896#issuecomment-224574099",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "And in the worst case - we can always revert it :-)\r\n\r\n\r\nThanks @zyxist @TimvdLippe ",
    "clean_message": "And in the worst case - we can always revert it :-) Thanks   ",
    "message_url": "https://github.com/mockito/mockito/pull/1195#issuecomment-334994377",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I also like this feature, I built it into all of our iOS native test suites. \ud83d\udc4d ",
    "clean_message": "I also like this feature, I built it into all of our iOS native test suites. \ud83d\udc4d ",
    "message_url": "https://github.com/jestjs/jest/pull/2583#issuecomment-272305722",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "There are conflicts. Resolving them now",
    "clean_message": "There are conflicts. Resolving them now",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/17021#issuecomment-610035902",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Old test_lib -> testing_internal\nOld test_lib_public -> testing\n\nSee #4512\n",
    "clean_message": "Old test_lib -Old test_lib_public - See #4512",
    "message_url": "https://github.com/angular/angular/pull/4697",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@mlaval from the looks of it this kinda of export needs a rework/redesign before it'll be accpted",
    "clean_message": "from the looks of it this kinda of export needs a rework/redesign before it'll be accpted",
    "message_url": "https://github.com/angular/angular/pull/18451#issuecomment-325488947",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "replaces #1497, originally intended to fix the issue you already fixed in b57cdf2\n",
    "clean_message": "replaces #1497, originally intended to fix the issue you already fixed in b57cdf2",
    "message_url": "https://github.com/vuejs/vue/pull/1498",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Sorry , I miss some code .I will submit them soon.\n",
    "clean_message": "Sorry , I miss some code .I will submit them soon.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/4873#issuecomment-252707696",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "#6938",
    "clean_message": "6938",
    "message_url": "https://github.com/vuejs/vue/pull/6942#issuecomment-340424186",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi Johann,\r\nI fixed the issue in new commit.\r\nThe use of jquery event namespace worked in release 4.3.1 but not in the master branch.\r\nI replaced it with a named function.",
    "clean_message": "Hi Johann, I fixed the issue in new commit. The use of jquery event namespace worked in release 4.3.1 but not in the master branch. I replaced it with a named function.",
    "message_url": "https://github.com/twbs/bootstrap/pull/28896#issuecomment-501580812",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Allow running phantom tests on Windows. These were relying on `#!/usr/bin/env node` at the top of runner.js, which doesn't work outside of a unix environment.",
    "clean_message": "Allow running phantom tests on Windows. These were relying on  at the top of runner.js, which doesn't work outside of a unix environment.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/163",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "-  The training of RNNT is conducted using SGD. \r\n-  Added training mode to the iterator of librispeech to download training files. Added support for flac files. \r\n-  Implemented the loss function of negative log-likelihood. \r\n-  Enhanced the RNNT model to output softmax probabilities along with a sequence of characters. source of RNNT implementation : [https://www.microsoft.com/en-us/research/uploads/prod/2019/10/RNNT.pdf](url)\r\n-  To-do: Implemented beam search decoding as an alternative to greedy decoding. source : [https://arxiv.org/abs/2302.14357](url)\r\n-  To-do: Replace some numpy codes and functionalities with that of Tensor. \r\n\r\nHopefully, this is enough for locking up the bounty. ",
    "clean_message": " The training of RNNT is conducted using SGD.  Added training mode to the iterator of librispeech to download training files. Added support for flac files.  Implemented the loss function of negative log-likelihood.  Enhanced the RNNT model to output softmax probabilities along with a sequence of characters. source of RNNT implementation :  To-do: Implemented beam search decoding as an alternative to greedy decoding. source :  To-do: Replace some numpy codes and functionalities with that of Tensor.   Hopefully, this is enough for locking up the bounty. ",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/1267",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Added a small intro to the README.md\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n",
    "clean_message": "Added a small intro to the README.md <!-- Please make sure to read the Pull Request Guidelines: -- <!-- PULL REQUEST TEMPLATE --<!-- (Update \"[ ]\" to \"[x]\" to check a box) -- What kind of change does this PR introduce? (check at least one)  [ ] Bugfix [ ] Feature [ ] Code style update [ ] Refactor [ ] Build-related changes [ ] Other, please describe:  Does this PR introduce a breaking change? (check one)  [ ] Yes [ ] No  If yes, please describe the impact and migration path for existing applications: The PR fulfills these requirements:  [ ] It's submitted to the  branch for v2.x (or to a previous version branch), not the  branch [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. , where \"xxx\" is the issue number) [ ] All tests are passing:  [ ] New/updated tests are included  If adding a new feature, the PR's description includes: - [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it) Other information:",
    "message_url": "https://github.com/vuejs/vue/pull/12728",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Yeah, the RFC is consistent:\n\n```\n      qop-options       = \"qop\" \"=\" <\"> 1#qop-value <\">\n      qop-value         = \"auth\" | \"auth-int\" | token\n```\n\nWe should have literal quotes there. Good spot!\n",
    "clean_message": "Yeah, the RFC is consistent: We should have literal quotes there. Good spot!",
    "message_url": "https://github.com/psf/requests/pull/1765#issuecomment-29502229",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Linked to this PR, when I do this kind of change, it confirms somehow that we'd need some utilities that switch colors in light/dark mode. We have `.bg-dark` and `.bg-black` that stay black. We need something that is black in light mode and white in dark mode and could be named `.bg-opposite` or something else.",
    "clean_message": "Linked to this PR, when I do this kind of change, it confirms somehow that we'd need some utilities that switch colors in light/dark mode. We have  and  that stay black. We need something that is black in light mode and white in dark mode and could be named  or something else.",
    "message_url": "https://github.com/twbs/bootstrap/pull/38445#issuecomment-1504620236",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "regression caused by #15943\r\ncloses #19934\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] n/a Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n```\r\n[x] Bugfix\r\n[ ] Feature\r\n[ ] Code style update (formatting, local variables)\r\n[ ] Refactoring (no functional changes, no api changes)\r\n[ ] Build related changes\r\n[ ] CI related changes\r\n[ ] Documentation content changes\r\n[ ] angular.io application / infrastructure changes\r\n[ ] Other... Please describe:\r\n```\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #19934\r\n\r\n\r\n## What is the new behavior?\r\n\r\nWorks with OnPush change detection \ud83c\udf89 \r\n\r\n## Does this PR introduce a breaking change?\r\n```\r\n[ ] Yes\r\n[x] No\r\n```\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n  ",
    "clean_message": "regression caused by #15943 closes #19934 PR Checklist Please check if your PR fulfills the following requirements:  [x] The commit message follows our guidelines:  [x] Tests for the changes have been added (for bug fixes / features) [ ] n/a Docs have been added / updated (for bug fixes / features)  PR Type What kind of change does this PR introduce? <!-- Please check the one that applies to this PR using \"x\". -- What is the current behavior? <!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -- Issue Number: #19934 What is the new behavior? Works with OnPush change detection \ud83c\udf89  Does this PR introduce a breaking change? <!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -- Other information",
    "message_url": "https://github.com/angular/angular/pull/21411",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Not sure why that'd happen, but maybe simply removing the `.js` should do the trick?\r\n\r\nBut, after thinking about this some more, I don't think there's much benefit in this PR anyway. It might even be a step in the wrong direction \ud83d\ude2c  \r\n\r\nThese scripts are rarely run (intentionally) and should 100% be working with the tests' raw output files. With this, the `mocha` suites still have their own generation code, which remain detached from these scripts. It's just more to remember & keep track of in future updates.\r\n\r\nAlso, the updated scripts are certainly not avoiding work. They're trading 2x more `fs.read` ops for fewer `fs.write`s \u2013 and checking assertions isn't free either. And this doesn't include the fact that this is an extra `parse/compile()` per sample (since the tests' results were recycled beforehand).",
    "clean_message": "Not sure why that'd happen, but maybe simply removing the  should do the trick? But, after thinking about this some more, I don't think there's much benefit in this PR anyway. It might even be a step in the wrong direction \ud83d\ude2c   These scripts are rarely run (intentionally) and should 100% be working with the tests' raw output files. With this, the  suites still have their own generation code, which remain detached from these scripts. It's just more to remember & keep track of in future updates. Also, the updated scripts are certainly not avoiding work. They're trading 2x more  ops for fewer s \u2013 and checking assertions isn't free either. And this doesn't include the fact that this is an extra  per sample (since the tests' results were recycled beforehand).",
    "message_url": "https://github.com/sveltejs/svelte/pull/4914#issuecomment-635470335",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "## \ud83e\udde8   Incident report: \r\n\r\nI published d3@6.0.0-rc.1 (with the correct `next` tag) to npm. So far so good, but the postpublish script  also pushed it as d3.v5.js and d3.v5.min.js to d3js.org \u2014 and broke the internets.\r\n\r\nI struggled a bit to reinstate the files manually (just moving the commit to a different branch and force-pushing `master` didn't want to update the GH pages), so it was broken between 13:40 UTC and 13:51 UTC.\r\n\r\nI hope https://github.com/d3/d3/pull/3438/commits/47a043dbd83190b242fa98737c04234ea151ed23 avoids that trap next time.\r\n\r\n",
    "clean_message": "\ud83e\udde8   Incident report: I published  (with the correct  tag) to npm. So far so good, but the postpublish script  also pushed it as d3.v5.js and d3.v5.min.js to d3js.org \u2014 and broke the internets. I struggled a bit to reinstate the files manually (just moving the commit to a different branch and force-pushing  didn't want to update the GH pages), so it was broken between 13:40 UTC and 13:51 UTC. I hope  avoids that trap next time.",
    "message_url": "https://github.com/d3/d3/pull/3438#issuecomment-665062649",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Prevents pip from seeing the dist on unsupported Python versions.",
    "clean_message": "Prevents pip from seeing the dist on unsupported Python versions.",
    "message_url": "https://github.com/pallets/flask/pull/2721",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "# My effect of problem\r\n\r\nIn my case we dynamically create modal dialogs with a named router outlet in there.\r\nAfter the modal dialog and his components are destroyed, the named router outlet should be, too.\r\nSince I reuse the name if I create the dialog again, he uses the outlet name, get the outlet reference from the map and it throws this activated error.\r\n\r\nhttps://github.com/angular/angular/blob/ab870e02ec52437a5bf27110f1cfa46499573fc0/packages/router/src/router_outlet_context.ts#L52\r\n\r\nIf I just delete my outlet from the map it works for my case:\r\n\r\n`this.contexts.delete(childName);`\r\n\r\nI understand the OutletContext needs to be still referenced for the use case of the NgIf for restoring.\r\nBut in the case it is \"valid\" destroyed, shouldn't it be removed from the map?\r\nIf it should not be removed from the map, how to get rid of the reference?\r\n\r\nFor me as user this is first irritating:\r\n`Error: Cannot activate an already activated outlet`\r\n\r\nEspecially because I explicitly call deactivate on my referenced RouterOutlet and it then says it is still activated?\r\n\r\n```javascript\r\nexport class FooComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    @ViewChild(RouterOutlet)\r\n    public routerOutlet: RouterOutlet;\r\n\r\n    constructor(private router: Router) {\r\n    }\r\n\r\n    public ngOnInit() {\r\n        // This one works actually:\r\n        // this.router.events.subscribe(e => {\r\n        //     if (e instanceof ActivationStart && e.snapshot.outlet === FinancesRoutingRouteNames.PaymentOutlet) {\r\n        //         this.routerOutlet.deactivate();\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    public ngAfterViewInit() {\r\n        console.log(this.routerOutlet);\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        this.routerOutlet.deactivate();\r\n    }\r\n}\r\n```\r\n\r\nThen if you look, you see that the messages means the OutletContext and not the RouterOutlet.\r\n\r\nhttps://github.com/angular/angular/blob/ab870e02ec52437a5bf27110f1cfa46499573fc0/packages/router/src/directives/router_outlet.ts#L53\r\nHere it sets the RouterOutlet on the parentContexts (`private parentContexts: ChildrenOutletContexts`) which calls:\r\n\r\nhttps://github.com/angular/angular/blob/ab870e02ec52437a5bf27110f1cfa46499573fc0/packages/router/src/router_outlet_context.ts#L38\r\n\r\nWhich then creates or gets a already existing OutletContext:\r\n\r\nhttps://github.com/angular/angular/blob/ab870e02ec52437a5bf27110f1cfa46499573fc0/packages/router/src/router_outlet_context.ts#L72\r\n\r\n-----------------------\r\n\r\n# More investigation\r\n\r\nMaybe this is the wrong direction but I see the `activateWith` method of the RouterOutlet called in exactly two places.\r\n\r\n**1# place:**\r\nhttps://github.com/angular/angular/blob/master/packages/router/src/directives/router_outlet.ts#L69\r\n**2# place:**\r\nhttps://github.com/angular/angular/blob/9523991a9bee32a039500bd442b5a15368a0abff/packages/router/src/operators/activate_routes.ts#L187\r\n\r\nFirst time my outlet is created it is not firing the activateWith in the ngOnInit method.\r\nSecond time the outlet is created, it comes in the ngOnInit method and activates.\r\n\r\nThen this is called in the ActivateRoutes class (**2# place:**):\r\n\r\n```javascript\r\n// outlet: RouterOutlet | null\r\nif (context.outlet) {\r\n    // Activate the outlet when it has already been instantiated\r\n    // Otherwise it will get activated from its `ngOnInit` when instantiated \r\n    context.outlet.activateWith(future, cmpFactoryResolver);\r\n}\r\n```\r\n\r\nThen I remembered this method: `onChildOutletDestroyed`\r\nWhere following is called:\r\n\r\nhttps://github.com/angular/angular/blob/ab870e02ec52437a5bf27110f1cfa46499573fc0/packages/router/src/router_outlet_context.ts#L52\r\n\r\n# Questions:\r\nIs this related:\r\n`if (context.outlet)` from the activateRoutes method and `context.outlet = null;` in the onChildOutletDestroyed method?\r\nCan someone into it provide information how the flow should be?\r\nWhy do we need the activateWith call in the else block in the ngOnInit method?\r\n\r\n# Possible solution\r\nIf I just remove the activateWith call in the else block in the ngOnInit method of the RouterOutlet everything seems to work as expected in my application.\r\n\r\nhttps://github.com/angular/angular/blob/master/packages/router/src/directives/router_outlet.ts#L69\r\n\r\n@jasonaden @vicb \r\n\r\n### Another side effect\r\nMy Router Outlets from the URL aren't removed by refreshing in the browser. So I got problems also with this and wrote the following:\r\n\r\n```javascript\r\n    // export const PRIMARY_OUTLET = 'primary';\r\n    private clearRouterOutlets() {\r\n        const urlTree = this.router.createUrlTree([]);\r\n        const clearingOutlets: {[outlet: string]: null} = {};\r\n        const primaryOutletName = PRIMARY_OUTLET;\r\n\r\n        // Get all router outlet names except the primary router outlet and remove them.\r\n        Object.keys(urlTree.root.children)\r\n              .filter(outletName => outletName !== primaryOutletName)\r\n              .forEach(remainingOutletName => clearingOutlets[remainingOutletName] = null);\r\n\r\n        this.router.navigate([\r\n            {\r\n                outlets: clearingOutlets\r\n            }\r\n        ]);\r\n    }\r\n```\r\n\r\nThis is then also working and the (outlet) urls queries are removed on refresh of the page. But before the Error was thrown again. But with the above suggestion it is also working.",
    "clean_message": "My effect of problem In my case we dynamically create modal dialogs with a named router outlet in there. After the modal dialog and his components are destroyed, the named router outlet should be, too. Since I reuse the name if I create the dialog again, he uses the outlet name, get the outlet reference from the map and it throws this activated error. If I just delete my outlet from the map it works for my case: I understand the OutletContext needs to be still referenced for the use case of the NgIf for restoring. But in the case it is \"valid\" destroyed, shouldn't it be removed from the map? If it should not be removed from the map, how to get rid of the reference? For me as user this is first irritating: Especially because I explicitly call deactivate on my referenced RouterOutlet and it then says it is still activated? Then if you look, you see that the messages means the OutletContext and not the RouterOutlet. Here it sets the RouterOutlet on the parentContexts () which calls: Which then creates or gets a already existing OutletContext:  More investigation Maybe this is the wrong direction but I see the  method of the RouterOutlet called in exactly two places. 1# place: 2# place: First time my outlet is created it is not firing the activateWith in the ngOnInit method. Second time the outlet is created, it comes in the ngOnInit method and activates. Then this is called in the ActivateRoutes class (2# place:): ngOnInit Then I remembered this method:  Where following is called: Questions: Is this related:  from the activateRoutes method and  in the onChildOutletDestroyed method? Can someone into it provide information how the flow should be? Why do we need the activateWith call in the else block in the ngOnInit method? Possible solution If I just remove the activateWith call in the else block in the ngOnInit method of the RouterOutlet everything seems to work as expected in my application. Another side effect My Router Outlets from the URL aren't removed by refreshing in the browser. So I got problems also with this and wrote the following: This is then also working and the (outlet) urls queries are removed on refresh of the page. But before the Error was thrown again. But with the above suggestion it is also working.",
    "message_url": "https://github.com/angular/angular/pull/20712#issuecomment-433001509",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Thanks @jorisvandenbossche, sorry I missed that earlier.",
    "clean_message": "Thanks , sorry I missed that earlier.",
    "message_url": "https://github.com/pandas-dev/pandas/pull/17891#issuecomment-336870536",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Companion 3.0.0 PR: #7963\n",
    "clean_message": "Companion 3.0.0 PR: #7963",
    "message_url": "https://github.com/twbs/bootstrap/pull/7962#issuecomment-18299458",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Fixes #8582\n",
    "clean_message": "Fixes #8582",
    "message_url": "https://github.com/microsoft/TypeScript/pull/8594",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I thought RFC2616 was considered obsolete. (https://www.mnot.net/blog/2014/06/07/rfc2616_is_dead)\n\nAnd if I recall - IE had some issues when the content-type was lowercase.  (http://stackoverflow.com/questions/5258977/are-http-headers-case-sensitive)  - may be outdated info though as checks are passing :) \n",
    "clean_message": "I thought RFC2616 was considered obsolete. () And if I recall - IE had some issues when the content-type was lowercase.  ()  - may be outdated info though as checks are passing :) ",
    "message_url": "https://github.com/angular/angular/pull/10290#issuecomment-235322334",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "A rebased version of #73. Better git history.\n",
    "clean_message": "A rebased version of #73. Better git history.",
    "message_url": "https://github.com/plotly/plotly.py/pull/78",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "can you remove the banner \n\n``` ts\n/////////////////////////////\n/// IE10 ECMAScript Extensions\n/////////////////////////////\n\n```\n",
    "clean_message": "can you remove the banner ",
    "message_url": "https://github.com/microsoft/TypeScript/pull/4321#issuecomment-132333840",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Make sense, I\u2019ll add one.",
    "clean_message": "Make sense, I\u2019ll add one.",
    "message_url": "https://github.com/vuejs/vue/pull/9128#issuecomment-443410625",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I have a problem with adding Appollo as a dependency, and the next reason is I am not sure that we need a special library to make HTTP request, cause in all other places we fetch data from web with the simple `HTTPUrlConnection`",
    "clean_message": "I have a problem with adding Appollo as a dependency, and the next reason is I am not sure that we need a special library to make HTTP request, cause in all other places we fetch data from web with the simple ",
    "message_url": "https://github.com/JabRef/jabref/pull/7796#issuecomment-854534019",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I'm thinking of leaving the title and subtitle out of the chart implementation. It should be easy enough to plug that in after adding the chart type, and since the text is static I don't see a strong value in baking it into the chart. Plus, this way it avoids the hard-coded \"translate(120)\", allowing more flexibility in how the titles are displayed. Does that sound reasonable?\n",
    "clean_message": "I'm thinking of leaving the title and subtitle out of the chart implementation. It should be easy enough to plug that in after adding the chart type, and since the text is static I don't see a strong value in baking it into the chart. Plus, this way it avoids the hard-coded \"translate(120)\", allowing more flexibility in how the titles are displayed. Does that sound reasonable?",
    "message_url": "https://github.com/d3/d3/pull/101#issuecomment-975092",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## Other information\r\n\r\nit was wrong explanation of @Injectable decorator",
    "clean_message": "PR Checklist Please check if your PR fulfills the following requirements:  [ ] The commit message follows our guidelines:  [ ] Tests for the changes have been added (for bug fixes / features) [x] Docs have been added / updated (for bug fixes / features)  PR Type What kind of change does this PR introduce? <!-- Please check the one that applies to this PR using \"x\". -- - [ ] Bugfix - [ ] Feature - [ ] Code style update (formatting, local variables) - [ ] Refactoring (no functional changes, no api changes) - [ ] Build related changes - [ ] CI related changes - [x] Documentation content changes - [ ] angular.io application / infrastructure changes - [ ] Other... Please describe: Other information it was wrong explanation of  decorator",
    "message_url": "https://github.com/angular/angular/pull/27480",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Okay, I'll help with the other bugs I found!",
    "clean_message": "Okay, I'll help with the other bugs I found!",
    "message_url": "https://github.com/expressjs/express/pull/4858#issuecomment-1072220035",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 2.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "AppVeyour was configured to use the latest versions of Node for major releases. To make builds more reproducible I've changed both Travis and AppVeyor to use the same fixed versions of Node 6 and Node 7 that AppVeyor is using at the moment.",
    "clean_message": "AppVeyour was configured to use the latest versions of Node for major releases. To make builds more reproducible I've changed both Travis and AppVeyor to use the same fixed versions of Node 6 and Node 7 that AppVeyor is using at the moment.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/2180",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi! @seuf, @andsens (as randomly selected active maintainer of `monitoring`namespace) could you please review this pull request?",
    "clean_message": "Hi! ,  (as randomly selected active maintainer of namespace) could you please review this pull request?",
    "message_url": "https://github.com/ansible/ansible/pull/62608#issuecomment-536483035",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "For reference, here's the generated code:\r\n```\r\nconst sources$m = {\r\n  avif: [\r\n    {\r\n      src: \"\" + new URL(\"../assets/living-carbon-logo.92781a1d.avif\", import.meta.url).href,\r\n      w: 530\r\n    }\r\n  ],\r\n  webp: [\r\n    {\r\n      src: \"\" + new URL(\"../assets/living-carbon-logo.181689e7.webp\", import.meta.url).href,\r\n      w: 530\r\n    }\r\n  ]\r\n};\r\n```\r\n\r\nI believe `vite-imagetools` just outputs [a placeholder](https://github.com/JonasKruckenberg/imagetools/blob/1f472fefaf7a8170b16f9ba89f2d6f87dc2e111d/packages/vite/src/index.ts#L124), which [gets replaced by Vite](https://github.com/vitejs/vite/blob/126e93e6693474a038a5053b7cefb99295f21eb5/packages/vite/src/node/plugins/asset.ts#L29). I'm guessing [it's ultimately coming from Vite's relative path support](https://github.com/vitejs/vite/blob/126e93e6693474a038a5053b7cefb99295f21eb5/packages/vite/src/node/build.ts#L1110). \r\n\r\nIn SvelteKit, if I change:\r\n```\r\nbase: ssr ? assets_base(kit) : './',\r\n```\r\n\r\nTo:\r\n```\r\nbase: ssr ? assets_base(kit) : '/',\r\n```\r\n\r\nThen I get as output:\r\n```\r\nconst sources$o = {\r\n  avif: [\r\n    {\r\n      src: \"/_app/immutable/assets/c3-logo-alpha.eabb7fc9.avif\",\r\n      w: 262\r\n    }\r\n  ],\r\n  webp: [\r\n    {\r\n      src: \"/_app/immutable/assets/c3-logo-alpha.77dad92c.webp\",\r\n      w: 262\r\n    }\r\n  ]\r\n};\r\n```",
    "clean_message": "For reference, here's the generated code: I believe  just outputs a placeholder, which gets replaced by Vite. I'm guessing it's ultimately coming from Vite's relative path support.  In SvelteKit, if I change: To: Then I get as output:",
    "message_url": "https://github.com/sveltejs/svelte/pull/8868#issuecomment-1613545573",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks @kennethreitz. Looks like there is a bug here (either in my test or in the code.) The issue is that `time.mktime` returns a time in localtime which I wasn't accounting for in my test. There are 2 ways to solve this problem:\n1. Modify `morsel_to_cookie` to subtract `time.timezone` so that the resulting value represents UTC time. This will result in the value of `expires` being the same on all systems regardless of timezone.\n2. Modify `TestMorselToCookieExpires.test_expires_valid_str` to subtract `time.timezone` so that the test always passes.\n\nThe former solution seems correct to me, and I can't find anything in the code or RFCs to contradict this. Unfortunately this change would definitely impact users of this module so I'd like to hear others opinions on this.\n\nThanks!\n",
    "clean_message": "Thanks . Looks like there is a bug here (either in my test or in the code.) The issue is that  returns a time in localtime which I wasn't accounting for in my test. There are 2 ways to solve this problem: 1. Modify  to subtract  so that the resulting value represents UTC time. This will result in the value of  being the same on all systems regardless of timezone. 2. Modify  to subtract  so that the test always passes. The former solution seems correct to me, and I can't find anything in the code or RFCs to contradict this. Unfortunately this change would definitely impact users of this module so I'd like to hear others opinions on this. Thanks!",
    "message_url": "https://github.com/psf/requests/pull/1772#issuecomment-29958406",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    },
    "discussion_polarity": "positive"
  },
  {
    "raw_message": "Thanks.\n",
    "clean_message": "Thanks.",
    "message_url": "https://github.com/twbs/bootstrap/pull/14577#issuecomment-55804531",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Is this meant as a solution for users, or just for speeding up mypy in our CI runs?\r\n\r\nIf meant for users:\u00a0one possible downside to this approach \u2014\u00a0would users need to add the pydantic core skipping to their own mypy configs to not suffer the consequencies? If so, I have a feeling we will get people reporting issues about it being slow and need to find in the docs that they should be adding this section to their mypy config. And plenty of others would get annoyed and not say anything, but not realize they could speed things up.\r\n\r\nEither way, that's not to say that we shouldn't merge this now.",
    "clean_message": "Is this meant as a solution for users, or just for speeding up mypy in our CI runs? If meant for users:\u00a0one possible downside to this approach \u2014\u00a0would users need to add the pydantic core skipping to their own mypy configs to not suffer the consequencies? If so, I have a feeling we will get people reporting issues about it being slow and need to find in the docs that they should be adding this section to their mypy config. And plenty of others would get annoyed and not say anything, but not realize they could speed things up. Either way, that's not to say that we shouldn't merge this now.",
    "message_url": "https://github.com/pydantic/pydantic/pull/5206#issuecomment-1472812364",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks @alextp for the review and suggestion. The PR has been updated. Please take a look.",
    "clean_message": "Thanks  for the review and suggestion. The PR has been updated. Please take a look.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/31145#issuecomment-516170629",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> uniques should not have nan\n\nI have misunderstand this with `value_counts`. Currently, `unique` returns array including `NaN` both normal and categorical.\n\n```\npd.Series([1., 2., 1., np.nan]).unique()\n# array([  1.,   2.,  nan])\npd.Series([1., 2., 1., np.nan], dtype='category').unique()\n# array([  1.,   2.,  nan])\n```\n\nSo, the fixed categorical result should preserve `NaN` in codes and not in categories as below? \n\n```\n>>> pd.Series([1., 2., 1., np.nan], dtype='category').unique()\n# [1, 2, NaN]\n# Categories (2, float64): [1, 2]\n```\n",
    "clean_message": "I have misunderstand this with . Currently,  returns array including  both normal and categorical. So, the fixed categorical result should preserve  in codes and not in categories as below? ",
    "message_url": "https://github.com/pandas-dev/pandas/pull/10508#issuecomment-121595610",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks a lot @jschfflr @OrKoN for your time and opinions! :)\r\nI have added a new commit 75e5377 to this PR to introduce a new test case for this option.",
    "clean_message": "Thanks a lot   for your time and opinions! :) I have added a new commit 75e5377 to this PR to introduce a new test case for this option.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/7105#issuecomment-828732018",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": ":+1:\r\nshipit",
    "clean_message": ":+1: shipit",
    "message_url": "https://github.com/ansible/ansible/pull/35705#issuecomment-363029902",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi Szczepan,\n\nThanks for the reply, I'll simplify the methods now - do I open a new pull request, or somehow edit this one?  Sorry - I'm new to GitHub and Git!\n\nI haven't used a custom VerificationMode in anger yet, I'm actually writing a tutorial on Mockito and wanted to show one as an example.  The one I wrote would verify that an invocation was the first invocation on a Mock, and I had a lot of hair pulling when the .equals() of my chunk and all invocations didn't evaluate to true, even though it was the same object!\n\nRegards,\nHugh\n",
    "clean_message": "Hi Szczepan, Thanks for the reply, I'll simplify the methods now - do I open a new pull request, or somehow edit this one?  Sorry - I'm new to GitHub and Git! I haven't used a custom VerificationMode in anger yet, I'm actually writing a tutorial on Mockito and wanted to show one as an example.  The one I wrote would verify that an invocation was the first invocation on a Mock, and I had a lot of hair pulling when the .equals() of my chunk and all invocations didn't evaluate to true, even though it was the same object! Regards, Hugh",
    "message_url": "https://github.com/mockito/mockito/pull/87#issuecomment-56954743",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hi team!\r\n\r\nYou might have seen that LGTM.com will go off-line [later this month](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The team that built LGTM (including me!) [joined GitHub](https://github.blog/2019-09-18-github-welcomes-semmle/) a couple of years ago, and we've natively integrated the CodeQL engine that powers LGTM into GitHub.\r\n\r\nThis PR enables the CodeQL analysis for three.js. Just like with LGTM, alerts will show up in pull requests (but better). In addition, all alerts can be browsed on the \"Security\" tab of the repository.\r\n\r\nI tried to configure GitHub code scanning as similarly/closely as possible to the original LGTM configuration \u2014 do feel free to tweak and adjust as you see fit. If you have any questions, check out the FAQ below, and I'm of course happy to help as well. \r\n\r\n\r\n### FAQ\r\n<details>\r\n<summary>Click here to expand the FAQ section</summary>\r\n\r\n#### How often will the code scanning analysis run?\r\nBy default, code scanning will trigger a scan with the CodeQL engine on the following events:\r\nOn every pull request \u2014 to flag up potential security problems for you to investigate before merging a PR.\r\nOn every push to your default branch and other protected branches \u2014 this keeps the analysis results on your repository\u2019s *Security* tab up to date.\r\nOnce a week at a fixed time \u2014 to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened.\r\n\r\n#### What will this cost?\r\nNothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions).\r\n\r\n#### What types of problems does CodeQL find?\r\nThe CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we\u2019ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you.\r\n\r\n#### How do I upgrade my CodeQL engine?\r\nNo need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version.\r\n\r\n#### The analysis doesn\u2019t seem to be working\r\nIf you get an error in GitHub Actions that indicates that CodeQL wasn\u2019t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis.\r\n\r\n#### How do I disable LGTM.com?\r\nIf you have LGTM\u2019s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don\u2019t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)).\r\n\r\n#### Which source code hosting platforms does code scanning support?\r\nGitHub code scanning is deeply integrated within GitHub itself. If you\u2019d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub.\r\n\r\n#### How do I know this PR is legitimate?\r\nThis PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action). If you have any other questions or concerns, please join the discussion [here](https://github.com/orgs/community/discussions/29534) in the official GitHub community!\r\n\r\n#### I have another question / how do I get in touch?\r\nPlease join the discussion [here](https://github.com/orgs/community/discussions/29534) to ask further questions and send us suggestions!\r\n\r\n\r\n</details>\r\n",
    "clean_message": "Hi team! You might have seen that LGTM.com will go off-line later this month. The team that built LGTM (including me!) joined GitHub a couple of years ago, and we've natively integrated the CodeQL engine that powers LGTM into GitHub. This PR enables the CodeQL analysis for three.js. Just like with LGTM, alerts will show up in pull requests (but better). In addition, all alerts can be browsed on the \"Security\" tab of the repository. I tried to configure GitHub code scanning as similarly/closely as possible to the original LGTM configuration \u2014 do feel free to tweak and adjust as you see fit. If you have any questions, check out the FAQ below, and I'm of course happy to help as well.  FAQ <details<summary How often will the code scanning analysis run? By default, code scanning will trigger a scan with the CodeQL engine on the following events: On every pull request \u2014 to flag up potential security problems for you to investigate before merging a PR. On every push to your default branch and other protected branches \u2014 this keeps the analysis results on your repository\u2019s Security tab up to date. Once a week at a fixed time \u2014 to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. What will this cost? Nothing! The CodeQL engine will run inside GitHub Actions, making use of your unlimited free compute minutes for public repositories. What types of problems does CodeQL find? The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we\u2019ve enabled the  query suite for you. How do I upgrade my CodeQL engine? No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. The analysis doesn\u2019t seem to be working If you get an error in GitHub Actions that indicates that CodeQL wasn\u2019t able to analyze your code, please follow the instructions here to debug the analysis. How do I disable LGTM.com? If you have LGTM\u2019s automatic pull request analysis enabled, then you can follow these steps to disable the LGTM pull request analysis. You don\u2019t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com (more info here). Which source code hosting platforms does code scanning support? GitHub code scanning is deeply integrated within GitHub itself. If you\u2019d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. How do I know this PR is legitimate? This PR is filed by the official LGTM.com GitHub App, in line with the deprecation timeline that was announced on the official GitHub Blog. The proposed GitHub Action workflow uses the official open source GitHub CodeQL Action. If you have any other questions or concerns, please join the discussion here in the official GitHub community! I have another question / how do I get in touch? Please join the discussion here to ask further questions and send us suggestions! </details",
    "message_url": "https://github.com/mrdoob/three.js/pull/25056",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "This PR was merged into the repository by commit da58801f95c66c201e332189af25702bdd722f3f.",
    "clean_message": "This PR was merged into the repository by commit da58801f95c66c201e332189af25702bdd722f3f.",
    "message_url": "https://github.com/angular/angular/pull/47586#issuecomment-1267609311",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Fixes #4703.\r\n\r\n<!-- describe the changes you have made here: what, why, ... \r\n     Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).\r\n     The title of the PR must not reference an issue, because GitHub does not support autolinking there. -->\r\n\r\n\r\n----\r\n\r\n- [ ] Change in CHANGELOG.md described\r\n- [ ] Tests created for changes\r\n- [ ] Manually tested changed features in running JabRef\r\n- [ ] Screenshots added in PR description (for bigger UI changes)\r\n- [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message)\r\n- [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)\r\n",
    "clean_message": "Fixes #4703. <!-- describe the changes you have made here: what, why, ...       Link issues by using the following pattern: #333 or koppor#49.      The title of the PR must not reference an issue, because GitHub does not support autolinking there. --   [ ] Change in CHANGELOG.md described [ ] Tests created for changes [ ] Manually tested changed features in running JabRef [ ] Screenshots added in PR description (for bigger UI changes) [ ] Ensured that the git commit message is a good one [ ] Check documentation status (Issue created for outdated help page at help.jabref.org?) ",
    "message_url": "https://github.com/JabRef/jabref/pull/4720",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the feedback :)!\r\n\r\nRegarding the first  bullet point:\r\nOne reason was that JabRef already knew how to parse such a file, making the implementation fairly easy. Additionally, the entries can easily be modified directly in JabRef. Therefore it was a straightforward choice. This certainly is not the most user-friendly variant, but this can and will be addressed by offering a GUI for the creation of this file in the future.\r\n\r\nRegarding the second bullet point:\r\nThe reason for this is that this allows easy versioning of search sessions allowing to track new entries without reevaluating old entries. I do not see how this could reduce the number of use cases? Furthermore, if the user does not want to create a remote repository for pushing a local one will suffice. In case a remote repository is configured I do not see any use case where a search should not be documented?\r\n\r\nI agree that the UX is currently poor, however with the GUI implementation and the [existing documentation](https://github.com/JabRef/user-documentation/pull/333) for the feature it should suffice :).\r\n",
    "clean_message": "Thanks for the feedback :)! Regarding the first  bullet point: One reason was that JabRef already knew how to parse such a file, making the implementation fairly easy. Additionally, the entries can easily be modified directly in JabRef. Therefore it was a straightforward choice. This certainly is not the most user-friendly variant, but this can and will be addressed by offering a GUI for the creation of this file in the future. Regarding the second bullet point: The reason for this is that this allows easy versioning of search sessions allowing to track new entries without reevaluating old entries. I do not see how this could reduce the number of use cases? Furthermore, if the user does not want to create a remote repository for pushing a local one will suffice. In case a remote repository is configured I do not see any use case where a search should not be documented? I agree that the UX is currently poor, however with the GUI implementation and the existing documentation for the feature it should suffice :).",
    "message_url": "https://github.com/JabRef/jabref/pull/7124#issuecomment-733867507",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@k0ste I am sorry, but I started fixing this yesterday not realising this PR and issue were already open for 6 days.\r\n\r\nI am the maintainer of this module, but was not notified about this issue and PR by @ansibot. In the meantime I added integration tests to ensure the mail module is working correctly, so that in the future changes won't break it anywhere in our test-matrix. So I prefer we continue with the more extensive PR.\r\n\r\nbot_broken",
    "clean_message": "I am sorry, but I started fixing this yesterday not realising this PR and issue were already open for 6 days. I am the maintainer of this module, but was not notified about this issue and PR by . In the meantime I added integration tests to ensure the mail module is working correctly, so that in the future changes won't break it anywhere in our test-matrix. So I prefer we continue with the more extensive PR. bot_broken",
    "message_url": "https://github.com/ansible/ansible/pull/49016#issuecomment-442460909",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "There is no formalized design for it. However, currently the compiler will preserve two types of comments: detached, pinned (the triple-slash is a bug). I think it is desirable to keep copy right comment even in emitted js. I make an issue #3878 for discussing design for removing comment in general.\n",
    "clean_message": "There is no formalized design for it. However, currently the compiler will preserve two types of comments: detached, pinned (the triple-slash is a bug). I think it is desirable to keep copy right comment even in emitted js. I make an issue #3878 for discussing design for removing comment in general.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/3874#issuecomment-121756206",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I was discussing this with @cpojer and he said something very similar about expected vs. actual.  I've never seen this as confusing, but that may just be a privilege of being a native speaker \ud83d\ude04 \n\nadded/missing sounds like a good idea for diffs.  For tests that aren't diff maybe `s/expected/correctValue/` and `s/actual/observedValue/`?\n",
    "clean_message": "I was discussing this with  and he said something very similar about expected vs. actual.  I've never seen this as confusing, but that may just be a privilege of being a native speaker \ud83d\ude04  added/missing sounds like a good idea for diffs.  For tests that aren't diff maybe  and ?",
    "message_url": "https://github.com/jestjs/jest/pull/1439#issuecomment-240439884",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Yeah, I really like azimuthal too. Well, we're not going to make any immediate movements to the current projections in core. I just want to have a more discoverable home for the new ones. So let's start there!\n",
    "clean_message": "Yeah, I really like azimuthal too. Well, we're not going to make any immediate movements to the current projections in core. I just want to have a more discoverable home for the new ones. So let's start there!",
    "message_url": "https://github.com/d3/d3/pull/318#issuecomment-4905031",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "The role of the loss scale is to prevent underflow, which is very\ncommon when doing many additions in float16 because of the lack of exponent\nbits (compared with float32). So we want to multiply all losses by a large\nnumber so we don't have to spend the precious few exponent bits we have on\nleading zeros. Doing so by an arbitrarily large number can overflow,\nthough, but while underflow is silent, overflow is noisy (it generates inf\n/ nan values), so we can detect it, and can use a line-search-like approach\nto find the largest loss scale possible such that we do not overflow, as\nthis will underflow the least.\n\nSo by this reasoning there's no point in ever having a loss scale less than\n1, as that would increase the odds of underflow.\n\nDoes this make sense?\n\nOn Thu, Dec 5, 2019 at 8:04 PM x10000year <notifications@github.com> wrote:\n\n> why loss scale must be at least 1? sometimes i want to use a loss scale\n> smaller than 1.0\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/pull/27655?email_source=notifications&email_token=AAABHRO5RCWIBXDV4S6FTUDQXHFLPA5CNFSM4HEM4LS2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEGC6N4Y#issuecomment-562423539>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAABHRNEFSXE6R5M5LIWSDTQXHFLPANCNFSM4HEM4LSQ>\n> .\n>\n\n\n-- \n - Alex\n",
    "clean_message": "The role of the loss scale is to prevent underflow, which is very common when doing many additions in float16 because of the lack of exponent bits (compared with float32). So we want to multiply all losses by a large number so we don't have to spend the precious few exponent bits we have on leading zeros. Doing so by an arbitrarily large number can overflow, though, but while underflow is silent, overflow is noisy (it generates inf / nan values), so we can detect it, and can use a line-search-like approach to find the largest loss scale possible such that we do not overflow, as this will underflow the least. So by this reasoning there's no point in ever having a loss scale less than 1, as that would increase the odds of underflow. Does this make sense? On Thu, Dec 5, 2019 at 8:04 PM x10000year < --   - Alex",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/27655#issuecomment-562643877",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Put test in test/extra, and can you add a couple integration tests that train models with these schedulers?",
    "clean_message": "Put test in test/extra, and can you add a couple integration tests that train models with these schedulers?",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/755#issuecomment-1535493072",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "But still not when you build the docs, @astrofrog?? Weird...\n\nAlso, see #2412 for an attempted fix on the google failure.  @embray, I'm not sure if that conflicts with this, but you can merge as you see fit (or just take that solution and close hte PR)\n",
    "clean_message": "But still not when you build the docs, ?? Weird... Also, see #2412 for an attempted fix on the google failure.  , I'm not sure if that conflicts with this, but you can merge as you see fit (or just take that solution and close hte PR)",
    "message_url": "https://github.com/astropy/astropy/pull/2405#issuecomment-41964568",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "In general, I'm not a big fan of small refactorings like this when there are no obvious readability issues with the original code, which would make the history of the real logic changes harder to track.",
    "clean_message": "In general, I'm not a big fan of small refactorings like this when there are no obvious readability issues with the original code, which would make the history of the real logic changes harder to track.",
    "message_url": "https://github.com/vuejs/vue/pull/12874#issuecomment-1320778495",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!-- Hey,\r\nThanks for the contribution, this is awesome.\r\nAs you may have read, project members have somehow an opinionated view on what and how should be\r\nMockito, e.g. we don't want mockito to be a feature bloat.\r\nThere may be a thorough review, with feedback -> code change loop.\r\n-->\r\n<!--\r\nIf you have a suggestion for this template you can fix it in the .github/PULL_REQUEST_TEMPLATE.md file\r\n-->\r\n## Checklist\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r\n",
    "clean_message": "<!-- Hey, Thanks for the contribution, this is awesome. As you may have read, project members have somehow an opinionated view on what and how should be Mockito, e.g. we don't want mockito to be a feature bloat. There may be a thorough review, with feedback ---<!-- If you have a suggestion for this template you can fix it in the .github/PULL_REQUEST_TEMPLATE.md file --## Checklist  [x] Read the contributing guide [x] PR should be motivated, i.e. what does it fix, why, and if relevant how [ ] If possible / relevant include an example in the description, that could help all readers        including project members to get a better picture of the change [x] Avoid other runtime dependencies [x] Meaningful commit history ; intention is important please rebase your commit history so that each        commit is meaningful and help the people that will explore a change in 2 years [x] The pull request follows coding style [x] Mention Fixes #<issue number ",
    "message_url": "https://github.com/mockito/mockito/pull/2715",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I am unsure how this was ever supposed to work, as testDocument is guaranteed to be undefined at that point since beforeEach doesn't run synchronously. (I don't think there's any way to have beforeEach halt the tests, but let me know if you know differently.)\n\nThe tests will fail now, but they should be failing because of #337.\n\n/cc @petehunt\n",
    "clean_message": "I am unsure how this was ever supposed to work, as testDocument is guaranteed to be undefined at that point since beforeEach doesn't run synchronously. (I don't think there's any way to have beforeEach halt the tests, but let me know if you know differently.) The tests will fail now, but they should be failing because of #337. /cc ",
    "message_url": "https://github.com/facebook/react/pull/338",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@terebesirobert \nStrange, `ArgumentCaptor<List<Person>> c= ArgumentCaptor.forClass(null);` compiles with1.6 for me under Eclipse.\n\n>  I think the signature of forClass it's not correct.\n\nYes it looks a over complicated. I tried`<T> T forClass(Class<? extends T>)` but it makes it even worse.\n",
    "clean_message": "Strange, <T",
    "message_url": "https://github.com/mockito/mockito/pull/375#issuecomment-229487482",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "#10991",
    "clean_message": "10991",
    "message_url": "https://github.com/mrdoob/three.js/pull/10984#issuecomment-286220943",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@SaoirseARM\r\nI re-ran the kokoro test, and I think you can access and check the detail of the failure in the \"`Details`\" of the \"Py+CPP Test Suite - Ubuntu CPU, Python 3.9 \u2014 Internal CI build failed\" Check. Please resolve these failures. \r\n\r\nI believe you can also check the error message from `//tensorflow/compiler/mlir/lite/quantization/lite:quantize_model_test` on the 2nd failure([pkg/pip_and_nonpip_tests](https://source.cloud.google.com/results/invocations/33cf66fc-fe3e-49ae-a776-8618618d6009/targets/pkg%2Fpip_and_nonpip_tests)) in the \"`Details`\".\r\n\r\n<details>\r\n  <summary>Error message from `pkg/pip_and_nonpip_tests` failure</summary>\r\n\r\n```\r\ntensorflow/compiler/mlir/lite/quantization/lite/quantize_model_test.cc:1221\r\nValue of: model_.operator_codes[0]->version\r\nExpected: is equal to 5\r\n  Actual: 11 (of type int)\r\nNOTE: From /tensorflow/compiler/mlir/lite/quantization/lite/quantize_model_test/test.xml\r\nNOTE: Number of failures for this test: 3.\r\n      Most TF jobs run tests three times to root out flakes.\r\n      Since there were three failures, this is not flaky, and it\r\n      probably caused the Kokoro invocation to fail.\r\n```\r\n\r\n</details>",
    "clean_message": "I re-ran the kokoro test, and I think you can access and check the detail of the failure in the \"\" of the \"Py+CPP Test Suite - Ubuntu CPU, Python 3.9 \u2014 Internal CI build failed\" Check. Please resolve these failures.  I believe you can also check the error message from  on the 2nd failure(pkg/pip_and_nonpip_tests) in the \"\". ",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/58400#issuecomment-1454828460",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> Missing the change in `docs/quickstart.md`\r\n\r\nOh yeah - missed the docs :P ",
    "clean_message": "Oh yeah - missed the docs :P ",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/1091#issuecomment-1616808987",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "@WestLangley That is interesting indeed!",
    "clean_message": "That is interesting indeed!",
    "message_url": "https://github.com/mrdoob/three.js/pull/26130#issuecomment-1562476337",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Jenkins, test this please.",
    "clean_message": "Jenkins, test this please.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/12010#issuecomment-334226731",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Yeah, Jest should come with the node and jsdom environments by default, even if only one of them is used.",
    "clean_message": "Yeah, Jest should come with the node and jsdom environments by default, even if only one of them is used.",
    "message_url": "https://github.com/jestjs/jest/pull/4992#issuecomment-348297788",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": ">  but it's the wrong approach anyway.\r\n\r\nCertainly, it must not be considered. I just included that because it was unclear to me what causes the failure.",
    "clean_message": "Certainly, it must not be considered. I just included that because it was unclear to me what causes the failure.",
    "message_url": "https://github.com/JabRef/jabref/pull/10027#issuecomment-1604192992",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "##### SUMMARY\r\npostgresql_set: improve CI tests\r\n1. improve formatting\r\n2. add additional checks by SQL queries\r\n\r\n##### ISSUE TYPE\r\n<!--- Pick one below and delete the rest -->\r\n- Bugfix Pull Request\r\n\r\n##### COMPONENT NAME\r\npostgresql_set",
    "clean_message": "SUMMARY postgresql_set: improve CI tests 1. improve formatting 2. add additional checks by SQL queries ISSUE TYPE <!--- Pick one below and delete the rest --- Bugfix Pull Request COMPONENT NAME postgresql_set",
    "message_url": "https://github.com/ansible/ansible/pull/59583",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> Sadly this still has reformatting issues.\n> @MasterJames That is really hard to read. Couldn't you just do the changes again in the internal editor to avoid the duplication thing? Considering that this changes core parts of THREE, proper proofreading is important for many people, and hopefully it is a requirement for these changes to be accepted.\n\nI appreciate the effort to approach my original request, but am a bit skeptical against making a lot of changes to the current methods. In particular, making add use addAt as a helper may spare some lines of code, but the extra calls and checking may incur a computational/memory cost when one calls many add(object). I have similar concerns about some other changes, admitting that I haven't digged through the entire diff.\n\nAdding replace and replaceAt first seems much safer, less invasive.\n",
    "clean_message": "I appreciate the effort to approach my original request, but am a bit skeptical against making a lot of changes to the current methods. In particular, making add use addAt as a helper may spare some lines of code, but the extra calls and checking may incur a computational/memory cost when one calls many add(object). I have similar concerns about some other changes, admitting that I haven't digged through the entire diff. Adding replace and replaceAt first seems much safer, less invasive.",
    "message_url": "https://github.com/mrdoob/three.js/pull/8406#issuecomment-198492580",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@timhoffm I'm thinking what about a followup PR that has that checklist at the top of the reviewers guidelines? Also thanks for all your help!",
    "clean_message": "I'm thinking what about a followup PR that has that checklist at the top of the reviewers guidelines? Also thanks for all your help!",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/15252#issuecomment-532054671",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Fixes #6820\r\n\r\n- If a vertical bar, allow a scalar height\r\n- If a horizontal bar, allow a scalar width\r\n- Test that doing the above works without errors",
    "clean_message": "Fixes #6820  If a vertical bar, allow a scalar height If a horizontal bar, allow a scalar width Test that doing the above works without errors ",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/7644",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [X] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [X] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `gulp runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #50520\r\n\r\n- [ ] i don't know how the fourslash tests work or how to debug them. i'll take a closer look tomorrow\r\n- [ ] should `RegExpMatchArray` be deleted and `RegExpExecArray` be used for both `match` and `exec` as suggested by https://github.com/microsoft/TypeScript/issues/50520#issuecomment-1242878018?\r\n",
    "clean_message": "<!-- Thank you for submitting a pull request! Please verify that: * [X] There is an associated issue in the  milestone (required) * [X] Code is up-to-date with the  branch * [ ] You've successfully run  locally * [ ] There are new or updated unit tests validating the change Refer to CONTRIBUTING.MD for more details. ** Please don't send typo fixes! ** Please don't send a PR solely for the purpose of fixing a typo, unless that typo truly hurts understanding of the text. Each PR represents work for the maintainers, and that work should provide commensurate value. If you're interested in sending a PR, the issue tracker has many issues marked . Fixes #50520  [ ] i don't know how the fourslash tests work or how to debug them. i'll take a closer look tomorrow [ ] should  be deleted and  be used for both  and  as suggested by  ",
    "message_url": "https://github.com/microsoft/TypeScript/pull/50713",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@jklymak What do you mean by \"the right thing\"?\r\n\r\nIf I do `plt.plot([1], [datetime.timedelta(3)])`, what would be plotted? What axis would be used?\r\n\r\nWhat happens if I do this:\r\n\r\n```python\r\nplt.plot([1, 2], [datetime.timedelta(hours=3),\r\n                  datetime.datetime(2018, 1, 1)])`\r\n```\r\n\r\nWill it throw an exception?\r\n\r\nI realize that this is not a simple problem to solve, but if you merge something that just forces `datetime` and `timedelta` into the same units automatically, you are creating a situation that is hard to reverse without breaking backwards compatibility. It is worth taking the time to get this right.\r\n\r\n> (i.e 30 kg +/- 2 kg are both the same units...)\r\n\r\nMy suggestion for handling spans and other situations like this is the same as it was in #9120. I believe these problems would go away if you did unit conversions *after* any arithmetical operations. By converting everything to float before calculating spans and such, you lose all custom `__add__` behavior and the like, which means you can't have a span that is a `relativedelta` or any other interesting custom behavior.\r\n\r\nI strongly recommend against treating `timedelta` and its ilk like a `datetime` for the short-term expedience of being able to *ignore* the unit analysis.",
    "clean_message": "What do you mean by \"the right thing\"? If I do , what would be plotted? What axis would be used? What happens if I do this: datetimetimedelta__add__relativedeltatimedeltadatetime` for the short-term expedience of being able to ignore the unit analysis.",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/12863#issuecomment-441816815",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the interest @codemation! :nerd_face: \r\n\r\nI haven't seen any other request for this feature, and as you already solved it for your use case, I would be inclined to not have it in FastAPI. But if I saw a lot of users needing it, that could change my mind.\r\n\r\nHave you seen other users requesting this, maybe in an issue?\r\n\r\n> Sorry for the long delay! \ud83d\ude48  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order.",
    "clean_message": "Thanks for the interest ! :nerd_face:  I haven't seen any other request for this feature, and as you already solved it for your use case, I would be inclined to not have it in FastAPI. But if I saw a lot of users needing it, that could change my mind. Have you seen other users requesting this, maybe in an issue?  Sorry for the long delay! \ud83d\ude48  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order. ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/2767#issuecomment-1302618624",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> > Aside: The fix for the sometimes failing test_conv2d grad check is to relax the tolerance to grad_rtol=1e-5. Since it\u2019s saved in the test definition, we can see by inspection that the backward accuracy for conv2d (on GPU) is a bit lower than desired. It\u2019s probably a compounded truncation error since there are so many nested loops and we are working with 32 bit precision on the GPU.\r\n> \r\n> I agree with you, but that still doesn't fix the flakiness of the test, which is a bigger problem than setting the precision. It's OK the test to fail, but when I'm running multiple times on the same machine and get different results, that makes developing hard.\r\n\r\nDoes grad_rtol need to be further relaxed then? Having a test that passes every time with known accuracy expectations is better than one that passes sometimes with strict accuracy expectations. Or is there some other issue?\r\n\r\nI remember actually relaxing the grad tolerance for the GPU conv2d test to 1e-5 or 1e-4 before, but that change may have been clobbered by a recent PR by mistake. Or maybe I never pushed, not sure which.",
    "clean_message": "Does grad_rtol need to be further relaxed then? Having a test that passes every time with known accuracy expectations is better than one that passes sometimes with strict accuracy expectations. Or is there some other issue? I remember actually relaxing the grad tolerance for the GPU conv2d test to 1e-5 or 1e-4 before, but that change may have been clobbered by a recent PR by mistake. Or maybe I never pushed, not sure which.",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/108#issuecomment-726157757",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 2.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@straube It was unrelated I imagine\u2014Travis had some issues after patching those major vulnerabilities.",
    "clean_message": "It was unrelated I imagine\u2014Travis had some issues after patching those major vulnerabilities.",
    "message_url": "https://github.com/twbs/bootstrap/pull/25169#issuecomment-357858310",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\n\r\nWhen exploring [css-in-js solutions](https://github.com/MicheleBertoli/css-in-js) for vue, I came across the fact that some auto prefixed style objects (for example, by [postcss-js](https://github.com/postcss/postcss-js)) cannot be directly used as `style` option on elements, when they have an array as value, e.g.\r\n```\r\n{ display: ['-webkit-box', '-webkit-flex', '-ms-flexbox', 'flex'] }\r\n```\r\n...which happens when a rule value needs to be prefixed, other examples:\r\n```\r\n{ backgroundImage: ['radial-gradient(...)', '-webkit-radial-gradient(...)']\r\n{ cursor: ['-webkit-grab','grab'] }\r\n```\r\nThis PR adds support for directly consuming such objects as `style` option.        ",
    "clean_message": "<!-- Please make sure to read the Pull Request Guidelines: -- <!-- PULL REQUEST TEMPLATE --<!-- (Update \"[ ]\" to \"[x]\" to check a box) -- What kind of change does this PR introduce? (check at least one)  [ ] Bugfix [x] Feature [ ] Code style update [ ] Refactor [ ] Build-related changes [ ] Other, please describe:  Does this PR introduce a breaking change? (check one)  [ ] Yes [x] No  If yes, please describe the impact and migration path for existing applications: The PR fulfills these requirements:  [x] It's submitted to the  branch for v2.x (or to a previous version branch), not the  branch [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. , where \"xxx\" is the issue number) [x] All tests are passing:  [x] New/updated tests are included  If adding a new feature, the PR's description includes: - [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it) Other information: When exploring css-in-js solutions for vue, I came across the fact that some auto prefixed style objects (for example, by postcss-js) cannot be directly used as  option on elements, when they have an array as value, e.g. ...which happens when a rule value needs to be prefixed, other examples: This PR adds support for directly consuming such objects as  option.        ",
    "message_url": "https://github.com/vuejs/vue/pull/5460",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the pull request. Currently, the layout\u2019s size directly determines the gravitational center, and that\u2019s pretty much it\u2019s only purpose (aside from initializing node positions). Thus I don\u2019t see a compelling need to add a separate gravitational center, especially since you can also apply a transform to the G element that contains the force layout if you like.\n",
    "clean_message": "Thanks for the pull request. Currently, the layout\u2019s size directly determines the gravitational center, and that\u2019s pretty much it\u2019s only purpose (aside from initializing node positions). Thus I don\u2019t see a compelling need to add a separate gravitational center, especially since you can also apply a transform to the G element that contains the force layout if you like.",
    "message_url": "https://github.com/d3/d3/pull/817#issuecomment-12619453",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "positive"
  },
  {
    "raw_message": "Closes #5972 \r\n\r\nI see three reasonable alternative choices for the behavior for leading-`_` attributes on BaseModel classes:\r\n\r\n* `ClassVar`\r\n* `PrivateAttr`\r\n* raise an error, same as we would for public attributes\r\n\r\nAs this PR stands, I've made it so that they become a `PrivateAttr`. Mostly because it was super easy to do. But that can be changed easily.\r\n\r\nHowever, in v1, these leading-underscore fields were _always_ classvars, even when they had an annotation, which perhaps should be the preferred implementation to reduce backwards compatibility issues? I'm not sure why we changed to defaulting to setting as a PrivateAttr in v2; this has led to some confusion as noted in this comment https://github.com/pydantic/pydantic/issues/5972#issuecomment-1573705778\r\n\r\nI'll also note there has been a feature request to be able to use leading-`_` attributes as fields (e.g., for `_id` for use with mongodb), which is another angle to the problem not yet resolved.\r\n\r\n@samuelcolvin do you remember the motivation behind making `_`-attributes private automatically?",
    "clean_message": "Closes #5972  I see three reasonable alternative choices for the behavior for leading- attributes on BaseModel classes:    raise an error, same as we would for public attributes  As this PR stands, I've made it so that they become a . Mostly because it was super easy to do. But that can be changed easily. However, in v1, these leading-underscore fields were always classvars, even when they had an annotation, which perhaps should be the preferred implementation to reduce backwards compatibility issues? I'm not sure why we changed to defaulting to setting as a PrivateAttr in v2; this has led to some confusion as noted in this comment  I'll also note there has been a feature request to be able to use leading- attributes as fields (e.g., for  for use with mongodb), which is another angle to the problem not yet resolved. do you remember the motivation behind making -attributes private automatically?",
    "message_url": "https://github.com/pydantic/pydantic/pull/6111",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This ensures that we use sys.writeFile for baseline buildinfo so that buildInfo correctness is verified. It was missing when we started passing the writeFileCallback which didnt track written files. \r\nThis also baselines those differences so its easy to view, read and maintain.\r\n\r\nThis is on top of #48703. Actual change is only 386786c and f45e9ca",
    "clean_message": "This ensures that we use sys.writeFile for baseline buildinfo so that buildInfo correctness is verified. It was missing when we started passing the writeFileCallback which didnt track written files.  This also baselines those differences so its easy to view, read and maintain. This is on top of #48703. Actual change is only 386786c and f45e9ca",
    "message_url": "https://github.com/microsoft/TypeScript/pull/48751",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Fixes #6487\r\n\r\n- [x] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable)\r\n- [x] Tests created for changes (if applicable)\r\n- [x] Manually tested changed features in running JabRef (always required)\r\n- [x] Screenshots added in PR description (for UI changes)\r\n- [x] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not created an issue at <https://github.com/JabRef/user-documentation/issues> or, even better, submitted a pull request to the documentation repository.\r\n\r\nVideo:\r\n\r\nhttps://user-images.githubusercontent.com/57553691/111628111-ce88ae00-882a-11eb-9dee-9dfe3087437f.mp4\r\n\r\nUse `D:\\TEST\\test whitespace.bib` as an example.\r\n\r\nDouble-click it, and I got errors in console as the following:\r\n\r\n```\r\nError opening file 'D:\\TEST\\test': Could not find a suitable import format.\r\nError opening file 'whitespace.bib': Could not find a suitable import format.\r\n21:41:53.032 [JabRef - Remote Listener Server on port 6050] ERROR org.jabref.logic.importer.OpenDatabase - Error: File not found\r\n```\r\n\r\nTherefore, the path was regarded as two files: `D:\\TEST\\test` and `whitespace.bib`.\r\n\r\nStart from `org.jabref.logic.importer.OpenDatabase` to backtrack the dataflow:\r\n\r\n|         Class          |            Method            |      Variable      |\r\n| :--------------------: | :--------------------------: | :----------------: |\r\n|     `OpenDatabase`     |        `loadDatabase`        |    `fileToOpen`    |\r\n|  `ArgumentProcessor`   |     `importAndOpenFiles`     |    `aLeftOver`     |\r\n|      `JabRefCLI`       |         constructor          |       `args`       |\r\n|  `ArgumentProcessor`   |         constructor          |       `args`       |\r\n| `JabRefMessageHandler` | `handleCommandlineArguments` |     `message`      |\r\n| `RemoteListenerServer` |       `handleMessage`        |     `argument`     |\r\n| `RemoteListenerServer` |            `run`             | `input.getValue()` |\r\n|       `Protocol`       |       `receiveMessage`       |     `argument`     |\r\n\r\n\r\n\r\nUse logger to print the variable `argument`:\r\n\r\n```java\r\nif (argument instanceof String[]) {\r\n    LOGGER.info(Arrays.toString((String[]) argument));\r\n}\r\n```\r\n\r\nAnd I got:\r\n\r\n```\r\n21:41:53.024 [JabRef - Remote Listener Server on port 6050] INFO  org.jabref.logic.remote.shared.Protocol - [D:\\TEST\\test, whitespace.bib]\r\n```\r\n\r\nSo I think the problem is that when passing the argument `D:\\TEST\\test whitespace.bib`, it will be considered as two arguments because there is a whitespace that serves as a delimiter.\r\n\r\nI noticed that @zongxian said that a path containing Chinese characters would cause the same error. So the problem is not just related to delimiter, probably about text encoding.\r\n\r\nTherefore I encoded the arguments in `RemoteClient.sendCommandLineArguments` and decoded them in `Protocol.receiveMessage`.\r\n\r\nThen I created a binary and tested. Now it works well on my computer (Windows 10 1909).",
    "clean_message": "Fixes #6487  [x] Change in  described in a way that is understandable for the average user (if applicable) [x] Tests created for changes (if applicable) [x] Manually tested changed features in running JabRef (always required) [x] Screenshots added in PR description (for UI changes) [x] Checked documentation: Is the information available and up to date? If not created an issue at < Video:  Use  as an example. Double-click it, and I got errors in console as the following: Therefore, the path was regarded as two files:  and . Start from  to backtrack the dataflow: |         Class          |            Method            |      Variable      | | :--------------------: | :--------------------------: | :----------------: | |          |                |        | |     |          |         | |             |         constructor          |              | |     |         constructor          |              | |  |  |           | |  |               |          | |  |                         |  | |              |              |          | Use logger to print the variable : And I got: So I think the problem is that when passing the argument , it will be considered as two arguments because there is a whitespace that serves as a delimiter. I noticed that  said that a path containing Chinese characters would cause the same error. So the problem is not just related to delimiter, probably about text encoding. Therefore I encoded the arguments in  and decoded them in . Then I created a binary and tested. Now it works well on my computer (Windows 10 1909).",
    "message_url": "https://github.com/JabRef/jabref/pull/7551",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Closes #21857, fixes #21650, and closes #21885 (dupe of #21650).\r\n\r\nThe card image stretching affected `.card-img`, `.card-img-top`, and `.card-img-bottom` as we utilize flexbox and `flex-direction: column` on `.card`. Intrinsic image sizing is basically borked with flex due to the default `stretch` value for aligning the content. There's no real way around this it seems _other_ than `width: 100%;` as no other flex property will address the aspect ratio.",
    "clean_message": "Closes #21857, fixes #21650, and closes #21885 (dupe of #21650). The card image stretching affected , , and  as we utilize flexbox and  on . Intrinsic image sizing is basically borked with flex due to the default  value for aligning the content. There's no real way around this it seems other than  as no other flex property will address the aspect ratio.",
    "message_url": "https://github.com/twbs/bootstrap/pull/22288",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Great, thanks for your contribution! :cake: ",
    "clean_message": "Great, thanks for your contribution! :cake: ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/2839#issuecomment-884180563",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Possible further taskbar stuff:\nhttps://msdn.microsoft.com/en-us/library/dd378460(v=vs.85).aspx\n",
    "clean_message": "Possible further taskbar stuff: (v=vs.85).aspx",
    "message_url": "https://github.com/JabRef/jabref/pull/197#issuecomment-145056835",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Actually, we should indeed check if it still behaves like that with the latest upstream Numpy.\n",
    "clean_message": "Actually, we should indeed check if it still behaves like that with the latest upstream Numpy.",
    "message_url": "https://github.com/astropy/astropy/pull/706#issuecomment-12892772",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "You probably use tabs instead of spaces, which causes the diff to be horrible.\n\nPersonally I dont really see usage in this proposal, but then again I havent ever used Mockito in production. Is there really not a cleaner way to fix this on your side instead of altering Mockito with a public variable?\n",
    "clean_message": "You probably use tabs instead of spaces, which causes the diff to be horrible. Personally I dont really see usage in this proposal, but then again I havent ever used Mockito in production. Is there really not a cleaner way to fix this on your side instead of altering Mockito with a public variable?",
    "message_url": "https://github.com/mockito/mockito/pull/290#issuecomment-139627597",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "<!-- \r\nDescribe the changes you have made here: what, why, ... \r\nLink issues that are fixed, e.g. \"Fixes #333\".\r\nIf you fixed a koppor issue, link it, e.g. \"Fixes https://github.com/koppor/jabref/issues/47\".\r\nThe title of the PR must not reference an issue, because GitHub does not support autolinking there.\r\n-->\r\n\r\n\r\n<!-- \r\n- Go through the list below. Please don't remove any items.\r\n- [x] done; [ ] not done / not applicable\r\n-->\r\n\r\n- [ ] Change in `CHANGELOG.md` described in a way that is understandable for the average user (if applicable)\r\n- [ ] Tests created for changes (if applicable)\r\n- [ ] Manually tested changed features in running JabRef (always required)\r\n- [ ] Screenshots added in PR description (for UI changes)\r\n- [ ] [Checked developer's documentation](https://devdocs.jabref.org/): Is the information available and up to date? If not, I outlined it in this pull request.\r\n- [ ] [Checked documentation](https://docs.jabref.org/): Is the information available and up to date? If not, I created an issue at <https://github.com/JabRef/user-documentation/issues> or, even better, I submitted a pull request to the documentation repository.\r\n",
    "clean_message": "<!--  Describe the changes you have made here: what, why, ...  Link issues that are fixed, e.g. \"Fixes #333\". If you fixed a koppor issue, link it, e.g. \"Fixes \". The title of the PR must not reference an issue, because GitHub does not support autolinking there. -- <!--  - Go through the list below. Please don't remove any items. - [x] done; [ ] not done / not applicable -- - [ ] Change in  described in a way that is understandable for the average user (if applicable) - [ ] Tests created for changes (if applicable) - [ ] Manually tested changed features in running JabRef (always required) - [ ] Screenshots added in PR description (for UI changes) - [ ] Checked developer's documentation: Is the information available and up to date? If not, I outlined it in this pull request. - [ ] Checked documentation: Is the information available and up to date? If not, I created an issue at <",
    "message_url": "https://github.com/JabRef/jabref/pull/9020",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n**Summary**\r\n\r\nDrop auto-including of `babel-polyfill` if available. Fixes #2693\r\n\r\n**Test plan**\r\n\r\njest\r\n",
    "clean_message": "<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -- Summary Drop auto-including of  if available. Fixes #2693 Test plan jest",
    "message_url": "https://github.com/jestjs/jest/pull/2755",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry I'm slow to review I'm in the train, tethering and the car is shaking quite a bit. \n",
    "clean_message": "Sorry I'm slow to review I'm in the train, tethering and the car is shaking quite a bit. ",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/7416#issuecomment-258695466",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "As discussed in https://code.google.com/p/mockito/issues/detail?id=347 and https://code.google.com/p/mockito/issues/detail?id=235.\n\nNote that this builds on my other two recent pull requests (#14/#15), which should probably be merged first. I've separated them out, since this is obviously more contentious, and the other two are valid and useful on their own.\n\nThis allows for the following:\n\n``` java\nverify(mock, after(100).never()).method()\n```\n\nwhich will return either successfully after 100ms, or fail as soon as `mock.method()` is invoked.\n\nThis contrasts with the current behaviour for `verify(mock, timeout(100).never())`, which will either return instantly successfully if mock.method() has not yet been called, or fail after 100ms if it had already been called before this assertion was run.\n\nThis fix both adds the above after() method, and also tweaks timeout so that it will now terminate successfully when a success is seen (as before), fail if the timeout runs out (as before), or fail early if the underlying verification is known to have definitely failed before the time runs out (as in this new after() implementation).\n",
    "clean_message": "As discussed in  and . Note that this builds on my other two recent pull requests (#14/#15), which should probably be merged first. I've separated them out, since this is obviously more contentious, and the other two are valid and useful on their own. This allows for the following: which will return either successfully after 100ms, or fail as soon as  is invoked. This contrasts with the current behaviour for , which will either return instantly successfully if mock.method() has not yet been called, or fail after 100ms if it had already been called before this assertion was run. This fix both adds the above after() method, and also tweaks timeout so that it will now terminate successfully when a success is seen (as before), fail if the timeout runs out (as before), or fail early if the underlying verification is known to have definitely failed before the time runs out (as in this new after() implementation).",
    "message_url": "https://github.com/mockito/mockito/pull/16",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Patch to #7684 \r\n\r\n### Before submitting the PR, please make sure you do the following\r\n- [x] It's really useful if your PR references an issue where it is discussed ahead of time. In many cases, features are absent for a reason. For large changes, please create an RFC: https://github.com/sveltejs/rfcs\r\n- [x] Prefix your PR title with `[feat]`, `[fix]`, `[chore]`, or `[docs]`.\r\n- [x] This message body should clearly illustrate what problems it solves.\r\n- [ ] Ideally, include a test that fails without this PR but passes with it.\r\n\r\n### Tests\r\n-  [x] Run the tests with `npm test` and lint the project with `npm run lint`\r\n",
    "clean_message": "Patch to #7684  Before submitting the PR, please make sure you do the following  [x] It's really useful if your PR references an issue where it is discussed ahead of time. In many cases, features are absent for a reason. For large changes, please create an RFC:  [x] Prefix your PR title with , , , or . [x] This message body should clearly illustrate what problems it solves. [ ] Ideally, include a test that fails without this PR but passes with it.  Tests  [x] Run the tests with  and lint the project with  ",
    "message_url": "https://github.com/sveltejs/svelte/pull/7688",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "As discussed [here](https://github.com/pydantic/pydantic/discussions/3477#discussioncomment-3771452), and in continuation of [this PR on pydantic-core](https://github.com/pydantic/pydantic-core/pull/343).\r\n\r\nWe add two new types, implementing constraining datetime values to either enforce or disallow timezone info. The implementation is simple and utilizes the 'aware' and 'naive' constraints from the underlying pydantic-core.\r\n\r\nAdmittedly, I added the `insert_assert` comment just by looking at surrounding code, without looking deeper into how that works. Hopefully it just makes sense here too. (I'm guessing this is some sort of macro that is pre-processed? I'm intrigued!).\r\n\r\nOh, and of course this PR depends on a new release of pydantic-core \ud83d\ude42\r\n",
    "clean_message": "As discussed here, and in continuation of this PR on pydantic-core. We add two new types, implementing constraining datetime values to either enforce or disallow timezone info. The implementation is simple and utilizes the 'aware' and 'naive' constraints from the underlying pydantic-core. Admittedly, I added the  comment just by looking at surrounding code, without looking deeper into how that works. Hopefully it just makes sense here too. (I'm guessing this is some sort of macro that is pre-processed? I'm intrigued!). Oh, and of course this PR depends on a new release of pydantic-core \ud83d\ude42",
    "message_url": "https://github.com/pydantic/pydantic/pull/4812",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks for the interest!\r\n\r\nIn this case, the information that the attacker would get is only if a user exists or not, but no information about the password.\r\n\r\nAnd probably in most cases, the attacker could get that information more easily by trying to create a new account with that username, to detect when a username already exists.\r\n\r\nSo I would think this would depend more on the particular application, I don't think it's strictly necessary to add it here.\r\n\r\nAlso because adding it would require explaining what are timing attacks to the docs. And I'm already explaining it in another section. I wouldn't think it's necessary to add a long explanation about that for this section as there's no information about the password that can be exposed, only about the existence of users.\r\n\r\nGiven that, I'll close this one. But thanks for the effort! :coffee: ",
    "clean_message": "Thanks for the interest! In this case, the information that the attacker would get is only if a user exists or not, but no information about the password. And probably in most cases, the attacker could get that information more easily by trying to create a new account with that username, to detect when a username already exists. So I would think this would depend more on the particular application, I don't think it's strictly necessary to add it here. Also because adding it would require explaining what are timing attacks to the docs. And I'm already explaining it in another section. I wouldn't think it's necessary to add a long explanation about that for this section as there's no information about the password that can be exposed, only about the existence of users. Given that, I'll close this one. But thanks for the effort! :coffee: ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/2531#issuecomment-1236339093",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> When passing an array for a `GET` request, some servers expect the key to be suffixed with a `[]`\r\n> to parse the URL correctly. Adding a note in the documentation for this case.\r\n\r\nWe can't and won't document every non-standard edge case that exists. We expect users to understand the services they're talking to and cater to them directly.\r\n\r\n\r\n\r\n> Further, Is it a good idea to make this behavior a default one?\r\n\r\nNo. It's not a good idea to change behaviour in completely backwards incompatible ways",
    "clean_message": "We can't and won't document every non-standard edge case that exists. We expect users to understand the services they're talking to and cater to them directly. No. It's not a good idea to change behaviour in completely backwards incompatible ways",
    "message_url": "https://github.com/psf/requests/pull/5983#issuecomment-976706239",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@MadCcc, @jrr997, @zombieJ, By replacing `sizeMarginHeadingVerticalEnd` with `titleMarginBottom`, you broke backward compatibility. After a minor update, all my headings got messed up. Why don't you mention that this commit breaks backward compatibility? Why are there changes within one version that break interfaces?\r\nI started my project on Atn three weeks ago, and there have been numerous API changes already. Are there any plans to follow semver to avoid being on a ticking time bomb?",
    "clean_message": ", , , By replacing  with , you broke backward compatibility. After a minor update, all my headings got messed up. Why don't you mention that this commit breaks backward compatibility? Why are there changes within one version that break interfaces? I started my project on Atn three weeks ago, and there have been numerous API changes already. Are there any plans to follow semver to avoid being on a ticking time bomb?",
    "message_url": "https://github.com/ant-design/ant-design/pull/42442#issuecomment-1597109296",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Could you rebase / squash commits so the PR has a more meaningful semantic commit history ?\n",
    "clean_message": "Could you rebase / squash commits so the PR has a more meaningful semantic commit history ?",
    "message_url": "https://github.com/mockito/mockito/pull/68#issuecomment-59655251",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> \r\n> \r\n> Can this just be one line?\r\n\r\ngh isn't showing me the line you are trying to mention. Could you please elaborate? Thanks!",
    "clean_message": "gh isn't showing me the line you are trying to mention. Could you please elaborate? Thanks!",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/16469#issuecomment-584425800",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "nvm, unfortunately work around fails..\r\n\r\n```\r\n/srv/test1.js:1\r\n(function (exports, require, module, __filename, __dirname) { const attributeRegexp = new RegExp(\r\n                                                                                      ^\r\n\r\nSyntaxError: Invalid regular expression: /\\[\\s*(?<attribute>\\w+)\\s*=\\s*(?<quote>\"|')(?<value>\\\\.|.*?(?=\\k<quote>))\\k<quote>\\s*\\]/: Invalid group\r\n    at new RegExp (<anonymous>)\r\n    at Object.<anonymous> (/srv/test1.js:1:87)\r\n\r\n```",
    "clean_message": "nvm, unfortunately work around fails..",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/8105#issuecomment-1059979840",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Whether keeping `g` on `RequestContext` or not is totally okay for me. I couldn't make the decision before which is the reason I replied in the original issue. \r\n\r\n> the property always points at the top of the app context stack, not the context that was associated with the specific request context.\r\n\r\nThanks for pointing it out. I didn't consider the problem from this aspect.",
    "clean_message": "Whether keeping  on  or not is totally okay for me. I couldn't make the decision before which is the reason I replied in the original issue.  Thanks for pointing it out. I didn't consider the problem from this aspect.",
    "message_url": "https://github.com/pallets/flask/pull/4342#issuecomment-972675564",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Apparently they have a test for this [exact thing](https://github.com/jayway/powermock/blob/master/reflect/src/test/java/org/powermock/reflect/WhiteBoxTest.java#L272-L276).\n",
    "clean_message": "Apparently they have a test for this exact thing.",
    "message_url": "https://github.com/mockito/mockito/pull/423#issuecomment-222840080",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@tobiasdiez `databaseID` has to be there, as `BibtexParser` is only working on `BibDatabase` while not having a context.\n",
    "clean_message": "has to be there, as  is only working on  while not having a context.",
    "message_url": "https://github.com/JabRef/jabref/pull/2118#issuecomment-253212404",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "close #4787 ",
    "clean_message": "close #4787 ",
    "message_url": "https://github.com/ant-design/ant-design/pull/5042",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "As discussed in koppor/jabref#25.\n",
    "clean_message": "As discussed in koppor/jabref#25.",
    "message_url": "https://github.com/JabRef/jabref/pull/392",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "See coverage report: https://github.com/pandas-dev/pandas/pull/18512#issuecomment-347281660\r\n\r\nThis just removes a handful of unused functions.  LMK if some should be kept around just-in-case.\r\n\r\nNot included in the never-used group but worth mentioning: lib.fast_unique, lib.convert_timestamps, and lib.string_array_replace_from_nan_rep are each called exactly once in io.pytables, not covered in tests (io.pytables looks poorly covered, might have had a bunch of skipTests locally)\r\n\r\n- [ ] closes #xxxx\r\n- [ ] tests added / passed\r\n- [ ] passes `git diff upstream/master -u -- \"*.py\" | flake8 --diff`\r\n- [ ] whatsnew entry\r\n",
    "clean_message": "See coverage report:  This just removes a handful of unused functions.  LMK if some should be kept around just-in-case. Not included in the never-used group but worth mentioning: lib.fast_unique, lib.convert_timestamps, and lib.string_array_replace_from_nan_rep are each called exactly once in io.pytables, not covered in tests (io.pytables looks poorly covered, might have had a bunch of skipTests locally)  [ ] closes #xxxx [ ] tests added / passed [ ] passes  [ ] whatsnew entry ",
    "message_url": "https://github.com/pandas-dev/pandas/pull/18533",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Oh, it seems to be a hot topic! Although my implementation might be not the most elegant among available, I'll comment about motivation behind the request:\n\nI want to animate transition between two external SVGs (graphviz layouts).\nTo do so, I load SVG XML, use it as data and call recursive Clone function, which navigates through XML layers and re-creates it in the current document. Therefore, for each level I do something like `var selection = selectAll(\" * \").data( targetDOM, matchByIdFunct );\nselection.enter().append( fucnction(d){ return d.nodeName } ); // datum is a DOM element from another document\nselection.exit()....`\n",
    "clean_message": "Oh, it seems to be a hot topic! Although my implementation might be not the most elegant among available, I'll comment about motivation behind the request: I want to animate transition between two external SVGs (graphviz layouts). To do so, I load SVG XML, use it as data and call recursive Clone function, which navigates through XML layers and re-creates it in the current document. Therefore, for each level I do something like ",
    "message_url": "https://github.com/d3/d3/pull/1271#issuecomment-18460366",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 2.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Or, if you prefer it, I can make two properties: _spinStyleCointainer_ & _spinStyleNestedCointainer_.",
    "clean_message": "Or, if you prefer it, I can make two properties: spinStyleCointainer & spinStyleNestedCointainer.",
    "message_url": "https://github.com/ant-design/ant-design/pull/5315#issuecomment-286718629",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": " About Laos: Laos is a landlocked country in South-east Asia on the Indochinese peninsula between Thailand and Vietnam and north of Cambodia.",
    "clean_message": "About Laos: Laos is a landlocked country in South-east Asia on the Indochinese peninsula between Thailand and Vietnam and north of Cambodia.",
    "message_url": "https://github.com/tiangolo/fastapi/pull/9396",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Compilation with ngcc is now included in the CLI, so its no longer necessary\r\nto run in manually\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n",
    "clean_message": "Compilation with ngcc is now included in the CLI, so its no longer necessary to run in manually PR Checklist Please check if your PR fulfills the following requirements:  [ ] The commit message follows our guidelines:  [ ] Tests for the changes have been added (for bug fixes / features) [x] Docs have been added / updated (for bug fixes / features)  PR Type What kind of change does this PR introduce? <!-- Please check the one that applies to this PR using \"x\". -- - [ ] Bugfix - [ ] Feature - [ ] Code style update (formatting, local variables) - [ ] Refactoring (no functional changes, no api changes) - [ ] Build related changes - [ ] CI related changes - [x] Documentation content changes - [ ] angular.io application / infrastructure changes - [ ] Other... Please describe: What is the current behavior? <!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -- Issue Number: N/A What is the new behavior? Does this PR introduce a breaking change?  [ ] Yes [x] No  <!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -- Other information",
    "message_url": "https://github.com/angular/angular/pull/30592",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@zombieJ What I meant is that if we can achieve the auto focus capability with: \r\n\r\n``` <Typrograpy.Text editable={ editing: true }> ``` \r\n\r\nIs it really necessary to add an `autoFocus` prop? :)",
    "clean_message": "What I meant is that if we can achieve the auto focus capability with:  Is it really necessary to add an  prop? :)",
    "message_url": "https://github.com/ant-design/ant-design/pull/25966#issuecomment-667894932",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Because, when I run `grunt jekyll connect watch` locally, the website is using the wrong base so it doesn't work.\n",
    "clean_message": "Because, when I run  locally, the website is using the wrong base so it doesn't work.",
    "message_url": "https://github.com/twbs/bootstrap/pull/12205#issuecomment-32153565",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "-1 from me, the indirection is probably not worth it in this case, then we have to tell everyone how the currying works etc, vs just doing `nyan(app, \"Nyan!\")`\n",
    "clean_message": "-1 from me, the indirection is probably not worth it in this case, then we have to tell everyone how the currying works etc, vs just doing ",
    "message_url": "https://github.com/expressjs/express/pull/1438#issuecomment-11008992",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "It looks like there is already a session option for \"allow_redirects\".\nThis looks like it controls whether to attach a \"history\" attribute to the response (not actually control whether resolve_redirects gets called or not).\nCould this cache be an option to the session rather than an adapter?\n\nI'm not opposed to an adapter (though I would need help with the approach), but again, this is how both chrome and firefox operate with permanent redirects; they don't make requests up the whole chain each time.  That is why I thought the cache should be a first class citizen, even if it is made to be an opt-in.\n",
    "clean_message": "It looks like there is already a session option for \"allow_redirects\". This looks like it controls whether to attach a \"history\" attribute to the response (not actually control whether resolve_redirects gets called or not). Could this cache be an option to the session rather than an adapter? I'm not opposed to an adapter (though I would need help with the approach), but again, this is how both chrome and firefox operate with permanent redirects; they don't make requests up the whole chain each time.  That is why I thought the cache should be a first class citizen, even if it is made to be an opt-in.",
    "message_url": "https://github.com/psf/requests/pull/2095#issuecomment-45919725",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "\u00af\\\\\\_(\u30c4)\\_/\u00af",
    "clean_message": "\u00af\\_(\u30c4)_/\u00af",
    "message_url": "https://github.com/sveltejs/svelte/pull/2392#issuecomment-482115222",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "add win32 fonts directory check\r\n\r\n## PR Summary\r\n\r\n## PR Checklist\r\n\r\n<!-- Please mark any checkboxes that do not apply to this PR as [N/A]. -->\r\n**Tests and Styling**\r\n- [x] Has pytest style unit tests (and `pytest` passes).\r\n- [x] Is [Flake 8](https://flake8.pycqa.org/en/latest/) compliant (install `flake8-docstrings` and run `flake8 --docstring-convention=all`).\r\n\r\n**Documentation**\r\n- [ ] New features are documented, with examples if plot related.\r\n- [ ] New features have an entry in `doc/users/next_whats_new/` (follow instructions in README.rst there).\r\n- [ ] API changes documented in `doc/api/next_api_changes/` (follow instructions in README.rst there).\r\n- [ ] Documentation is sphinx and numpydoc compliant (the docs should [build](https://matplotlib.org/devel/documenting_mpl.html#building-the-docs) without error).\r\n\r\n<!--\r\nThank you so much for your PR!  To help us review your contribution, please\r\nconsider the following points:\r\n\r\n- A development guide is available at https://matplotlib.org/devdocs/devel/index.html.\r\n\r\n- Help with git and github is available at\r\n  https://matplotlib.org/devel/gitwash/development_workflow.html.\r\n\r\n- Do not create the PR out of main, but out of a separate branch.\r\n\r\n- The PR title should summarize the changes, for example \"Raise ValueError on\r\n  non-numeric input to set_xlim\".  Avoid non-descriptive titles such as\r\n  \"Addresses issue #8576\".\r\n\r\n- The summary should provide at least 1-2 sentences describing the pull request\r\n  in detail (Why is this change required?  What problem does it solve?) and\r\n  link to any relevant issues.\r\n\r\n- If you are contributing fixes to docstrings, please pay attention to\r\n  http://matplotlib.org/devel/documenting_mpl.html#formatting.  In particular,\r\n  note the difference between using single backquotes, double backquotes, and\r\n  asterisks in the markup.\r\n\r\nWe understand that PRs can sometimes be overwhelming, especially as the\r\nreviews start coming in.  Please let us know if the reviews are unclear or\r\nthe recommended next step seems overly demanding, if you would like help in\r\naddressing a reviewer's comments, or if you have been waiting too long to hear\r\nback on your PR.\r\n-->\r\n",
    "clean_message": "add win32 fonts directory check PR Summary PR Checklist <!-- Please mark any checkboxes that do not apply to this PR as [N/A]. --Tests and Styling - [x] Has pytest style unit tests (and  passes). - [x] Is Flake 8 compliant (install  and run ). Documentation - [ ] New features are documented, with examples if plot related. - [ ] New features have an entry in  (follow instructions in README.rst there). - [ ] API changes documented in  (follow instructions in README.rst there). - [ ] Documentation is sphinx and numpydoc compliant (the docs should build without error). <!-- Thank you so much for your PR!  To help us review your contribution, please consider the following points:   A development guide is available at .   Help with git and github is available at   .   Do not create the PR out of main, but out of a separate branch.   The PR title should summarize the changes, for example \"Raise ValueError on   non-numeric input to set_xlim\".  Avoid non-descriptive titles such as   \"Addresses issue #8576\".   The summary should provide at least 1-2 sentences describing the pull request   in detail (Why is this change required?  What problem does it solve?) and   link to any relevant issues.   If you are contributing fixes to docstrings, please pay attention to   .  In particular,   note the difference between using single backquotes, double backquotes, and   asterisks in the markup.   We understand that PRs can sometimes be overwhelming, especially as the reviews start coming in.  Please let us know if the reviews are unclear or the recommended next step seems overly demanding, if you would like help in addressing a reviewer's comments, or if you have been waiting too long to hear back on your PR. --",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/22909",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "__unicode()__ was removed in Python 3 because all str are Unicode so this PR changes four calls to __unicode()__ into calls to [__six.text_type()__](http://six.readthedocs.io/#six.text_type).",
    "clean_message": "unicode() was removed in Python 3 because all str are Unicode so this PR changes four calls to unicode() into calls to six.text_type().",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/17225",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> Could you maybe add a new subproject which has some sample tests with instructions on how to inspect the diff? That would ease future development so that we can check if regressed on that. Thanks for all the hard work, good progress!\r\n\r\nI suggest we move on. We won't be able to automatically test how IDEs integrate with xUnit runners. Manual tests will be forgotten. We never had tests for this feature and it did not regress. Eventual regression will not be a blocker. If we encounter one, then we can prioritize a solution.\r\n",
    "clean_message": "I suggest we move on. We won't be able to automatically test how IDEs integrate with xUnit runners. Manual tests will be forgotten. We never had tests for this feature and it did not regress. Eventual regression will not be a blocker. If we encounter one, then we can prioritize a solution.",
    "message_url": "https://github.com/mockito/mockito/pull/1667#issuecomment-474909465",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "http://test/OCL:229307881:BASE:229307905:1547528246221:6725d55a\r\n",
    "clean_message": "http://test/OCL:229307881:BASE:229307905:1547528246221:6725d55a",
    "message_url": "https://github.com/angular/angular/pull/28083#issuecomment-454267435",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "## Summary\r\n\r\n`toEqual` matcher could not handle _symbol_ based properties in _array_'s, causing jest to throw:\r\n\r\nMinimal example:\r\n\r\n```javascript\r\n    const mySymbol = Symbol(\"test\");\r\n    const actual1 = [];\r\n    actual1[mySymbol] = 3;\r\n    const expected = [];\r\n    expected[mySymbol] = 3;\r\n\r\n    expect(actual1).toEqual(expected);\r\n```\r\n\r\nThrows:\r\n\r\n```\r\n TypeError: allKeys[x].match is not a function\r\n\r\n      at Object.test (packages/expect/src/__tests__/matchers.test.js:456:21)\r\n```\r\n\r\nThe cause of this issue is this [line](https://github.com/facebook/jest/blob/241588a08edadbcaef7cc93bb11aad3b9cbad73b/packages/expect/src/jasmine_utils.js#L225) which assumes that all property names of arrays are strings and hence `.match` can be called on them. \r\n\r\nThis assumption does not held for symbol based properties. If the property name is a symbol, it is never an index, so it should always be added to the `extraKeys` collection. \r\n\r\n## Test plan\r\n\r\nI added a unit test demonstrating that deep equality on arrays behaves correctly now, even in the presence of symbolic properties.",
    "clean_message": "Summary matcher could not handle symbol based properties in array's, causing jest to throw: Minimal example: Throws: The cause of this issue is this line which assumes that all property names of arrays are strings and hence  can be called on them.  This assumption does not held for symbol based properties. If the property name is a symbol, it is never an index, so it should always be added to the  collection.  Test plan I added a unit test demonstrating that deep equality on arrays behaves correctly now, even in the presence of symbolic properties.",
    "message_url": "https://github.com/jestjs/jest/pull/6391",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "verifying this works as used by the offline compiler CLI\n",
    "clean_message": "verifying this works as used by the offline compiler CLI",
    "message_url": "https://github.com/angular/angular/pull/8256#issuecomment-214888478",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "LGTM.\n",
    "clean_message": "LGTM.",
    "message_url": "https://github.com/mockito/mockito/pull/454#issuecomment-227384010",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "So, IIRC, NonUniformImage came about a few years ago when we realized that\na limitation to UniformImage was apparently arbitrary (or maybe it was that\nNonUniformImage predates that work and we can now achieved using transforms\nand UniformImage?). Maybe the tests aren't obviously linked to\nNonUniformImage?\n\nOn Mon, Jul 29, 2019 at 12:05 PM Jody Klymak <notifications@github.com>\nwrote:\n\n> ... does it justify rewriting if it isn't broken? Or is it broken?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/matplotlib/matplotlib/pull/14913?email_source=notifications&email_token=AACHF6DQYID5YFQYLNSMGLTQB4IMNA5CNFSM4IHTQ5FKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD3BF6TA#issuecomment-516054860>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AACHF6DM3NG5IAXYT6M7I3TQB4IMNANCNFSM4IHTQ5FA>\n> .\n>\n",
    "clean_message": "So, IIRC, NonUniformImage came about a few years ago when we realized that a limitation to UniformImage was apparently arbitrary (or maybe it was that NonUniformImage predates that work and we can now achieved using transforms and UniformImage?). Maybe the tests aren't obviously linked to NonUniformImage? On Mon, Jul 29, 2019 at 12:05 PM Jody Klymak <wrote:",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/14913#issuecomment-516058815",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "## Change Summary\r\n\r\nAllow element of `Config.field` to update elements of a `Field`\r\n\r\nExample of usage:\r\n\r\n## Related issue number\r\n\r\nfix #2426\r\n\r\nsupersedes #2437\r\n\r\n## Questions\r\n\r\n* could this break any assumed existing behaviour?\r\n* do any docs need to be updated? If so, what?\r\n\r\n## Checklist\r\n\r\n* [x] Unit tests for the changes exist\r\n* [x] Tests pass on CI and coverage remains at 100%\r\n* [ ] Documentation reflects the changes where applicable\r\n* [x] `changes/<pull request or issue id>-<github username>.md` file added describing change\r\n",
    "clean_message": "Change Summary Allow element of  to update elements of a  Example of usage: Related issue number fix #2426 supersedes #2437 Questions  could this break any assumed existing behaviour? do any docs need to be updated? If so, what?  Checklist  [x] Unit tests for the changes exist [x] Tests pass on CI and coverage remains at 100% [ ] Documentation reflects the changes where applicable [x] `changes/<pull request or issue id ",
    "message_url": "https://github.com/pydantic/pydantic/pull/2461",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@RunningIkkyu Great! You can send your wechat to my gmail: ampedee@gmail.com. I will contact you later.",
    "clean_message": "Great! You can send your wechat to my gmail: . I will contact you later.",
    "message_url": "https://github.com/tiangolo/fastapi/pull/1191#issuecomment-606406828",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Yeah, handling a useless scale is precisely what I need because I'm creating scales dynamically based on the min/max values from database queries. \n\nHere's an example for a single chart using a fixed number of ticks and different data. http://bl.ocks.org/4617865 notice when there is one domain value, no labels appear. In my application the charts need to handle arbitrary data so locking them to a fixed scale is not an option. \n\nIt seems like the best solution for correctly labeling the domain when n=1 is to pad the min and max values e.g.\n\n```\nvar xScale = d3.scale.linear()\n    .domain([d3.min(data, xSelector) - 0.01, d3.max(data, xSelector) + 0.01])\n    .range([0,300]);\n```\n",
    "clean_message": "Yeah, handling a useless scale is precisely what I need because I'm creating scales dynamically based on the min/max values from database queries.  Here's an example for a single chart using a fixed number of ticks and different data.  notice when there is one domain value, no labels appear. In my application the charts need to handle arbitrary data so locking them to a fixed scale is not an option.  It seems like the best solution for correctly labeling the domain when n=1 is to pad the min and max values e.g.",
    "message_url": "https://github.com/d3/d3/pull/871#issuecomment-12638126",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Really weird, but setting `text-decoration: underline` and then later `text-decoration: none`, both on the pseudo-element, seems to fix it in IE9-11. Confirmed via Sauce testing.\nCredit: http://stackoverflow.com/a/32120247/3342739\n",
    "clean_message": "Really weird, but setting  and then later , both on the pseudo-element, seems to fix it in IE9-11. Confirmed via Sauce testing. Credit: ",
    "message_url": "https://github.com/twbs/bootstrap/pull/18740#issuecomment-169521911",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "The get_db dependency causes a weird \r\n`TypeError: <async_generator object get_db at 0x7ff6d9d9aa60> is not a callable object`\r\nissue on my project.\r\n\r\nHere's my code:\r\n\r\n**db.py**\r\n```\r\nfrom typing import Generator\r\nfrom .db.session import SessionLocal\r\n\r\nasync def get_db() -> Generator:\r\n    try:\r\n        db = SessionLocal()\r\n        yield db\r\n    finally:\r\n        await db.close()\r\n```\r\n\r\n\r\n**session.py**\r\n\r\n```\r\nfrom sqlalchemy.ext.asyncio import create_async_engine, AsyncSession\r\nfrom .core.config import settings\r\n\r\nengine = create_async_engine(\r\n    settings.SQLALCHEMY_DATABASE_URI,\r\n    pool_pre_ping=True\r\n)\r\nSessionLocal = AsyncSession(\r\n    autocommit=False,\r\n    autoflush=False,\r\n    bind=engine\r\n)\r\n```",
    "clean_message": "The get_db dependency causes a weird  `TypeError: <async_generator object get_db at 0x7ff6d9d9aa60issue on my project. Here's my code: db.py session.py",
    "message_url": "https://github.com/tiangolo/fastapi/pull/2331#issuecomment-821941735",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Mostly that's nit-picky stuff. Thanks for your work there :)\n",
    "clean_message": "Mostly that's nit-picky stuff. Thanks for your work there :)",
    "message_url": "https://github.com/mockito/mockito/pull/40#issuecomment-38268314",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "##### Issue Type:\n\n<!--- Please pick one and delete the rest: -->\n- Docs Pull Request\n##### Summary:\n\n<!--- Please describe the change and the reason for it -->\n\n<!---\nIf you are fixing an existing issue, please include \"Fixes #nnn\" in your\ncommit message and your description; but you should still explain what\nthe change does.\n-->\n\nIn essence, most people do not need to use the templates directly,\ngetting them out of the way increases the signal-to-noise ratio of\nthe root directory. Direct people to what they are looking for.\n",
    "clean_message": "Issue Type: <!--- Please pick one and delete the rest: --- Docs Pull Request Summary: <!--- Please describe the change and the reason for it -- <!--- If you are fixing an existing issue, please include \"Fixes #nnn\" in your commit message and your description; but you should still explain what the change does. -- In essence, most people do not need to use the templates directly, getting them out of the way increases the signal-to-noise ratio of the root directory. Direct people to what they are looking for.",
    "message_url": "https://github.com/ansible/ansible/pull/14898",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@nicolaskruchten, I use VS Code with Pylance for type checking.\r\n\r\nI was using the following ugly `hack.py`:\r\n```python\r\nfrom typing import TYPE_CHECKING\r\n\r\nfrom plotly.graph_objs import FigureWidget\r\n\r\nif TYPE_CHECKING:\r\n    # Plotly does some conditional import stuff for the case that ipywidgets is missing.\r\n    # This confuses Pylance, so we help it by directly importing the real FigureWidget.\r\n    try:\r\n        from plotly.graph_objs._figurewidget import FigureWidget  # noqa: F811, F401\r\n    except ImportError:\r\n        pass\r\n```\r\n\r\nand then \r\n```python\r\nfrom hack import FigureWidget\r\n```\r\n\r\nThis achieves the desired type inference:\r\n\r\n![image](https://user-images.githubusercontent.com/15216687/166307043-f4086cbb-9572-4090-b63d-581b2fcbae79.png)\r\n\r\notherwise, due to the dynamic import stuff, I end up with\r\n\r\n![image](https://user-images.githubusercontent.com/15216687/166307211-b60f21d3-dd23-4021-926d-028e811248b7.png)\r\n\r\nI haven't tested it myself, but I expect this PR to supersede my ugly hack, so I'm happy about that. Thanks so much!!!",
    "clean_message": ", I use VS Code with Pylance for type checking. I was using the following ugly : and then  This achieves the desired type inference:  otherwise, due to the dynamic import stuff, I end up with  I haven't tested it myself, but I expect this PR to supersede my ugly hack, so I'm happy about that. Thanks so much!!!",
    "message_url": "https://github.com/plotly/plotly.py/pull/3425#issuecomment-1115244723",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "https://github.com/visionmedia/express/blob/master/lib/application.js#L73\nthis.locals.settings = this.settings;\n\nthe settings can be inherit from parent, so i think, the locals should too.\n",
    "clean_message": "this.locals.settings = this.settings; the settings can be inherit from parent, so i think, the locals should too.",
    "message_url": "https://github.com/expressjs/express/pull/2130#issuecomment-43889496",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Current state:\r\n\r\n    remote: error: File src/main/resources/journals/journalList.mv is 332.14 MB; this exceeds GitHub's file size limit of 100.00 MB  \r\n\r\nIdeas:\r\n\r\n1. Make JabRef distribution size to 500 MB ^^(and enforce git-lfs)\r\n2. Re-add `*.csv` in the repository and have JabRef generate the `.mv` files if the `.mv` file is older than any `*.csv` file\r\n3. Switch back to \"String\" and have the Abbreviations in-memory",
    "clean_message": "Current state: remote: error: File src/main/resources/journals/journalList.mv is 332.14 MB; this exceeds GitHub's file size limit of 100.00 MB  Ideas:  Make JabRef distribution size to 500 MB ^^(and enforce git-lfs) Re-add  in the repository and have JabRef generate the  files if the  file is older than any  file Switch back to \"String\" and have the Abbreviations in-memory ",
    "message_url": "https://github.com/JabRef/jabref/pull/9504#issuecomment-1368565752",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "GPU tests\r\n9m 19s -> 6m 4s",
    "clean_message": "GPU tests 9m 19s -> 6m 4s",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/246#issuecomment-777973446",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "OK, force-pushed a better fix.  I think this is actually more robust than special-casing \u221e values, because I tried clamping to larger values such as 1e200 and this didn\u2019t work.  Even clamping to a value as low as 1e20 still led to a slanted line in when drawing {type: \"Sphere\"} using Mercator (probably due to loss of precision because IEEE double can only represent around 16 significant decimal digits).\n",
    "clean_message": "OK, force-pushed a better fix.  I think this is actually more robust than special-casing \u221e values, because I tried clamping to larger values such as 1e200 and this didn\u2019t work.  Even clamping to a value as low as 1e20 still led to a slanted line in when drawing {type: \"Sphere\"} using Mercator (probably due to loss of precision because IEEE double can only represent around 16 significant decimal digits).",
    "message_url": "https://github.com/d3/d3/pull/1144#issuecomment-14902840",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I mean, the np.where isn't great either.",
    "clean_message": "I mean, the np.where isn't great either.",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/201#issuecomment-747605126",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Yeah. My mistake, thks!\n",
    "clean_message": "Yeah. My mistake, thks!",
    "message_url": "https://github.com/expressjs/express/pull/2350#issuecomment-54853327",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@mirca - had only the most cursory of looks so far, and liked very much that for most of the code there is, as I would have hoped, absolutely no difference between what is done for `ndarray` and for `Quantity`. This is duck-typing at its best! \n\nThe exceptions are the degree to radian conversions; my sense would be to not allow this. Effectively, this is equivalent to allowing some special units to be attached to `ndarray`, which is just what `Quantity` is for. So, while I'm quite happy for plain numbers in an `ndarray` to be considered to have dimension of radian (as this is equivalent to dimensionless, which is what a plain number should be), I don't like the idea of allowing plain numbers to really be degrees.\n",
    "clean_message": " had only the most cursory of looks so far, and liked very much that for most of the code there is, as I would have hoped, absolutely no difference between what is done for  and for . This is duck-typing at its best!   The exceptions are the degree to radian conversions; my sense would be to not allow this. Effectively, this is equivalent to allowing some special units to be attached to , which is just what  is for. So, while I'm quite happy for plain numbers in an  to be considered to have dimension of radian (as this is equivalent to dimensionless, which is what a plain number should be), I don't like the idea of allowing plain numbers to really be degrees.",
    "message_url": "https://github.com/astropy/astropy/pull/4472#issuecomment-174040307",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I really don't like an unconditional warning for this. For anyone besides someone who uses Flask for the first time and doesn't know that the server is only for development this is going to be incredibly annoying.\n\nEdit: Just noticed that I already commented in https://github.com/pallets/flask/issues/1102#issuecomment-162479772 - so I guess it's  better to keep discussions over there\n",
    "clean_message": "I really don't like an unconditional warning for this. For anyone besides someone who uses Flask for the first time and doesn't know that the server is only for development this is going to be incredibly annoying. Edit: Just noticed that I already commented in  - so I guess it's  better to keep discussions over there",
    "message_url": "https://github.com/pallets/flask/pull/1577#issuecomment-205079628",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "When the race condition happen, it will return the error message(explanation) instead of redirecting user to other page without explaining\r\n- fixes #4099\r\nChecklist:\r\n- [x] Add or update relevant docs, in the docs folder and in code.\r\n- [x] Add an entry in `CHANGES.rst` summarizing the change and linking to the issue.\r\n- [x] Add `.. versionchanged::` entries in any relevant code docs.\r\n- [x] Run `pre-commit` hooks and fix any issues.\r\n- [x] Run `pytest` and `tox`, no tests failed.\r\n",
    "clean_message": "When the race condition happen, it will return the error message(explanation) instead of redirecting user to other page without explaining - fixes #4099 Checklist: - [x] Add or update relevant docs, in the docs folder and in code. - [x] Add an entry in  summarizing the change and linking to the issue. - [x] Add  entries in any relevant code docs. - [x] Run  hooks and fix any issues. - [x] Run  and , no tests failed.",
    "message_url": "https://github.com/pallets/flask/pull/4139",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "thanks @sinhrks \n",
    "clean_message": "thanks  ",
    "message_url": "https://github.com/pandas-dev/pandas/pull/7966#issuecomment-51717023",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "@dantman I still don't think there should be a `req.port` even with your argument. It's too bad `req.host` exists that strips the port, because that's the `hostname`, not the `host`. The `hostname` is does not include the port while `host` does include the port. Adding the property as `req.hostname` where it includes the port would be wrong and then they'd be backwards.\n\nPerhaps this can be something fixed in `express@5`. For now, from a request from @jonathanong , I am actually moving the proxy stuff into a separate module, so you'll be able to do `coolmodule(req, trust).host`\n",
    "clean_message": "I still don't think there should be a  even with your argument. It's too bad  exists that strips the port, because that's the , not the . The  is does not include the port while  does include the port. Adding the property as  where it includes the port would be wrong and then they'd be backwards. Perhaps this can be something fixed in . For now, from a request from  , I am actually moving the proxy stuff into a separate module, so you'll be able to do ",
    "message_url": "https://github.com/expressjs/express/pull/1914#issuecomment-46104121",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "\"Soon\".\r\n\r\nFor now you could try using the `master` branch directly (but keep in mind this is not officially supported):\r\n\r\n```sh\r\nnpm install puppeteer/puppeteer#master\r\n````",
    "clean_message": "\"Soon\". For now you could try using the  branch directly (but keep in mind this is not officially supported): `",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/5243#issuecomment-565416673",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry, I just don't think it's a preference worth putting up to the visitor. Personally I think it's not good design to simply add options for the sake of adding them. Hope that makes sense!",
    "clean_message": "Sorry, I just don't think it's a preference worth putting up to the visitor. Personally I think it's not good design to simply add options for the sake of adding them. Hope that makes sense!",
    "message_url": "https://github.com/twbs/bootstrap/pull/35897#issuecomment-1051109221",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thank you @claell, I definitely misread the issue.\r\nI will look into look a fix for the overlap.",
    "clean_message": "Thank you , I definitely misread the issue. I will look into look a fix for the overlap.",
    "message_url": "https://github.com/JabRef/jabref/pull/8775#issuecomment-1122285897",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks for the quick fix!",
    "clean_message": "Thanks for the quick fix!",
    "message_url": "https://github.com/astropy/astropy/pull/12745#issuecomment-1015672864",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "That's a very good point @jolynch! Thanks for idea.\r\n\r\nI just released version `0.65.3` that does exactly that. If there's no Content-Type header, it is now assumed as JSON.\r\n\r\nThis still provides protection from CSRF because browsers automatically set Content-Type headers. And if an attacker removes the header explicitly, it triggers the CORS preflight, which provides the main protection using CORS.\r\n\r\nSo, you should all be able to upgrade to `0.65.3` more easily now. :tada: ",
    "clean_message": "That's a very good point ! Thanks for idea. I just released version  that does exactly that. If there's no Content-Type header, it is now assumed as JSON. This still provides protection from CSRF because browsers automatically set Content-Type headers. And if an attacker removes the header explicitly, it triggers the CORS preflight, which provides the main protection using CORS. So, you should all be able to upgrade to  more easily now. :tada: ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/2118#issuecomment-873435413",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "/azp run",
    "clean_message": "/azp run",
    "message_url": "https://github.com/ansible/ansible/pull/74839#issuecomment-1331185395",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hmm, did something go wrong with https://github.com/puppeteer/puppeteer/blob/1854192abbd5094126ebfb73c58c0c222765ec93/versions.js#L20?",
    "clean_message": "Hmm, did something go wrong with ",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/7299#issuecomment-851370852",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "**This is a warning**.\r\n\r\nWe have recently observed the presumably well-intentioned act of the author of this PR (@inclusive-coding-bot), who has been spamming pull requests to many (~50) github repos, claiming to ``switch to gender neutral pronouns''. In reality, the bot performs a dictionary replace of gendered nouns and pronouns, and the outcome is questionable at best, and literally harmful at worst. See:\r\n- The bot did a terrible job at replacing these words - [EbookFoundation/free-programming-books#6801](https://github.com/EbookFoundation/free-programming-books/pull/6801/commits/5257301642c173e2dc4f034f8c0460ce7ea99de6)\r\n- The code fails to compile at [rust-lang/rust#95508](https://github.com/rust-lang/rust/pull/95508)\r\n- The bot ignores all context whatsoever at [moby/moby#43441](https://github.com/moby/moby/pull/43441)\r\n- After initial PR being closed, the bot keeps sending PRs, effectly spamming the repos. For example, these 5 PRs were sent to the same repo within 2 days [#1](https://github.com/EbookFoundation/free-programming-books/pull/6801) [#2](https://github.com/EbookFoundation/free-programming-books/pull/6803) [#3](https://github.com/EbookFoundation/free-programming-books/pull/6804) [#4](https://github.com/EbookFoundation/free-programming-books/pull/6805) [#5](https://github.com/EbookFoundation/free-programming-books/pull/6806)\r\n\r\nWe have reviewed the changes in this PR. Most of the changed words are \"accidental gender pronouns\" - `he` as a prefix of `hello`, or `his` as a suffix of `this`, and both examples come from test cases where inline comments are used to split words (like `t/**/his`), and the PR wants to change them into `t/**/theirs` etc.. These changes are obviously not helpful at all.\r\n\r\nTo save more time for the open-source community, we recommend the maintainers of this repo to close this PR and ban this bot from further spamming.",
    "clean_message": "This is a warning. We have recently observed the presumably well-intentioned act of the author of this PR (-coding-bot), who has been spamming pull requests to many (~50) github repos, claiming to switch to gender neutral pronouns''. In reality, the bot performs a dictionary replace of gendered nouns and pronouns, and the outcome is questionable at best, and literally harmful at worst. See: - The bot did a terrible job at replacing these words - EbookFoundation/free-programming-books#6801 - The code fails to compile at rust-lang/rust#95508 - The bot ignores all context whatsoever at moby/moby#43441 - After initial PR being closed, the bot keeps sending PRs, effectly spamming the repos. For example, these 5 PRs were sent to the same repo within 2 days #1 #2 #3 #4 #5 We have reviewed the changes in this PR. Most of the changed words are \"accidental gender pronouns\" -  as a prefix of , or  as a suffix of , and both examples come from test cases where inline comments are used to split words (like ), and the PR wants to change them into  etc.. These changes are obviously not helpful at all. To save more time for the open-source community, we recommend the maintainers of this repo to close this PR and ban this bot from further spamming.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/48494#issuecomment-1084491870",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 5,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hi @csabaszan,\r\n\r\nNow that we merged the `v4_integration` branch and release version 4, we'll need to update this branch to fix the merge conflicts.\r\n\r\nBasically, all of the files you modified have moved under the `packages/python/plotly` directory.  I don't think there were any changes in these files other than the move, so you should be able to overwrite the current files in the new locations with your latest versions.\r\n\r\nIf you run into trouble doing this as a merge resolution with git, feel free to start over and create a new pull request. Thanks!",
    "clean_message": "Hi , Now that we merged the  branch and release version 4, we'll need to update this branch to fix the merge conflicts. Basically, all of the files you modified have moved under the  directory.  I don't think there were any changes in these files other than the move, so you should be able to overwrite the current files in the new locations with your latest versions. If you run into trouble doing this as a merge resolution with git, feel free to start over and create a new pull request. Thanks!",
    "message_url": "https://github.com/plotly/plotly.py/pull/1665#issuecomment-513540278",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Are you guys getting this error `__init__() missing 1 required positional argument: 'class_strs_map'` as well? Maybe I overwrote the wrong file in a merge",
    "clean_message": "Are you guys getting this error  as well? Maybe I overwrote the wrong file in a merge",
    "message_url": "https://github.com/plotly/plotly.py/pull/975#issuecomment-379065231",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Sorry, just noticed that #37253 was opened first, so closing in favour of that one",
    "clean_message": "Sorry, just noticed that #37253 was opened first, so closing in favour of that one",
    "message_url": "https://github.com/pandas-dev/pandas/pull/37254#issuecomment-712349535",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I see, so you\u2019re temporarily overriding the touchstart listener while a gesture is active, too. That\u2019s a bit clever but now that I understand what\u2019s going on, it feels quite clean. It might be worth adding a brief comment just above the declaration of the touchstarted function saying that the closures persist for as long as at least one touch is active.\n\nI\u2019m confused by calling `started()` on touchend. What\u2019s the purpose of this? That seems like the code that we had before that was likewise confusing and caused a bug where a touchend could be interpreted as a dbltap. My only guess is that you\u2019re updating the state of the `locations` hash, but I don\u2019t think there would be any negative effect of keeping the expired touch in the hash (until the next touchstart, which likewise causes it to be recreated). Or if you just want to remove the ending touch from the hash, couldn\u2019t you look at changedTouches and remove those touches?\n",
    "clean_message": "I see, so you\u2019re temporarily overriding the touchstart listener while a gesture is active, too. That\u2019s a bit clever but now that I understand what\u2019s going on, it feels quite clean. It might be worth adding a brief comment just above the declaration of the touchstarted function saying that the closures persist for as long as at least one touch is active. I\u2019m confused by calling  on touchend. What\u2019s the purpose of this? That seems like the code that we had before that was likewise confusing and caused a bug where a touchend could be interpreted as a dbltap. My only guess is that you\u2019re updating the state of the  hash, but I don\u2019t think there would be any negative effect of keeping the expired touch in the hash (until the next touchstart, which likewise causes it to be recreated). Or if you just want to remove the ending touch from the hash, couldn\u2019t you look at changedTouches and remove those touches?",
    "message_url": "https://github.com/d3/d3/pull/1418#issuecomment-21507644",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Sorry for that!",
    "clean_message": "Sorry for that!",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/844#issuecomment-1567420586",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@PrettyWood is correct here.\r\n\r\nI'm afraid this will have to wait for a proper strict mode. ",
    "clean_message": "is correct here. I'm afraid this will have to wait for a proper strict mode. ",
    "message_url": "https://github.com/pydantic/pydantic/pull/2509#issuecomment-798958139",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Any reason why the traces in the `__all__` are by inverse aphabetical order? I'd rather have them by alphabetical order, or we can also change the order in the sphinx page, like if we want `Scatter` and `Bar` to appear first.",
    "clean_message": "Any reason why the traces in the  are by inverse aphabetical order? I'd rather have them by alphabetical order, or we can also change the order in the sphinx page, like if we want  and  to appear first.",
    "message_url": "https://github.com/plotly/plotly.py/pull/1802#issuecomment-538790471",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Passing in `chunk_size=None` used to be fine, but started raising a `TypeError` following the addition of the type check (#3365)\n",
    "clean_message": "Passing in  used to be fine, but started raising a  following the addition of the type check (#3365)",
    "message_url": "https://github.com/psf/requests/pull/3368",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@bhouston I tried to merge your work into my branch, but I have a hard time doing so with github's tools. I can only compare your last commits ( this one https://github.com/bhouston/three.js/commit/07ee8b1734c2babdc55fb96176f8cb10507b03ad ) and my branch, but cannot create a PR or export a diff. Probably because there's no branch referencing it anymore (was removed).\r\nI could manually copy the changes, but I'd prefer having a sane git history. Could you help me? Maybe restoring the branch?",
    "clean_message": "I tried to merge your work into my branch, but I have a hard time doing so with github's tools. I can only compare your last commits ( this one  ) and my branch, but cannot create a PR or export a diff. Probably because there's no branch referencing it anymore (was removed). I could manually copy the changes, but I'd prefer having a sane git history. Could you help me? Maybe restoring the branch?",
    "message_url": "https://github.com/mrdoob/three.js/pull/13115#issuecomment-358393691",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I think it's not only convenient for requests to have frame properties, but it's consistent with Chrome DevTool Protocol because [Network.requestWillBeSent](https://chromedevtools.github.io/devtools-protocol/tot/Network/#event-requestWillBeSent) event has frameId property.\r\n\r\nOne problem I faced is that the frameId is optional, so the frame cannot always be accessed from request. I noticed that the property is empty for offline mode and when navigating to bad SSL pages.\r\n\r\nFixes: https://github.com/GoogleChrome/puppeteer/issues/1579\r\n\r\n@aslushnikov ",
    "clean_message": "I think it's not only convenient for requests to have frame properties, but it's consistent with Chrome DevTool Protocol because Network.requestWillBeSent event has frameId property. One problem I faced is that the frameId is optional, so the frame cannot always be accessed from request. I noticed that the property is empty for offline mode and when navigating to bad SSL pages. Fixes: ",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/1646",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I tried building the docs on master with this patch. There are a few errors, many of which may not be directly related to these changes:\n\n```\n/home/darren/.local/lib/python2.7/site-packages/matplotlib/patches.py:docstring of matplotlib.patches.FancyBboxPatch.set_boxstyle:27: (WARNING/2) Block quote ends without a blank line; unexpected unindent.\n\n/home/darren/.local/lib/python2.7/site-packages/matplotlib/axes.py:docstring of matplotlib.axes.Axes.plot_date:97: (ERROR/3) Unexpected indentation.\n\n/home/darren/.local/lib/python2.7/site-packages/matplotlib/backend_bases.py:docstring of matplotlib.backend_bases.TimerBase:12: (ERROR/3) Unexpected indentation.\n\n/home/darren/.local/lib/python2.7/site-packages/matplotlib/backend_bases.py:docstring of matplotlib.backend_bases.TimerBase:15: (WARNING/2) Block quote ends without a blank line; unexpected unindent.\n\n/home/darren/.local/lib/python2.7/site-packages/matplotlib/backend_bases.py:docstring of matplotlib.backend_bases.TimerBase:23: (ERROR/3) Unexpected indentation.\n\n/home/darren/.local/lib/python2.7/site-packages/matplotlib/backend_bases.py:docstring of matplotlib.backend_bases.TimerBase:24: (WARNING/2) Block quote ends without a blank line; unexpected unindent.\n\n/home/darren/.local/lib/python2.7/site-packages/matplotlib/collections.py:docstring of matplotlib.collections.EllipseCollection:14: (WARNING/2) Block quote ends without a blank line; unexpected unindent.\n\n/home/darren/.local/lib/python2.7/site-packages/matplotlib/pyplot.py:docstring of matplotlib.pyplot.grid:35: (WARNING/2) Inline interpreted text or phrase reference start-string without end-string.\n\n/home/darren/.local/lib/python2.7/site-packages/matplotlib/pyplot.py:docstring of matplotlib.pyplot.plot_date:97: (ERROR/3) Unexpected indentation.\n\n/home/darren/.local/lib/python2.7/site-packages/matplotlib/pyplot.py:docstring of matplotlib.pyplot.subplots:28: (WARNING/2) Bullet list ends without a blank line; unexpected unindent.\n\n/home/darren/.local/lib/python2.7/site-packages/matplotlib/pyplot.py:docstring of matplotlib.pyplot.subplots:49: (WARNING/2) Bullet list ends without a blank line; unexpected unindent.\n\n/home/darren/.local/lib/python2.7/site-packages/matplotlib/sphinxext/plot_directive.py:docstring of matplotlib.sphinxext.plot_directive:28: (ERROR/3) Unexpected indentation.\n\n/home/darren/.local/lib/python2.7/site-packages/matplotlib/sphinxext/plot_directive.py:docstring of matplotlib.sphinxext.plot_directive:37: (ERROR/3) Unexpected indentation.\n\n/home/darren/Projects/matplotlib/doc/examples/units/artist_tests.rst:8: (WARNING/2) Exception occurred in plotting  artist_tests: Traceback (most recent call last):\n  File \"/home/darren/.local/lib/python2.7/site-packages/matplotlib/sphinxext/plot_directive.py\", line 469, in run_code\n    exec code in ns\n  File \"<string>\", line 30, in <module>\n  File \"/home/darren/.local/lib/python2.7/site-packages/matplotlib/collections.py\", line 852, in __init__\n    self.set_segments(segments)\n  File \"/home/darren/.local/lib/python2.7/site-packages/matplotlib/collections.py\", line 861, in set_segments\n    seg = np.asarray(seg, np.float_)\n  File \"/home/darren/.local/lib/python2.7/site-packages/numpy/core/numeric.py\", line 284, in asarray\n    return array(a, dtype, copy=False, order=order)\nValueError: setting an array element with a sequence.\n```\n\nI've seen ValueErrors like this before.:\n\n```\nnp.array([1,2,[3]])\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/home/darren/<ipython-input-2-b02047aaeaaf> in <module>()\n----> 1 np.array([1,2,[3]])\n\nValueError: setting an array element with a sequence.\n```\n\nIt probably means that at least one of the values in \"segments\" is bad, perhaps new plot_directive uncovered an existing problem in doc/examples/units/artist_tests.rst? This line in particular looks suspect (although I am not familiar enough with units support to know for sure):\n\n```\nverts.append(zip(*inch*10*np.random.rand(2, random.randint(2,15))))\n```\n\nHere are a few additional errors I see when I build the docs:\n\n```\n/home/darren/Projects/matplotlib/doc/users/legend_guide.rst:282: WARNING: undecodable source characters, replacing with \"?\": 'plots. Also, it includes an entry for >>>\\xa1<<<\\xb0tuple\\xa1\\xb1 which is mapped to'\n/home/darren/Projects/matplotlib/doc/users/legend_guide.rst:282: WARNING: undecodable source characters, replacing with \"?\": 'plots. Also, it includes an entry for \\xa1>>>\\xb0<<<tuple\\xa1\\xb1 which is mapped to'\n/home/darren/Projects/matplotlib/doc/users/legend_guide.rst:282: WARNING: undecodable source characters, replacing with \"?\": 'plots. Also, it includes an entry for \\xa1\\xb0tuple>>>\\xa1<<<\\xb1 which is mapped to'\n/home/darren/Projects/matplotlib/doc/users/legend_guide.rst:282: WARNING: undecodable source characters, replacing with \"?\": 'plots. Also, it includes an entry for \\xa1\\xb0tuple\\xa1>>>\\xb1<<< which is mapped to'\n\nchecking consistency... /home/darren/Projects/matplotlib/doc/devel/gitwash/dot2_dot3.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/animate_decay_tk_blit.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/animation_blit_fltk.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/animation_blit_gtk.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/animation_blit_gtk2.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/animation_blit_qt.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/animation_blit_qt4.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/animation_blit_tk.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/animation_blit_wx.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/draggable_legend.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/dynamic_collection.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/dynamic_image_gtkagg.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/dynamic_image_wxagg2.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/gtk_timeout.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/histogram_tkagg.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/movie_demo.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/simple_anim_gtk.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/simple_anim_tkagg.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/simple_idle_wx.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/animation/simple_timer_wx.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/index.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/examples/pngsuite/index.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/faq/environment_variables_faq.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/mpl_toolkits/axes_grid/index.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/mpl_toolkits/mplot3d/index.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/users/arraydata.rst:: WARNING: document isn't included in any toctree\n/home/darren/Projects/matplotlib/doc/users/plotting.rst:: WARNING: document isn't included in any toctree\n```\n",
    "clean_message": "I tried building the docs on master with this patch. There are a few errors, many of which may not be directly related to these changes: I've seen ValueErrors like this before.: It probably means that at least one of the values in \"segments\" is bad, perhaps new plot_directive uncovered an existing problem in doc/examples/units/artist_tests.rst? This line in particular looks suspect (although I am not familiar enough with units support to know for sure): Here are a few additional errors I see when I build the docs:",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/66#issuecomment-948794",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Hmm, this is strange, I can't reproduce the issue, I tried on different sizes but it seems to work correctly.\r\n\r\nWhat browser are you using? Have you tried on an incognito window?\r\n\r\n![Selection_067](https://user-images.githubusercontent.com/1326112/85958711-b4a2f480-b997-11ea-85d4-cfa1ccbd3189.png)\r\n",
    "clean_message": "Hmm, this is strange, I can't reproduce the issue, I tried on different sizes but it seems to work correctly. What browser are you using? Have you tried on an incognito window? ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/1601#issuecomment-650824803",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "0.22 (latest version) works for sure, and I believe 0.21 does as well. If you can, it's probably best to update to the latest version of Bazel.",
    "clean_message": "0.22 (latest version) works for sure, and I believe 0.21 does as well. If you can, it's probably best to update to the latest version of Bazel.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/26079#issuecomment-467239733",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Note that the file you're editing is from a template, you will need to make the change here:\nhttps://github.com/pydata/pandas/blob/master/pandas/src/algos_groupby_helper.pxi.in\n\nI think your second approach is correct (or at least consistent) - in fact the current impl seems to handle it?\n\n``` python\nIn [1]: pd.__version__\nOut[1]: u'0.18.1'\n\nIn [2]: df = pd.DataFrame([(i%12, i%3 if i%3 else float(\"nan\"), i)\n   ...:                    for i in range(17)], dtype=float,\n   ...:                   columns=[\"B\", \"C\", \"F\"], index=None)\n\nIn [3]: df.groupby(['B', 'C']).shift(-1)\nOut[3]:\n       F\n0    NaN\n1   13.0\n2   14.0\n3    NaN\n4   16.0\n5    NaN\n6    NaN\n7    NaN\n8    NaN\n9    NaN\n10   NaN\n11   NaN\n12   NaN\n13   NaN\n14   NaN\n15   NaN\n16   NaN\n```\n\nedit: ok, actually it seem to be dumb luck the current version (which I had written) gives this answer - it has bounds issues, but just sometimes doesn't crash.  But, it is also what `shift()` would have done before this bug was introduced.\n\n``` python\nIn [7]: pd.__version__\nOut[7]: '0.16.1'\n\nIn [8]: df = pd.DataFrame([(i%12, i%3 if i%3 else float(\"nan\"), i)\n   ...:                    for i in range(17)], dtype=float,\n   ...:                   columns=[\"B\", \"C\", \"F\"], index=None)\n\nIn [9]: df.groupby(['B', 'C']).shift(-1)\nOut[9]: \n     F\n0  NaN\n1   13\n2   14\n3  NaN\n4   16\n5  NaN\n6  NaN\n7  NaN\n8  NaN\n9  NaN\n10 NaN\n11 NaN\n12 NaN\n13 NaN\n14 NaN\n15 NaN\n16 NaN\n```\n",
    "clean_message": "Note that the file you're editing is from a template, you will need to make the change here: I think your second approach is correct (or at least consistent) - in fact the current impl seems to handle it? edit: ok, actually it seem to be dumb luck the current version (which I had written) gives this answer - it has bounds issues, but just sometimes doesn't crash.  But, it is also what  would have done before this bug was introduced.",
    "message_url": "https://github.com/pandas-dev/pandas/pull/13819#issuecomment-235756713",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@SSTPIERRE2 Thank you for contributing to Jest. To help interact on your contribution:\r\n\r\n1. Can you say which version?\r\n2. Can you give a few examples of confusing tests that motivate the sentence? The wording might need to become more specific for which type of expected argument in the assertion.\r\n\r\nFor example, `toThrow` assertion without argument works for values that are not instance of Error:\r\n\r\n```js\r\ntest('toThrow without expected value', () => {\r\n  const received = () => {\r\n    throw 13;\r\n  };\r\n\r\n  expect(received).toThrow();\r\n  expect(received).not.toThrow();\r\n});\r\n```\r\n\r\n```sh\r\nexpect(received).not.toThrow()\r\n\r\nThrown value: 13\r\n```\r\n\r\nThis improvement in the report from #7621 in Jest 24.0.0 or later\r\n\r\nP.S. Yes, ignore `test-jest-circus` failure on CI\r\n\r\nWhen you edit Jest `.md` files, you can run locally `yarn lint:md` before you commit the change",
    "clean_message": "Thank you for contributing to Jest. To help interact on your contribution:  Can you say which version? Can you give a few examples of confusing tests that motivate the sentence? The wording might need to become more specific for which type of expected argument in the assertion.  For example,  assertion without argument works for values that are not instance of Error: This improvement in the report from #7621 in Jest 24.0.0 or later P.S. Yes, ignore  failure on CI When you edit Jest  files, you can run locally  before you commit the change",
    "message_url": "https://github.com/jestjs/jest/pull/8772#issuecomment-517928760",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "That's not how blueprints work already though, and IMO this should stay simply a way to nest those registrations. Otherwise, how would you solve things like running custom code at registration time without still having the recursion problem?\n",
    "clean_message": "That's not how blueprints work already though, and IMO this should stay simply a way to nest those registrations. Otherwise, how would you solve things like running custom code at registration time without still having the recursion problem?",
    "message_url": "https://github.com/pallets/flask/pull/750#issuecomment-19446894",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Merged, thanks!\n",
    "clean_message": "Merged, thanks!",
    "message_url": "https://github.com/ansible/ansible/pull/17126#issuecomment-241015374",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Okay, let's do 1.1 then.\n",
    "clean_message": "Okay, let's do 1.1 then.",
    "message_url": "https://github.com/astropy/astropy/pull/3993#issuecomment-123826046",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "its weird why gpu is not found in test check \r\ncan u look into @geohot ",
    "clean_message": "its weird why gpu is not found in test check  can u look into  ",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/195#issuecomment-744423432",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "## ok, will try to spend some time on this over the weekend\n\nOn Wed, Nov 2, 2016 at 10:26 AM Adam Kulidjian notifications@github.com\nwrote:\n\n> hey all - shall I take a look at this now to see if it works?\n> \n> Go ahead! I just rebuilt the test and it failed again.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/plotly/plotly.py/pull/599#issuecomment-257936947, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/ABwSHUOj27e_T7e2zmRVsP5cAayp8xCIks5q6Me4gaJpZM4KmLGE\n> .\n",
    "clean_message": "ok, will try to spend some time on this over the weekend On Wed, Nov 2, 2016 at 10:26 AM Adam Kulidjian  wrote:",
    "message_url": "https://github.com/plotly/plotly.py/pull/599#issuecomment-258481738",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@stephan-hesselmann-by you are correct unfortunately, this project is effectively abandoned",
    "clean_message": "-hesselmann-by you are correct unfortunately, this project is effectively abandoned",
    "message_url": "https://github.com/tiangolo/fastapi/pull/3594#issuecomment-927986925",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "> Hello, where can i find the repository of IndoorControls ?\r\n> Thanks in advance\r\n\r\nSorry, I've used it for a private project, you can email me if you need it. And leave your GitHub name so I can add you as a collaborator to download code.\r\n[wobushi.jiujiu@qq.com](url)",
    "clean_message": "Sorry, I've used it for a private project, you can email me if you need it. And leave your GitHub name so I can add you as a collaborator to download code. ",
    "message_url": "https://github.com/mrdoob/three.js/pull/19199#issuecomment-786442437",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@jrideout please see there is banchmark test in this 1bec3a67b commit\n",
    "clean_message": "please see there is banchmark test in this 1bec3a67b commit",
    "message_url": "https://github.com/d3/d3/pull/1557#issuecomment-25596574",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@weswigham can you provide an opinion on the way I've added errors in/around the dril-down error code? I'm not super happy with the way it works.",
    "clean_message": "can you provide an opinion on the way I've added errors in/around the dril-down error code? I'm not super happy with the way it works.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/45032#issuecomment-892068146",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I've incorporated a variant of your xhr.post suggestion into #813. I'd like to punt on automatic encoding, so I think that about wraps everything up. Let me know if you have any more suggestions! And thank you!\n",
    "clean_message": "I've incorporated a variant of your xhr.post suggestion into #813. I'd like to punt on automatic encoding, so I think that about wraps everything up. Let me know if you have any more suggestions! And thank you!",
    "message_url": "https://github.com/d3/d3/pull/814#issuecomment-8711306",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@mbtaylor - thank you for the comments!\r\n\r\nRegarding moving the package, it would actually be quite simple to move it and maintain backward compatibility, so I think it's something we should seriously consider. I agree with @mbtaylor  that having it under the vo namespace is actually misleading since it can be used without any actual VO infrastructure. I quite like ``astropy.samp``...",
    "clean_message": " thank you for the comments!  Regarding moving the package, it would actually be quite simple to move it and maintain backward compatibility, so I think it's something we should seriously consider. I agree with   that having it under the vo namespace is actually misleading since it can be used without any actual VO infrastructure. I quite like astropy.samp...",
    "message_url": "https://github.com/astropy/astropy/pull/6201#issuecomment-308568447",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    },
    "discussion_polarity": "positive"
  },
  {
    "raw_message": "**Description**\r\n\r\nAdds a new XRButton class which creates a `immersive-ar` or a `immersive-vr` session depending on availability.\r\n\r\nThis allows making projects that run in passthrough headsets and also on vr headsets.\r\n\r\nSide note:\r\nI wonder if it was a mistake to call `immersive-ar` to the session that mobile phones support.\r\nMaybe it should have been called `mobile-ar`?\r\n\r\n/cc @toji @cabanier @elalish ",
    "clean_message": "Description Adds a new XRButton class which creates a  or a  session depending on availability. This allows making projects that run in passthrough headsets and also on vr headsets. Side note: I wonder if it was a mistake to call  to the session that mobile phones support. Maybe it should have been called ? /cc    ",
    "message_url": "https://github.com/mrdoob/three.js/pull/25781",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Yes, I ran `pretty-format-crash` linked to local build. The `div` also contains SVG elements.\r\n\r\n* Is reading from a file which includes indentation only for repro or for your actual use case? Output from `DOMElement` plugin doesn\u2019t look so good after it formats text nodes for white space.\r\n\r\n* Also for your info, something that had nothing to do with problem: when I checked the `div` element with W3C validator, it reported 8 occurrences of unescaped `&` in attributes.",
    "clean_message": "Yes, I ran  linked to local build. The  also contains SVG elements.   Is reading from a file which includes indentation only for repro or for your actual use case? Output from  plugin doesn\u2019t look so good after it formats text nodes for white space.   Also for your info, something that had nothing to do with problem: when I checked the  element with W3C validator, it reported 8 occurrences of unescaped  in attributes.  ",
    "message_url": "https://github.com/jestjs/jest/pull/4664#issuecomment-335893724",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 3,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "I have reverted this pull request using a force push to the 3.0 branch. Unfortunately, GitHub doesn't appear to let me reopen the pull request, but you should be able to send a new one along when your fix is ready.\n",
    "clean_message": "I have reverted this pull request using a force push to the 3.0 branch. Unfortunately, GitHub doesn't appear to let me reopen the pull request, but you should be able to send a new one along when your fix is ready.",
    "message_url": "https://github.com/d3/d3/pull/917#issuecomment-10835359",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I ran it from the Docker image directly. Here was the message:\r\n\r\n```\r\nError: Cannot find module 'yootils'\r\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:668:15)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:591:27)\r\n    at Module.require (internal/modules/cjs/loader.js:723:19)\r\n    at require (internal/modules/cjs/helpers.js:14:16)\r\n    at Object.<anonymous> (/app/__sapper__/build/server/index-4f8ee8d0.js:6:1)\r\n    at Module._compile (internal/modules/cjs/loader.js:816:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:827:10)\r\n    at Module.load (internal/modules/cjs/loader.js:685:32)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:620:12)\r\n    at Module.require (internal/modules/cjs/loader.js:723:19)\r\n```\r\n\r\nThis was my fault. I removed it in this PR though am not sure where it's being used. Investigate later when not so tired.\r\n\r\nIn the meantime, I pushed up a fix to master directly am now redeploying the site.",
    "clean_message": "I ran it from the Docker image directly. Here was the message: This was my fault. I removed it in this PR though am not sure where it's being used. Investigate later when not so tired. In the meantime, I pushed up a fix to master directly am now redeploying the site.",
    "message_url": "https://github.com/sveltejs/svelte/pull/2572#issuecomment-489395363",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "my mistake how do I pull three.js back into my fork?\n",
    "clean_message": "my mistake how do I pull three.js back into my fork?",
    "message_url": "https://github.com/mrdoob/three.js/pull/6438#issuecomment-95639061",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hey @wyze, it's great to see you pop up here.\r\n\r\nI agree it sucks when you pre compile your code that you couldn't use snapshots because those artifacts in a build folder would be ignored. I think your solution here is reasonable but I'm still hesitant and would like things to be less configurable rather than more. One of the problems is that all the tooling that we are building (for example Nuclide integration for Jest that can preview snapshots) will have to know about these configuration options. Can you walk me through how the reason compiler works? Is there any conceivable way that Reason could be just another transformer similar to babel-jest? That way snapshot files could simply be next to your `.re` files.\r\n\r\ncc @chenglou\r\n\r\nTo @wesleyhall, the reason you are forced to use this is because that is the convention I decided on. I don't get paid to make things customizable because for some subjective reason you find double underscores ugly. If you would like to change this, I suggest you send a PR instead of continuing to whine about it here and in the other issue. Thank you.",
    "clean_message": "Hey , it's great to see you pop up here. I agree it sucks when you pre compile your code that you couldn't use snapshots because those artifacts in a build folder would be ignored. I think your solution here is reasonable but I'm still hesitant and would like things to be less configurable rather than more. One of the problems is that all the tooling that we are building (for example Nuclide integration for Jest that can preview snapshots) will have to know about these configuration options. Can you walk me through how the reason compiler works? Is there any conceivable way that Reason could be just another transformer similar to babel-jest? That way snapshot files could simply be next to your  files. cc  To , the reason you are forced to use this is because that is the convention I decided on. I don't get paid to make things customizable because for some subjective reason you find double underscores ugly. If you would like to change this, I suggest you send a PR instead of continuing to whine about it here and in the other issue. Thank you.",
    "message_url": "https://github.com/jestjs/jest/pull/3240#issuecomment-293227743",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Didn't search before sending that PR, my bad. It's a duplicate of #23330",
    "clean_message": "Didn't search before sending that PR, my bad. It's a duplicate of #23330",
    "message_url": "https://github.com/twbs/bootstrap/pull/23333#issuecomment-321867165",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "## PR Summary\r\nAdds the Gadfly plot theme that I [wrote a blog post](https://towardsdatascience.com/a-new-plot-theme-for-matplotlib-gadfly-2cffc745ff84) about a couple of years ago\r\n\r\n## PR Checklist\r\n\r\n<!-- Please mark any checkboxes that do not apply to this PR as [N/A]. -->\r\n\r\n- [ ] Has pytest style unit tests (and `pytest` passes). N/A\r\n- [ ] Is [Flake 8](https://flake8.pycqa.org/en/latest/) compliant (run `flake8` on changed files to check). N/A\r\n- [ ] New features are documented, with examples if plot related. N/A\r\n- [ ] Documentation is sphinx and numpydoc compliant (the docs should [build] (https://matplotlib.org/devel/documenting_mpl.html#building-the-docs) without error). N/A\r\n- [ ] Conforms to Matplotlib style conventions (install `flake8-docstrings` and run `flake8 --docstring-convention=all`). N/A\r\n- [x] New features have an entry in `doc/users/next_whats_new/` (follow instructions in README.rst there).\r\n- [ ] API changes documented in `doc/api/next_api_changes/` (follow instructions in README.rst there). N/A\r\n\r\n<!--\r\nThank you so much for your PR!  To help us review your contribution, please\r\nconsider the following points:\r\n\r\n- A development guide is available at https://matplotlib.org/devdocs/devel/index.html.\r\n\r\n- Help with git and github is available at\r\n  https://matplotlib.org/devel/gitwash/development_workflow.html.\r\n\r\n- Do not create the PR out of master, but out of a separate branch.\r\n\r\n- The PR title should summarize the changes, for example \"Raise ValueError on\r\n  non-numeric input to set_xlim\".  Avoid non-descriptive titles such as\r\n  \"Addresses issue #8576\".\r\n\r\n- The summary should provide at least 1-2 sentences describing the pull request\r\n  in detail (Why is this change required?  What problem does it solve?) and\r\n  link to any relevant issues.\r\n\r\n- If you are contributing fixes to docstrings, please pay attention to\r\n  http://matplotlib.org/devel/documenting_mpl.html#formatting.  In particular,\r\n  note the difference between using single backquotes, double backquotes, and\r\n  asterisks in the markup.\r\n\r\nWe understand that PRs can sometimes be overwhelming, especially as the\r\nreviews start coming in.  Please let us know if the reviews are unclear or\r\nthe recommended next step seems overly demanding, if you would like help in\r\naddressing a reviewer's comments, or if you have been waiting too long to hear\r\nback on your PR.\r\n-->\r\n",
    "clean_message": "PR Summary Adds the Gadfly plot theme that I wrote a blog post about a couple of years ago PR Checklist <!-- Please mark any checkboxes that do not apply to this PR as [N/A]. -- - [ ] Has pytest style unit tests (and  passes). N/A - [ ] Is Flake 8 compliant (run  on changed files to check). N/A - [ ] New features are documented, with examples if plot related. N/A - [ ] Documentation is sphinx and numpydoc compliant (the docs should [build] () without error). N/A - [ ] Conforms to Matplotlib style conventions (install  and run ). N/A - [x] New features have an entry in  (follow instructions in README.rst there). - [ ] API changes documented in  (follow instructions in README.rst there). N/A <!-- Thank you so much for your PR!  To help us review your contribution, please consider the following points:   A development guide is available at .   Help with git and github is available at   .   Do not create the PR out of master, but out of a separate branch.   The PR title should summarize the changes, for example \"Raise ValueError on   non-numeric input to set_xlim\".  Avoid non-descriptive titles such as   \"Addresses issue #8576\".   The summary should provide at least 1-2 sentences describing the pull request   in detail (Why is this change required?  What problem does it solve?) and   link to any relevant issues.   If you are contributing fixes to docstrings, please pay attention to   .  In particular,   note the difference between using single backquotes, double backquotes, and   asterisks in the markup.   We understand that PRs can sometimes be overwhelming, especially as the reviews start coming in.  Please let us know if the reviews are unclear or the recommended next step seems overly demanding, if you would like help in addressing a reviewer's comments, or if you have been waiting too long to hear back on your PR. --",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/19346",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Nice! :sparkles: I'll play with it in a bit, but the including the numbers in the array makes it even easier to use :)\n",
    "clean_message": "Nice! :sparkles: I'll play with it in a bit, but the including the numbers in the array makes it even easier to use :)",
    "message_url": "https://github.com/expressjs/express/pull/2683#issuecomment-113516734",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Shall you guys take a look? @jreback @jorisvandenbossche @TomAugspurger ",
    "clean_message": "Shall you guys take a look?    ",
    "message_url": "https://github.com/pandas-dev/pandas/pull/18636#issuecomment-374251072",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I think it's only if the branches are merged in via a pull request? Not 100% sure.",
    "clean_message": "I think it's only if the branches are merged in via a pull request? Not 100% sure.",
    "message_url": "https://github.com/astropy/astropy/pull/12952#issuecomment-1065157571",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "OK, I will continue working on it.\n",
    "clean_message": "OK, I will continue working on it.",
    "message_url": "https://github.com/vuejs/vue/pull/2166#issuecomment-172418959",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@Starsam80 No, actually they look identical to me.\n",
    "clean_message": "No, actually they look identical to me.",
    "message_url": "https://github.com/twbs/bootstrap/pull/19828#issuecomment-216008650",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "This is really confusing\u2026 tests are passing on my m1 (including the skipped ones), yet the ones in CI are failing left and right",
    "clean_message": "This is really confusing\u2026 tests are passing on my m1 (including the skipped ones), yet the ones in CI are failing left and right",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/909#issuecomment-1575224411",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "/rebuild_failed",
    "clean_message": "/rebuild_failed",
    "message_url": "https://github.com/ansible/ansible/pull/69201#issuecomment-623992607",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> Is there anything in place to tag which version this landed in the docs?\r\n\r\nNo...",
    "clean_message": "No...",
    "message_url": "https://github.com/mrdoob/three.js/pull/15326#issuecomment-442216281",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thanks, @huaoguo! Looks like we already account for this in the 5.0 alpha, but we'll get this fix into the 4.x line as part of the upcoming 4.14 release.\n",
    "clean_message": "Thanks, ! Looks like we already account for this in the 5.0 alpha, but we'll get this fix into the 4.x line as part of the upcoming 4.14 release.",
    "message_url": "https://github.com/expressjs/express/pull/3017#issuecomment-222895176",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "The bug and fix were reported upstream. I will merge this patch meanwhile so we can proceed with the \r\n`-TAB` PR. ",
    "clean_message": "The bug and fix were reported upstream. I will merge this patch meanwhile so we can proceed with the   PR. ",
    "message_url": "https://github.com/astropy/astropy/pull/9845#issuecomment-572073065",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Sorry, I've no deep knowledge about regular expressions in particular and about the formatters in general.",
    "clean_message": "Sorry, I've no deep knowledge about regular expressions in particular and about the formatters in general.",
    "message_url": "https://github.com/JabRef/jabref/pull/2663#issuecomment-296656842",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Hmm, OK.\n",
    "clean_message": "Hmm, OK.",
    "message_url": "https://github.com/d3/d3/pull/2057#issuecomment-58677903",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "k\n",
    "clean_message": "k",
    "message_url": "https://github.com/facebook/react/pull/6009#issuecomment-183068874",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Not forgotten at all. Just I've been working on pydantic-core in preparation for pydantic V2.\r\n\r\nI promise to review this once I get working on pydantic v1.10.",
    "clean_message": "Not forgotten at all. Just I've been working on pydantic-core in preparation for pydantic V2. I promise to review this once I get working on pydantic v1.10.",
    "message_url": "https://github.com/pydantic/pydantic/pull/3909#issuecomment-1185956167",
    "part2_aggregate": {
      "polarity": "undefined",
      "avg_confidence": 4,
      "agreement_type": "undefined"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    },
    "discussion_polarity": "neutral"
  },
  {
    "raw_message": "Sorry for the delay, I spent a lot of time in `rebase + squash` and finally all of the errors and requirements has fulfilled, @elibarzilay @DanielRosenwasser , Please feel free to review.",
    "clean_message": "Sorry for the delay, I spent a lot of time in  and finally all of the errors and requirements has fulfilled,   , Please feel free to review.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/37980#issuecomment-668451545",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "nice job with all the tests btw!\n",
    "clean_message": "nice job with all the tests btw!",
    "message_url": "https://github.com/plotly/plotly.py/pull/128#issuecomment-61996165",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "it's not slow :p pushing _something_ to the client immediately will probably always be a factor but not the entire thing, if the initial content is small there's not much benefit in streaming it. with http 2.0 push-based stuff it mitigates the need for that as well\n",
    "clean_message": "it's not slow :p pushing something to the client immediately will probably always be a factor but not the entire thing, if the initial content is small there's not much benefit in streaming it. with http 2.0 push-based stuff it mitigates the need for that as well",
    "message_url": "https://github.com/expressjs/express/pull/1814#issuecomment-28165606",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Awesome, thank you @NinaHwang! :bow: :cake: \r\n\r\nAnd thanks for the reviews @hard-coders and @0417taehyun :tada: ",
    "clean_message": "Awesome, thank you ! :bow: :cake:  And thanks for the reviews -coders and  :tada: ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/3744#issuecomment-989734805",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 5,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I do agree that these changes keep confusing users. I could go either way on whether the reloader is controlled by `ENV` or `DEBUG`.",
    "clean_message": "I do agree that these changes keep confusing users. I could go either way on whether the reloader is controlled by  or .",
    "message_url": "https://github.com/pallets/flask/pull/2584#issuecomment-356055396",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "@chriddyp @jmmease\r\nI am not fixing the streaming tests as streaming support is already being phased out and will eventually be unsupported iirc. The stream fails occur often anyways because of server errors. Note that this PR https://github.com/plotly/plotly.py/pull/964 will hopefully fix the intermittent server errors that are one reason streaming tests fail sometimes.\r\n\r\n@cldougl does this sound correct to you?",
    "clean_message": "I am not fixing the streaming tests as streaming support is already being phased out and will eventually be unsupported iirc. The stream fails occur often anyways because of server errors. Note that this PR  will hopefully fix the intermittent server errors that are one reason streaming tests fail sometimes. does this sound correct to you?",
    "message_url": "https://github.com/plotly/plotly.py/pull/942#issuecomment-384728446",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "#777",
    "clean_message": "777",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/1015",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> this is a pattern I see all the time\r\n\r\n+1",
    "clean_message": "+1",
    "message_url": "https://github.com/pydantic/pydantic/pull/2336#issuecomment-903348868",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Disclaimer:  The following is a cornercase, not a best practice.  I wouldn't encourage anyone to do this but the rest of the code seems to allow it so I suppose there's a case to be made for handling it here (for now... until/unless we make it an error elsewhere).\n\nThe \"name\" parameter to add_hosts does not appear to be a true DNS name.  Instead it is a name that ansible uses to reference a host.  If the \"name\" does not also contain an ansible_ssh_hostname parameter than the name would have to be valid as an ip address or a DNS hostname.  This is the common case.  However, a cornercase exists when an inventory does specify an ansible_ssh_hostname.  In that case, the hostname does not have to be valid in DNS because ansible_ssh_hostname is used instead.  That means that the user could specify something like this:\n\n```\nIn inventory:\none:two ansible_ssh_host=localhost ansible_ssh_port=22\n\nIn a playbook:\n- add_host:\n    name: \"one:two\"\n    ansible_ssh_host: \"localhost\"\n    ansible_ssh_port: 22\n```\n\nStupid thing to do?  Yes.  Does someone out there want to do it?  Probably so.  We get some really weird bug reports sometimes.  How far should we go to support this silly cornercase?  I'm not sure I'd go too far but I do think it would be good for the code to do a little bit more checking to prevent someone doing that from masquerading as valid ipv6 addresses.  So for instance, if someone passes in \"[one:two]:90\" we shouldn't parse that into \"one:two\", 90.  We should either return \"[one:two]:90\", None  or \"[one:two]\", 90 (I lean slightly towards the former to give the user flexibility).\n\nSo maybe enhance the regex to search for four sets of `[0-9a-fA-F]{1,4}` in order to decide that the value is an ipv6 address.\n\nDoes that make sense?\n",
    "clean_message": "Disclaimer:  The following is a cornercase, not a best practice.  I wouldn't encourage anyone to do this but the rest of the code seems to allow it so I suppose there's a case to be made for handling it here (for now... until/unless we make it an error elsewhere). The \"name\" parameter to add_hosts does not appear to be a true DNS name.  Instead it is a name that ansible uses to reference a host.  If the \"name\" does not also contain an ansible_ssh_hostname parameter than the name would have to be valid as an ip address or a DNS hostname.  This is the common case.  However, a cornercase exists when an inventory does specify an ansible_ssh_hostname.  In that case, the hostname does not have to be valid in DNS because ansible_ssh_hostname is used instead.  That means that the user could specify something like this: Stupid thing to do?  Yes.  Does someone out there want to do it?  Probably so.  We get some really weird bug reports sometimes.  How far should we go to support this silly cornercase?  I'm not sure I'd go too far but I do think it would be good for the code to do a little bit more checking to prevent someone doing that from masquerading as valid ipv6 addresses.  So for instance, if someone passes in \"[one:two]:90\" we shouldn't parse that into \"one:two\", 90.  We should either return \"[one:two]:90\", None  or \"[one:two]\", 90 (I lean slightly towards the former to give the user flexibility). So maybe enhance the regex to search for four sets of  in order to decide that the value is an ipv6 address. Does that make sense?",
    "message_url": "https://github.com/ansible/ansible/pull/11747#issuecomment-133298684",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Yea I think this is a little arbitrary. From the linked issue I get the problem we are trying to solve is that the headers aren't visible while scrolling through. Wouldn't it be possible to just pin the headers then with appropriate CSS?\r\n\r\ncc @simonjayhawkins for insights",
    "clean_message": "Yea I think this is a little arbitrary. From the linked issue I get the problem we are trying to solve is that the headers aren't visible while scrolling through. Wouldn't it be possible to just pin the headers then with appropriate CSS? cc  for insights",
    "message_url": "https://github.com/pandas-dev/pandas/pull/28091#issuecomment-524659297",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@crisbeto Sorry about that! Yes, I think we should keep this PR for the remaining changes.",
    "clean_message": "Sorry about that! Yes, I think we should keep this PR for the remaining changes.",
    "message_url": "https://github.com/angular/angular/pull/26898#issuecomment-437976868",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I looked at my usual corpora [1] to see which strategy is best. I started by considering three options:\r\n\r\n1. Exclude the whole comment for comments containing a `@typedef`/`@callback` and no `@param` or `@return` tags. (Strategy 1 proposed by @andrewbranch)\r\n2. Exclude the whole comment for comments containing only `@typedef`, `@callback` and perhaps a small set of associated tags.\r\n3. Exclude the whole comment for comments containing a (OR only) `@typedef`/`@callback` if a newline separated the comment from the next element in the source. (Strategy 2 proposed by @andrewbranch)\r\n\r\nI found all comments containing `@typedef` and dumped the list of tags from each comment.\r\n\r\n## .ts files ##\r\n\r\n.ts files had almost 300 `@typedef`, about 250 single `@typedefs`. The remaining typedefs were in 3 projects:\r\n- openfin and google-gax used `@summary`, `@desc` and `@example` to explain the typedef further.\r\n- protobufjs used a `@callback`-like variant of `@typedef` that Typescript doesn't parse:\r\n\r\n```js\r\n/**\r\n * @typedef {function} Typename\r\n * @param {number} a\r\n * @param {string} b\r\n * @return {string}\r\n * @this {?object} Please don't pass `this` it is the worst.\r\n */\r\n```\r\n\r\nAlso, notably, in protobufjs, the `@typedefs` are often immediately followed with a Typescript declaration for the same thing. I think the .d.ts files were generated from Closure `@typedefs`.\r\n\r\n## .js files ##\r\n\r\n.js files had more than 8000 `@typedef`, 7500 single `@typedefs`. The remaining typedefs fell into 4 categories:\r\n\r\n- embellishments for documentation or structure like `@summary`, `@description`, `@category`, `@public`, `@module`, `@global`, `@static`, `@interface`, `@example`, `@throws`. There was a lot of variety here.\r\n- 'local' typedefs that were immediately used with a `@param` and `@return` tag (the typedefs are not actually local to the declaration)\r\n- `@callback`-variants like the protobuf example above, which also used `@param` and `@return` tags. (and `@this`, once or twice)\r\n\r\n6 projects use the unsupported callback-like typedefs compared to 3 projects that use local typedefs.\r\n\r\nAdditionally, I observed plenty of unassociated `@typedef` comments that were not separated by a newline from the next element, though the median next element was another comment.\r\n\r\n## Analysis ##\r\n\r\nThe best rule for excluding typedefs in quickinfo is (1). Except for local typedefs, all typedef-containing comments that I saw were exclusively about that typedef. And, although both local typedefs and callback-like typedefs are rare, it's better to show a few callback-like typedefs than to hide local typedefs that were intentionally defined in-place. (2) won't work well because there it's too hard to capture the set of associated tags -- we would end up showing any unforeseen variants needlessly. And the data show that (3) is both unnecessary and ineffective.\r\n\r\nIn the future, if we decide to support callback-like typedefs, then (1) would stop incorrectly showing the callback-like typedefs. The code to implement this wouldn't be large, although I think there isn't much demand.\r\n\r\n[1] A full install of Definitely Typed, using @definitelytyped/dtslint-runner to `npm install` every package inside `types/`, then `find . -iname '*.ts'`. The same for the user tests in the TS repo.",
    "clean_message": "I looked at my usual corpora [1] to see which strategy is best. I started by considering three options:  Exclude the whole comment for comments containing a / and no  or  tags. (Strategy 1 proposed by ) Exclude the whole comment for comments containing only ,  and perhaps a small set of associated tags. Exclude the whole comment for comments containing a (OR only) / if a newline separated the comment from the next element in the source. (Strategy 2 proposed by )  I found all comments containing  and dumped the list of tags from each comment. .ts files .ts files had almost 300 , about 250 single . The remaining typedefs were in 3 projects: - openfin and google-gax used ,  and  to explain the typedef further. - protobufjs used a -like variant of  that Typescript doesn't parse: this Also, notably, in protobufjs, the  are often immediately followed with a Typescript declaration for the same thing. I think the .d.ts files were generated from Closure . .js files .js files had more than 8000 , 7500 single . The remaining typedefs fell into 4 categories:  embellishments for documentation or structure like , , , , , , , , , . There was a lot of variety here. 'local' typedefs that were immediately used with a  and  tag (the typedefs are not actually local to the declaration) -variants like the protobuf example above, which also used  and  tags. (and , once or twice)  6 projects use the unsupported callback-like typedefs compared to 3 projects that use local typedefs. Additionally, I observed plenty of unassociated  comments that were not separated by a newline from the next element, though the median next element was another comment. Analysis The best rule for excluding typedefs in quickinfo is (1). Except for local typedefs, all typedef-containing comments that I saw were exclusively about that typedef. And, although both local typedefs and callback-like typedefs are rare, it's better to show a few callback-like typedefs than to hide local typedefs that were intentionally defined in-place. (2) won't work well because there it's too hard to capture the set of associated tags -- we would end up showing any unforeseen variants needlessly. And the data show that (3) is both unnecessary and ineffective. In the future, if we decide to support callback-like typedefs, then (1) would stop incorrectly showing the callback-like typedefs. The code to implement this wouldn't be large, although I think there isn't much demand. [1] A full install of Definitely Typed, using /dtslint-runner to  every package inside , then . The same for the user tests in the TS repo.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/43677#issuecomment-867016465",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "CC: @jillr @mattclay ",
    "clean_message": "CC:   ",
    "message_url": "https://github.com/ansible/ansible/pull/70866#issuecomment-663571458",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!--\r\nFirst of all, thank you for your contribution! \ud83d\ude04\r\n\r\nFor requesting to pull a new feature or bugfix, please send it from a feature/bugfix branch based on the `master` branch.\r\n\r\nBefore submitting your pull request, please make sure the checklist below is confirmed.\r\n\r\nYour pull requests will be merged after one of the collaborators approve.\r\n\r\nThank you!\r\n\r\n-->\r\n\r\n[[\u4e2d\u6587\u7248\u6a21\u677f / Chinese template](https://github.com/ant-design/ant-design/blob/master/.github/PULL_REQUEST_TEMPLATE/pr_cn.md)]\r\n\r\n### \ud83e\udd14 This is a ...\r\n\r\n- [ ] New feature\r\n- [ ] Bug fix\r\n- [ ] Site / documentation update\r\n- [ ] Demo update\r\n- [ ] Component style update\r\n- [ ] TypeScript definition update\r\n- [ ] Bundle size optimization\r\n- [ ] Performance optimization\r\n- [ ] Enhancement feature\r\n- [ ] Internationalization\r\n- [x] Refactoring\r\n- [ ] Code style optimization\r\n- [ ] Test Case\r\n- [ ] Branch merge\r\n- [ ] Other (about what?)\r\n\r\n### \ud83d\udd17 Related issue link\r\n\r\n<!--\r\n1. Put the related issue or discussion links here.\r\n-->\r\n\r\n### \ud83d\udca1 Background and solution\r\n\r\n<!--\r\n1. Describe the problem and the scenario.\r\n2. GIF or snapshot should be provided if includes UI/interactive modification.\r\n3. How to fix the problem, and list the final API implementation and usage sample if that is a new feature.\r\n-->\r\n\r\n### \ud83d\udcdd Changelog\r\n\r\n<!--\r\nDescribe changes from the user side, and list all potential break changes or other risks.\r\n--->\r\n\r\n| Language   | Changelog |\r\n| ---------- | --------- |\r\n| \ud83c\uddfa\ud83c\uddf8 English | refactor: CC => FC |\r\n| \ud83c\udde8\ud83c\uddf3 Chinese | refactor: CC => FC |\r\n\r\n### \u2611\ufe0f Self-Check before Merge\r\n\r\n\u26a0\ufe0f Please check all items below before requesting a reviewing. \u26a0\ufe0f\r\n\r\n- [x] Doc is updated/provided or not needed\r\n- [x] Demo is updated/provided or not needed\r\n- [x] TypeScript definition is updated/provided or not needed\r\n- [x] Changelog is provided or not needed",
    "clean_message": "<!-- First of all, thank you for your contribution! \ud83d\ude04 For requesting to pull a new feature or bugfix, please send it from a feature/bugfix branch based on the  branch. Before submitting your pull request, please make sure the checklist below is confirmed. Your pull requests will be merged after one of the collaborators approve. Thank you! -- [\u4e2d\u6587\u7248\u6a21\u677f / Chinese template] \ud83e\udd14 This is a ...  [ ] New feature [ ] Bug fix [ ] Site / documentation update [ ] Demo update [ ] Component style update [ ] TypeScript definition update [ ] Bundle size optimization [ ] Performance optimization [ ] Enhancement feature [ ] Internationalization [x] Refactoring [ ] Code style optimization [ ] Test Case [ ] Branch merge [ ] Other (about what?)  \ud83d\udd17 Related issue link <!-- 1. Put the related issue or discussion links here. -- \ud83d\udca1 Background and solution <!-- 1. Describe the problem and the scenario. 2. GIF or snapshot should be provided if includes UI/interactive modification. 3. How to fix the problem, and list the final API implementation and usage sample if that is a new feature. -- \ud83d\udcdd Changelog <!-- Describe changes from the user side, and list all potential break changes or other risks.  | Language   | Changelog | | ---------- | --------- | | \ud83c\uddfa\ud83c\uddf8 English | refactor: CC =| \ud83c\udde8\ud83c\uddf3 Chinese | refactor: CC = \u2611\ufe0f Self-Check before Merge \u26a0\ufe0f Please check all items below before requesting a reviewing. \u26a0\ufe0f  [x] Doc is updated/provided or not needed [x] Demo is updated/provided or not needed [x] TypeScript definition is updated/provided or not needed [x] Changelog is provided or not needed ",
    "message_url": "https://github.com/ant-design/ant-design/pull/37957",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "/cc @haxiomic",
    "clean_message": "/cc ",
    "message_url": "https://github.com/mrdoob/three.js/pull/23452#issuecomment-1035071911",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "> Thank you. Are you going to test it?\n\nyes, sorry, I have the tested fix now. Thanks for the pointers.\nPR in #4226 \n",
    "clean_message": "yes, sorry, I have the tested fix now. Thanks for the pointers. PR in #4226 ",
    "message_url": "https://github.com/mrdoob/three.js/pull/4198#issuecomment-30924560",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "<!--\r\nFirst of all, thank you for your contribution! \ud83d\ude04\r\nFor requesting to pull a new feature or bugfix, please send it from a feature/bugfix branch based on the `master` branch.\r\nBefore submitting your pull request, please make sure the checklist below is confirmed.\r\nYour pull requests will be merged after one of the collaborators approve.\r\nThank you!\r\n-->\r\n\r\n[[\u4e2d\u6587\u7248\u6a21\u677f / Chinese template](https://github.com/ant-design/ant-design/blob/master/.github/PULL_REQUEST_TEMPLATE/pr_cn.md?plain=1)]\r\n\r\n### \ud83e\udd14 This is a ...\r\n\r\n- [X] New feature\r\n- [ ] Bug fix\r\n- [ ] Site / documentation update\r\n- [ ] Demo update\r\n- [ ] Component style update\r\n- [ ] TypeScript definition update\r\n- [ ] Bundle size optimization\r\n- [ ] Performance optimization\r\n- [ ] Enhancement feature\r\n- [ ] Internationalization\r\n- [ ] Refactoring\r\n- [ ] Code style optimization\r\n- [ ] Test Case\r\n- [ ] Branch merge\r\n- [ ] Workflow\r\n- [ ] Other (about what?)\r\n\r\n### \ud83d\udd17 Related issue link\r\n\r\n- https://github.com/ant-design/ant-design/discussions/43582\r\nclose #43495\r\n\r\n<!--\r\n1. Put the related issue or discussion links here.\r\n2. close #xxxx or fix #xxxx for instance.\r\n-->\r\n\r\n### \ud83d\udca1 Background and solution\r\n\r\n<!--\r\n1. Describe the problem and the scenario.\r\n2. GIF or snapshot should be provided if includes UI/interactive modification.\r\n3. How to fix the problem, and list the final API implementation and usage sample if that is a new feature.\r\n-->\r\n\r\n### \ud83d\udcdd Changelog\r\n\r\n<!--\r\nDescribe changes from the user side, and list all potential break changes or other risks.\r\n--->\r\n\r\n| Language   | Changelog |\r\n| ---------- | --------- |\r\n| \ud83c\uddfa\ud83c\uddf8 English | TreeSelect support customize clear button |\r\n| \ud83c\udde8\ud83c\uddf3 Chinese | \u6811\u9009\u62e9\u7ec4\u4ef6\u652f\u6301\u81ea\u5b9a\u4e49\u6e05\u9664\u6309\u94ae  |\r\n\r\n### \u2611\ufe0f Self-Check before Merge\r\n\r\n\u26a0\ufe0f Please check all items below before requesting a reviewing. \u26a0\ufe0f\r\n\r\n- [X] Doc is updated/provided or not needed\r\n- [X] Demo is updated/provided or not needed\r\n- [X] TypeScript definition is updated/provided or not needed\r\n- [X] Changelog is provided or not needed\r\n\r\n---\r\n\r\n<!--\r\nBelow are template for copilot to generate CR message.\r\nPlease DO NOT modify it.\r\n-->\r\n\r\n### \ud83d\ude80 Summary\r\n\r\n<!--\r\ncopilot:summary\r\n-->\r\n### <samp>\ud83e\udd16 Generated by Copilot at eb5afcc</samp>\r\n\r\nEnhanced the `allowClear` property of the `TreeSelect` component to support custom clear icons. Updated the English and Chinese documentation files `index.en-US.md` and `index.zh-CN.md` accordingly.\r\n\r\n### \ud83d\udd0d Walkthrough\r\n\r\n<!--\r\ncopilot:walkthrough\r\n-->\r\n### <samp>\ud83e\udd16 Generated by Copilot at eb5afcc</samp>\r\n\r\n* Enhance `allowClear` property of `TreeSelect` component to accept object type with `clearIcon` property for customizing clear icon ([link](https://github.com/ant-design/ant-design/pull/43842/files?diff=unified&w=0#diff-67fb1d73a3cbf7e60aa552471171ffb2286892b8fbe70d468b9a1a4f97fcd7dbL37-R37), [link](https://github.com/ant-design/ant-design/pull/43842/files?diff=unified&w=0#diff-37a35689e4d561f7759c3571816c85e4a758edb82b398926cbd632dbc0c91145L38-R38))\r\n",
    "clean_message": "<!-- First of all, thank you for your contribution! \ud83d\ude04 For requesting to pull a new feature or bugfix, please send it from a feature/bugfix branch based on the  branch. Before submitting your pull request, please make sure the checklist below is confirmed. Your pull requests will be merged after one of the collaborators approve. Thank you! -- [\u4e2d\u6587\u7248\u6a21\u677f / Chinese template] \ud83e\udd14 This is a ...  [X] New feature [ ] Bug fix [ ] Site / documentation update [ ] Demo update [ ] Component style update [ ] TypeScript definition update [ ] Bundle size optimization [ ] Performance optimization [ ] Enhancement feature [ ] Internationalization [ ] Refactoring [ ] Code style optimization [ ] Test Case [ ] Branch merge [ ] Workflow [ ] Other (about what?)  \ud83d\udd17 Related issue link  close #43495  <!-- 1. Put the related issue or discussion links here. 2. close #xxxx or fix #xxxx for instance. -- \ud83d\udca1 Background and solution <!-- 1. Describe the problem and the scenario. 2. GIF or snapshot should be provided if includes UI/interactive modification. 3. How to fix the problem, and list the final API implementation and usage sample if that is a new feature. -- \ud83d\udcdd Changelog <!-- Describe changes from the user side, and list all potential break changes or other risks.  | Language   | Changelog | | ---------- | --------- | | \ud83c\uddfa\ud83c\uddf8 English | TreeSelect support customize clear button | | \ud83c\udde8\ud83c\uddf3 Chinese | \u6811\u9009\u62e9\u7ec4\u4ef6\u652f\u6301\u81ea\u5b9a\u4e49\u6e05\u9664\u6309\u94ae  | \u2611\ufe0f Self-Check before Merge \u26a0\ufe0f Please check all items below before requesting a reviewing. \u26a0\ufe0f  [X] Doc is updated/provided or not needed [X] Demo is updated/provided or not needed [X] TypeScript definition is updated/provided or not needed [X] Changelog is provided or not needed   <!-- Below are template for copilot to generate CR message. Please DO NOT modify it. -- \ud83d\ude80 Summary <!-- copilot:summary --### <samp Enhanced the  property of the  component to support custom clear icons. Updated the English and Chinese documentation files  and  accordingly. \ud83d\udd0d Walkthrough <!-- copilot:walkthrough --### <samp * Enhance  property of  component to accept object type with  property for customizing clear icon (link, link)",
    "message_url": "https://github.com/ant-design/ant-design/pull/43842",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Thanks! I just updated the docs set up, so now there's no need to keep updating these `mkdocs.yml` files \ud83c\udf89 \r\n\r\nGiven that, I'll close this one, but thanks for the help! \u2615 ",
    "clean_message": "Thanks! I just updated the docs set up, so now there's no need to keep updating these  files \ud83c\udf89  Given that, I'll close this one, but thanks for the help! \u2615 ",
    "message_url": "https://github.com/tiangolo/fastapi/pull/9717#issuecomment-1608557931",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "I don't like this change. On OS X, `tempfile.gettempdir()` returns `/var/folders/ch/2zp9hh591kb05qw6nm19693c0000gn/T`\r\n\r\nThe idea of using /tmp is to make it easy to find.",
    "clean_message": "I don't like this change. On OS X,  returns  The idea of using /tmp is to make it easy to find.",
    "message_url": "https://github.com/tinygrad/tinygrad/pull/639#issuecomment-1454918410",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Merging bc I need it :D",
    "clean_message": "Merging bc I need it :D",
    "message_url": "https://github.com/facebook/react/pull/8893#issuecomment-276522387",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Maybe you can create a PR which target my branch `v4-xss-data-attribute` with your unit test ? \u263a\ufe0f",
    "clean_message": "Maybe you can create a PR which target my branch  with your unit test ? \u263a\ufe0f",
    "message_url": "https://github.com/twbs/bootstrap/pull/23679#issuecomment-325026616",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 2.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@typescript-bot perf test",
    "clean_message": "-bot perf test",
    "message_url": "https://github.com/microsoft/TypeScript/pull/30467#issuecomment-499320885",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Actually, i'm having second thoughts about this.  Will explain later.\n",
    "clean_message": "Actually, i'm having second thoughts about this.  Will explain later.",
    "message_url": "https://github.com/astropy/astropy/pull/2679#issuecomment-47720615",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@yuit  here is how it looks:\n\n```\nnode built\\local\\tsc.js d:\\test.ts\nd:/test.ts(5,13): Accessors are only available when targeting ECMAScript 5 and higher.\nd:/test.ts(15,5): Property or signature expected.\n\nnode built\\local\\tsc.js d:\\test.ts --showDiagnosticCodes\nd:/test.ts(5,13): error TS1056: Accessors are only available when targeting ECMAScript 5 and higher.\nd:/test.ts(15,5): error TS1131: Property or signature expected.\n```\n\n@CyrusNajmabadi, it takes space from the error message, and the information it provides is not useful, specially that we do not have any online documentation to pack these codes.\n",
    "clean_message": "here is how it looks: , it takes space from the error message, and the information it provides is not useful, specially that we do not have any online documentation to pack these codes.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/694#issuecomment-56101315",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "This fixes the failing test I brought up [here](https://github.com/kennethreitz/requests/pull/3417#issuecomment-233136908). 4dfe7a4 removed the `req` param from `resolve_redirects` in favor of calling `response.request` in the method. The test wasn't updated though, so the request param is being assigned to `stream` which should be a boolean. This is causing the `test_requests_are_updated_each_time` test to fail.\n\nEdit: Sorry, I overlooked that this was addressed in 4dfe7a4 but accidentally reverted in 18b26d2.\n",
    "clean_message": "This fixes the failing test I brought up here. 4dfe7a4 removed the  param from  in favor of calling  in the method. The test wasn't updated though, so the request param is being assigned to  which should be a boolean. This is causing the  test to fail. Edit: Sorry, I overlooked that this was addressed in 4dfe7a4 but accidentally reverted in 18b26d2.",
    "message_url": "https://github.com/psf/requests/pull/3442",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Hi @treasuryspring,\r\n\r\nCould you please explain what problem are you going to fix with this patch?\r\nWith `mypy 1.x.x` the `MYPY_VERSION_TUPLE` would be `(1, x, x)` for example `(1, 0, 1)` and the `MYPY_VERSION_TUPLE >= (0, 930)` should work. why do we need adding `len(MYPY_VERSION_TUPLE) > 2 or`?\r\n",
    "clean_message": "Hi , Could you please explain what problem are you going to fix with this patch? With  the  would be  for example  and the `MYPY_VERSION_TUPLE ",
    "message_url": "https://github.com/pydantic/pydantic/pull/5084#issuecomment-1438718537",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hi @G-Rath it looks like you and one other member were lost in the shuffle adding triagers when the process was in flux and changed hands. If you are still interested in being added, please ping me and I'll get you added ASAP,. Appologies.\r\n",
    "clean_message": "Hi -Rath it looks like you and one other member were lost in the shuffle adding triagers when the process was in flux and changed hands. If you are still interested in being added, please ping me and I'll get you added ASAP,. Appologies.",
    "message_url": "https://github.com/expressjs/express/pull/4156#issuecomment-656951059",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Doing `setattr`s in `__get__`s does not feel right. \r\n\r\nJust to note why the only situation we do that now in `devel` is for when `default` is a `callable` (like `dict`, `list`, ...) and the reason for that is to allow for expressions like:\r\n\r\n```python\r\ntask.args['_raw_params'] = 'noop'\r\n```\r\n\r\n(for the case when `args` is not yet defined, so it is effectively `Sentinel`)\r\n\r\nIn the above example `__set__` is not called, only `__get__` is called on `args` and `noop` is stored into whatever `__get__` returned.\r\n\r\nSo if we just return `default()`, a new `dict` would be created and `noop` would be stored into the `_raw_params` key. But the problem is that the new dict would be lost since it isn't stored on the `Attribute`.\r\n\r\nSo we also need to do `value = default(); setattr(obj, '_args', value); return value` in the `__get__`.\r\n\r\nThis program demonstrates the above:\r\n```python\r\nimport dis\r\n\r\nfrom ansible.playbook.attribute import FieldAttribute\r\n\r\n\r\nclass T:\r\n    d = FieldAttribute(isa='dict', default=dict)\r\n    i = FieldAttribute(isa='int', default=3)\r\n\r\n\r\ndef f():\r\n    t = T()\r\n    t.d['_raw_params'] = 'noop'\r\n    t.i = 4\r\n\r\n\r\ndis.dis(f)\r\nprint()\r\nf()\r\n```\r\n\r\na patch for `attribute.py` to see which methods are called:\r\n```diff\r\ndiff --git a/lib/ansible/playbook/attribute.py b/lib/ansible/playbook/attribute.py\r\nindex b28405d2430..2222eb67ab9 100644\r\n--- a/lib/ansible/playbook/attribute.py\r\n+++ b/lib/ansible/playbook/attribute.py\r\n@@ -132,6 +132,7 @@ class Attribute:\r\n         return value\r\n\r\n     def __set__(self, obj, value):\r\n+        print(f'Attribute.__set__ {self.name} called')\r\n         setattr(obj, f'_{self.name}', value)\r\n         if self.alias is not None:\r\n             setattr(obj, f'_{self.alias}', value)\r\n@@ -155,6 +156,7 @@ class FieldAttribute(Attribute):\r\n         self.prepend = prepend\r\n\r\n     def __get__(self, obj, obj_type=None):\r\n+        print(f'FieldAttribute.__get__ {self.name} called')\r\n         if getattr(obj, '_squashed', False) or getattr(obj, '_finalized', False):\r\n             value = getattr(obj, f'_{self.name}', Sentinel)\r\n         else:\r\n```\r\n\r\nand the output:\r\n```\r\n 12           0 LOAD_GLOBAL              0 (T)\r\n              2 CALL_FUNCTION            0\r\n              4 STORE_FAST               0 (t)\r\n\r\n 13           6 LOAD_CONST               1 ('noop')\r\n              8 LOAD_FAST                0 (t)\r\n             10 LOAD_ATTR                1 (d)\r\n             12 LOAD_CONST               2 ('_raw_params')\r\n             14 STORE_SUBSCR\r\n\r\n 14          16 LOAD_CONST               3 (4)\r\n             18 LOAD_FAST                0 (t)\r\n             20 STORE_ATTR               2 (i)\r\n             22 LOAD_CONST               0 (None)\r\n             24 RETURN_VALUE\r\n\r\nFieldAttribute.__get__ d called\r\nAttribute.__set__ i called\r\n```",
    "clean_message": "Doing s in s does not feel right.  Just to note why the only situation we do that now in  is for when  is a  (like , , ...) and the reason for that is to allow for expressions like: (for the case when  is not yet defined, so it is effectively ) In the above example  is not called, only  is called on  and  is stored into whatever  returned. So if we just return , a new  would be created and  would be stored into the  key. But the problem is that the new dict would be lost since it isn't stored on the . So we also need to do  in the . This program demonstrates the above: a patch for  to see which methods are called: and the output:",
    "message_url": "https://github.com/ansible/ansible/pull/79027#issuecomment-1271545719",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Likely a mistake, especially with no response. Welcome!",
    "clean_message": "Likely a mistake, especially with no response. Welcome!",
    "message_url": "https://github.com/expressjs/express/pull/3692#issuecomment-405224215",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "The docs show the folder `~/.matplotlib/stylelib` as the folder to find user defined style sheets but the result from:\n\n``` python\nimport matplotlib as mpl\nprint(mpl._get_configdir())\n```\n\nindicates that the folder should be:\n`~/.config/matplotlib/stylelib`\n(https://github.com/matplotlib/matplotlib/blob/980e4cd6f10a0af28b28c9a93d2564d6b5d67608/lib/matplotlib/style/core.py#L32)\n\nThis PR just fix this in the docs (http://matplotlib.org/users/style_sheets.html)\n\nI followed the process of the docs to make this PR but it is the first time so if there is somethiing wrong, please, let me know.\n\nIf I am wrong about the PR just discard it and sorry for the noise.\n",
    "clean_message": "The docs show the folder  as the folder to find user defined style sheets but the result from: indicates that the folder should be: () This PR just fix this in the docs () I followed the process of the docs to make this PR but it is the first time so if there is somethiing wrong, please, let me know. If I am wrong about the PR just discard it and sorry for the noise.",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/4039",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "> What's however right is that if we say the limit is 8, we'll end up with 8 processes for haste + 8 processes for executing tests, which is not very nice...\r\n\r\nWe wouldn't be having 16 processes because haste processes execute and finish before test execution. So it's 8 + 8 serially, which is fine.",
    "clean_message": "We wouldn't be having 16 processes because haste processes execute and finish before test execution. So it's 8 + 8 serially, which is fine.",
    "message_url": "https://github.com/jestjs/jest/pull/7182#issuecomment-430274136",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "neutral",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "> Not exactly a bug, but PnP wasn't originally tested on Node 6 so the generated `.pnp.js` file used trailing commas. It got fixed in [yarnpkg/yarn#6871](https://github.com/yarnpkg/yarn/pull/6871).\r\n\r\nAh okay, thanks! I couldn't really interpret the CI error :sweat_smile: \r\n\r\n> Which reminds me btw that Yarn 2 will drop compatibility with Node 6, since its official EOL is in April. Will that be a problem?\r\n\r\nI think we intend to drop it in the next major after the EOL as well, so that should be fine. cc @SimenB ",
    "clean_message": "Ah okay, thanks! I couldn't really interpret the CI error :sweat_smile:  I think we intend to drop it in the next major after the EOL as well, so that should be fine. cc  ",
    "message_url": "https://github.com/jestjs/jest/pull/8094#issuecomment-471211283",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Hi @Gaunt, any update on this? \r\n\r\nNo pressure, just I would love to get it merged. If you don't have time I'm very happy to take it over but of course it's yours if you want to work on it.",
    "clean_message": "Hi , any update on this?  No pressure, just I would love to get it merged. If you don't have time I'm very happy to take it over but of course it's yours if you want to work on it.",
    "message_url": "https://github.com/pydantic/pydantic/pull/231#issuecomment-412264531",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "It's my fault, not the bot's. I got behind reviewing community PRs. \r\n\r\nThe bot doesn't check source issues for updates yet, although I plan to improve it at some point.",
    "clean_message": "It's my fault, not the bot's. I got behind reviewing community PRs.  The bot doesn't check source issues for updates yet, although I plan to improve it at some point.",
    "message_url": "https://github.com/microsoft/TypeScript/pull/51024#issuecomment-1343675387",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "*Note that the first commit in this branch is to alpha-sort the exports for entry points to make it easier to compare between them when reviewing which file exports which APIs.\r\n\r\nThe following APIs have been added to the `react` stable entry point:\r\n* `SuspenseList`\r\n* `startTransition`\r\n* `unstable_createMutableSource`\r\n* `unstable_useMutableSource`\r\n* `useDeferredValue`\r\n* `useTransition`\r\n\r\nThe following APIs have been added or removed from the `react-dom` stable entry point:\r\n* `createRoot`\r\n* `unstable_createPortal` (removed)\r\n\r\nThe following APIs have been added to the `react-is` stable entry point:\r\n* `SuspenseList`\r\n* `isSuspenseList`\r\n\r\nThe following feature flags have been changed from experimental to true:\r\n* `enableLazyElements`\r\n* `enableSelectiveHydration`\r\n* `enableSuspenseServerRenderer`\r\n\r\n# Todo\r\n- [x] Update tests once artifacts are built",
    "clean_message": "*Note that the first commit in this branch is to alpha-sort the exports for entry points to make it easier to compare between them when reviewing which file exports which APIs. The following APIs have been added to the  stable entry point: *  *  *  *  *  *  The following APIs have been added or removed from the  stable entry point: *  *  (removed) The following APIs have been added to the  stable entry point: *  *  The following feature flags have been changed from experimental to true: *  *  *  Todo  [x] Update tests once artifacts are built ",
    "message_url": "https://github.com/facebook/react/pull/21488",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Pardon my ignorance but what's the *benefit* of this? \r\n\r\n**Before**:\r\n\r\n```python\r\n@app.get(\"/\", response_class=PlainTextResponse)\r\nasync def root():\r\n    return \"bla bla\"\r\n```\r\n\r\nSwagger can infer that the response is going to be `text/plain`. I only have to specify what type of response it is *once*. \r\n\r\n**After**\r\n\r\n```python\r\n@app.get(\"/\")\r\nasync def root() -> PlainTextResponse:\r\n    return PlainTextResponse(\"bla bla\")\r\n```\r\n\r\nNow Swagger defaults to thinking it's `application/json` and I have to type `PlainTextResponse` *twice*. \r\n\r\nYes, I'm a still a FastAPI newbie but I use it in a production project and was intrigued to see if this is something I should change to.",
    "clean_message": "Pardon my ignorance but what's the benefit of this?  Before: Swagger can infer that the response is going to be . I only have to specify what type of response it is once.  After Now Swagger defaults to thinking it's  and I have to type  twice.  Yes, I'm a still a FastAPI newbie but I use it in a production project and was intrigued to see if this is something I should change to.",
    "message_url": "https://github.com/tiangolo/fastapi/pull/1436#issuecomment-1405152729",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "ok merged #9415 \n\nI just wanted you to be familiar with the perf testing....\n\ntry `-n 5` (it should just be somewhat stable), e.g. a rerun of this should be roughy the same.\n\nyou can use `-r 'period|timeseries'` to make the runs shorter (this is a regex to select on the name of the benchmarks'. note there are very few period specific benchmarks. adding more of these would be good.\n",
    "clean_message": "ok merged #9415  I just wanted you to be familiar with the perf testing.... try  (it should just be somewhat stable), e.g. a rerun of this should be roughy the same. you can use  to make the runs shorter (this is a regex to select on the name of the benchmarks'. note there are very few period specific benchmarks. adding more of these would be good.",
    "message_url": "https://github.com/pandas-dev/pandas/pull/9440#issuecomment-73889782",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Fixes #5485 \r\nChanged the query parameter `query.title` (which is deprecated) to\r\n`query.bibliographic`.\r\n\r\n<!-- describe the changes you have made here: what, why, ... \r\n     Link issues by using the following pattern: [#333](https://github.com/JabRef/jabref/issues/333) or [koppor#49](https://github.com/koppor/jabref/issues/47).\r\n     The title of the PR must not reference an issue, because GitHub does not support autolinking there. -->\r\n\r\n\r\n----\r\n\r\n- [ ] Change in CHANGELOG.md described\r\n- [ ] Tests created for changes\r\n- [ ] Manually tested changed features in running JabRef\r\n- [ ] Screenshots added in PR description (for bigger UI changes)\r\n- [ ] Ensured that [the git commit message is a good one](https://github.com/joelparkerhenderson/git_commit_message)\r\n- [ ] Check documentation status (Issue created for outdated help page at [help.jabref.org](https://github.com/JabRef/help.jabref.org/issues)?)\r\n",
    "clean_message": "Fixes #5485  Changed the query parameter  (which is deprecated) to . <!-- describe the changes you have made here: what, why, ...       Link issues by using the following pattern: #333 or koppor#49.      The title of the PR must not reference an issue, because GitHub does not support autolinking there. --   [ ] Change in CHANGELOG.md described [ ] Tests created for changes [ ] Manually tested changed features in running JabRef [ ] Screenshots added in PR description (for bigger UI changes) [ ] Ensured that the git commit message is a good one [ ] Check documentation status (Issue created for outdated help page at help.jabref.org?) ",
    "message_url": "https://github.com/JabRef/jabref/pull/5495",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "From previous PR we have submitted there is no automatic merge.\r\nAn Ansible maintainer will have to merge it.\r\n\r\nOn my part what I can do is to use the following ansibullbot command to approve.\r\nLet's try all 3 forms:\r\nLGTM\r\n+1\r\nshipit",
    "clean_message": "From previous PR we have submitted there is no automatic merge. An Ansible maintainer will have to merge it. On my part what I can do is to use the following ansibullbot command to approve. Let's try all 3 forms: LGTM +1 shipit",
    "message_url": "https://github.com/ansible/ansible/pull/32855#issuecomment-344902001",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "looks like it would work, but reproducing the error is a pain. I don't yet know why it only failed on travis on certain python versions. Does some package need to be importable for it to get to this code? What special conditions are required?\n\nI don't like magic importing and monkeypatching code in utility libraries, especially when it makes me chase phantom bugs like this. (I'm not even using SSL let alone SNI!)\n\nMaybe I can reproduce by referencing this commit id in my install_requires and poking travis.\n",
    "clean_message": "looks like it would work, but reproducing the error is a pain. I don't yet know why it only failed on travis on certain python versions. Does some package need to be importable for it to get to this code? What special conditions are required? I don't like magic importing and monkeypatching code in utility libraries, especially when it makes me chase phantom bugs like this. (I'm not even using SSL let alone SNI!) Maybe I can reproduce by referencing this commit id in my install_requires and poking travis.",
    "message_url": "https://github.com/psf/requests/pull/2486#issuecomment-78514269",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "##### SUMMARY\r\nAdd AWS Direct Connect virtual interface module and fix the DirectConnectError exception wrapper to be compatible with fail_json_aws() so AnsibleAWSModule can be used.\r\n\r\n##### ISSUE TYPE\r\n - Feature Pull Request\r\n\r\n##### COMPONENT NAME\r\nlib/ansible/modules/cloud/amazon/aws_direct_connect_virtual_interface.py\r\n\r\n##### ANSIBLE VERSION\r\n```\r\n2.5.0\r\n```\r\n",
    "clean_message": "SUMMARY Add AWS Direct Connect virtual interface module and fix the DirectConnectError exception wrapper to be compatible with fail_json_aws() so AnsibleAWSModule can be used. ISSUE TYPE  Feature Pull Request  COMPONENT NAME lib/ansible/modules/cloud/amazon/aws_direct_connect_virtual_interface.py ANSIBLE VERSION",
    "message_url": "https://github.com/ansible/ansible/pull/33211",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "I like this, it's cool for simple metrics (needed something like this sometime ago). But wouldn't be better to put the result in the returned `Response` object?\n\nThat way we can use it like the code below and keep track of the request time for every request made.\n\n``` python\nimport requests\nresponse = requests.get('https://google.com')\nprint response.elapsed()\n```\n\nAlso, `elapsed` is the best name for this? Property vs method? (I'm not familiar with requests internal code standards).\n\n:+1: \n",
    "clean_message": "I like this, it's cool for simple metrics (needed something like this sometime ago). But wouldn't be better to put the result in the returned  object? That way we can use it like the code below and keep track of the request time for every request made. Also,  is the best name for this? Property vs method? (I'm not familiar with requests internal code standards). :+1: ",
    "message_url": "https://github.com/psf/requests/pull/1138#issuecomment-12637500",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "positive",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Sorry forget to answer.\r\n\r\n> Though, it wouldn\u00b4t fully help with the outlined problem I guess? The Azure statistics couldn\u00b4t tell us how many users left the related-article tab before recommendations were displayed, right?\r\n\r\nWith azure you can track whatever events you are interested in. So if this information is really valuable to you, you can add an event for \"recommendations tab opened\" and one for \"recommendations shown\". That should give you a valid basis to gauge whether the recommendation creation takes too much time.",
    "clean_message": "Sorry forget to answer. With azure you can track whatever events you are interested in. So if this information is really valuable to you, you can add an event for \"recommendations tab opened\" and one for \"recommendations shown\". That should give you a valid basis to gauge whether the recommendation creation takes too much time.",
    "message_url": "https://github.com/JabRef/jabref/pull/4596#issuecomment-467391995",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "The only place where I've left non-updated xfail tests is in `test_orm_mode.py`, which I'm not quite sure what we're going to do with yet, but clearly it's going to get an overhaul.\r\n\r\nI was able to fix at least a handful of tests along the way here. There was one place where I changed an error message to make things a little more clear, in a way that I felt was good enough to change a test from xfailing to passing. (I'll point this out below.)\n\nSelected Reviewer: @adriangb",
    "clean_message": "The only place where I've left non-updated xfail tests is in , which I'm not quite sure what we're going to do with yet, but clearly it's going to get an overhaul. I was able to fix at least a handful of tests along the way here. There was one place where I changed an error message to make things a little more clear, in a way that I felt was good enough to change a test from xfailing to passing. (I'll point this out below.) Selected Reviewer: ",
    "message_url": "https://github.com/pydantic/pydantic/pull/5273",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "positive",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "For non published things, we ask for install and feedback by providing instructions to install from a branch in the repo. We can merge this into a http2 branch and tell folks to npm install expressjs/express#http2 as well.",
    "clean_message": "For non published things, we ask for install and feedback by providing instructions to install from a branch in the repo. We can merge this into a http2 branch and tell folks to npm install expressjs/express#http2 as well.",
    "message_url": "https://github.com/expressjs/express/pull/3390#issuecomment-326821869",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@codesignist Just run `npm test -- -u` to update snapshot referred to https://github.com/ant-design/ant-design/wiki/Development#update-snapshot-files",
    "clean_message": "Just run  to update snapshot referred to ",
    "message_url": "https://github.com/ant-design/ant-design/pull/9679#issuecomment-373286342",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "What happens if you change `toBe` to `toEqual`? It looks like when loading json it doesn't stick it into the registry cache (since it returns before line 884), so maybe it's loading the same json twice, and therefore we're getting two different objects.\n",
    "clean_message": "What happens if you change  to ? It looks like when loading json it doesn't stick it into the registry cache (since it returns before line 884), so maybe it's loading the same json twice, and therefore we're getting two different objects.",
    "message_url": "https://github.com/jestjs/jest/pull/63#issuecomment-45021358",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "negative",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "You can preview 02fd3f5 at https://pr17884-02fd3f5.ngbuilds.io/.",
    "clean_message": "You can preview 02fd3f5 at .",
    "message_url": "https://github.com/angular/angular/pull/17884#issuecomment-312333620",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Can you show me what is test renderer using from `fbjs`?",
    "clean_message": "Can you show me what is test renderer using from ?",
    "message_url": "https://github.com/facebook/react/pull/8467#issuecomment-263989595",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@Brainsucker92 Could you write a short personal email so that I have your contact data?",
    "clean_message": "Could you write a short personal email so that I have your contact data?",
    "message_url": "https://github.com/JabRef/jabref/pull/3721#issuecomment-367328287",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.333333333333333,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Backport PR #14057: Improve Gradient bar example",
    "clean_message": "Backport PR #14057: Improve Gradient bar example",
    "message_url": "https://github.com/matplotlib/matplotlib/pull/14128",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "@typescript-bot pack this",
    "clean_message": "-bot pack this",
    "message_url": "https://github.com/microsoft/TypeScript/pull/52737#issuecomment-1433377237",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "#651 ",
    "clean_message": "651",
    "message_url": "https://github.com/plotly/plotly.py/pull/650#issuecomment-270786907",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Currently we have a common utility method for running commands\r\nin a child process. This method pipes all stdout and stderr, but sets\r\nthe `stdin` to `inherited`. This seemed to work as expected in terms of\r\nallowing interactive commands being executed, but it messes with the\r\nTTY in Windows (and potentially other platforms) so that colors and\r\nprompts no longer work properly. It's unclear how this causes the TTY\r\nto no longer support colors; but I guess it's the mix of inherit and pipe.\r\n\r\nSee attached screenshot. ![image](https://user-images.githubusercontent.com/4987015/117051174-88be7100-ad16-11eb-90b9-0ab5b5599abb.png)\r\n\r\n\r\nWe fix this by not inheriting the stdin by default; but exposing\r\na dedicated method for interactive commands. This results in more\r\nreadable and obvious code too, so it's worth making this change\r\nregardless of the TTY issues.",
    "clean_message": "Currently we have a common utility method for running commands in a child process. This method pipes all stdout and stderr, but sets the  to . This seemed to work as expected in terms of allowing interactive commands being executed, but it messes with the TTY in Windows (and potentially other platforms) so that colors and prompts no longer work properly. It's unclear how this causes the TTY to no longer support colors; but I guess it's the mix of inherit and pipe. See attached screenshot.  We fix this by not inheriting the stdin by default; but exposing a dedicated method for interactive commands. This results in more readable and obvious code too, so it's worth making this change regardless of the TTY issues.",
    "message_url": "https://github.com/angular/angular/pull/41948",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "I cleaned up the loader after your first PR. Do you mind updating first? Sorry about that...\n",
    "clean_message": "I cleaned up the loader after your first PR. Do you mind updating first? Sorry about that...",
    "message_url": "https://github.com/mrdoob/three.js/pull/8209#issuecomment-188109808",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n",
    "clean_message": "<!-- Please make sure to read the Pull Request Guidelines: -- <!-- PULL REQUEST TEMPLATE --<!-- (Update \"[ ]\" to \"[x]\" to check a box) -- What kind of change does this PR introduce? (check at least one)  [x] Bugfix [ ] Feature [ ] Code style update [ ] Refactor [ ] Build-related changes [ ] Other, please describe:  Does this PR introduce a breaking change? (check one)  [x] Yes [ ] No  If yes, please describe the impact and migration path for existing applications: The PR fulfills these requirements:  [x] It's submitted to the  branch for v2.x (or to a previous version branch), not the  branch [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. , where \"xxx\" is the issue number) [x] All tests are passing:  [ ] New/updated tests are included  If adding a new feature, the PR's description includes: - [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it) Other information:",
    "message_url": "https://github.com/vuejs/vue/pull/9126",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "- Renamed Gauss -> Gaussian\n- In `Gaussian1D`, changed xsigma, xcen -> sigma, mu\n- In `Gaussian2D`, changed xsigma, ysigma -> x_sigma, y_sigma and xcen,ycen -> x_mu, y_mu\n- In all files, made any abbreviation for 'parameters' = 'param':\n  - psets -> param_sets\n  - paramdim -> param_dim\n  - parnames -> param_names\n- In `Gaussian2D`, removed the 'ratio' parameter -- too many ways to specify the same thing. Is this really necessary?\n- In `Gaussian2D`, added x_fwhm and y_fwhm to be consistent...but I would be in favor of removing the fwhm option entirely from both models and just requiring the standard deviation.\n- Added a 'cov_matrix' option to `Gaussian2D`, but this is kind of klugy...I think the more general way to think about Gaussians is as a quadratic form -- it naturally generalizes to many dimensions -- so I think the definition in `eval()` should change. But then there's the issue of how to treat the covariance matrix as a `Parameter` (see notes below).\n## Notes:\n- When I added the cov_matrix option I realized that there is room here for a single `GaussianModel` object that accepts a scalar or vector `mu`, and either `sigma` or `cov_matrix`. `sigma` could be a scalar or vector, in which case the Gaussian is assumed to be aligned with the coordinates, e.g. sqrt of each value along the diagonal of the covariance matrix. This would be a good way to support N-dimensional Gaussians.\n- I started implementing the above, but got stuck on some weirdness that was going on with the `Parameter` class. I made the covariance matrix 2-dimensional, but it ends up becoming a list of arrays, so::\n  \n  array([[0.2,0.],\n         [0.,0.3]])\n\nbecomes\n\n```\n[array([0.2,0.]),array([0.,0.3])]\n```\n\nwhen I define it as a `Parameter`...Then the fitting all fails because obviously you can't treat the cov. matrix like other parameters when feeding in to a NL fitting algorithm. We should think about this a bit more...\n",
    "clean_message": " Renamed Gauss -- In , changed xsigma, xcen -- In , changed xsigma, ysigma -- In all files, made any abbreviation for 'parameters' = 'param': psets -  - paramdim -  - parnames -- In , removed the 'ratio' parameter -- too many ways to specify the same thing. Is this really necessary? In , added x_fwhm and y_fwhm to be consistent...but I would be in favor of removing the fwhm option entirely from both models and just requiring the standard deviation. Added a 'cov_matrix' option to , but this is kind of klugy...I think the more general way to think about Gaussians is as a quadratic form -- it naturally generalizes to many dimensions -- so I think the definition in  should change. But then there's the issue of how to treat the covariance matrix as a  (see notes below).  Notes:  When I added the cov_matrix option I realized that there is room here for a single  object that accepts a scalar or vector , and either  or .  could be a scalar or vector, in which case the Gaussian is assumed to be aligned with the coordinates, e.g. sqrt of each value along the diagonal of the covariance matrix. This would be a good way to support N-dimensional Gaussians. I started implementing the above, but got stuck on some weirdness that was going on with the  class. I made the covariance matrix 2-dimensional, but it ends up becoming a list of arrays, so::  array([[0.2,0.],          [0.,0.3]]) becomes when I define it as a ...Then the fitting all fails because obviously you can't treat the cov. matrix like other parameters when feeding in to a NL fitting algorithm. We should think about this a bit more...",
    "message_url": "https://github.com/astropy/astropy/pull/1022",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Should probably adjust the forward projection so it respects the same extents as the inverse.\n\nIt might be nice to stream points to each sub-projection and use clipExtent when have support for it, so projecting the whole world and graticule will just work (although of course separate graticules are probably advisable due to differences in scale).\n",
    "clean_message": "Should probably adjust the forward projection so it respects the same extents as the inverse. It might be nice to stream points to each sub-projection and use clipExtent when have support for it, so projecting the whole world and graticule will just work (although of course separate graticules are probably advisable due to differences in scale).",
    "message_url": "https://github.com/d3/d3/pull/1096#issuecomment-14086762",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Finish #6622. Generate the binding params of the event handler.\r\n\r\nOnly effect the Weex platform within the `<recycle-list>` component.",
    "clean_message": "Finish #6622. Generate the binding params of the event handler. Only effect the Weex platform within the  component.",
    "message_url": "https://github.com/vuejs/vue/pull/6892",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "imo you shouldn't even use `res.send()` if you're not sending a body. just do `res.statusCode = 204; res.end()`.\n",
    "clean_message": "imo you shouldn't even use  if you're not sending a body. just do .",
    "message_url": "https://github.com/expressjs/express/pull/2011#issuecomment-38846645",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Thank you for answering.\r\n\r\n> But why would you do this? I would just use abstract property without including the computed_field.\r\n\r\nMy use-case:\r\n\r\n```python\r\nfrom __future__ import annotations\r\nfrom enum import Enum\r\n\r\nfrom pydantic import BaseModel, Field\r\n\r\nclass EventType(Enum):\r\n    JOB_STARTED =  \"job_started\"\r\n    JOB_FINISHED =  \"job_finished\"\r\n\r\nclass BaseEvent(BaseModel):\r\n    id: str\r\n    event_type: EventType\r\n \r\n    @classmethod\r\n    def create_event(cls) -> BaseEvent:\r\n        id_ = \"generated id\"\r\n        return BaseEvent(\r\n            id=id_,\r\n            event_type=...,  # without this parameter mypy correctly complains, but what goes here?\r\n        )\r\n    \r\nclass JobStartedEvent(BaseEvent):\r\n    event_type = Field(EventType.JOB_STARTED, const=True)\r\n\r\nclass JobFinishedEvent(BaseEvent):\r\n    event_type = Field(EventType.JOB_FINISHED, const=True)\r\n```\r\n\r\nThe `const=True` part is the key -- I want to make sure each BaseEvent's subclass won't be instantiated with an incorrect EventType (I only need to remember to include the `const=True` on each subclass).\r\n\r\nI tried different combinations of `@abstractmethod`, `@classmethod` and `@property`. I tried multiple other approaches, including using Pydantic's validators. In each case, something came up that made the whole thing incorrect, broken, or badly designed (e.g. mypy was complaining, there was a runtime issue, it was incompatible with pydantic, or the code was not DRY, etc.). When I saw this PR I thought something like this might be the solution:\r\n\r\n```python\r\nfrom __future__ import annotations\r\nfrom abc import ABC, abstractmethod\r\nfrom enum import Enum\r\n\r\nfrom pydantic import BaseModel, Field, computed_field\r\n\r\nclass EventType(Enum):\r\n    JOB_STARTED =  \"job_started\"\r\n    JOB_FINISHED =  \"job_finished\"\r\n\r\nclass BaseEvent(BaseModel, ABC):\r\n    id: str\r\n    event_type: EventType\r\n \r\n    @computed_field\r\n    @property\r\n    @abstractmethod\r\n    def type(cls) -> EventType:\r\n        pass\r\n\r\n    @classmethod\r\n    def create_event(cls) -> BaseEvent:\r\n        id_ = \"generated id\"\r\n        return BaseEvent(id=id_)\r\n    \r\nclass JobStartedEvent(BaseEvent):\r\n    @computed_field\r\n    @property\r\n    def type(cls) -> EventType:\r\n        return EventType.JOB_STARTED\r\n\r\nclass JobFinishedEvent(BaseEvent):\r\n    @computed_field\r\n    @property\r\n    def type(cls) -> EventType:\r\n        return EventType.JOB_FINISHED\r\n```\r\n\r\nAnother thing is aliasing it -- `type` field won't work in Pydantic, as I've mentioned above.\r\n",
    "clean_message": "Thank you for answering. My use-case: The  part is the key -- I want to make sure each BaseEvent's subclass won't be instantiated with an incorrect EventType (I only need to remember to include the  on each subclass). I tried different combinations of ,  and . I tried multiple other approaches, including using Pydantic's validators. In each case, something came up that made the whole thing incorrect, broken, or badly designed (e.g. mypy was complaining, there was a runtime issue, it was incompatible with pydantic, or the code was not DRY, etc.). When I saw this PR I thought something like this might be the solution: Another thing is aliasing it --  field won't work in Pydantic, as I've mentioned above.",
    "message_url": "https://github.com/pydantic/pydantic/pull/2625#issuecomment-1124803384",
    "part2_aggregate": {
      "polarity": "positive",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "- `checkbox`, `radio` and their large counterparts' animation timing change\n- `checkbox-lg` and `radio-lg` checkbox/radio position fix\n- payment card icons added as components\n",
    "clean_message": " ,  and their large counterparts' animation timing change and  checkbox/radio position fix payment card icons added as components ",
    "message_url": "https://github.com/twbs/bootstrap/pull/18591",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Yeah, but that's really just for validation: it covers the set of rules that already exist (as well as the legacy rules from scikits.timeseries, etc). (since you only end up with #s in the string for WOM) If we wanted to add some crazy additional rule_code, you'd change the regex to make it pass the validation.\n",
    "clean_message": "Yeah, but that's really just for validation: it covers the set of rules that already exist (as well as the legacy rules from scikits.timeseries, etc). (since you only end up with #s in the string for WOM) If we wanted to add some crazy additional rule_code, you'd change the regex to make it pass the validation.",
    "message_url": "https://github.com/pandas-dev/pandas/pull/5189#issuecomment-26204818",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Why are there now two proposed fixes for this that use practically twice as\nmuch computing power as they need to? The sqrt function is not addition or\nmodulo, it's trigonometry that only needs to be analyzed once. It's\npuzzling that the js community is so prone to sloppy code given the\nexposure to low powered devices; each Joule matters, you know, and laziness\nhere will hard-wire crappy responsiveness in the library. Please take the\ntime to rewrite your fix Jason, the way I did it was not that much\ndifferent from yours.\n\nBest\n-dru\nOn Jun 7, 2013 2:12 PM, \"Jason Davies\" notifications@github.com wrote:\n\n> Thanks for this! I implemented a similar fix in #1298https://github.com/mbostock/d3/issues/1298,\n> hopefully it\u2019ll make it in an upcoming release.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mbostock/d3/pull/1169#issuecomment-19133200\n> .\n",
    "clean_message": "Why are there now two proposed fixes for this that use practically twice as much computing power as they need to? The sqrt function is not addition or modulo, it's trigonometry that only needs to be analyzed once. It's puzzling that the js community is so prone to sloppy code given the exposure to low powered devices; each Joule matters, you know, and laziness here will hard-wire crappy responsiveness in the library. Please take the time to rewrite your fix Jason, the way I did it was not that much different from yours. Best -dru On Jun 7, 2013 2:12 PM, \"Jason Davies\"  wrote:",
    "message_url": "https://github.com/d3/d3/pull/1169#issuecomment-19139789",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "Someone please correct me if I'm wrong here but I think...\n1) yes\n2) I'm not sure ...in the code there is a comment \n\n_// NOTE (not in spec): assignment to enum members should not be allowed_\n\nwhich originally made me think it wasn't explicitly in the spec but in section 3.8.4 Assignment Compatibility one of the conditions for assignment compatibility is\n\n_S or T is an enum type and the other is the primitive type Number._\n\nwhich makes me think this behavior is actually allowed but I'm curious if that was intentional or if the actual intent was to only allow assigning to an Enum type within an Enum declaration? \n",
    "clean_message": "Someone please correct me if I'm wrong here but I think... 1) yes 2) I'm not sure ...in the code there is a comment  // NOTE (not in spec): assignment to enum members should not be allowed which originally made me think it wasn't explicitly in the spec but in section 3.8.4 Assignment Compatibility one of the conditions for assignment compatibility is S or T is an enum type and the other is the primitive type Number. which makes me think this behavior is actually allowed but I'm curious if that was intentional or if the actual intent was to only allow assigning to an Enum type within an Enum declaration? ",
    "message_url": "https://github.com/microsoft/TypeScript/pull/877#issuecomment-61503336",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "comp_only"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  },
  {
    "raw_message": "Hmm, looks like r737027 corresponds to version 81.0.4044.0. I guess that was a typo. I'll amend the commit message.",
    "clean_message": "Hmm, looks like r737027 corresponds to version 81.0.4044.0. I guess that was a typo. I'll amend the commit message.",
    "message_url": "https://github.com/puppeteer/puppeteer/pull/5644#issuecomment-614478605",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.3333333333333335,
      "agreement_type": "neuro_and_comp"
    },
    "tools": {
      "SentiStrength": "positive",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "<!--\r\nFirst of all, thank you for your contribution! \ud83d\ude04\r\nFor requesting to pull a new feature or bugfix, please send it from a feature/bugfix branch based on the `master` branch.\r\nBefore submitting your pull request, please make sure the checklist below is confirmed.\r\nYour pull requests will be merged after one of the collaborators approve.\r\nThank you!\r\n-->\r\n\r\n[[\u4e2d\u6587\u7248\u6a21\u677f / Chinese template](https://github.com/ant-design/ant-design/blob/master/.github/PULL_REQUEST_TEMPLATE/pr_cn.md?plain=1)]\r\n\r\n### \ud83e\udd14 This is a ...\r\n\r\n- [ ] New feature\r\n- [ ] Bug fix\r\n- [ ] Site / documentation update\r\n- [ ] Demo update\r\n- [ ] Component style update\r\n- [ ] TypeScript definition update\r\n- [ ] Bundle size optimization\r\n- [ ] Performance optimization\r\n- [ ] Enhancement feature\r\n- [ ] Internationalization\r\n- [ ] Refactoring\r\n- [ ] Code style optimization\r\n- [ ] Test Case\r\n- [ ] Branch merge\r\n- [ ] Workflow\r\n- [ ] Other (about what?)\r\n\r\n### \ud83d\udd17 Related issue link\r\n\r\n<!--\r\n1. Put the related issue or discussion links here.\r\n2. close #xxxx or fix #xxxx for instance.\r\n-->\r\n\r\n### \ud83d\udca1 Background and solution\r\n\r\n<!--\r\n1. Describe the problem and the scenario.\r\n2. GIF or snapshot should be provided if includes UI/interactive modification.\r\n3. How to fix the problem, and list the final API implementation and usage sample if that is a new feature.\r\n-->\r\n\r\n### \ud83d\udcdd Changelog\r\n\r\n<!--\r\nDescribe changes from the user side, and list all potential break changes or other risks.\r\n--->\r\n\r\n| Language   | Changelog |\r\n| ---------- | --------- |\r\n| \ud83c\uddfa\ud83c\uddf8 English |      -     |\r\n| \ud83c\udde8\ud83c\uddf3 Chinese |  -         |\r\n\r\n### \u2611\ufe0f Self-Check before Merge\r\n\r\n\u26a0\ufe0f Please check all items below before requesting a reviewing. \u26a0\ufe0f\r\n\r\n- [ ] Doc is updated/provided or not needed\r\n- [ ] Demo is updated/provided or not needed\r\n- [ ] TypeScript definition is updated/provided or not needed\r\n- [ ] Changelog is provided or not needed\r\n\r\n---\r\n\r\n<!--\r\nBelow are template for copilot to generate CR message.\r\nPlease DO NOT modify it.\r\n-->\r\n\r\n### \ud83d\ude80 Summary\r\n\r\n<!--\ncopilot:summary\n-->\n### <samp>\ud83e\udd16 Generated by Copilot at 9f5451f</samp>\n\nImproved the site-deploy workflow to support manual triggers and ignore non-relevant tags. Fixed a bug that caused the workflow to fail on manual triggers.\r\n\r\n### \ud83d\udd0d Walkthrough\r\n\r\n<!--\ncopilot:walkthrough\n-->\n### <samp>\ud83e\udd16 Generated by Copilot at 9f5451f</samp>\n\n* Change the workflow trigger to allow manual deployment and limit automatic deployment to `4.*` tags ([link](https://github.com/ant-design/ant-design/pull/43243/files?diff=unified&w=0#diff-f13b646eada5abd8313558e5d58fde3eecf9296fe27587ad273fbf3c408aebf0L5-R8))\n* Fix the condition for the `setup` job to use the correct variables for both `push` and `workflow_dispatch` events ([link](https://github.com/ant-design/ant-design/pull/43243/files?diff=unified&w=0#diff-f13b646eada5abd8313558e5d58fde3eecf9296fe27587ad273fbf3c408aebf0L13-R16))\r\n",
    "clean_message": "<!-- First of all, thank you for your contribution! \ud83d\ude04 For requesting to pull a new feature or bugfix, please send it from a feature/bugfix branch based on the  branch. Before submitting your pull request, please make sure the checklist below is confirmed. Your pull requests will be merged after one of the collaborators approve. Thank you! -- [\u4e2d\u6587\u7248\u6a21\u677f / Chinese template] \ud83e\udd14 This is a ...  [ ] New feature [ ] Bug fix [ ] Site / documentation update [ ] Demo update [ ] Component style update [ ] TypeScript definition update [ ] Bundle size optimization [ ] Performance optimization [ ] Enhancement feature [ ] Internationalization [ ] Refactoring [ ] Code style optimization [ ] Test Case [ ] Branch merge [ ] Workflow [ ] Other (about what?)  \ud83d\udd17 Related issue link <!-- 1. Put the related issue or discussion links here. 2. close #xxxx or fix #xxxx for instance. -- \ud83d\udca1 Background and solution <!-- 1. Describe the problem and the scenario. 2. GIF or snapshot should be provided if includes UI/interactive modification. 3. How to fix the problem, and list the final API implementation and usage sample if that is a new feature. -- \ud83d\udcdd Changelog <!-- Describe changes from the user side, and list all potential break changes or other risks.  | Language   | Changelog | | ---------- | --------- | | \ud83c\uddfa\ud83c\uddf8 English |      -     | | \ud83c\udde8\ud83c\uddf3 Chinese |  -         | \u2611\ufe0f Self-Check before Merge \u26a0\ufe0f Please check all items below before requesting a reviewing. \u26a0\ufe0f  [ ] Doc is updated/provided or not needed [ ] Demo is updated/provided or not needed [ ] TypeScript definition is updated/provided or not needed [ ] Changelog is provided or not needed   <!-- Below are template for copilot to generate CR message. Please DO NOT modify it. -- \ud83d\ude80 Summary <!-- copilot:summary --### <samp Improved the site-deploy workflow to support manual triggers and ignore non-relevant tags. Fixed a bug that caused the workflow to fail on manual triggers. \ud83d\udd0d Walkthrough <!-- copilot:walkthrough --### <samp * Change the workflow trigger to allow manual deployment and limit automatic deployment to  tags (link) * Fix the condition for the  job to use the correct variables for both  and  events (link)",
    "message_url": "https://github.com/ant-design/ant-design/pull/43243",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4.666666666666667,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "positive"
    }
  },
  {
    "raw_message": "there was a typo in the comment, also made a sentence out of it.",
    "clean_message": "there was a typo in the comment, also made a sentence out of it.",
    "message_url": "https://github.com/tensorflow/tensorflow/pull/19638",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "neutral",
      "SentiCR": "neutral",
      "DEVA": "neutral",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Fixed some typos. Added the ghost button type. Made the 'type' column of the API table a little more consistent, with strings represented with code tags.\r\n\r\nI don't know where the interactive examples are located, but the ghost type needs to be added to the part about button types. Also, there are some minor typos in the examples.\r\n\r\nNote, the ghost type is different from the ghost prop which inverts button colors.\r\n",
    "clean_message": "Fixed some typos. Added the ghost button type. Made the 'type' column of the API table a little more consistent, with strings represented with code tags. I don't know where the interactive examples are located, but the ghost type needs to be added to the part about button types. Also, there are some minor typos in the examples. Note, the ghost type is different from the ghost prop which inverts button colors.",
    "message_url": "https://github.com/ant-design/ant-design/pull/7438",
    "part2_aggregate": {
      "polarity": "neutral",
      "avg_confidence": 4,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "neutral",
      "SentiStrengthSE": "negative",
      "SentiCR": "neutral",
      "DEVA": "negative",
      "Senti4SD": "neutral"
    }
  },
  {
    "raw_message": "Altering `inspect` imports isn't making any difference for me.\r\n\r\nFor some reason the log for `pydantic.main` seems to always include importing `inspect`, even though there's no visible \"import inspect..\":\r\n\r\nLogs:\r\n```\r\n...\r\nimport time:       297 |        297 |     pydantic.fields\r\nimport time:       134 |        134 |           _weakrefset\r\nimport time:       249 |        383 |         weakref\r\nimport time:        60 |         60 |             org\r\nimport time:        11 |         70 |           org.python\r\nimport time:        12 |         82 |         org.python.core\r\nimport time:       138 |        602 |       copy\r\nimport time:        60 |         60 |             _struct\r\nimport time:       103 |        162 |           struct\r\nimport time:       162 |        162 |           _compat_pickle\r\nimport time:        53 |         53 |               org\r\nimport time:        88 |        140 |             org.python\r\nimport time:        11 |        150 |           org.python.core\r\nimport time:        73 |         73 |           _pickle\r\nimport time:       548 |       1094 |         pickle\r\nimport time:       200 |       1294 |       pydantic.parse\r\nimport time:       551 |        551 |         pydantic.networks\r\nimport time:       421 |        971 |       pydantic.schema\r\nimport time:        58 |         58 |       cython\r\nimport time:        85 |         85 |             _opcode\r\nimport time:       172 |        256 |           opcode\r\nimport time:       258 |        514 |         dis\r\nimport time:       112 |        112 |           importlib\r\nimport time:       111 |        222 |         importlib.machinery\r\nimport time:       158 |        158 |             token\r\nimport time:       641 |        798 |           tokenize\r\nimport time:        88 |        885 |         linecache\r\nimport time:      1379 |       2999 |       inspect   <--- why is this happening!?\r\nimport time:       923 |       6844 |     pydantic.main\r\nimport time:       291 |      27556 |   pydantic.dataclasses\r\nimport time:       194 |        194 |   pydantic.env_settings\r\nimport time:       603 |        603 |   pydantic.tools\r\nimport time:        71 |         71 |   pydantic.version\r\nimport time:       196 |      28618 | pydantic\r\n```\r\n\r\nsee the [`import-speedup-inspect` branch](https://github.com/samuelcolvin/pydantic/tree/import-speedup-inspect) for what I changed.\r\n\r\n---\r\n\r\n~~**Update:** This is very weird, but it doesn't seem to happen when compiled with cython, so add the `inspect` changes here.~~ ignore that, it was a mistake.",
    "clean_message": "Altering  imports isn't making any difference for me. For some reason the log for  seems to always include importing , even though there's no visible \"import inspect..\": Logs: see the  branch for what I changed.  ~~Update: This is very weird, but it doesn't seem to happen when compiled with cython, so add the  changes here.~~ ignore that, it was a mistake.",
    "message_url": "https://github.com/pydantic/pydantic/pull/1132#issuecomment-570218373",
    "part2_aggregate": {
      "polarity": "negative",
      "avg_confidence": 3.6666666666666665,
      "agreement_type": "all"
    },
    "tools": {
      "SentiStrength": "negative",
      "SentiStrengthSE": "negative",
      "SentiCR": "negative",
      "DEVA": "negative",
      "Senti4SD": "negative"
    }
  }
]
